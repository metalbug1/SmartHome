   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"SDMMC003_Private.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	SDMMC003_CardInfo,48,4
  20              		.comm	SDMMC003_ISRContext,6,4
  21              		.comm	SDMMC003_ReturnStatus,4,4
  22              		.comm	NormalIntStatus,2,2
  23              		.comm	ErrorIntStatus,2,2
  24              		.global	SDMMC003_Command
  25              		.section	.rodata
  26              		.align	2
  29              	SDMMC003_Command:
  30 0000 00       		.byte	0
  31 0001 00       		.byte	0
  32 0002 09       		.byte	9
  33 0003 02       		.byte	2
  34 0004 1A       		.byte	26
  35 0005 03       		.byte	3
  36 0006 00       		.byte	0
  37 0007 04       		.byte	4
  38 0008 3A       		.byte	58
  39 0009 06       		.byte	6
  40 000a 1B       		.byte	27
  41 000b 07       		.byte	7
  42 000c 1A       		.byte	26
  43 000d 08       		.byte	8
  44 000e 09       		.byte	9
  45 000f 09       		.byte	9
  46 0010 09       		.byte	9
  47 0011 0A       		.byte	10
  48 0012 1B       		.byte	27
  49 0013 0C       		.byte	12
  50 0014 1A       		.byte	26
  51 0015 0D       		.byte	13
  52 0016 00       		.byte	0
  53 0017 0F       		.byte	15
  54 0018 1A       		.byte	26
  55 0019 10       		.byte	16
  56 001a 3A       		.byte	58
  57 001b 11       		.byte	17
  58 001c 3A       		.byte	58
  59 001d 12       		.byte	18
  60 001e 3A       		.byte	58
  61 001f 18       		.byte	24
  62 0020 3A       		.byte	58
  63 0021 19       		.byte	25
  64 0022 3A       		.byte	58
  65 0023 1B       		.byte	27
  66 0024 1A       		.byte	26
  67 0025 1C       		.byte	28
  68 0026 1A       		.byte	26
  69 0027 1D       		.byte	29
  70 0028 3A       		.byte	58
  71 0029 1E       		.byte	30
  72 002a 1A       		.byte	26
  73 002b 20       		.byte	32
  74 002c 1A       		.byte	26
  75 002d 21       		.byte	33
  76 002e 1B       		.byte	27
  77 002f 26       		.byte	38
  78 0030 3A       		.byte	58
  79 0031 2A       		.byte	42
  80 0032 1A       		.byte	26
  81 0033 37       		.byte	55
  82 0034 3A       		.byte	58
  83 0035 38       		.byte	56
  84 0036 1A       		.byte	26
  85 0037 06       		.byte	6
  86 0038 3A       		.byte	58
  87 0039 0D       		.byte	13
  88 003a 3A       		.byte	58
  89 003b 16       		.byte	22
  90 003c 1A       		.byte	26
  91 003d 17       		.byte	23
  92 003e 02       		.byte	2
  93 003f 29       		.byte	41
  94 0040 1A       		.byte	26
  95 0041 2A       		.byte	42
  96 0042 3A       		.byte	58
  97 0043 33       		.byte	51
  98 0044 12       		.byte	18
  99 0045 01       		.byte	1
 100 0046 1B       		.byte	27
 101 0047 05       		.byte	5
 102 0048 1B       		.byte	27
 103 0049 06       		.byte	6
 104 004a 3A       		.byte	58
 105 004b 08       		.byte	8
 106 004c 1A       		.byte	26
 107 004d 23       		.byte	35
 108 004e 1A       		.byte	26
 109 004f 24       		.byte	36
 110              		.global	SDMMC003_SDHashTable
 111              		.align	2
 114              	SDMMC003_SDHashTable:
 115 0050 00       		.byte	0
 116 0051 FF       		.byte	-1
 117 0052 01       		.byte	1
 118 0053 02       		.byte	2
 119 0054 03       		.byte	3
 120 0055 FF       		.byte	-1
 121 0056 04       		.byte	4
 122 0057 05       		.byte	5
 123 0058 06       		.byte	6
 124 0059 07       		.byte	7
 125 005a 08       		.byte	8
 126 005b FF       		.byte	-1
 127 005c 09       		.byte	9
 128 005d 0A       		.byte	10
 129 005e FF       		.byte	-1
 130 005f 0B       		.byte	11
 131 0060 0C       		.byte	12
 132 0061 0D       		.byte	13
 133 0062 0E       		.byte	14
 134 0063 FF       		.byte	-1
 135 0064 FF       		.byte	-1
 136 0065 FF       		.byte	-1
 137 0066 FF       		.byte	-1
 138 0067 FF       		.byte	-1
 139 0068 0F       		.byte	15
 140 0069 10       		.byte	16
 141 006a FF       		.byte	-1
 142 006b 11       		.byte	17
 143 006c 12       		.byte	18
 144 006d 13       		.byte	19
 145 006e 14       		.byte	20
 146 006f FF       		.byte	-1
 147 0070 15       		.byte	21
 148 0071 16       		.byte	22
 149 0072 FF       		.byte	-1
 150 0073 FF       		.byte	-1
 151 0074 FF       		.byte	-1
 152 0075 FF       		.byte	-1
 153 0076 17       		.byte	23
 154 0077 FF       		.byte	-1
 155 0078 FF       		.byte	-1
 156 0079 FF       		.byte	-1
 157 007a 18       		.byte	24
 158 007b FF       		.byte	-1
 159 007c FF       		.byte	-1
 160 007d FF       		.byte	-1
 161 007e FF       		.byte	-1
 162 007f FF       		.byte	-1
 163 0080 FF       		.byte	-1
 164 0081 FF       		.byte	-1
 165 0082 FF       		.byte	-1
 166 0083 FF       		.byte	-1
 167 0084 FF       		.byte	-1
 168 0085 FF       		.byte	-1
 169 0086 FF       		.byte	-1
 170 0087 19       		.byte	25
 171 0088 1A       		.byte	26
 172 0089 FF       		.byte	-1
 173 008a 1B       		.byte	27
 174 008b 1C       		.byte	28
 175 008c 1D       		.byte	29
 176 008d 1E       		.byte	30
 177 008e 1F       		.byte	31
 178 008f 20       		.byte	32
 179 0090 21       		.byte	33
 180 0091 000000   		.section	.text.SDMMC003_lReset,"ax",%progbits
 181              		.align	2
 182              		.global	SDMMC003_lReset
 183              		.thumb
 184              		.thumb_func
 186              	SDMMC003_lReset:
 187              	.LFB117:
 188              		.file 1 "../Dave/Generated/src/SDMMC003/SDMMC003_Private.c"
   1:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*******************************************************************************
   2:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** **  DAVE App Name : SDMMC003       App Version: 1.0.14               
   3:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** **  This file is generated by DAVE, User modification to this file will be    **
   4:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** **  overwritten at the next code generation.                                  **
   5:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** *******************************************************************************/
   6:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
   7:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
   8:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
   9:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*CODE_BLOCK_BEGIN[SDMMC003_Private.c]*/
  10:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
  11:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*******************************************************************************
  12:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  Copyright (c) 2011, Infineon Technologies AG                                 **
  13:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  All rights reserved.                                                         **
  14:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                                                               **
  15:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  Redistribution and use in source and binary forms, with or without           **
  16:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  modification,are permitted provided that the following conditions are met:   **
  17:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                                                               **
  18:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  *Redistributions of source code must retain the above copyright notice,      **
  19:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  this list of conditions and the following disclaimer.                        **
  20:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  *Redistributions in binary form must reproduce the above copyright notice,   **
  21:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  this list of conditions and the following disclaimer in the documentation    **
  22:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  and/or other materials provided with the distribution.                       **
  23:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  *Neither the name of the copyright holders nor the names of its contributors **
  24:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  may be used to endorse or promote products derived from this software without** 
  25:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  specific prior written permission.                                           **
  26:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                                                               **
  27:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"  **
  28:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE    **
  29:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE   **
  30:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  ARE  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE   **
  31:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  LIABLE  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR         **
  32:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF         **
  33:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  SUBSTITUTE GOODS OR  SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS    **
  34:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN      **
  35:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)       **
  36:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE   **
  37:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  POSSIBILITY OF SUCH DAMAGE.                                                  **
  38:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                                                               **
  39:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  To improve the quality of the software, users are encouraged to share        **
  40:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  modifications, enhancements or bug fixes with Infineon Technologies AG       **
  41:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  dave@infineon.com).                                                          **
  42:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                                                               **
  43:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** ********************************************************************************
  44:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** **                                                                            **
  45:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** **                                                                            **
  46:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** ** PLATFORM : Infineon XMC4000 Series                                         **
  47:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** **                                                                            **
  48:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** ** COMPILER : Compiler Independent                                            **
  49:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** **                                                                            **
  50:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** ** AUTHOR : App Developer                                                     **
  51:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** **                                                                            **
  52:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** ** MAY BE CHANGED BY USER [yes/no]: Yes                                       **
  53:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** **                                                                            **
  54:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** ** MODIFICATION DATE : Oct 1, 2012                                            **
  55:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** **                                                                            **
  56:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** *******************************************************************************/
  57:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*******************************************************************************
  58:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** **                       Author(s) Identity                                   **
  59:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** ********************************************************************************
  60:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** **                                                                            **
  61:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** ** Initials    Name                                                           **
  62:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** ** ---------------------------------------------------------------------------**
  63:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** ** SK          App Developer                                                  **
  64:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** *******************************************************************************/
  65:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
  66:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
  67:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /**
  68:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  * @file   SDMMC003_Private.c
  69:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  *
  70:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  * @App Version SDMMC003 <1.0.14>
  71:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  *
  72:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  * @brief  This file contains definitions of all private type definitions and
  73:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  * functions of SDMMC LLD App.
  74:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  *
  75:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  * Revision History
  76:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  * 22 March 2012  v1.0.0    Initial version
  77:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  * 3 Aug 2012     v1.0.12   Erase optimizations  introduced.
  78:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  *                          Make File System(MKFS) through software issue fixed. 
  79:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  * 1 Oct 2012     v1.0.14   Delays reduced.
  80:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  *                          Removed RTOS specific code. 
  81:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  */
  82:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*******************************************************************************
  83:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  *                            INCLUDE FILES                                   **
  84:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  ******************************************************************************/
  85:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** #include "../../inc/SDMMC003/SDMMC003_Conf.h"
  86:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** #include <DAVE3.h>
  87:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** #include "../../inc/SDMMC003/SDMMC003_Private.h"
  88:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
  89:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
  90:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
  91:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /**
  92:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  * @cond INTERNAL_DOCS
  93:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  */
  94:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
  95:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*******************************************************************************
  96:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  **                      Global Variable Definitions                          **
  97:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  *******************************************************************************/
  98:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** extern volatile SDMMC003_HandleType SDMMC003_Handle ;
  99:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /**  Card Information Structure */
 100:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** SDMMC003_CardInfoType SDMMC003_CardInfo ;
 101:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /** Structure containing the Interrupt related variables */
 102:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** volatile SDMMC003_InterruptContext SDMMC003_ISRContext;
 103:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
 104:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* Dummy Variable to store return status */
 105:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** status_t SDMMC003_ReturnStatus;
 106:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
 107:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** #if SDMMC_UVP_TEST
 108:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   extern Test_TriggerInterruptType Test_TriggerInterrupt;
 109:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** #endif /* SDMMC_UVP_TEST */
 110:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
 111:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /** Stores Normal Interrupt Status Register */
 112:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** volatile  uint16_t NormalIntStatus;
 113:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /** Stores Error Interrupt Status Register */
 114:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** volatile  uint16_t ErrorIntStatus;
 115:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
 116:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*******************************************************************************
 117:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  *                                ARRAYS                                      **
 118:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  ******************************************************************************/
 119:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /**
 120:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  * Command Structure defining SD, MMC and Application specific commands 
 121:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  */
 122:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** const SDMMC003_CommandType SDMMC003_Command[40] =
 123:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** {
 124:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   /* SD  Card Commands */
 125:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   { 0,0,0,0,0,0,SDMMC003_GO_IDLE_STATE,0 },     /*0*/
 126:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   { 1,0,1,0,0,0,SDMMC003_ALL_SEND_CID,0 },      /*1*/
 127:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   { 2,0,1,1,0,0,SDMMC003_SEND_RELATIVE_ADDR,0}, /*2*/
 128:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   { 0,0,0,0,0,0,SDMMC003_SET_DSR,0 },           /*3*/
 129:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   { 2,0,1,1,1,0,SDMMC003_SWITCH_FUNC,0},        /*4*/
 130:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   { 3,0,1,1,0,0,SDMMC003_SELECT_DESELECT_CARD,0},/*5*/
 131:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   { 2,0,1,1,0,0,SDMMC003_SD_SEND_IF_COND,0},    /*6*/
 132:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   { 1,0,1,0,0,0,SDMMC003_SEND_CSD,0},           /*7*/
 133:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   { 1,0,1,0,0,0,SDMMC003_SEND_CID,0},           /*8*/
 134:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   { 3,0,1,1,0,0,SDMMC003_STOP_TRANSMISSION,0},  /*9*/
 135:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   { 2,0,1,1,0,0,SDMMC003_SEND_STATUS,0 },       /*10*/
 136:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   { 0,0,0,0,0,0,SDMMC003_GO_INACTIVE_STATE,0},  /*11*/
 137:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   { 2,0,1,1,0,0,SDMMC003_SET_BLOCKLEN,0},       /*12*/
 138:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   { 2,0,1,1,1,0,SDMMC003_READ_SINGLE_BLOCK,0},  /*13*/
 139:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   { 2,0,1,1,1,0,SDMMC003_READ_MULTIPLE_BLOCK,0},/*14*/
 140:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   { 2,0,1,1,1,0,SDMMC003_WRITE_BLOCK,0 },       /*15*/
 141:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   { 2,0,1,1,1,0,SDMMC003_WRITE_MULTIPLE_BLOCK,0},/*16*/
 142:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   { 2,0,1,1,1,0,SDMMC003_PROGRAM_CSD,0},        /*17*/
 143:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   { 2,0,1,1,0,0,SDMMC003_SET_WRITE_PROT,0},     /*18*/
 144:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   { 2,0,1,1,0,0,SDMMC003_CLR_WRITE_PROT,0},     /*19*/
 145:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   { 2,0,1,1,1,0,SDMMC003_SEND_WRITE_PROT,0},    /*20*/
 146:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   { 2,0,1,1,0,0,SDMMC003_ERASE_WR_BLK_START,0}, /*21*/
 147:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   { 2,0,1,1,0,0,SDMMC003_ERASE_WR_BLK_END,0},   /*22*/
 148:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   { 3,0,1,1,0,0,SDMMC003_ERASE,0},              /*23*/
 149:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   { 2,0,1,1,1,0,SDMMC003_LOCK_UNLOCK,0},        /*24*/
 150:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   { 2,0,1,1,0,0,SDMMC003_APP_CMD,0},            /*25*/
 151:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   { 2,0,1,1,1,0,SDMMC003_GEN_CMD,0},            /*26*/
 152:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   /*  End of SD card commands */
 153:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   /* Start of Application Specific commands */
 154:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   { 2,0,1,1,0,0,SDMMC003_SET_BUS_WIDTH,0},      /*27*/
 155:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   { 2,0,1,1,1,0,SDMMC003_SD_STATUS,0},          /*28*/
 156:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   { 2,0,1,1,1,0,SDMMC003_SEND_NUM_WR_BLOCKS,0}, /*29*/
 157:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   { 2,0,1,1,0,0,SDMMC003_SET_WR_BLK_ERASE_COUNT,0},/*30*/
 158:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   { 2,0,0,0,0,0,SDMMC003_SD_SEND_OP_COND,0},    /*31*/
 159:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   { 2,0,1,1,0,0,SDMMC003_SET_CLR_CARD_DETECT,0},/*32*/
 160:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   { 2,0,1,1,1,0,SDMMC003_SEND_SCR,0 },          /*33*/
 161:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   /* End of Application Specific Commands */
 162:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   /* Start of SDMMC_MMC Card  specific commands */
 163:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   { 2,0,0,1,0,0,SDMMC003_MMC_SEND_OP_COND,0},   /*34*/
 164:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   { 3,0,1,1,0,0,SDMMC003_MMC_SLEEP_AWAKE,0},    /*35*/
 165:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   { 3,0,1,1,0,0,SDMMC003_SWITCH_FUNC,0},        /*36*/
 166:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   { 2,0,1,1,1,0,SDMMC003_MMC_SEND_EXT_CSD,0},   /*37*/
 167:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   { 2,0,1,1,0,0,SDMMC003_ERASE_GROUP_START,0},  /*38*/
 168:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   { 2,0,1,1,0,0,SDMMC003_ERASE_GROUP_END,0},    /*39*/
 169:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   /* End of SDMMC_MMC  Card specific commands */
 170:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** };
 171:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
 172:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* Sd Card's Command Index Hash Table having index of the command structure
 173:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  * Array Index 0-57 is for SD general Commands and Array Index 58-64 is for
 174:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  * Application Specific Commands.
 175:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  */
 176:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** const uint8_t SDMMC003_SDHashTable[65] =
 177:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** {
 178:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   0, 0xFF,1,2,3,0xFF,4,5,6,7,8,0xFF,9,10,0xFF,\
 179:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   11, 12, 13, 14,0xFF, 0xFF, 0xFF, 0xFF, 0xFF,\
 180:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   15, 16, 0xFF, 17, 18, 19, 20, 0xFF, 21, 22,\
 181:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   0xFF, 0xFF, 0xFF, 0xFF, 23, 0xFF, 0xFF, 0xFF,\
 182:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   24, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,\
 183:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 25, 26, 0xFF, \
 184:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   27, 28, 29,30,31,32,33
 185:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** };
 186:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
 187:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** #if SDMMC_SUPPORT_MMC_CARD
 188:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** const uint8_t SDMMC003_MMCHashTable[64] =
 189:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** {
 190:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   0,34,1,2,3,35,36,5,37,7,8,0xFF,9,10,0xFF,11,12,\
 191:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   13,14,0xFF,0xFF,0xFF,0xFF,0xFF,15,16,0xFF,17,\
 192:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   18,19,20,0xFF,0xFF,0xFF,0xFF,38,39,0xFF,23,\
 193:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   0xFF,0xFF,0xFF,24,0xFF,0xFF,0xFF,0xFF,0xFF,\
 194:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,25,26,0xFF,\
 195:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
 196:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** };
 197:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** #endif
 198:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
 199:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*******************************************************************************
 200:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** **                      Private Function Definitions                          **
 201:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** *******************************************************************************/
 202:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*<<<DD_SDMMC_nonAPI_1>>> */
 203:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*
 204:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  * This function resets the Host Controller's register depending on the
 205:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  * parameter passed.
 206:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  */
 207:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** status_t SDMMC003_lReset( uint8_t Reset )
 208:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** {
 189              		.loc 1 208 0
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 16
 192              		@ frame_needed = 1, uses_anonymous_args = 0
 193 0000 80B5     		push	{r7, lr}
 194              	.LCFI0:
 195              		.cfi_def_cfa_offset 8
 196              		.cfi_offset 7, -8
 197              		.cfi_offset 14, -4
 198 0002 84B0     		sub	sp, sp, #16
 199              	.LCFI1:
 200              		.cfi_def_cfa_offset 24
 201 0004 00AF     		add	r7, sp, #0
 202              	.LCFI2:
 203              		.cfi_def_cfa_register 7
 204 0006 0346     		mov	r3, r0
 205 0008 FB71     		strb	r3, [r7, #7]
 209:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   status_t Status = (uint32_t)DAVEApp_SUCCESS;
 206              		.loc 1 209 0
 207 000a 4FF00003 		mov	r3, #0
 208 000e FB60     		str	r3, [r7, #12]
 210:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   handle_t TimerId;
 211:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   FUNCTION_ENTRY(GID_SDMMC00x, (uint32_t)SDMMC003_FUNCTION_ENTRY);
 212:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   SDMMC->SW_RESET =  (SDMMC->SW_RESET | Reset);
 209              		.loc 1 212 0
 210 0010 4FF44043 		mov	r3, #49152
 211 0014 C4F60103 		movt	r3, 18433
 212 0018 4FF44042 		mov	r2, #49152
 213 001c C4F60102 		movt	r2, 18433
 214 0020 92F82F20 		ldrb	r2, [r2, #47]
 215 0024 D1B2     		uxtb	r1, r2
 216 0026 FA79     		ldrb	r2, [r7, #7]
 217 0028 0A43     		orrs	r2, r2, r1
 218 002a D2B2     		uxtb	r2, r2
 219 002c 83F82F20 		strb	r2, [r3, #47]
 213:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   /* The Host Controller takes some time to complete software reset*/
 214:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   /* Wait till host controller clears each bit */
 215:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_1_1>>>*/
 216:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   TimerId = SDMMC003_lStartTimer(SDMMC003_RESET_DELAY);
 220              		.loc 1 216 0
 221 0030 4FF4FA70 		mov	r0, #500
 222 0034 FFF7FEFF 		bl	SDMMC003_lStartTimer
 223 0038 B860     		str	r0, [r7, #8]
 217:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   if(0 == TimerId)
 224              		.loc 1 217 0
 225 003a BB68     		ldr	r3, [r7, #8]
 226 003c 002B     		cmp	r3, #0
 227 003e 03D1     		bne	.L2
 218:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
 219:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     Status = (uint32_t) SDMMC003_START_TIMER_FAILED;
 228              		.loc 1 219 0
 229 0040 4FF02F03 		mov	r3, #47
 230 0044 FB60     		str	r3, [r7, #12]
 231 0046 1AE0     		b	.L3
 232              	.L2:
 220:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     ERROR(GID_SDMMC00x, Status, 0, NULL);    
 221:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   }
 222:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   else
 223:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
 224:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     do
 225:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
 226:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       if (SDMMC003_Handle.TimerExpire == 0)
 233              		.loc 1 226 0
 234 0048 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 235 004c C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 236 0050 9B7A     		ldrb	r3, [r3, #10]
 237 0052 DBB2     		uxtb	r3, r3
 238 0054 002B     		cmp	r3, #0
 239 0056 03D1     		bne	.L4
 227:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       {
 228:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         Status = (uint32_t)SDMMC003_TIMEOUT_OCCURED;
 240              		.loc 1 228 0
 241 0058 4FF02E03 		mov	r3, #46
 242 005c FB60     		str	r3, [r7, #12]
 229:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         ERROR(GID_SDMMC00x, Status, 0, NULL);
 230:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         break;
 243              		.loc 1 230 0
 244 005e 0BE0     		b	.L5
 245              	.L4:
 231:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       }
 232:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     } while (SDMMC->SW_RESET & Reset);
 246              		.loc 1 232 0
 247 0060 4FF44043 		mov	r3, #49152
 248 0064 C4F60103 		movt	r3, 18433
 249 0068 93F82F30 		ldrb	r3, [r3, #47]
 250 006c DAB2     		uxtb	r2, r3
 251 006e FB79     		ldrb	r3, [r7, #7]
 252 0070 1340     		ands	r3, r3, r2
 253 0072 DBB2     		uxtb	r3, r3
 254 0074 002B     		cmp	r3, #0
 255 0076 E7D1     		bne	.L2
 256              	.L5:
 233:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC003_lStopTimer(TimerId);
 257              		.loc 1 233 0
 258 0078 B868     		ldr	r0, [r7, #8]
 259 007a FFF7FEFF 		bl	SDMMC003_lStopTimer
 260              	.L3:
 234:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   }
 235:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   FUNCTION_EXIT(GID_SDMMC00x, (uint32_t)SDMMC003_FUNCTION_EXIT);
 236:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   return Status;
 261              		.loc 1 236 0
 262 007e FB68     		ldr	r3, [r7, #12]
 237:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** }
 263              		.loc 1 237 0
 264 0080 1846     		mov	r0, r3
 265 0082 07F11007 		add	r7, r7, #16
 266 0086 BD46     		mov	sp, r7
 267 0088 80BD     		pop	{r7, pc}
 268              		.cfi_endproc
 269              	.LFE117:
 271 008a 00BF     		.section	.text.SDMMC003_lCardCleanUp,"ax",%progbits
 272              		.align	2
 273              		.global	SDMMC003_lCardCleanUp
 274              		.thumb
 275              		.thumb_func
 277              	SDMMC003_lCardCleanUp:
 278              	.LFB118:
 238:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_2>>> */
 239:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*
 240:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  * This function clears the card related structures and stops the SD clock.
 241:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  */
 242:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** void SDMMC003_lCardCleanUp()
 243:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** {
 279              		.loc 1 243 0
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 0
 282              		@ frame_needed = 1, uses_anonymous_args = 0
 283 0000 80B5     		push	{r7, lr}
 284              	.LCFI3:
 285              		.cfi_def_cfa_offset 8
 286              		.cfi_offset 7, -8
 287              		.cfi_offset 14, -4
 288 0002 00AF     		add	r7, sp, #0
 289              	.LCFI4:
 290              		.cfi_def_cfa_register 7
 244:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   FUNCTION_ENTRY(GID_SDMMC00x, (uint32_t)SDMMC003_FUNCTION_ENTRY);
 245:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   memset((void*)&SDMMC003_CardInfo,0,sizeof(SDMMC003_CardInfo));
 291              		.loc 1 245 0
 292 0004 40F20000 		movw	r0, #:lower16:SDMMC003_CardInfo
 293 0008 C0F20000 		movt	r0, #:upper16:SDMMC003_CardInfo
 294 000c 4FF00001 		mov	r1, #0
 295 0010 4FF03002 		mov	r2, #48
 296 0014 FFF7FEFF 		bl	memset
 246:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   SDMMC003_Handle.CardType = 0;
 297              		.loc 1 246 0
 298 0018 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 299 001c C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 300 0020 4FF00002 		mov	r2, #0
 301 0024 9A70     		strb	r2, [r3, #2]
 247:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   SDMMC003_Handle.f8 = 0;
 302              		.loc 1 247 0
 303 0026 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 304 002a C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 305 002e 4FF00002 		mov	r2, #0
 306 0032 5A72     		strb	r2, [r3, #9]
 248:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   SDMMC003_Handle.CommandInterruptError = SDMMC003_ERROR;
 307              		.loc 1 248 0
 308 0034 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 309 0038 C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 310 003c 4FF00102 		mov	r2, #1
 311 0040 1A71     		strb	r2, [r3, #4]
 249:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   SDMMC003_Handle.DataInterruptError = SDMMC003_ERROR;
 312              		.loc 1 249 0
 313 0042 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 314 0046 C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 315 004a 4FF00102 		mov	r2, #1
 316 004e DA70     		strb	r2, [r3, #3]
 250:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   SDMMC003_Handle.ErrorRecoveryStatus = SDMMC003_ERROR;
 317              		.loc 1 250 0
 318 0050 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 319 0054 C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 320 0058 4FF00102 		mov	r2, #1
 321 005c DA71     		strb	r2, [r3, #7]
 251:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   SDMMC003_Handle.TransferInterruptError = SDMMC003_ERROR;
 322              		.loc 1 251 0
 323 005e 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 324 0062 C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 325 0066 4FF00102 		mov	r2, #1
 326 006a 5A71     		strb	r2, [r3, #5]
 252:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   SDMMC003_Handle.State  = 0;
 327              		.loc 1 252 0
 328 006c 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 329 0070 C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 330 0074 4FF00002 		mov	r2, #0
 331 0078 1A80     		strh	r2, [r3, #0]	@ movhi
 253:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   /* Stop the SD Clock Enable */
 254:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   CLR_BIT( SDMMC->CLOCK_CTRL,SDMMC_CLOCK_CTRL_SDCLOCK_EN_Pos  );
 332              		.loc 1 254 0
 333 007a 4FF44043 		mov	r3, #49152
 334 007e C4F60103 		movt	r3, 18433
 335 0082 4FF44042 		mov	r2, #49152
 336 0086 C4F60102 		movt	r2, 18433
 337 008a 928D     		ldrh	r2, [r2, #44]	@ movhi
 338 008c 92B2     		uxth	r2, r2
 339 008e 22F00402 		bic	r2, r2, #4
 340 0092 92B2     		uxth	r2, r2
 341 0094 9A85     		strh	r2, [r3, #44]	@ movhi
 255:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   FUNCTION_EXIT(GID_SDMMC00x, (uint32_t)SDMMC003_FUNCTION_EXIT);
 256:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** }
 342              		.loc 1 256 0
 343 0096 80BD     		pop	{r7, pc}
 344              		.cfi_endproc
 345              	.LFE118:
 347              		.section	.text.SDMMC003_lCheckDatCmdline,"ax",%progbits
 348              		.align	2
 349              		.global	SDMMC003_lCheckDatCmdline
 350              		.thumb
 351              		.thumb_func
 353              	SDMMC003_lCheckDatCmdline:
 354              	.LFB119:
 257:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
 258:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_3>>> */
 259:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*
 260:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  * This function checks whether the CMD and DATA lines are free before issuing
 261:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  * any command.
 262:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  */
 263:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** status_t SDMMC003_lCheckDatCmdline(const SDMMC003_CommandType *CommandPtr)
 264:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** {
 355              		.loc 1 264 0
 356              		.cfi_startproc
 357              		@ args = 0, pretend = 0, frame = 16
 358              		@ frame_needed = 1, uses_anonymous_args = 0
 359              		@ link register save eliminated.
 360 0000 80B4     		push	{r7}
 361              	.LCFI5:
 362              		.cfi_def_cfa_offset 4
 363              		.cfi_offset 7, -4
 364 0002 85B0     		sub	sp, sp, #20
 365              	.LCFI6:
 366              		.cfi_def_cfa_offset 24
 367 0004 00AF     		add	r7, sp, #0
 368              	.LCFI7:
 369              		.cfi_def_cfa_register 7
 370 0006 7860     		str	r0, [r7, #4]
 265:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   status_t Status = (uint32_t)DAVEApp_SUCCESS;
 371              		.loc 1 265 0
 372 0008 4FF00003 		mov	r3, #0
 373 000c FB60     		str	r3, [r7, #12]
 266:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   FUNCTION_ENTRY(GID_SDMMC00x, (uint32_t)SDMMC003_FUNCTION_ENTRY);
 267:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   do
 268:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
 269:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** #if SDMMC_UVP_TEST
 270:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if( Test_TriggerInterrupt.Trigger_DataCmdLineBusy == TRUE)
 271:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
 272:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Status = (uint32_t)SDMMC003_CMD_LINE_BUSY;
 273:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       break;
 274:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
 275:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** #endif
 276:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* Read from Present state register to Check Cmd line is free */
 277:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_3_1>>> */
 278:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if ( SDMMC->PRESENT_STATE  & SDMMC_PRESENT_STATE_COMMAND_INHIBIT_CMD_Msk)
 374              		.loc 1 278 0
 375 000e 4FF44043 		mov	r3, #49152
 376 0012 C4F60103 		movt	r3, 18433
 377 0016 5B6A     		ldr	r3, [r3, #36]
 378 0018 03F00103 		and	r3, r3, #1
 379 001c 002B     		cmp	r3, #0
 380 001e 03D0     		beq	.L9
 279:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
 280:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Status = (uint32_t)SDMMC003_CMD_LINE_BUSY;
 381              		.loc 1 280 0
 382 0020 4FF01A03 		mov	r3, #26
 383 0024 FB60     		str	r3, [r7, #12]
 281:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       break;
 384              		.loc 1 281 0
 385 0026 4BE0     		b	.L10
 386              	.L9:
 282:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
 283:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* Check for  data line for Send Status command  and all those commands using  
 284:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****    data line */
 285:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_3_2>>> */
 286:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if (( 1UL == CommandPtr->DataPresentSelect) ||  \
 387              		.loc 1 286 0
 388 0028 7B68     		ldr	r3, [r7, #4]
 389 002a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 390 002c 03F02003 		and	r3, r3, #32
 391 0030 DBB2     		uxtb	r3, r3
 392 0032 002B     		cmp	r3, #0
 393 0034 0DD1     		bne	.L11
 287:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         ( (SDMMC003_SEND_STATUS == CommandPtr->CommandIndex) || \
 394              		.loc 1 287 0 discriminator 1
 395 0036 7B68     		ldr	r3, [r7, #4]
 396 0038 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 397 003a 03F03F03 		and	r3, r3, #63
 398 003e DBB2     		uxtb	r3, r3
 286:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if (( 1UL == CommandPtr->DataPresentSelect) ||  \
 399              		.loc 1 286 0 discriminator 1
 400 0040 0D2B     		cmp	r3, #13
 401 0042 06D0     		beq	.L11
 288:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****           (3UL == CommandPtr->ResponseTypeSelect) )
 402              		.loc 1 288 0
 403 0044 7B68     		ldr	r3, [r7, #4]
 404 0046 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 405 0048 03F00303 		and	r3, r3, #3
 406 004c DBB2     		uxtb	r3, r3
 287:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         ( (SDMMC003_SEND_STATUS == CommandPtr->CommandIndex) || \
 407              		.loc 1 287 0
 408 004e 032B     		cmp	r3, #3
 409 0050 28D1     		bne	.L12
 410              	.L11:
 289:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****        )
 290:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
 291:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_3_3>>> */
 292:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Read from Present state register to Check data line is free */
 293:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       if ( (SDMMC->PRESENT_STATE  & SDMMC_PRESENT_STATE_COMMAND_INHIBIT_DAT_Msk )!= 0)
 411              		.loc 1 293 0
 412 0052 4FF44043 		mov	r3, #49152
 413 0056 C4F60103 		movt	r3, 18433
 414 005a 5B6A     		ldr	r3, [r3, #36]
 415 005c 03F00203 		and	r3, r3, #2
 416 0060 002B     		cmp	r3, #0
 417 0062 03D0     		beq	.L13
 294:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       {
 295:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         Status = (uint32_t)SDMMC003_DATA_LINE_BUSY;
 418              		.loc 1 295 0
 419 0064 4FF01B03 		mov	r3, #27
 420 0068 FB60     		str	r3, [r7, #12]
 296:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         break;
 421              		.loc 1 296 0
 422 006a 29E0     		b	.L10
 423              	.L13:
 297:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       }
 298:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_3_4>>> */
 299:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       else
 300:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       {
 301:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         /* Update the data line state to active */
 302:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         if( (1UL == CommandPtr->DataPresentSelect) || \
 424              		.loc 1 302 0
 425 006c 7B68     		ldr	r3, [r7, #4]
 426 006e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 427 0070 03F02003 		and	r3, r3, #32
 428 0074 DBB2     		uxtb	r3, r3
 429 0076 002B     		cmp	r3, #0
 430 0078 06D1     		bne	.L14
 303:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****             (3UL == CommandPtr->ResponseTypeSelect) )
 431              		.loc 1 303 0 discriminator 1
 432 007a 7B68     		ldr	r3, [r7, #4]
 433 007c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 434 007e 03F00303 		and	r3, r3, #3
 435 0082 DBB2     		uxtb	r3, r3
 302:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         if( (1UL == CommandPtr->DataPresentSelect) || \
 436              		.loc 1 302 0 discriminator 1
 437 0084 032B     		cmp	r3, #3
 438 0086 0DD1     		bne	.L12
 439              	.L14:
 304:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         {
 305:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****           SDMMC003_Handle.State |=(uint32_t)SDMMC003_STATE_DATA_ACTIVE;
 440              		.loc 1 305 0
 441 0088 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 442 008c C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 443 0090 1B88     		ldrh	r3, [r3, #0]	@ movhi
 444 0092 9BB2     		uxth	r3, r3
 445 0094 43F00803 		orr	r3, r3, #8
 446 0098 9AB2     		uxth	r2, r3
 447 009a 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 448 009e C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 449 00a2 1A80     		strh	r2, [r3, #0]	@ movhi
 450              	.L12:
 306:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         }
 307:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       }
 308:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
 309:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Update the Command line state to active */
 310:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC003_Handle.State |=(uint32_t)SDMMC003_STATE_CMD_ACTIVE;
 451              		.loc 1 310 0
 452 00a4 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 453 00a8 C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 454 00ac 1B88     		ldrh	r3, [r3, #0]	@ movhi
 455 00ae 9BB2     		uxth	r3, r3
 456 00b0 43F00403 		orr	r3, r3, #4
 457 00b4 9AB2     		uxth	r2, r3
 458 00b6 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 459 00ba C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 460 00be 1A80     		strh	r2, [r3, #0]	@ movhi
 461              	.L10:
 311:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   } while(0);
 312:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   FUNCTION_EXIT(GID_SDMMC00x, (uint32_t)SDMMC003_FUNCTION_EXIT);
 313:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   return Status;
 462              		.loc 1 313 0
 463 00c0 FB68     		ldr	r3, [r7, #12]
 314:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** }
 464              		.loc 1 314 0
 465 00c2 1846     		mov	r0, r3
 466 00c4 07F11407 		add	r7, r7, #20
 467 00c8 BD46     		mov	sp, r7
 468 00ca 80BC     		pop	{r7}
 469 00cc 7047     		bx	lr
 470              		.cfi_endproc
 471              	.LFE119:
 473 00ce 00BF     		.section	.text.SDMMC003_lCheckArgumentError,"ax",%progbits
 474              		.align	2
 475              		.global	SDMMC003_lCheckArgumentError
 476              		.thumb
 477              		.thumb_func
 479              	SDMMC003_lCheckArgumentError:
 480              	.LFB120:
 315:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
 316:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_4>>> */
 317:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*
 318:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  * This function checks response error types in Command's Arguments category
 319:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  */
 320:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** void SDMMC003_lCheckArgumentError
 321:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** (
 322:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   const uint32_t  *CardStatusPtr,
 323:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   uint8_t *ErrorPtr
 324:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** )
 325:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** {
 481              		.loc 1 325 0
 482              		.cfi_startproc
 483              		@ args = 0, pretend = 0, frame = 8
 484              		@ frame_needed = 1, uses_anonymous_args = 0
 485              		@ link register save eliminated.
 486 0000 80B4     		push	{r7}
 487              	.LCFI8:
 488              		.cfi_def_cfa_offset 4
 489              		.cfi_offset 7, -4
 490 0002 83B0     		sub	sp, sp, #12
 491              	.LCFI9:
 492              		.cfi_def_cfa_offset 16
 493 0004 00AF     		add	r7, sp, #0
 494              	.LCFI10:
 495              		.cfi_def_cfa_register 7
 496 0006 7860     		str	r0, [r7, #4]
 497 0008 3960     		str	r1, [r7, #0]
 326:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   FUNCTION_ENTRY(GID_SDMMC00x, (uint32_t)SDMMC003_FUNCTION_ENTRY);
 327:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* The command's argument was out of the allowed range for this card.*/
 328:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_4_1>>> */
 329:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   if ((*CardStatusPtr & SDMMC003_CSR_OUT_OF_RANGE_BITMASK ) != 0)
 498              		.loc 1 329 0
 499 000a 7B68     		ldr	r3, [r7, #4]
 500 000c 1B68     		ldr	r3, [r3, #0]
 501 000e 002B     		cmp	r3, #0
 502 0010 03DA     		bge	.L17
 330:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
 331:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     *ErrorPtr = 1UL;
 503              		.loc 1 331 0
 504 0012 3B68     		ldr	r3, [r7, #0]
 505 0014 4FF00102 		mov	r2, #1
 506 0018 1A70     		strb	r2, [r3, #0]
 507              	.L17:
 332:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     ERROR(GID_SDMMC00x, SDMMC003_OUT_OF_RANGE_ERROR,0,NULL);
 333:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   } /*End of "if( *CardStatusPtr & CSR_OUT_OF_RANGE_BITMASK ) "*/
 334:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
 335:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   /* A mis-aligned address which did not match the block length was used in
 336:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****    * the command.*/
 337:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_4_2>>> */
 338:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   if ((*CardStatusPtr & SDMMC003_CSR_ADDRESS_ERROR_BITMASK) != 0)
 508              		.loc 1 338 0
 509 001a 7B68     		ldr	r3, [r7, #4]
 510 001c 1B68     		ldr	r3, [r3, #0]
 511 001e 03F08043 		and	r3, r3, #1073741824
 512 0022 002B     		cmp	r3, #0
 513 0024 03D0     		beq	.L18
 339:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
 340:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     *ErrorPtr = 1UL;
 514              		.loc 1 340 0
 515 0026 3B68     		ldr	r3, [r7, #0]
 516 0028 4FF00102 		mov	r2, #1
 517 002c 1A70     		strb	r2, [r3, #0]
 518              	.L18:
 341:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     ERROR(GID_SDMMC00x, SDMMC003_ADDRESS_ERROR,0,NULL);
 342:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   } /*End of " if ( *CardStatusPtr & CSR_ADDRESS_ERROR_BITMASK) "*/
 343:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
 344:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   /* The transferred block length is not allowed for this card, or the number
 345:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****    * of transferred bytes does not match the block length.*/
 346:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_4_3>>> */
 347:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   if ((*CardStatusPtr & SDMMC003_CSR_BLOCK_LEN_ERROR_BITMASK) != 0)
 519              		.loc 1 347 0
 520 002e 7B68     		ldr	r3, [r7, #4]
 521 0030 1B68     		ldr	r3, [r3, #0]
 522 0032 03F00053 		and	r3, r3, #536870912
 523 0036 002B     		cmp	r3, #0
 524 0038 03D0     		beq	.L19
 348:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
 349:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     *ErrorPtr = 1UL;
 525              		.loc 1 349 0
 526 003a 3B68     		ldr	r3, [r7, #0]
 527 003c 4FF00102 		mov	r2, #1
 528 0040 1A70     		strb	r2, [r3, #0]
 529              	.L19:
 350:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     ERROR(GID_SDMMC00x,SDMMC003_BLOCK_LEN_ERROR,0,NULL);
 351:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   }/*End of " if (*CardStatusPtr & CSR_BLOCK_LEN_ERROR_BITMASK) "*/
 352:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
 353:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   /* Set when the host attempts to write to a protected block or to the
 354:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****      temporary or permanent write protected card.*/
 355:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_4_4>>> */
 356:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   if (( *CardStatusPtr & SDMMC003_CSR_WP_VIOLATION_BITMASK ) != 0)
 530              		.loc 1 356 0
 531 0042 7B68     		ldr	r3, [r7, #4]
 532 0044 1B68     		ldr	r3, [r3, #0]
 533 0046 03F08063 		and	r3, r3, #67108864
 534 004a 002B     		cmp	r3, #0
 535 004c 03D0     		beq	.L16
 357:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
 358:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     *ErrorPtr = 1UL;
 536              		.loc 1 358 0
 537 004e 3B68     		ldr	r3, [r7, #0]
 538 0050 4FF00102 		mov	r2, #1
 539 0054 1A70     		strb	r2, [r3, #0]
 540              	.L16:
 359:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     ERROR(GID_SDMMC00x,SDMMC003_WP_VIOLATION_ERROR,0,NULL);
 360:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   }/*End of "if ( *CardStatusPtr & CSR_WP_VIOLATION_BITMASK ) "*/
 361:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   FUNCTION_EXIT(GID_SDMMC00x, (uint32_t)SDMMC003_FUNCTION_EXIT);
 362:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** }
 541              		.loc 1 362 0
 542 0056 07F10C07 		add	r7, r7, #12
 543 005a BD46     		mov	sp, r7
 544 005c 80BC     		pop	{r7}
 545 005e 7047     		bx	lr
 546              		.cfi_endproc
 547              	.LFE120:
 549              		.section	.text.SDMMC003_lCheckEraseError,"ax",%progbits
 550              		.align	2
 551              		.global	SDMMC003_lCheckEraseError
 552              		.thumb
 553              		.thumb_func
 555              	SDMMC003_lCheckEraseError:
 556              	.LFB121:
 363:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
 364:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_5>>> */
 365:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*
 366:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  * This function checks response error types in Erase category
 367:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  */
 368:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** void SDMMC003_lCheckEraseError
 369:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** (
 370:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   const uint32_t *CardStatusPtr,
 371:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   uint8_t *ErrorPtr
 372:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** )
 373:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** {
 557              		.loc 1 373 0
 558              		.cfi_startproc
 559              		@ args = 0, pretend = 0, frame = 8
 560              		@ frame_needed = 1, uses_anonymous_args = 0
 561              		@ link register save eliminated.
 562 0000 80B4     		push	{r7}
 563              	.LCFI11:
 564              		.cfi_def_cfa_offset 4
 565              		.cfi_offset 7, -4
 566 0002 83B0     		sub	sp, sp, #12
 567              	.LCFI12:
 568              		.cfi_def_cfa_offset 16
 569 0004 00AF     		add	r7, sp, #0
 570              	.LCFI13:
 571              		.cfi_def_cfa_register 7
 572 0006 7860     		str	r0, [r7, #4]
 573 0008 3960     		str	r1, [r7, #0]
 374:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   FUNCTION_ENTRY(GID_SDMMC00x, (uint32_t)SDMMC003_FUNCTION_ENTRY);
 375:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   /* An error in the sequence of erase commands occurred.*/
 376:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_5_1>>> */
 377:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   if ((*CardStatusPtr & SDMMC003_CSR_ERASE_SEQ_ERROR_BITMASK) != 0)
 574              		.loc 1 377 0
 575 000a 7B68     		ldr	r3, [r7, #4]
 576 000c 1B68     		ldr	r3, [r3, #0]
 577 000e 03F08053 		and	r3, r3, #268435456
 578 0012 002B     		cmp	r3, #0
 579 0014 03D0     		beq	.L22
 378:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
 379:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     *ErrorPtr = 1UL;
 580              		.loc 1 379 0
 581 0016 3B68     		ldr	r3, [r7, #0]
 582 0018 4FF00102 		mov	r2, #1
 583 001c 1A70     		strb	r2, [r3, #0]
 584              	.L22:
 380:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     ERROR(GID_SDMMC00x,SDMMC003_ERASE_SEQ_ERROR,0,NULL);
 381:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   }
 382:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   /* An invalid selection of write-blocks for erase occurred.*/
 383:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_5_2>>> */
 384:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   if ((*CardStatusPtr & SDMMC003_CSR_ERASE_PARAM_BITMASK) != 0)
 585              		.loc 1 384 0
 586 001e 7B68     		ldr	r3, [r7, #4]
 587 0020 1B68     		ldr	r3, [r3, #0]
 588 0022 03F00063 		and	r3, r3, #134217728
 589 0026 002B     		cmp	r3, #0
 590 0028 03D0     		beq	.L23
 385:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
 386:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     *ErrorPtr = 1UL;
 591              		.loc 1 386 0
 592 002a 3B68     		ldr	r3, [r7, #0]
 593 002c 4FF00102 		mov	r2, #1
 594 0030 1A70     		strb	r2, [r3, #0]
 595              	.L23:
 387:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     ERROR(GID_SDMMC00x,SDMMC003_ERASE_PARAM_ERROR,0,NULL);
 388:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   }
 389:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   /* Set when only partial address space was erased due to existing
 390:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****    * write protected blocks or the temporary or permanent write protected card
 391:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****    *  was erased.*/
 392:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_5_3>>> */
 393:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   if (( *CardStatusPtr & SDMMC003_CSR_WP_ERASE_SKIP_BITMASK) != 0)
 596              		.loc 1 393 0
 597 0032 7B68     		ldr	r3, [r7, #4]
 598 0034 1B68     		ldr	r3, [r3, #0]
 599 0036 03F40043 		and	r3, r3, #32768
 600 003a 002B     		cmp	r3, #0
 601 003c 03D0     		beq	.L21
 394:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
 395:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     *ErrorPtr = 1UL;
 602              		.loc 1 395 0
 603 003e 3B68     		ldr	r3, [r7, #0]
 604 0040 4FF00102 		mov	r2, #1
 605 0044 1A70     		strb	r2, [r3, #0]
 606              	.L21:
 396:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     ERROR(GID_SDMMC00x,SDMMC003_WP_ERASE_SKIP_ERROR,0,NULL);
 397:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   }
 398:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   FUNCTION_EXIT(GID_SDMMC00x, (uint32_t)SDMMC003_FUNCTION_EXIT);
 399:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** }
 607              		.loc 1 399 0
 608 0046 07F10C07 		add	r7, r7, #12
 609 004a BD46     		mov	sp, r7
 610 004c 80BC     		pop	{r7}
 611 004e 7047     		bx	lr
 612              		.cfi_endproc
 613              	.LFE121:
 615              		.section	.text.SDMMC003_lCheckCardError,"ax",%progbits
 616              		.align	2
 617              		.global	SDMMC003_lCheckCardError
 618              		.thumb
 619              		.thumb_func
 621              	SDMMC003_lCheckCardError:
 622              	.LFB122:
 400:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
 401:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_6>>> */
 402:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*
 403:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  * This function checks response error types in card's internal error category
 404:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  */
 405:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** void SDMMC003_lCheckCardError
 406:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** (
 407:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   const uint32_t *CardStatusPtr,
 408:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   uint8_t *ErrorPtr
 409:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** )
 410:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** {
 623              		.loc 1 410 0
 624              		.cfi_startproc
 625              		@ args = 0, pretend = 0, frame = 8
 626              		@ frame_needed = 1, uses_anonymous_args = 0
 627              		@ link register save eliminated.
 628 0000 80B4     		push	{r7}
 629              	.LCFI14:
 630              		.cfi_def_cfa_offset 4
 631              		.cfi_offset 7, -4
 632 0002 83B0     		sub	sp, sp, #12
 633              	.LCFI15:
 634              		.cfi_def_cfa_offset 16
 635 0004 00AF     		add	r7, sp, #0
 636              	.LCFI16:
 637              		.cfi_def_cfa_register 7
 638 0006 7860     		str	r0, [r7, #4]
 639 0008 3960     		str	r1, [r7, #0]
 411:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   FUNCTION_ENTRY(GID_SDMMC00x, (uint32_t)SDMMC003_FUNCTION_ENTRY);
 412:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* Card internal ECC was applied but failed to correct the data.*/
 413:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_6_1>>> */
 414:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   if ((*CardStatusPtr & SDMMC003_CSR_CARD_ECC_FAILED_BITMASK) != 0UL)
 640              		.loc 1 414 0
 641 000a 7B68     		ldr	r3, [r7, #4]
 642 000c 1B68     		ldr	r3, [r3, #0]
 643 000e 03F40013 		and	r3, r3, #2097152
 644 0012 002B     		cmp	r3, #0
 645 0014 03D0     		beq	.L26
 415:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
 416:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     *ErrorPtr = 1UL;
 646              		.loc 1 416 0
 647 0016 3B68     		ldr	r3, [r7, #0]
 648 0018 4FF00102 		mov	r2, #1
 649 001c 1A70     		strb	r2, [r3, #0]
 650              	.L26:
 417:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     ERROR(GID_SDMMC00x,SDMMC003_CARD_ECC_ERROR,0,NULL);
 418:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   }
 419:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   /* Internal card controller error*/
 420:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_6_2>>> */
 421:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   if ((*CardStatusPtr & SDMMC003_CSR_CC_ERROR_BITMASK) != 0UL)
 651              		.loc 1 421 0
 652 001e 7B68     		ldr	r3, [r7, #4]
 653 0020 1B68     		ldr	r3, [r3, #0]
 654 0022 03F48013 		and	r3, r3, #1048576
 655 0026 002B     		cmp	r3, #0
 656 0028 03D0     		beq	.L27
 422:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
 423:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     *ErrorPtr = 1UL;
 657              		.loc 1 423 0
 658 002a 3B68     		ldr	r3, [r7, #0]
 659 002c 4FF00102 		mov	r2, #1
 660 0030 1A70     		strb	r2, [r3, #0]
 661              	.L27:
 424:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     ERROR(GID_SDMMC00x,SDMMC003_CC_ERROR,0,NULL);
 425:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   }
 426:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_6_3>>> */
 427:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   /* A general or an unknown error occurred during the operation.*/
 428:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   if ((*CardStatusPtr & SDMMC003_CSR_ERROR_BITMASK) != 0)
 662              		.loc 1 428 0
 663 0032 7B68     		ldr	r3, [r7, #4]
 664 0034 1B68     		ldr	r3, [r3, #0]
 665 0036 03F40023 		and	r3, r3, #524288
 666 003a 002B     		cmp	r3, #0
 667 003c 03D0     		beq	.L25
 429:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
 430:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     *ErrorPtr = 1UL;
 668              		.loc 1 430 0
 669 003e 3B68     		ldr	r3, [r7, #0]
 670 0040 4FF00102 		mov	r2, #1
 671 0044 1A70     		strb	r2, [r3, #0]
 672              	.L25:
 431:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     ERROR(GID_SDMMC00x,SDMMC003_UNKNOWN_ERROR,0,NULL);
 432:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   }
 433:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   /* Debug Log message .*/
 434:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   FUNCTION_EXIT(GID_SDMMC00x, (uint32_t)SDMMC003_FUNCTION_EXIT);
 435:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** }
 673              		.loc 1 435 0
 674 0046 07F10C07 		add	r7, r7, #12
 675 004a BD46     		mov	sp, r7
 676 004c 80BC     		pop	{r7}
 677 004e 7047     		bx	lr
 678              		.cfi_endproc
 679              	.LFE122:
 681              		.section	.text.SDMMC003_lCheckErrorInResponse,"ax",%progbits
 682              		.align	2
 683              		.global	SDMMC003_lCheckErrorInResponse
 684              		.thumb
 685              		.thumb_func
 687              	SDMMC003_lCheckErrorInResponse:
 688              	.LFB123:
 436:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
 437:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*<<<DD_SDMMC_nonAPI_7>>> */
 438:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*
 439:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  * This function checks for any error in the command's response received.
 440:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  */
 441:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** status_t SDMMC003_lCheckErrorInResponse( const uint32_t *CardStatusPtr)
 442:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** {
 689              		.loc 1 442 0
 690              		.cfi_startproc
 691              		@ args = 0, pretend = 0, frame = 16
 692              		@ frame_needed = 1, uses_anonymous_args = 0
 693 0000 80B5     		push	{r7, lr}
 694              	.LCFI17:
 695              		.cfi_def_cfa_offset 8
 696              		.cfi_offset 7, -8
 697              		.cfi_offset 14, -4
 698 0002 84B0     		sub	sp, sp, #16
 699              	.LCFI18:
 700              		.cfi_def_cfa_offset 24
 701 0004 00AF     		add	r7, sp, #0
 702              	.LCFI19:
 703              		.cfi_def_cfa_register 7
 704 0006 7860     		str	r0, [r7, #4]
 443:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   status_t Status = (uint32_t)DAVEApp_SUCCESS;
 705              		.loc 1 443 0
 706 0008 4FF00003 		mov	r3, #0
 707 000c FB60     		str	r3, [r7, #12]
 444:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   uint8_t ErrorStatus = 0;      /* No Error */
 708              		.loc 1 444 0
 709 000e 4FF00003 		mov	r3, #0
 710 0012 FB72     		strb	r3, [r7, #11]
 445:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   FUNCTION_ENTRY(GID_SDMMC00x, (uint32_t)SDMMC003_FUNCTION_ENTRY);
 446:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   /* Argument Related Error Function */
 447:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   SDMMC003_lCheckArgumentError( CardStatusPtr, &ErrorStatus );
 711              		.loc 1 447 0
 712 0014 07F10B03 		add	r3, r7, #11
 713 0018 7868     		ldr	r0, [r7, #4]
 714 001a 1946     		mov	r1, r3
 715 001c FFF7FEFF 		bl	SDMMC003_lCheckArgumentError
 448:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
 449:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   /* Erase Related Error function  */
 450:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   SDMMC003_lCheckEraseError( CardStatusPtr, &ErrorStatus);
 716              		.loc 1 450 0
 717 0020 07F10B03 		add	r3, r7, #11
 718 0024 7868     		ldr	r0, [r7, #4]
 719 0026 1946     		mov	r1, r3
 720 0028 FFF7FEFF 		bl	SDMMC003_lCheckEraseError
 451:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
 452:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   /* Card Related Error function */
 453:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   SDMMC003_lCheckCardError(CardStatusPtr, &ErrorStatus);
 721              		.loc 1 453 0
 722 002c 07F10B03 		add	r3, r7, #11
 723 0030 7868     		ldr	r0, [r7, #4]
 724 0032 1946     		mov	r1, r3
 725 0034 FFF7FEFF 		bl	SDMMC003_lCheckCardError
 454:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
 455:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   /* Set when a sequence or password error has been detected in lock/unlock
 456:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****    * card command.*/
 457:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*<<<DD_SDMMC_nonAPI_7_1>>> */
 458:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   if ((*CardStatusPtr & SDMMC003_CSR_LOCK_UNLOCK_FAILED_BITMASK) != 0)
 726              		.loc 1 458 0
 727 0038 7B68     		ldr	r3, [r7, #4]
 728 003a 1B68     		ldr	r3, [r3, #0]
 729 003c 03F08073 		and	r3, r3, #16777216
 730 0040 002B     		cmp	r3, #0
 731 0042 02D0     		beq	.L30
 459:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
 460:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     ErrorStatus = 1UL;
 732              		.loc 1 460 0
 733 0044 4FF00103 		mov	r3, #1
 734 0048 FB72     		strb	r3, [r7, #11]
 735              	.L30:
 461:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     ERROR(GID_SDMMC00x,SDMMC003_LOCK_UNLOCK_ERROR,0,NULL);
 462:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   }
 463:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   /* Can be either one of the following errors:
 464:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****    * The read only section of the CSD does not match the card content.
 465:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****    *  An attempt to reverse the copy  or permanent WP  bits was made.
 466:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****    */
 467:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*<<<DD_SDMMC_nonAPI_7_4>>> */
 468:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   if ((*CardStatusPtr & SDMMC003_CSR_CSD_OVERWRITE_BITMASK) != 0)
 736              		.loc 1 468 0
 737 004a 7B68     		ldr	r3, [r7, #4]
 738 004c 1B68     		ldr	r3, [r3, #0]
 739 004e 03F48033 		and	r3, r3, #65536
 740 0052 002B     		cmp	r3, #0
 741 0054 02D0     		beq	.L31
 469:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
 470:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     ErrorStatus = 1UL;
 742              		.loc 1 470 0
 743 0056 4FF00103 		mov	r3, #1
 744 005a FB72     		strb	r3, [r7, #11]
 745              	.L31:
 471:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     ERROR(GID_SDMMC00x,SDMMC003_CSD_OVERWRITE,0,NULL);
 472:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   }
 473:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*<<<DD_SDMMC_nonAPI_7_5>>> */
 474:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   /* Error in the sequence of the authentication process*/
 475:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   if ((*CardStatusPtr & SDMMC003_CSR_ASK_SEQ_ERROR_BITMASK) != 0)
 746              		.loc 1 475 0
 747 005c 7B68     		ldr	r3, [r7, #4]
 748 005e 1B68     		ldr	r3, [r3, #0]
 749 0060 03F00803 		and	r3, r3, #8
 750 0064 002B     		cmp	r3, #0
 751 0066 02D0     		beq	.L32
 476:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
 477:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     ErrorStatus = 1UL;
 752              		.loc 1 477 0
 753 0068 4FF00103 		mov	r3, #1
 754 006c FB72     		strb	r3, [r7, #11]
 755              	.L32:
 478:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     ERROR(GID_SDMMC00x,SDMMC003_ASK_SEQ_ERROR,0,NULL);
 479:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   }
 480:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   /* Below Additional condition is because some SD cards treat CMD55 as Illegal
 481:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****    * Command and gives this error in response */
 482:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*<<<DD_SDMMC_nonAPI_7_6>>> */
 483:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   if (ErrorStatus == 1UL) 
 756              		.loc 1 483 0
 757 006e FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 758 0070 012B     		cmp	r3, #1
 759 0072 02D1     		bne	.L33
 484:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
 485:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     Status = (uint32_t) SDMMC003_ERROR;
 760              		.loc 1 485 0
 761 0074 4FF00103 		mov	r3, #1
 762 0078 FB60     		str	r3, [r7, #12]
 763              	.L33:
 486:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   }
 487:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   FUNCTION_EXIT(GID_SDMMC00x, (uint32_t)SDMMC003_FUNCTION_EXIT);
 488:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   return Status;
 764              		.loc 1 488 0
 765 007a FB68     		ldr	r3, [r7, #12]
 489:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** }
 766              		.loc 1 489 0
 767 007c 1846     		mov	r0, r3
 768 007e 07F11007 		add	r7, r7, #16
 769 0082 BD46     		mov	sp, r7
 770 0084 80BD     		pop	{r7, pc}
 771              		.cfi_endproc
 772              	.LFE123:
 774 0086 00BF     		.section	.text.SDMMC003_lGetCardLockState,"ax",%progbits
 775              		.align	2
 776              		.global	SDMMC003_lGetCardLockState
 777              		.thumb
 778              		.thumb_func
 780              	SDMMC003_lGetCardLockState:
 781              	.LFB124:
 490:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
 491:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*
 492:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  * This function checks for lock status of SDMMC card.
 493:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  */
 494:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** void SDMMC003_lGetCardLockState(uint32_t CardStatus, uint16_t CommandIndex)
 495:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** {
 782              		.loc 1 495 0
 783              		.cfi_startproc
 784              		@ args = 0, pretend = 0, frame = 8
 785              		@ frame_needed = 1, uses_anonymous_args = 0
 786              		@ link register save eliminated.
 787 0000 80B4     		push	{r7}
 788              	.LCFI20:
 789              		.cfi_def_cfa_offset 4
 790              		.cfi_offset 7, -4
 791 0002 83B0     		sub	sp, sp, #12
 792              	.LCFI21:
 793              		.cfi_def_cfa_offset 16
 794 0004 00AF     		add	r7, sp, #0
 795              	.LCFI22:
 796              		.cfi_def_cfa_register 7
 797 0006 7860     		str	r0, [r7, #4]
 798 0008 0B46     		mov	r3, r1
 799 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 496:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   if (((CardStatus & SDMMC003_CSR_CARD_IS_LOCKED_BITMASK) != 0) &&
 800              		.loc 1 496 0
 801 000c 7B68     		ldr	r3, [r7, #4]
 802 000e 03F00073 		and	r3, r3, #33554432
 803 0012 002B     		cmp	r3, #0
 804 0014 11D0     		beq	.L36
 805              		.loc 1 496 0 is_stmt 0 discriminator 1
 806 0016 7B88     		ldrh	r3, [r7, #2]
 807 0018 032B     		cmp	r3, #3
 808 001a 0ED0     		beq	.L36
 497:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       (CommandIndex != SDMMC003_SEND_RELATIVE_ADDR ))
 498:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
 499:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC003_Handle.State |= SDMMC003_STATE_CARD_LOCKED ;
 809              		.loc 1 499 0 is_stmt 1
 810 001c 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 811 0020 C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 812 0024 1B88     		ldrh	r3, [r3, #0]	@ movhi
 813 0026 9BB2     		uxth	r3, r3
 814 0028 43F04003 		orr	r3, r3, #64
 815 002c 9AB2     		uxth	r2, r3
 816 002e 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 817 0032 C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 818 0036 1A80     		strh	r2, [r3, #0]	@ movhi
 819 0038 0DE0     		b	.L35
 820              	.L36:
 500:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   }
 501:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   else
 502:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
 503:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC003_Handle.State &= ~SDMMC003_STATE_CARD_LOCKED ;
 821              		.loc 1 503 0
 822 003a 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 823 003e C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 824 0042 1B88     		ldrh	r3, [r3, #0]	@ movhi
 825 0044 9BB2     		uxth	r3, r3
 826 0046 23F04003 		bic	r3, r3, #64
 827 004a 9AB2     		uxth	r2, r3
 828 004c 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 829 0050 C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 830 0054 1A80     		strh	r2, [r3, #0]	@ movhi
 831              	.L35:
 504:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   }
 505:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** }
 832              		.loc 1 505 0
 833 0056 07F10C07 		add	r7, r7, #12
 834 005a BD46     		mov	sp, r7
 835 005c 80BC     		pop	{r7}
 836 005e 7047     		bx	lr
 837              		.cfi_endproc
 838              	.LFE124:
 840              		.section	.text.SDMMC003_lTransferDelay,"ax",%progbits
 841              		.align	2
 842              		.global	SDMMC003_lTransferDelay
 843              		.thumb
 844              		.thumb_func
 846              	SDMMC003_lTransferDelay:
 847              	.LFB125:
 506:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
 507:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*
 508:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  * This function provide the delay in transfer.
 509:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  */
 510:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** status_t SDMMC003_lTransferDelay(uint32_t DelayTime)
 511:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** {
 848              		.loc 1 511 0
 849              		.cfi_startproc
 850              		@ args = 0, pretend = 0, frame = 16
 851              		@ frame_needed = 1, uses_anonymous_args = 0
 852 0000 80B5     		push	{r7, lr}
 853              	.LCFI23:
 854              		.cfi_def_cfa_offset 8
 855              		.cfi_offset 7, -8
 856              		.cfi_offset 14, -4
 857 0002 84B0     		sub	sp, sp, #16
 858              	.LCFI24:
 859              		.cfi_def_cfa_offset 24
 860 0004 00AF     		add	r7, sp, #0
 861              	.LCFI25:
 862              		.cfi_def_cfa_register 7
 863 0006 7860     		str	r0, [r7, #4]
 512:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   status_t Status = (uint32_t)DAVEApp_SUCCESS;
 864              		.loc 1 512 0
 865 0008 4FF00003 		mov	r3, #0
 866 000c FB60     		str	r3, [r7, #12]
 513:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   handle_t TimerId;
 514:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   SDMMC003_Handle.TimerExpire = 1;
 867              		.loc 1 514 0
 868 000e 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 869 0012 C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 870 0016 4FF00102 		mov	r2, #1
 871 001a 9A72     		strb	r2, [r3, #10]
 515:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   TimerId = SDMMC003_lStartTimer(DelayTime);
 872              		.loc 1 515 0
 873 001c 7868     		ldr	r0, [r7, #4]
 874 001e FFF7FEFF 		bl	SDMMC003_lStartTimer
 875 0022 B860     		str	r0, [r7, #8]
 516:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   if(0 == TimerId)
 876              		.loc 1 516 0
 877 0024 BB68     		ldr	r3, [r7, #8]
 878 0026 002B     		cmp	r3, #0
 879 0028 02D1     		bne	.L39
 517:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
 518:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     Status = (uint32_t) SDMMC003_START_TIMER_FAILED;
 880              		.loc 1 518 0
 881 002a 4FF02F03 		mov	r3, #47
 882 002e FB60     		str	r3, [r7, #12]
 883              	.L39:
 519:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   }
 520:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   if(Status != (uint32_t) SDMMC003_START_TIMER_FAILED)
 884              		.loc 1 520 0
 885 0030 FB68     		ldr	r3, [r7, #12]
 886 0032 2F2B     		cmp	r3, #47
 887 0034 1DD0     		beq	.L40
 888              	.L43:
 521:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
 522:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     do
 523:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
 524:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       if (SDMMC003_Handle.TimerExpire == 0)
 889              		.loc 1 524 0
 890 0036 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 891 003a C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 892 003e 9B7A     		ldrb	r3, [r3, #10]
 893 0040 DBB2     		uxtb	r3, r3
 894 0042 002B     		cmp	r3, #0
 895 0044 03D1     		bne	.L41
 525:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       {
 526:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         Status = (uint32_t)SDMMC003_TIMEOUT_OCCURED;
 896              		.loc 1 526 0
 897 0046 4FF02E03 		mov	r3, #46
 898 004a FB60     		str	r3, [r7, #12]
 527:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         ERROR(GID_SDMMC00x, Status, 0, NULL);
 528:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         break;
 899              		.loc 1 528 0
 900 004c 07E0     		b	.L42
 901              	.L41:
 529:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       }
 530:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     } while (SDMMC003_ISRContext.TransferFlag == 0);
 902              		.loc 1 530 0
 903 004e 40F20003 		movw	r3, #:lower16:SDMMC003_ISRContext
 904 0052 C0F20003 		movt	r3, #:upper16:SDMMC003_ISRContext
 905 0056 1B79     		ldrb	r3, [r3, #4]
 906 0058 DBB2     		uxtb	r3, r3
 907 005a 002B     		cmp	r3, #0
 908 005c EBD0     		beq	.L43
 909              	.L42:
 531:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC003_ISRContext.TransferFlag = 0;
 910              		.loc 1 531 0
 911 005e 40F20003 		movw	r3, #:lower16:SDMMC003_ISRContext
 912 0062 C0F20003 		movt	r3, #:upper16:SDMMC003_ISRContext
 913 0066 4FF00002 		mov	r2, #0
 914 006a 1A71     		strb	r2, [r3, #4]
 532:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC003_lStopTimer(TimerId);
 915              		.loc 1 532 0
 916 006c B868     		ldr	r0, [r7, #8]
 917 006e FFF7FEFF 		bl	SDMMC003_lStopTimer
 918              	.L40:
 533:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   }
 534:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_22_6>>> */
 535:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   if( SDMMC003_Handle.TransferInterruptError != SDMMC003_TRANSFER_COMPLETE)
 919              		.loc 1 535 0
 920 0072 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 921 0076 C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 922 007a 5B79     		ldrb	r3, [r3, #5]
 923 007c DBB2     		uxtb	r3, r3
 924 007e 1F2B     		cmp	r3, #31
 925 0080 06D0     		beq	.L44
 536:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
 537:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     Status = (uint32_t)SDMMC003_Handle.DataInterruptError;
 926              		.loc 1 537 0
 927 0082 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 928 0086 C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 929 008a DB78     		ldrb	r3, [r3, #3]
 930 008c DBB2     		uxtb	r3, r3
 931 008e FB60     		str	r3, [r7, #12]
 932              	.L44:
 538:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   }
 539:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   return Status;
 933              		.loc 1 539 0
 934 0090 FB68     		ldr	r3, [r7, #12]
 540:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** }
 935              		.loc 1 540 0
 936 0092 1846     		mov	r0, r3
 937 0094 07F11007 		add	r7, r7, #16
 938 0098 BD46     		mov	sp, r7
 939 009a 80BD     		pop	{r7, pc}
 940              		.cfi_endproc
 941              	.LFE125:
 943              		.section	.text.SDMMC003_lReadResponse,"ax",%progbits
 944              		.align	2
 945              		.global	SDMMC003_lReadResponse
 946              		.thumb
 947              		.thumb_func
 949              	SDMMC003_lReadResponse:
 950              	.LFB126:
 541:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
 542:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*<<<DD_SDMMC_nonAPI_8>>> */
 543:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*
 544:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  * This function reads for the response received for the command issued.
 545:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  */
 546:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** status_t  SDMMC003_lReadResponse
 547:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** (
 548:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****    const SDMMC003_CommandType *CommandPtr,
 549:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****    SDMMC003_ResponseType ResponseType,
 550:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****    void *ResponsePtr
 551:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** )
 552:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** {
 951              		.loc 1 552 0
 952              		.cfi_startproc
 953              		@ args = 0, pretend = 0, frame = 32
 954              		@ frame_needed = 1, uses_anonymous_args = 0
 955 0000 80B5     		push	{r7, lr}
 956              	.LCFI26:
 957              		.cfi_def_cfa_offset 8
 958              		.cfi_offset 7, -8
 959              		.cfi_offset 14, -4
 960 0002 88B0     		sub	sp, sp, #32
 961              	.LCFI27:
 962              		.cfi_def_cfa_offset 40
 963 0004 00AF     		add	r7, sp, #0
 964              	.LCFI28:
 965              		.cfi_def_cfa_register 7
 966 0006 F860     		str	r0, [r7, #12]
 967 0008 0B46     		mov	r3, r1
 968 000a 7A60     		str	r2, [r7, #4]
 969 000c FB72     		strb	r3, [r7, #11]
 553:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   uint32_t CardStatus = 0;
 970              		.loc 1 553 0
 971 000e 4FF00003 		mov	r3, #0
 972 0012 7B61     		str	r3, [r7, #20]
 554:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   uint32_t ErrorStatus = 0;
 973              		.loc 1 554 0
 974 0014 4FF00003 		mov	r3, #0
 975 0018 3B61     		str	r3, [r7, #16]
 555:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   uint32_t *TmpPtr;
 556:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   status_t Status = (uint32_t)DAVEApp_SUCCESS;
 976              		.loc 1 556 0
 977 001a 4FF00003 		mov	r3, #0
 978 001e FB61     		str	r3, [r7, #28]
 557:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   FUNCTION_ENTRY(GID_SDMMC00x, (uint32_t)SDMMC003_FUNCTION_ENTRY);
 558:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   /* Check for  No response type commands */
 559:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*<<<DD_SDMMC_nonAPI_8_1>>> */
 560:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   if (CommandPtr->CommandIndex == SDMMC003_GO_IDLE_STATE || \
 979              		.loc 1 560 0
 980 0020 FB68     		ldr	r3, [r7, #12]
 981 0022 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 982 0024 03F03F03 		and	r3, r3, #63
 983 0028 DBB2     		uxtb	r3, r3
 984 002a 002B     		cmp	r3, #0
 985 002c 06D0     		beq	.L47
 561:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       CommandPtr->CommandIndex == SDMMC003_GO_INACTIVE_STATE)
 986              		.loc 1 561 0 discriminator 1
 987 002e FB68     		ldr	r3, [r7, #12]
 988 0030 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 989 0032 03F03F03 		and	r3, r3, #63
 990 0036 DBB2     		uxtb	r3, r3
 560:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   if (CommandPtr->CommandIndex == SDMMC003_GO_IDLE_STATE || \
 991              		.loc 1 560 0 discriminator 1
 992 0038 0F2B     		cmp	r3, #15
 993 003a 03D1     		bne	.L48
 994              	.L47:
 562:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
 563:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     Status = (uint32_t)DAVEApp_SUCCESS;
 995              		.loc 1 563 0
 996 003c 4FF00003 		mov	r3, #0
 997 0040 FB61     		str	r3, [r7, #28]
 998 0042 89E0     		b	.L49
 999              	.L48:
 564:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   }
 565:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*<<<DD_SDMMC_nonAPI_8_2>>> */
 566:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   else
 567:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
 568:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     TmpPtr = (uint32_t *)ResponsePtr;
 1000              		.loc 1 568 0
 1001 0044 7B68     		ldr	r3, [r7, #4]
 1002 0046 BB61     		str	r3, [r7, #24]
 569:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     CardStatus = SDMMC->RESPONSE0;
 1003              		.loc 1 569 0
 1004 0048 4FF44043 		mov	r3, #49152
 1005 004c C4F60103 		movt	r3, 18433
 1006 0050 1B69     		ldr	r3, [r3, #16]
 1007 0052 7B61     		str	r3, [r7, #20]
 570:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Check Lock Status */
 571:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*<<<DD_SDMMC_nonAPI_8_3>>> */
 572:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC003_lGetCardLockState(CardStatus, CommandPtr->CommandIndex);
 1008              		.loc 1 572 0
 1009 0054 7A69     		ldr	r2, [r7, #20]
 1010 0056 FB68     		ldr	r3, [r7, #12]
 1011 0058 1B88     		ldrh	r3, [r3, #0]	@ movhi
 1012 005a C3F30523 		ubfx	r3, r3, #8, #6
 1013 005e DBB2     		uxtb	r3, r3
 1014 0060 1046     		mov	r0, r2
 1015 0062 1946     		mov	r1, r3
 1016 0064 FFF7FEFF 		bl	SDMMC003_lGetCardLockState
 573:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****    /* Check response type*/
 574:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     switch( ResponseType )
 1017              		.loc 1 574 0
 1018 0068 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1019 006a 062B     		cmp	r3, #6
 1020 006c 6FD8     		bhi	.L50
 1021 006e 01A2     		adr	r2, .L57
 1022 0070 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1023              		.align	2
 1024              	.L57:
 1025 0074 47010000 		.word	.L51+1
 1026 0078 91000000 		.word	.L52+1
 1027 007c A5000000 		.word	.L53+1
 1028 0080 CD000000 		.word	.L54+1
 1029 0084 17010000 		.word	.L55+1
 1030 0088 1F010000 		.word	.L56+1
 1031 008c 17010000 		.word	.L55+1
 1032              	.L52:
 575:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
 576:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Response R1*/
 577:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*<<<DD_SDMMC_nonAPI_8_4>>> */
 578:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       case SDMMC003_RESPONSE_R1:
 579:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         /* check the error bits in the response */
 580:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****          *TmpPtr = CardStatus;
 1033              		.loc 1 580 0
 1034 0090 7A69     		ldr	r2, [r7, #20]
 1035 0092 BB69     		ldr	r3, [r7, #24]
 1036 0094 1A60     		str	r2, [r3, #0]
 581:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*<<<DD_SDMMC_nonAPI_8_5>>> */
 582:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         Status = SDMMC003_lCheckErrorInResponse(&CardStatus);
 1037              		.loc 1 582 0
 1038 0096 07F11403 		add	r3, r7, #20
 1039 009a 1846     		mov	r0, r3
 1040 009c FFF7FEFF 		bl	SDMMC003_lCheckErrorInResponse
 1041 00a0 F861     		str	r0, [r7, #28]
 583:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         break;
 1042              		.loc 1 583 0
 1043 00a2 59E0     		b	.L49
 1044              	.L53:
 584:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Response R1b*/
 585:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*<<<DD_SDMMC_nonAPI_8_6>>> */
 586:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       case SDMMC003_RESPONSE_R1b:
 587:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         *TmpPtr = CardStatus;
 1045              		.loc 1 587 0
 1046 00a4 7A69     		ldr	r2, [r7, #20]
 1047 00a6 BB69     		ldr	r3, [r7, #24]
 1048 00a8 1A60     		str	r2, [r3, #0]
 588:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         /* check the error bits in the response */
 589:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****          Status = SDMMC003_lCheckErrorInResponse(&CardStatus);
 1049              		.loc 1 589 0
 1050 00aa 07F11403 		add	r3, r7, #20
 1051 00ae 1846     		mov	r0, r3
 1052 00b0 FFF7FEFF 		bl	SDMMC003_lCheckErrorInResponse
 1053 00b4 F861     		str	r0, [r7, #28]
 590:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****          if (Status != (uint32_t)DAVEApp_SUCCESS)
 1054              		.loc 1 590 0
 1055 00b6 FB69     		ldr	r3, [r7, #28]
 1056 00b8 002B     		cmp	r3, #0
 1057 00ba 4CD1     		bne	.L61
 1058              	.L58:
 591:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****          {
 592:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****            break;
 593:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****          }
 594:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** #if SDMMC_UVP_TEST
 595:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         if (Test_TriggerInterrupt.Trigger_TransferInterruptError == TRUE)
 596:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         {
 597:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****           SDMMC003_ISRContext.TransferFlag = 1;
 598:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****           SDMMC003_Handle.TransferInterruptError = SDMMC003_ERROR;
 599:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         }
 600:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** #endif  /* SDMMC_UVP_TEST*/
 601:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         /* Wait for transfer complete Interrupt */
 602:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*<<<DD_SDMMC_nonAPI_8_7>>> */
 603:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         Status = SDMMC003_lTransferDelay(SDMMC003_DELAY_IN_TRANSFER);
 1059              		.loc 1 603 0
 1060 00bc 4FF47A70 		mov	r0, #1000
 1061 00c0 FFF7FEFF 		bl	SDMMC003_lTransferDelay
 1062 00c4 F861     		str	r0, [r7, #28]
 604:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         if(Status != (uint32_t) DAVEApp_SUCCESS)
 1063              		.loc 1 604 0
 1064 00c6 FB69     		ldr	r3, [r7, #28]
 1065 00c8 002B     		cmp	r3, #0
 605:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         {
 606:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****           ERROR(GID_SDMMC00x, Status, 0, NULL);
 607:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****           break;
 1066              		.loc 1 607 0
 1067 00ca 45E0     		b	.L49
 1068              	.L54:
 608:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         }
 609:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** #if SDMMC_UVP_TEST
 610:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         if (Test_TriggerInterrupt.Trigger_TransferInterruptError == TRUE)
 611:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         {
 612:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****           /* Enable the Transfer Complete Status Interrupt */
 613:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****           SDMMC->EN_INT_STATUS_NORM |= SDMMC_EN_INT_STATUS_NORM_TX_COMPLETE_EN_Msk;
 614:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****           /*  Enable the Transfer Complete Signal Interrupt */
 615:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****           SDMMC->EN_INT_SIGNAL_NORM |= SDMMC_EN_INT_SIGNAL_NORM_TX_COMPLETE_EN_Msk;
 616:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         }
 617:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** #endif     /* SDMMC_UVP_TEST*/
 618:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         /* If busy status received successfully  in the data line for R1b */
 619:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*<<<DD_SDMMC_nonAPI_8_8>>> */
 620:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         break;
 621:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Response R2*/
 622:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*<<<DD_SDMMC_nonAPI_8_9>>> */
 623:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       case SDMMC003_RESPONSE_R2:
 624:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         /* Response register R0-R7 */
 625:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         *TmpPtr = CardStatus;
 1069              		.loc 1 625 0
 1070 00cc 7A69     		ldr	r2, [r7, #20]
 1071 00ce BB69     		ldr	r3, [r7, #24]
 1072 00d0 1A60     		str	r2, [r3, #0]
 626:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         TmpPtr++;
 1073              		.loc 1 626 0
 1074 00d2 BB69     		ldr	r3, [r7, #24]
 1075 00d4 03F10403 		add	r3, r3, #4
 1076 00d8 BB61     		str	r3, [r7, #24]
 627:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
 628:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         *TmpPtr = SDMMC->RESPONSE2;
 1077              		.loc 1 628 0
 1078 00da 4FF44043 		mov	r3, #49152
 1079 00de C4F60103 		movt	r3, 18433
 1080 00e2 5A69     		ldr	r2, [r3, #20]
 1081 00e4 BB69     		ldr	r3, [r7, #24]
 1082 00e6 1A60     		str	r2, [r3, #0]
 629:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         TmpPtr++;
 1083              		.loc 1 629 0
 1084 00e8 BB69     		ldr	r3, [r7, #24]
 1085 00ea 03F10403 		add	r3, r3, #4
 1086 00ee BB61     		str	r3, [r7, #24]
 630:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
 631:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         *TmpPtr = SDMMC->RESPONSE4;
 1087              		.loc 1 631 0
 1088 00f0 4FF44043 		mov	r3, #49152
 1089 00f4 C4F60103 		movt	r3, 18433
 1090 00f8 9A69     		ldr	r2, [r3, #24]
 1091 00fa BB69     		ldr	r3, [r7, #24]
 1092 00fc 1A60     		str	r2, [r3, #0]
 632:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         TmpPtr++;
 1093              		.loc 1 632 0
 1094 00fe BB69     		ldr	r3, [r7, #24]
 1095 0100 03F10403 		add	r3, r3, #4
 1096 0104 BB61     		str	r3, [r7, #24]
 633:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
 634:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         *TmpPtr = SDMMC->RESPONSE6;
 1097              		.loc 1 634 0
 1098 0106 4FF44043 		mov	r3, #49152
 1099 010a C4F60103 		movt	r3, 18433
 1100 010e DA69     		ldr	r2, [r3, #28]
 1101 0110 BB69     		ldr	r3, [r7, #24]
 1102 0112 1A60     		str	r2, [r3, #0]
 635:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         break;
 1103              		.loc 1 635 0
 1104 0114 20E0     		b	.L49
 1105              	.L55:
 636:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Response R3*/
 637:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*<<<DD_SDMMC_nonAPI_8_10>>> */
 638:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       case SDMMC003_RESPONSE_R3:
 639:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
 640:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Response R7*/
 641:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*<<<DD_SDMMC_nonAPI_8_11>>> */
 642:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       case SDMMC003_RESPONSE_R7:
 643:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         *TmpPtr = CardStatus;
 1106              		.loc 1 643 0
 1107 0116 7A69     		ldr	r2, [r7, #20]
 1108 0118 BB69     		ldr	r3, [r7, #24]
 1109 011a 1A60     		str	r2, [r3, #0]
 644:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****          break;
 1110              		.loc 1 644 0
 1111 011c 1CE0     		b	.L49
 1112              	.L56:
 645:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
 646:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Response R6*/
 647:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*<<<DD_SDMMC_nonAPI_8_12>>> */
 648:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       case SDMMC003_RESPONSE_R6:
 649:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         ErrorStatus  = CardStatus & SDMMC_RESPONSE0_RESPONSE0_Msk;
 1113              		.loc 1 649 0
 1114 011e 7B69     		ldr	r3, [r7, #20]
 1115 0120 4FEA0343 		lsl	r3, r3, #16
 1116 0124 4FEA1343 		lsr	r3, r3, #16
 1117 0128 3B61     		str	r3, [r7, #16]
 650:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         Status = SDMMC003_lCheckErrorInResponse(&ErrorStatus);
 1118              		.loc 1 650 0
 1119 012a 07F11003 		add	r3, r7, #16
 1120 012e 1846     		mov	r0, r3
 1121 0130 FFF7FEFF 		bl	SDMMC003_lCheckErrorInResponse
 1122 0134 F861     		str	r0, [r7, #28]
 651:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*<<<DD_SDMMC_nonAPI_8_13>>> */
 652:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         /* Read the 16bit RCA received in Response R1 register */
 653:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         *TmpPtr =(uint16_t)((CardStatus & SDMMC_RESPONSE0_RESPONSE1_Msk) >> \
 1123              		.loc 1 653 0
 1124 0136 7B69     		ldr	r3, [r7, #20]
 1125 0138 4FEA1343 		lsr	r3, r3, #16
 1126 013c 9BB2     		uxth	r3, r3
 1127 013e 1A46     		mov	r2, r3
 1128 0140 BB69     		ldr	r3, [r7, #24]
 1129 0142 1A60     		str	r2, [r3, #0]
 654:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                               SDMMC003_HC_RESPONSE1_BITPOS );
 655:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         break;
 1130              		.loc 1 655 0
 1131 0144 08E0     		b	.L49
 1132              	.L51:
 656:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
 657:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* No response*/
 658:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*<<<DD_SDMMC_nonAPI_8_14>>> */
 659:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       case SDMMC003_NO_RESPONSE:
 660:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         Status = DAVEApp_SUCCESS;
 1133              		.loc 1 660 0
 1134 0146 4FF00003 		mov	r3, #0
 1135 014a FB61     		str	r3, [r7, #28]
 661:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         break;
 1136              		.loc 1 661 0
 1137 014c 04E0     		b	.L49
 1138              	.L50:
 662:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
 663:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       default:
 664:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         Status = (uint32_t)SDMMC003_ERROR;
 1139              		.loc 1 664 0
 1140 014e 4FF00103 		mov	r3, #1
 1141 0152 FB61     		str	r3, [r7, #28]
 665:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         break;
 1142              		.loc 1 665 0
 1143 0154 00E0     		b	.L49
 1144              	.L61:
 592:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****            break;
 1145              		.loc 1 592 0
 1146 0156 00BF     		nop
 1147              	.L49:
 666:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     } /* End of " switch( ResponseType )"*/
 667:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   }/* End of " if (CommandPtr->CommandIndex == SDMMC003_GO_IDLE_STATE || 
 668:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                CommandPtr->CommandIndex == SDMMC003_GO_INACTIVE_STATE)"*/
 669:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   FUNCTION_EXIT(GID_SDMMC00x, (uint32_t)SDMMC003_FUNCTION_EXIT);
 670:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   return Status;
 1148              		.loc 1 670 0
 1149 0158 FB69     		ldr	r3, [r7, #28]
 671:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** }
 1150              		.loc 1 671 0
 1151 015a 1846     		mov	r0, r3
 1152 015c 07F12007 		add	r7, r7, #32
 1153 0160 BD46     		mov	sp, r7
 1154 0162 80BD     		pop	{r7, pc}
 1155              		.cfi_endproc
 1156              	.LFE126:
 1158              		.section	.text.SDMMC003_lSendCommand,"ax",%progbits
 1159              		.align	2
 1160              		.global	SDMMC003_lSendCommand
 1161              		.thumb
 1162              		.thumb_func
 1164              	SDMMC003_lSendCommand:
 1165              	.LFB127:
 672:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
 673:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*<<<DD_SDMMC_nonAPI_9>>> */
 674:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*
 675:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  * This function issues the command.
 676:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  */
 677:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** status_t SDMMC003_lSendCommand
 678:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** ( 
 679:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   const SDMMC003_CommandType *CommandPtr,
 680:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   uint32_t Argument,
 681:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   SDMMC003_ResponseType ResponseType,
 682:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   void *ResponsePtr
 683:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** )
 684:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** {
 1166              		.loc 1 684 0
 1167              		.cfi_startproc
 1168              		@ args = 0, pretend = 0, frame = 24
 1169              		@ frame_needed = 1, uses_anonymous_args = 0
 1170 0000 80B5     		push	{r7, lr}
 1171              	.LCFI29:
 1172              		.cfi_def_cfa_offset 8
 1173              		.cfi_offset 7, -8
 1174              		.cfi_offset 14, -4
 1175 0002 86B0     		sub	sp, sp, #24
 1176              	.LCFI30:
 1177              		.cfi_def_cfa_offset 32
 1178 0004 00AF     		add	r7, sp, #0
 1179              	.LCFI31:
 1180              		.cfi_def_cfa_register 7
 1181 0006 F860     		str	r0, [r7, #12]
 1182 0008 B960     		str	r1, [r7, #8]
 1183 000a 3B60     		str	r3, [r7, #0]
 1184 000c 1346     		mov	r3, r2
 1185 000e FB71     		strb	r3, [r7, #7]
 685:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   status_t Status = (uint32_t)SDMMC003_ERROR;
 1186              		.loc 1 685 0
 1187 0010 4FF00103 		mov	r3, #1
 1188 0014 7B61     		str	r3, [r7, #20]
 686:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   handle_t TimerId;
 687:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   SDMMC003_Handle.IssueAbort = 0UL;  
 1189              		.loc 1 687 0
 1190 0016 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 1191 001a C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 1192 001e 4FF00002 		mov	r2, #0
 1193 0022 DA72     		strb	r2, [r3, #11]
 688:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   FUNCTION_ENTRY(GID_SDMMC00x, (uint32_t)SDMMC003_FUNCTION_ENTRY);
 689:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   do
 690:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
 691:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC003_Handle.CommandInterruptError = SDMMC003_ERROR;
 1194              		.loc 1 691 0
 1195 0024 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 1196 0028 C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 1197 002c 4FF00102 		mov	r2, #1
 1198 0030 1A71     		strb	r2, [r3, #4]
 692:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC003_Handle.DataInterruptError = SDMMC003_ERROR;
 1199              		.loc 1 692 0
 1200 0032 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 1201 0036 C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 1202 003a 4FF00102 		mov	r2, #1
 1203 003e DA70     		strb	r2, [r3, #3]
 693:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Data or Command line free */
 694:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*<<<DD_SDMMC_nonAPI_9_1>>>*/
 695:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     Status = SDMMC003_lCheckDatCmdline(CommandPtr);
 1204              		.loc 1 695 0
 1205 0040 F868     		ldr	r0, [r7, #12]
 1206 0042 FFF7FEFF 		bl	SDMMC003_lCheckDatCmdline
 1207 0046 7861     		str	r0, [r7, #20]
 696:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if ((Status == (uint32_t)SDMMC003_DATA_LINE_BUSY) ||
 1208              		.loc 1 696 0
 1209 0048 7B69     		ldr	r3, [r7, #20]
 1210 004a 1B2B     		cmp	r3, #27
 1211 004c 79D0     		beq	.L63
 1212              		.loc 1 696 0 is_stmt 0 discriminator 1
 1213 004e 7B69     		ldr	r3, [r7, #20]
 1214 0050 1A2B     		cmp	r3, #26
 1215 0052 76D0     		beq	.L63
 697:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         (Status == (uint32_t)SDMMC003_CMD_LINE_BUSY))
 698:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
 699:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       break;
 700:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
 701:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Set argument register */
 702:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC->ARGUMENT1 = Argument;
 1216              		.loc 1 702 0 is_stmt 1
 1217 0054 4FF44043 		mov	r3, #49152
 1218 0058 C4F60103 		movt	r3, 18433
 1219 005c BA68     		ldr	r2, [r7, #8]
 1220 005e 9A60     		str	r2, [r3, #8]
 703:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Set command register */
 704:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC->COMMAND = (uint16_t)(*(uint16_t *)CommandPtr);
 1221              		.loc 1 704 0
 1222 0060 4FF44043 		mov	r3, #49152
 1223 0064 C4F60103 		movt	r3, 18433
 1224 0068 FA68     		ldr	r2, [r7, #12]
 1225 006a 1288     		ldrh	r2, [r2, #0]
 1226 006c DA81     		strh	r2, [r3, #14]	@ movhi
 705:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** #if SDMMC_UVP_TEST
 706:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if (Test_TriggerInterrupt.Trigger_CommandErrorInterrupt == TRUE)
 707:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
 708:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Forcefully trigger the Command Timeout Error Interrupt */
 709:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC->FORCE_EVENT_ERR_STATUS = 0x0001 ;
 710:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
 711:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if (Test_TriggerInterrupt.Trigger_EraseStartError == TRUE)
 712:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
 713:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         /* Forcefully trigger the Command Index Error Interrupt */
 714:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         SDMMC->FORCE_EVENT_ERR_STATUS = 0x0008 ;
 715:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
 716:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if (Test_TriggerInterrupt.Trigger_EraseEndError == TRUE)
 717:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
 718:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Forcefully trigger the Command Index Error Interrupt */
 719:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC->FORCE_EVENT_ERR_STATUS = 0x0008 ;
 720:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
 721:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if (Test_TriggerInterrupt.Trigger_Cmd55Error == TRUE)
 722:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
 723:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Forcefully trigger the Command Timeout Error Interrupt */
 724:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC->FORCE_EVENT_ERR_STATUS = 0x0001 ;
 725:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
 726:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if (Test_TriggerInterrupt.Trigger_Command42Error == TRUE)
 727:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
 728:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Test_TriggerInterrupt.Trigger_CommandErrorInterrupt = FALSE;
 729:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
 730:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** #endif  /*SDMMC_UVP_TEST*/   
 731:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* Blocking until any of the bit in the Interrupt Status Register gets set */
 732:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*<<<DD_SDMMC_nonAPI_9_2>>>*/
 733:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     TimerId = SDMMC003_lStartTimer(SDMMC003_DELAY_IN_COMMAND);
 1227              		.loc 1 733 0
 1228 006e 4FF47A70 		mov	r0, #1000
 1229 0072 FFF7FEFF 		bl	SDMMC003_lStartTimer
 1230 0076 3861     		str	r0, [r7, #16]
 734:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if(0 == TimerId)
 1231              		.loc 1 734 0
 1232 0078 3B69     		ldr	r3, [r7, #16]
 1233 007a 002B     		cmp	r3, #0
 1234 007c 03D1     		bne	.L64
 735:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
 736:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Status = (uint32_t) SDMMC003_START_TIMER_FAILED;
 1235              		.loc 1 736 0
 1236 007e 4FF02F03 		mov	r3, #47
 1237 0082 7B61     		str	r3, [r7, #20]
 737:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       ERROR(GID_SDMMC00x, Status, 0, NULL);    
 738:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       break;
 1238              		.loc 1 738 0
 1239 0084 5DE0     		b	.L63
 1240              	.L64:
 739:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
 740:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     do
 741:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
 742:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       if (SDMMC003_Handle.TimerExpire == 0)
 1241              		.loc 1 742 0
 1242 0086 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 1243 008a C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 1244 008e 9B7A     		ldrb	r3, [r3, #10]
 1245 0090 DBB2     		uxtb	r3, r3
 1246 0092 002B     		cmp	r3, #0
 1247 0094 08D0     		beq	.L71
 1248              	.L65:
 743:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       {
 744:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         ERROR(GID_SDMMC00x, SDMMC003_TIMEOUT_OCCURED, 0, NULL);
 745:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         break;
 746:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       }
 747:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     } while (SDMMC003_ISRContext.CmdFlag == 0);
 1249              		.loc 1 747 0
 1250 0096 40F20003 		movw	r3, #:lower16:SDMMC003_ISRContext
 1251 009a C0F20003 		movt	r3, #:upper16:SDMMC003_ISRContext
 1252 009e 9B78     		ldrb	r3, [r3, #2]
 1253 00a0 DBB2     		uxtb	r3, r3
 1254 00a2 002B     		cmp	r3, #0
 1255 00a4 EFD0     		beq	.L64
 1256 00a6 00E0     		b	.L66
 1257              	.L71:
 745:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         break;
 1258              		.loc 1 745 0
 1259 00a8 00BF     		nop
 1260              	.L66:
 748:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC003_ISRContext.CmdFlag = 0;
 1261              		.loc 1 748 0
 1262 00aa 40F20003 		movw	r3, #:lower16:SDMMC003_ISRContext
 1263 00ae C0F20003 		movt	r3, #:upper16:SDMMC003_ISRContext
 1264 00b2 4FF00002 		mov	r2, #0
 1265 00b6 9A70     		strb	r2, [r3, #2]
 749:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC003_lStopTimer(TimerId);
 1266              		.loc 1 749 0
 1267 00b8 3869     		ldr	r0, [r7, #16]
 1268 00ba FFF7FEFF 		bl	SDMMC003_lStopTimer
 750:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****    /* Check for any errors */
 751:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*<<<DD_SDMMC_nonAPI_9_3>>> */
 752:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if( SDMMC003_Handle.CommandInterruptError == SDMMC003_COMMAND_COMPLETE )
 1269              		.loc 1 752 0
 1270 00be 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 1271 00c2 C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 1272 00c6 1B79     		ldrb	r3, [r3, #4]
 1273 00c8 DBB2     		uxtb	r3, r3
 1274 00ca 1C2B     		cmp	r3, #28
 1275 00cc 07D1     		bne	.L67
 753:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
 754:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** #if SDMMC_UVP_TEST
 755:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       if(Test_TriggerInterrupt.Trigger_CommandResponseError == TRUE)
 756:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       {
 757:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         Status = (uint32_t)SDMMC003_ERROR;
 758:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         break;
 759:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       }
 760:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** #endif
 761:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Read response received. */
 762:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*<<<DD_SDMMC_nonAPI_9_4>>>*/
 763:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Status = SDMMC003_lReadResponse(CommandPtr,ResponseType,ResponsePtr);
 1276              		.loc 1 763 0
 1277 00ce FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1278 00d0 F868     		ldr	r0, [r7, #12]
 1279 00d2 1946     		mov	r1, r3
 1280 00d4 3A68     		ldr	r2, [r7, #0]
 1281 00d6 FFF7FEFF 		bl	SDMMC003_lReadResponse
 1282 00da 7861     		str	r0, [r7, #20]
 764:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       break;
 1283              		.loc 1 764 0
 1284 00dc 31E0     		b	.L63
 1285              	.L67:
 765:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
 766:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*<<<DD_SDMMC_nonAPI_9_5>>>*/
 767:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* For Cmd8, check for  Command Timeout Interrupt */
 768:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     else if ((CommandPtr->CommandIndex == SDMMC003_SD_SEND_IF_COND) &&
 1286              		.loc 1 768 0
 1287 00de FB68     		ldr	r3, [r7, #12]
 1288 00e0 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1289 00e2 03F03F03 		and	r3, r3, #63
 1290 00e6 DBB2     		uxtb	r3, r3
 1291 00e8 082B     		cmp	r3, #8
 1292 00ea 0BD1     		bne	.L68
 769:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****              (SDMMC003_Handle.CommandInterruptError == \
 1293              		.loc 1 769 0 discriminator 1
 1294 00ec 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 1295 00f0 C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 1296 00f4 1B79     		ldrb	r3, [r3, #4]
 1297 00f6 DBB2     		uxtb	r3, r3
 768:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     else if ((CommandPtr->CommandIndex == SDMMC003_SD_SEND_IF_COND) &&
 1298              		.loc 1 768 0 discriminator 1
 1299 00f8 022B     		cmp	r3, #2
 1300 00fa 03D1     		bne	.L68
 770:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                              SDMMC003_COMMAND_TIMEOUT_ERROR))
 771:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
 772:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Status = (uint32_t)SDMMC003_COMMAND_TIMEOUT_ERROR;
 1301              		.loc 1 772 0
 1302 00fc 4FF00203 		mov	r3, #2
 1303 0100 7B61     		str	r3, [r7, #20]
 773:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       break;
 1304              		.loc 1 773 0
 1305 0102 1EE0     		b	.L63
 1306              	.L68:
 774:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
 775:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** #if SDMMC_UVP_TEST
 776:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if (Test_TriggerInterrupt.Trigger_CommandErrorInterrupt == TRUE)
 777:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
 778:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Enable the Command Complete Status Interrupt */
 779:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC->EN_INT_STATUS_NORM |= SDMMC_EN_INT_STATUS_NORM_CMD_COMPLETE_EN_Msk;
 780:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Enable the Command Complete Signal Interrupt */
 781:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC->EN_INT_SIGNAL_NORM |= SDMMC_EN_INT_SIGNAL_NORM_CMD_COMPLETE_EN_Msk;
 782:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC->EN_INT_STATUS_NORM |= (SDMMC_EN_INT_STATUS_NORM_BUFF_READ_READY_EN_Msk);
 783:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC->EN_INT_SIGNAL_NORM |= (SDMMC_EN_INT_STATUS_NORM_BUFF_READ_READY_EN_Msk);
 784:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
 785:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC->EN_INT_STATUS_NORM |= (SDMMC_EN_INT_STATUS_NORM_BUFF_WRITE_READY_EN_Msk);
 786:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC->EN_INT_SIGNAL_NORM |= (SDMMC_EN_INT_STATUS_NORM_BUFF_WRITE_READY_EN_Msk);
 787:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
 788:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC->EN_INT_STATUS_NORM |= (SDMMC_EN_INT_STATUS_NORM_TX_COMPLETE_EN_Msk);
 789:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC->EN_INT_SIGNAL_NORM |= (SDMMC_EN_INT_SIGNAL_NORM_TX_COMPLETE_EN_Msk);
 790:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
 791:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if (Test_TriggerInterrupt.Trigger_Cmd55Error == TRUE)
 792:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
 793:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         /* Enable the Command Complete Status Interrupt */
 794:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC->EN_INT_STATUS_NORM |= SDMMC_EN_INT_STATUS_NORM_CMD_COMPLETE_EN_Msk;
 795:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Enable the Command Complete Signal Interrupt */
 796:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC->EN_INT_SIGNAL_NORM |= SDMMC_EN_INT_SIGNAL_NORM_CMD_COMPLETE_EN_Msk;
 797:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
 798:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****        SDMMC->EN_INT_STATUS_NORM |= (SDMMC_EN_INT_STATUS_NORM_BUFF_READ_READY_EN_Msk);
 799:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC->EN_INT_SIGNAL_NORM |= (SDMMC_EN_INT_STATUS_NORM_BUFF_READ_READY_EN_Msk);
 800:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
 801:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC->EN_INT_STATUS_NORM |= (SDMMC_EN_INT_STATUS_NORM_BUFF_WRITE_READY_EN_Msk);
 802:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC->EN_INT_SIGNAL_NORM |= (SDMMC_EN_INT_STATUS_NORM_BUFF_WRITE_READY_EN_Msk);
 803:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
 804:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC->EN_INT_STATUS_NORM |= (SDMMC_EN_INT_STATUS_NORM_TX_COMPLETE_EN_Msk);
 805:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC->EN_INT_SIGNAL_NORM |= (SDMMC_EN_INT_SIGNAL_NORM_TX_COMPLETE_EN_Msk);
 806:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
 807:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if (Test_TriggerInterrupt.Trigger_Command42Error == TRUE)
 808:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
 809:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Enable the Command Complete Status Interrupt */
 810:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC->EN_INT_STATUS_NORM |= SDMMC_EN_INT_STATUS_NORM_CMD_COMPLETE_EN_Msk;
 811:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Enable the Command Complete Signal Interrupt */
 812:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC->EN_INT_SIGNAL_NORM |= SDMMC_EN_INT_SIGNAL_NORM_CMD_COMPLETE_EN_Msk;
 813:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
 814:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
 815:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if (Test_TriggerInterrupt.Trigger_EraseEndError == TRUE)
 816:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
 817:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Enable the Command Complete Status Interrupt */
 818:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC->EN_INT_STATUS_NORM |= SDMMC_EN_INT_STATUS_NORM_CMD_COMPLETE_EN_Msk;
 819:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Enable the Command Complete Signal Interrupt */
 820:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC->EN_INT_SIGNAL_NORM |= SDMMC_EN_INT_SIGNAL_NORM_CMD_COMPLETE_EN_Msk;
 821:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
 822:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if (Test_TriggerInterrupt.Trigger_EraseStartError == TRUE)
 823:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
 824:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Enable the Command Complete Status Interrupt */
 825:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC->EN_INT_STATUS_NORM |=  SDMMC_EN_INT_STATUS_NORM_CMD_COMPLETE_EN_Msk;
 826:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         /* Disable the Command Complete Signal Interrupt */
 827:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC->EN_INT_SIGNAL_NORM |=  SDMMC_EN_INT_SIGNAL_NORM_CMD_COMPLETE_EN_Msk ;
 828:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
 829:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** #endif  /*SDMMC_UVP_TEST*/
 830:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
 831:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** #if SDMMC_UVP_TEST
 832:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if (Test_TriggerInterrupt.Trigger_TC8Error == TRUE)
 833:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
 834:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Test_TriggerInterrupt.Trigger_CommandErrorInterrupt = FALSE;
 835:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
 836:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if (Test_TriggerInterrupt.Trigger_TC10Error == TRUE)
 837:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
 838:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Test_TriggerInterrupt.Trigger_CommandErrorInterrupt = FALSE;
 839:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
 840:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if (Test_TriggerInterrupt.Trigger_TC13Error == TRUE)
 841:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
 842:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Test_TriggerInterrupt.Trigger_CommandErrorInterrupt = FALSE;
 843:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
 844:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if (Test_TriggerInterrupt.Trigger_TC17Error == TRUE)
 845:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
 846:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Test_TriggerInterrupt.Trigger_CommandErrorInterrupt = FALSE;
 847:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
 848:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if (Test_TriggerInterrupt.Trigger_TC20Error == TRUE)
 849:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
 850:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Test_TriggerInterrupt.Trigger_CommandErrorInterrupt = FALSE;
 851:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
 852:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** #endif /* SDMMC_UVP_TEST  */
 853:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*<<<DD_SDMMC_nonAPI_9_6>>>*/
 854:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if (CommandPtr->DataPresentSelect == 1)
 1307              		.loc 1 854 0
 1308 0104 FB68     		ldr	r3, [r7, #12]
 1309 0106 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1310 0108 03F02003 		and	r3, r3, #32
 1311 010c DBB2     		uxtb	r3, r3
 1312 010e 002B     		cmp	r3, #0
 1313 0110 06D0     		beq	.L69
 855:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
 856:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC003_Handle.IssueAbort = 1UL;
 1314              		.loc 1 856 0
 1315 0112 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 1316 0116 C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 1317 011a 4FF00102 		mov	r2, #1
 1318 011e DA72     		strb	r2, [r3, #11]
 1319              	.L69:
 857:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }    
 858:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Error Recovery for the failed command  */
 859:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     Status = SDMMC003_lErrorInterruptRecovery( \
 1320              		.loc 1 859 0
 1321 0120 40F20003 		movw	r3, #:lower16:SDMMC003_ISRContext
 1322 0124 C0F20003 		movt	r3, #:upper16:SDMMC003_ISRContext
 1323 0128 1B88     		ldrh	r3, [r3, #0]	@ movhi
 1324 012a 9AB2     		uxth	r2, r3
 1325 012c 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 1326 0130 C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 1327 0134 DB7A     		ldrb	r3, [r3, #11]
 1328 0136 DBB2     		uxtb	r3, r3
 1329 0138 1046     		mov	r0, r2
 1330 013a 1946     		mov	r1, r3
 1331 013c FFF7FEFF 		bl	SDMMC003_lErrorInterruptRecovery
 1332 0140 7861     		str	r0, [r7, #20]
 1333              	.L63:
 860:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                    SDMMC003_ISRContext.InterruptStatusShadow, \
 861:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                    SDMMC003_Handle.IssueAbort);
 862:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   } while(0);
 863:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   FUNCTION_EXIT(GID_SDMMC00x, (uint32_t)SDMMC003_FUNCTION_EXIT);
 864:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   return Status;
 1334              		.loc 1 864 0
 1335 0142 7B69     		ldr	r3, [r7, #20]
 865:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** }
 1336              		.loc 1 865 0
 1337 0144 1846     		mov	r0, r3
 1338 0146 07F11807 		add	r7, r7, #24
 1339 014a BD46     		mov	sp, r7
 1340 014c 80BD     		pop	{r7, pc}
 1341              		.cfi_endproc
 1342              	.LFE127:
 1344 014e 00BF     		.section	.text.SDMMC003_lSetVoltageWindow,"ax",%progbits
 1345              		.align	2
 1346              		.global	SDMMC003_lSetVoltageWindow
 1347              		.thumb
 1348              		.thumb_func
 1350              	SDMMC003_lSetVoltageWindow:
 1351              	.LFB128:
 866:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
 867:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*<<<DD_SDMMC_nonAPI_10>>> */
 868:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*
 869:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  * This function sets the voltage window in OCR register
 870:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  */
 871:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** status_t  SDMMC003_lSetVoltageWindow()
 872:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** {
 1352              		.loc 1 872 0
 1353              		.cfi_startproc
 1354              		@ args = 0, pretend = 0, frame = 16
 1355              		@ frame_needed = 1, uses_anonymous_args = 0
 1356 0000 80B5     		push	{r7, lr}
 1357              	.LCFI32:
 1358              		.cfi_def_cfa_offset 8
 1359              		.cfi_offset 7, -8
 1360              		.cfi_offset 14, -4
 1361 0002 84B0     		sub	sp, sp, #16
 1362              	.LCFI33:
 1363              		.cfi_def_cfa_offset 24
 1364 0004 00AF     		add	r7, sp, #0
 1365              	.LCFI34:
 1366              		.cfi_def_cfa_register 7
 873:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   status_t Status = (uint32_t)SDMMC003_ERROR;
 1367              		.loc 1 873 0
 1368 0006 4FF00103 		mov	r3, #1
 1369 000a FB60     		str	r3, [r7, #12]
 874:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   uint32_t CardStatus = 0;
 1370              		.loc 1 874 0
 1371 000c 4FF00003 		mov	r3, #0
 1372 0010 3B60     		str	r3, [r7, #0]
 875:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   uint32_t Argument = 0;
 1373              		.loc 1 875 0
 1374 0012 4FF00003 		mov	r3, #0
 1375 0016 BB60     		str	r3, [r7, #8]
 876:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   uint32_t LoopCount= 0;
 1376              		.loc 1 876 0
 1377 0018 4FF00003 		mov	r3, #0
 1378 001c 7B60     		str	r3, [r7, #4]
 877:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   FUNCTION_ENTRY(GID_SDMMC00x, (uint32_t)SDMMC003_FUNCTION_ENTRY);
 878:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_10_1>>> */
 879:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   /* For Standard Capacity Card  */
 880:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   if (SDMMC003_Handle.f8 == 0)
 1379              		.loc 1 880 0
 1380 001e 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 1381 0022 C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 1382 0026 5B7A     		ldrb	r3, [r3, #9]
 1383 0028 DBB2     		uxtb	r3, r3
 1384 002a 002B     		cmp	r3, #0
 1385 002c 03D1     		bne	.L73
 881:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
 882:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Set HCS = 0  */
 883:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     Argument = SDMMC003_SD_ACMD41_F80_ARG;
 1386              		.loc 1 883 0
 1387 002e 4FF48013 		mov	r3, #1048576
 1388 0032 BB60     		str	r3, [r7, #8]
 1389 0034 04E0     		b	.L74
 1390              	.L73:
 884:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   }
 885:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_10_2>>> */
 886:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   /* For High Capacity Card */
 887:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   else
 888:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
 889:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Set  HCS = 1 */
 890:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     Argument = SDMMC003_SD_ACMD41_F81_ARG;
 1391              		.loc 1 890 0
 1392 0036 4FF00003 		mov	r3, #0
 1393 003a C4F21003 		movt	r3, 16400
 1394 003e BB60     		str	r3, [r7, #8]
 1395              	.L74:
 891:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   }
 892:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   do
 893:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
 894:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /*Send Command55 for Application Specific Command with default RCA as 0*/
 895:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     Status = SDMMC003_lSendCommand( &(SDMMC003_COMMON_COMMAND(55)), \
 1396              		.loc 1 895 0
 1397 0040 40F20003 		movw	r3, #:lower16:SDMMC003_SDHashTable
 1398 0044 C0F20003 		movt	r3, #:upper16:SDMMC003_SDHashTable
 1399 0048 93F83730 		ldrb	r3, [r3, #55]	@ zero_extendqisi2
 1400 004c 4FEA4302 		lsl	r2, r3, #1
 1401 0050 40F20003 		movw	r3, #:lower16:SDMMC003_Command
 1402 0054 C0F20003 		movt	r3, #:upper16:SDMMC003_Command
 1403 0058 D218     		adds	r2, r2, r3
 896:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                      SDMMC003_ARGUMENT0, SDMMC003_RESPONSE_R1,\
 897:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                      &CardStatus);
 1404              		.loc 1 897 0
 1405 005a 3B46     		mov	r3, r7
 895:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     Status = SDMMC003_lSendCommand( &(SDMMC003_COMMON_COMMAND(55)), \
 1406              		.loc 1 895 0
 1407 005c 1046     		mov	r0, r2
 1408 005e 4FF00001 		mov	r1, #0
 1409 0062 4FF00102 		mov	r2, #1
 1410 0066 FFF7FEFF 		bl	SDMMC003_lSendCommand
 1411 006a F860     		str	r0, [r7, #12]
 898:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_10_3>>> */
 899:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if (Status != (uint32_t)DAVEApp_SUCCESS)
 1412              		.loc 1 899 0
 1413 006c FB68     		ldr	r3, [r7, #12]
 1414 006e 002B     		cmp	r3, #0
 1415 0070 38D1     		bne	.L79
 1416              	.L75:
 900:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
 901:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       break;
 902:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
 903:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* Send ACMD41 to Set the card's voltage window */
 904:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     Status = SDMMC003_lSendCommand( &(SDMMC003_SD_COMMAND(62)), Argument,\
 1417              		.loc 1 904 0
 1418 0072 40F20003 		movw	r3, #:lower16:SDMMC003_SDHashTable
 1419 0076 C0F20003 		movt	r3, #:upper16:SDMMC003_SDHashTable
 1420 007a 93F83E30 		ldrb	r3, [r3, #62]	@ zero_extendqisi2
 1421 007e 4FEA4302 		lsl	r2, r3, #1
 1422 0082 40F20003 		movw	r3, #:lower16:SDMMC003_Command
 1423 0086 C0F20003 		movt	r3, #:upper16:SDMMC003_Command
 1424 008a D318     		adds	r3, r2, r3
 1425 008c 1846     		mov	r0, r3
 1426 008e B968     		ldr	r1, [r7, #8]
 1427 0090 4FF00402 		mov	r2, #4
 1428 0094 40F20003 		movw	r3, #:lower16:SDMMC003_CardInfo
 1429 0098 C0F20003 		movt	r3, #:upper16:SDMMC003_CardInfo
 1430 009c FFF7FEFF 		bl	SDMMC003_lSendCommand
 1431 00a0 F860     		str	r0, [r7, #12]
 905:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                   SDMMC003_RESPONSE_R3,&(SDMMC003_CardInfo.Ocr));
 906:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_10_4>>> */
 907:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if (Status != (uint32_t)DAVEApp_SUCCESS && \
 1432              		.loc 1 907 0
 1433 00a2 FB68     		ldr	r3, [r7, #12]
 1434 00a4 002B     		cmp	r3, #0
 1435 00a6 02D0     		beq	.L77
 1436              		.loc 1 907 0 is_stmt 0 discriminator 1
 1437 00a8 FB68     		ldr	r3, [r7, #12]
 1438 00aa 122B     		cmp	r3, #18
 1439 00ac 1CD1     		bne	.L80
 1440              	.L77:
 908:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****        (Status != (uint32_t)SDMMC003_ILLEGAL_COMMAND_ERROR))
 909:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
 910:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       break;
 911:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
 912:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     Status = (uint32_t)DAVEApp_SUCCESS;
 1441              		.loc 1 912 0 is_stmt 1
 1442 00ae 4FF00003 		mov	r3, #0
 1443 00b2 FB60     		str	r3, [r7, #12]
 913:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Cards takes some time to set power status bit. Card must repsond 
 914:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     within 1 sec. */
 915:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Timeout of 10ms.*/
 916:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC003_lDelay(SDMMC003_CARD_POWER_DELAY);
 1444              		.loc 1 916 0
 1445 00b4 4FF01400 		mov	r0, #20
 1446 00b8 FFF7FEFF 		bl	SDMMC003_lDelay
 917:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* Check for busy bit in the OCR content i.e response */
 918:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   } while(!(SDMMC003_CardInfo.Ocr & SDMMC003_OCR_POWER_STATUS_BITMASK) &&\
 1447              		.loc 1 918 0
 1448 00bc 40F20003 		movw	r3, #:lower16:SDMMC003_CardInfo
 1449 00c0 C0F20003 		movt	r3, #:upper16:SDMMC003_CardInfo
 1450 00c4 1B68     		ldr	r3, [r3, #0]
 1451 00c6 002B     		cmp	r3, #0
 1452 00c8 0FDB     		blt	.L76
 919:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****            ( (LoopCount++)<50 ) );
 1453              		.loc 1 919 0 discriminator 1
 1454 00ca 7B68     		ldr	r3, [r7, #4]
 1455 00cc 312B     		cmp	r3, #49
 1456 00ce 8CBF     		ite	hi
 1457 00d0 0023     		movhi	r3, #0
 1458 00d2 0123     		movls	r3, #1
 1459 00d4 DBB2     		uxtb	r3, r3
 1460 00d6 7A68     		ldr	r2, [r7, #4]
 1461 00d8 02F10102 		add	r2, r2, #1
 1462 00dc 7A60     		str	r2, [r7, #4]
 918:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   } while(!(SDMMC003_CardInfo.Ocr & SDMMC003_OCR_POWER_STATUS_BITMASK) &&\
 1463              		.loc 1 918 0 discriminator 1
 1464 00de 002B     		cmp	r3, #0
 1465 00e0 AED1     		bne	.L74
 1466 00e2 02E0     		b	.L76
 1467              	.L79:
 901:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       break;
 1468              		.loc 1 901 0
 1469 00e4 00BF     		nop
 1470 00e6 00E0     		b	.L76
 1471              	.L80:
 910:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       break;
 1472              		.loc 1 910 0
 1473 00e8 00BF     		nop
 1474              	.L76:
 920:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   FUNCTION_EXIT(GID_SDMMC00x, (uint32_t)SDMMC003_FUNCTION_EXIT);
 921:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   return Status;
 1475              		.loc 1 921 0
 1476 00ea FB68     		ldr	r3, [r7, #12]
 922:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** }
 1477              		.loc 1 922 0
 1478 00ec 1846     		mov	r0, r3
 1479 00ee 07F11007 		add	r7, r7, #16
 1480 00f2 BD46     		mov	sp, r7
 1481 00f4 80BD     		pop	{r7, pc}
 1482              		.cfi_endproc
 1483              	.LFE128:
 1485 00f6 00BF     		.section	.text.SDMMC003_lQueryOperatingCond,"ax",%progbits
 1486              		.align	2
 1487              		.global	SDMMC003_lQueryOperatingCond
 1488              		.thumb
 1489              		.thumb_func
 1491              	SDMMC003_lQueryOperatingCond:
 1492              	.LFB129:
 923:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
 924:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*<<<DD_SDMMC_nonAPI_11>>> */
 925:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*
 926:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  * This function queries Voltage operating condition of the card.
 927:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  */
 928:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** status_t SDMMC003_lQueryOperatingCond()
 929:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** {
 1493              		.loc 1 929 0
 1494              		.cfi_startproc
 1495              		@ args = 0, pretend = 0, frame = 8
 1496              		@ frame_needed = 1, uses_anonymous_args = 0
 1497 0000 80B5     		push	{r7, lr}
 1498              	.LCFI35:
 1499              		.cfi_def_cfa_offset 8
 1500              		.cfi_offset 7, -8
 1501              		.cfi_offset 14, -4
 1502 0002 82B0     		sub	sp, sp, #8
 1503              	.LCFI36:
 1504              		.cfi_def_cfa_offset 16
 1505 0004 00AF     		add	r7, sp, #0
 1506              	.LCFI37:
 1507              		.cfi_def_cfa_register 7
 930:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   uint32_t ResponseData = 0;
 1508              		.loc 1 930 0
 1509 0006 4FF00003 		mov	r3, #0
 1510 000a 3B60     		str	r3, [r7, #0]
 931:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   status_t Status;
 932:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   FUNCTION_ENTRY(GID_SDMMC00x, (uint32_t)SDMMC003_FUNCTION_ENTRY);
 933:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   /*Query voltage operating condition i.e. cmd8 */
 934:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   Status = SDMMC003_lSendCommand(&(SDMMC003_SD_COMMAND(8)),SDMMC003_SD_CMD8_ARG,\
 1511              		.loc 1 934 0
 1512 000c 40F20003 		movw	r3, #:lower16:SDMMC003_SDHashTable
 1513 0010 C0F20003 		movt	r3, #:upper16:SDMMC003_SDHashTable
 1514 0014 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 1515 0016 4FEA4302 		lsl	r2, r3, #1
 1516 001a 40F20003 		movw	r3, #:lower16:SDMMC003_Command
 1517 001e C0F20003 		movt	r3, #:upper16:SDMMC003_Command
 1518 0022 D218     		adds	r2, r2, r3
 935:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                   SDMMC003_RESPONSE_R7, &ResponseData );
 1519              		.loc 1 935 0
 1520 0024 3B46     		mov	r3, r7
 934:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   Status = SDMMC003_lSendCommand(&(SDMMC003_SD_COMMAND(8)),SDMMC003_SD_CMD8_ARG,\
 1521              		.loc 1 934 0
 1522 0026 1046     		mov	r0, r2
 1523 0028 4FF4D571 		mov	r1, #426
 1524 002c 4FF00602 		mov	r2, #6
 1525 0030 FFF7FEFF 		bl	SDMMC003_lSendCommand
 1526 0034 7860     		str	r0, [r7, #4]
 936:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   do
 937:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
 938:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*<<<DD_SDMMC_nonAPI_11_1>>> */
 939:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if (Status != (uint32_t)DAVEApp_SUCCESS )
 1527              		.loc 1 939 0
 1528 0036 7B68     		ldr	r3, [r7, #4]
 1529 0038 002B     		cmp	r3, #0
 1530 003a 12D0     		beq	.L82
 940:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
 941:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*<<<DD_SDMMC_nonAPI_11_2>>> */
 942:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /*  No response is received for Standard Capacity SD cards or MMC card. */
 943:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       if (SDMMC003_Handle.CommandInterruptError ==SDMMC003_COMMAND_TIMEOUT_ERROR)
 1531              		.loc 1 943 0
 1532 003c 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 1533 0040 C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 1534 0044 1B79     		ldrb	r3, [r3, #4]
 1535 0046 DBB2     		uxtb	r3, r3
 1536 0048 022B     		cmp	r3, #2
 1537 004a 26D1     		bne	.L88
 944:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       {
 945:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         SDMMC003_Handle.f8 = 0;
 1538              		.loc 1 945 0
 1539 004c 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 1540 0050 C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 1541 0054 4FF00002 		mov	r2, #0
 1542 0058 5A72     		strb	r2, [r3, #9]
 946:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         Status = (uint32_t)DAVEApp_SUCCESS;
 1543              		.loc 1 946 0
 1544 005a 4FF00003 		mov	r3, #0
 1545 005e 7B60     		str	r3, [r7, #4]
 1546 0060 1CE0     		b	.L84
 1547              	.L82:
 947:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       }
 948:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /*<<<DD_SDMMC_nonAPI_11_3>>> */
 949:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       else
 950:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       {
 951:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         break;
 952:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       }
 953:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
 954:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Response received i.e. High Capacity cards. */
 955:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*<<<DD_SDMMC_nonAPI_11_4>>> */
 956:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     else
 957:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
 958:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*<<<DD_SDMMC_nonAPI_11_5>>> */
 959:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Check whether Check pattern matches in the Argument and Response */
 960:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       if (((ResponseData >> SDMMC003_SD_CMD8_CHECK_PATTERN_BITPOS) &\
 1548              		.loc 1 960 0
 1549 0062 3B68     		ldr	r3, [r7, #0]
 1550 0064 DBB2     		uxtb	r3, r3
 1551 0066 AA2B     		cmp	r3, #170
 1552 0068 03D0     		beq	.L85
 961:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****              SDMMC003_SD_CMD8_CHECK_PATTERN_BITMASK) != \
 962:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****             (SDMMC003_SD_CMD8_CHECK_PATTERN_VALUE)
 963:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****          )
 964:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       {
 965:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         Status  = (uint32_t)SDMMC003_BAD_RESPONSE;
 1553              		.loc 1 965 0
 1554 006a 4FF01903 		mov	r3, #25
 1555 006e 7B60     		str	r3, [r7, #4]
 966:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         break;
 1556              		.loc 1 966 0
 1557 0070 14E0     		b	.L84
 1558              	.L85:
 967:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       }
 968:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*<<<DD_SDMMC_nonAPI_11_6>>> */
 969:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Check the Voltage Supplied is Accepted by the card in the response  */
 970:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       if( ((uint8_t)( ResponseData >> SDMMC003_SD_CMD8_VHS_BITPOS) &\
 1559              		.loc 1 970 0
 1560 0072 3B68     		ldr	r3, [r7, #0]
 1561 0074 4FEA1323 		lsr	r3, r3, #8
 1562 0078 DBB2     		uxtb	r3, r3
 1563 007a 03F00F03 		and	r3, r3, #15
 1564 007e 012B     		cmp	r3, #1
 1565 0080 03D0     		beq	.L86
 971:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                      SDMMC003_SD_CMD8_VHS_BITMASK)!=  \
 972:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                      ( SDMMC003_SD_VHS_PATTERN_2_7_3_6_VALUE ) )
 973:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       {
 974:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         Status = (uint32_t)SDMMC003_BAD_RESPONSE;
 1566              		.loc 1 974 0
 1567 0082 4FF01903 		mov	r3, #25
 1568 0086 7B60     		str	r3, [r7, #4]
 975:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         break;
 1569              		.loc 1 975 0
 1570 0088 08E0     		b	.L84
 1571              	.L86:
 976:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       }
 977:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Set Flag f8 */
 978:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC003_Handle.f8 = 1;
 1572              		.loc 1 978 0
 1573 008a 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 1574 008e C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 1575 0092 4FF00102 		mov	r2, #1
 1576 0096 5A72     		strb	r2, [r3, #9]
 1577 0098 00E0     		b	.L84
 1578              	.L88:
 951:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         break;
 1579              		.loc 1 951 0
 1580 009a 00BF     		nop
 1581              	.L84:
 979:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
 980:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   } while(0);
 981:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   FUNCTION_EXIT(GID_SDMMC00x, (uint32_t)SDMMC003_FUNCTION_EXIT);
 982:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   return Status;
 1582              		.loc 1 982 0
 1583 009c 7B68     		ldr	r3, [r7, #4]
 983:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** }
 1584              		.loc 1 983 0
 1585 009e 1846     		mov	r0, r3
 1586 00a0 07F10807 		add	r7, r7, #8
 1587 00a4 BD46     		mov	sp, r7
 1588 00a6 80BD     		pop	{r7, pc}
 1589              		.cfi_endproc
 1590              	.LFE129:
 1592              		.section	.text.SDMMC003_lQueryVoltage,"ax",%progbits
 1593              		.align	2
 1594              		.global	SDMMC003_lQueryVoltage
 1595              		.thumb
 1596              		.thumb_func
 1598              	SDMMC003_lQueryVoltage:
 1599              	.LFB130:
 984:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
 985:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*<<<DD_SDMMC_nonAPI_12>>> */
 986:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*
 987:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  * This function queries voltage supported from the card.
 988:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  */
 989:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** status_t SDMMC003_lQueryVoltage (uint32_t Argument)
 990:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** {
 1600              		.loc 1 990 0
 1601              		.cfi_startproc
 1602              		@ args = 0, pretend = 0, frame = 16
 1603              		@ frame_needed = 1, uses_anonymous_args = 0
 1604 0000 80B5     		push	{r7, lr}
 1605              	.LCFI38:
 1606              		.cfi_def_cfa_offset 8
 1607              		.cfi_offset 7, -8
 1608              		.cfi_offset 14, -4
 1609 0002 84B0     		sub	sp, sp, #16
 1610              	.LCFI39:
 1611              		.cfi_def_cfa_offset 24
 1612 0004 00AF     		add	r7, sp, #0
 1613              	.LCFI40:
 1614              		.cfi_def_cfa_register 7
 1615 0006 7860     		str	r0, [r7, #4]
 991:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   uint32_t CardStatus = 0;
 1616              		.loc 1 991 0
 1617 0008 4FF00003 		mov	r3, #0
 1618 000c BB60     		str	r3, [r7, #8]
 992:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   status_t Status;
 993:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   FUNCTION_ENTRY(GID_SDMMC00x, (uint32_t)SDMMC003_FUNCTION_ENTRY);
 994:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   do
 995:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
 996:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Send Command55 for Application Specific Command with default RCA as 0*/
 997:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     Status = SDMMC003_lSendCommand( &(SDMMC003_COMMON_COMMAND(55)), Argument,\
 1619              		.loc 1 997 0
 1620 000e 40F20003 		movw	r3, #:lower16:SDMMC003_SDHashTable
 1621 0012 C0F20003 		movt	r3, #:upper16:SDMMC003_SDHashTable
 1622 0016 93F83730 		ldrb	r3, [r3, #55]	@ zero_extendqisi2
 1623 001a 4FEA4302 		lsl	r2, r3, #1
 1624 001e 40F20003 		movw	r3, #:lower16:SDMMC003_Command
 1625 0022 C0F20003 		movt	r3, #:upper16:SDMMC003_Command
 1626 0026 D218     		adds	r2, r2, r3
 998:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                     SDMMC003_RESPONSE_R1, &CardStatus);
 1627              		.loc 1 998 0
 1628 0028 07F10803 		add	r3, r7, #8
 997:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     Status = SDMMC003_lSendCommand( &(SDMMC003_COMMON_COMMAND(55)), Argument,\
 1629              		.loc 1 997 0
 1630 002c 1046     		mov	r0, r2
 1631 002e 7968     		ldr	r1, [r7, #4]
 1632 0030 4FF00102 		mov	r2, #1
 1633 0034 FFF7FEFF 		bl	SDMMC003_lSendCommand
 1634 0038 F860     		str	r0, [r7, #12]
 999:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_12_1>>> */
1000:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if (Status != DAVEApp_SUCCESS )
 1635              		.loc 1 1000 0
 1636 003a FB68     		ldr	r3, [r7, #12]
 1637 003c 002B     		cmp	r3, #0
 1638 003e 0AD0     		beq	.L90
1001:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
1002:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Some SD cards which doesn't supports CMD8 treat cmd55 as illegal so
1003:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****        * ignore this error */
1004:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*<<<DD_SDMMC_nonAPI_12_2>>> */
1005:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       if (!( (Status == (uint32_t)SDMMC003_ILLEGAL_COMMAND_ERROR) && \
 1639              		.loc 1 1005 0
 1640 0040 FB68     		ldr	r3, [r7, #12]
 1641 0042 122B     		cmp	r3, #18
 1642 0044 31D1     		bne	.L91
1006:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****              (SDMMC003_Handle.f8 == 0) ))
 1643              		.loc 1 1006 0 discriminator 1
 1644 0046 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 1645 004a C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 1646 004e 5B7A     		ldrb	r3, [r3, #9]
 1647 0050 DBB2     		uxtb	r3, r3
1005:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       if (!( (Status == (uint32_t)SDMMC003_ILLEGAL_COMMAND_ERROR) && \
 1648              		.loc 1 1005 0 discriminator 1
 1649 0052 002B     		cmp	r3, #0
 1650 0054 29D1     		bne	.L91
 1651              	.L90:
1007:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       {
1008:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         break;
1009:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       }
1010:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
1011:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Send ACMD41 to query the card's voltage window */
1012:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     Status = SDMMC003_lSendCommand( &(SDMMC003_SD_COMMAND(62)), Argument,\
 1652              		.loc 1 1012 0
 1653 0056 40F20003 		movw	r3, #:lower16:SDMMC003_SDHashTable
 1654 005a C0F20003 		movt	r3, #:upper16:SDMMC003_SDHashTable
 1655 005e 93F83E30 		ldrb	r3, [r3, #62]	@ zero_extendqisi2
 1656 0062 4FEA4302 		lsl	r2, r3, #1
 1657 0066 40F20003 		movw	r3, #:lower16:SDMMC003_Command
 1658 006a C0F20003 		movt	r3, #:upper16:SDMMC003_Command
 1659 006e D318     		adds	r3, r2, r3
 1660 0070 1846     		mov	r0, r3
 1661 0072 7968     		ldr	r1, [r7, #4]
 1662 0074 4FF00402 		mov	r2, #4
 1663 0078 40F20003 		movw	r3, #:lower16:SDMMC003_CardInfo
 1664 007c C0F20003 		movt	r3, #:upper16:SDMMC003_CardInfo
 1665 0080 FFF7FEFF 		bl	SDMMC003_lSendCommand
 1666 0084 F860     		str	r0, [r7, #12]
1013:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                    SDMMC003_RESPONSE_R3,&(SDMMC003_CardInfo.Ocr));
1014:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*<<<DD_SDMMC_nonAPI_12_3>>> */
1015:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if ( (Status != (uint32_t)DAVEApp_SUCCESS) &&\
 1667              		.loc 1 1015 0
 1668 0086 FB68     		ldr	r3, [r7, #12]
 1669 0088 002B     		cmp	r3, #0
 1670 008a 02D0     		beq	.L92
 1671              		.loc 1 1015 0 is_stmt 0 discriminator 1
 1672 008c FB68     		ldr	r3, [r7, #12]
 1673 008e 122B     		cmp	r3, #18
 1674 0090 08D1     		bne	.L95
 1675              	.L92:
1016:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****          (Status != (uint32_t)SDMMC003_ILLEGAL_COMMAND_ERROR))
1017:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
1018:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* No response means SDMMC_MMC card */
1019:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** #if SDMMC_SUPPORT_MMC_CARD
1020:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*<<<DD_SDMMC_nonAPI_12_4>>> */
1021:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       if (Status == (uint32_t) SDMMC003_COMMAND_TIMEOUT_ERROR)
1022:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       {
1023:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         Status  =  (uint32_t)SDMMC003_lInitializeMmcCard();
1024:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         break;
1025:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       }
1026:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       else
1027:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** #endif /* SDMMC_SUPPORT_MMC_CARD */
1028:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       {
1029:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         break;
1030:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       }
1031:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
1032:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Send ACMD41 with voltage window argument set */
1033:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*<<<DD_SDMMC_nonAPI_12_5>>> */
1034:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     Status = SDMMC003_lSetVoltageWindow();
 1676              		.loc 1 1034 0 is_stmt 1
 1677 0092 FFF7FEFF 		bl	SDMMC003_lSetVoltageWindow
 1678 0096 F860     		str	r0, [r7, #12]
1035:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if( Status != (uint32_t)DAVEApp_SUCCESS)
 1679              		.loc 1 1035 0
 1680 0098 FB68     		ldr	r3, [r7, #12]
 1681 009a 002B     		cmp	r3, #0
 1682 009c 04D1     		bne	.L96
 1683              	.L93:
1036:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
1037:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       break;
1038:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
1039:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* SD Card Type */
1040:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*<<<DD_SDMMC_nonAPI_12_6>>> */
1041:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC003_lWriteCardType();
 1684              		.loc 1 1041 0
 1685 009e FFF7FEFF 		bl	SDMMC003_lWriteCardType
 1686 00a2 02E0     		b	.L91
 1687              	.L95:
1029:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         break;
 1688              		.loc 1 1029 0
 1689 00a4 00BF     		nop
 1690 00a6 00E0     		b	.L91
 1691              	.L96:
1037:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       break;
 1692              		.loc 1 1037 0
 1693 00a8 00BF     		nop
 1694              	.L91:
1042:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   } while(0);
1043:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   FUNCTION_EXIT(GID_SDMMC00x, (uint32_t)SDMMC003_FUNCTION_EXIT);
1044:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   return Status;
 1695              		.loc 1 1044 0
 1696 00aa FB68     		ldr	r3, [r7, #12]
1045:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** }
 1697              		.loc 1 1045 0
 1698 00ac 1846     		mov	r0, r3
 1699 00ae 07F11007 		add	r7, r7, #16
 1700 00b2 BD46     		mov	sp, r7
 1701 00b4 80BD     		pop	{r7, pc}
 1702              		.cfi_endproc
 1703              	.LFE130:
 1705 00b6 00BF     		.section	.text.SDMMC003_lAfterCardInitialize,"ax",%progbits
 1706              		.align	2
 1707              		.global	SDMMC003_lAfterCardInitialize
 1708              		.thumb
 1709              		.thumb_func
 1711              	SDMMC003_lAfterCardInitialize:
 1712              	.LFB131:
1046:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
1047:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*<<<DD_SDMMC_nonAPI_13>>> */
1048:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*
1049:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  * This function reads the card registers after the card is initialized.
1050:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  */
1051:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** status_t SDMMC003_lAfterCardInitialize()
1052:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** {
 1713              		.loc 1 1052 0
 1714              		.cfi_startproc
 1715              		@ args = 0, pretend = 0, frame = 8
 1716              		@ frame_needed = 1, uses_anonymous_args = 0
 1717 0000 80B5     		push	{r7, lr}
 1718              	.LCFI41:
 1719              		.cfi_def_cfa_offset 8
 1720              		.cfi_offset 7, -8
 1721              		.cfi_offset 14, -4
 1722 0002 82B0     		sub	sp, sp, #8
 1723              	.LCFI42:
 1724              		.cfi_def_cfa_offset 16
 1725 0004 00AF     		add	r7, sp, #0
 1726              	.LCFI43:
 1727              		.cfi_def_cfa_register 7
1053:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   status_t Status = (uint32_t)SDMMC003_ERROR;
 1728              		.loc 1 1053 0
 1729 0006 4FF00103 		mov	r3, #1
 1730 000a 7B60     		str	r3, [r7, #4]
1054:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   FUNCTION_ENTRY(GID_SDMMC00x, (uint32_t)SDMMC003_FUNCTION_ENTRY);
1055:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   do
1056:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
1057:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****    /* Read CSD & SCR Register & Card Write Protection Flags. */
1058:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     Status = SDMMC003_lReadCardRegisters();
 1731              		.loc 1 1058 0
 1732 000c FFF7FEFF 		bl	SDMMC003_lReadCardRegisters
 1733 0010 7860     		str	r0, [r7, #4]
1059:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*<<<DD_SDMMC_nonAPI_13_1>>> */
1060:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if(Status != (uint32_t)DAVEApp_SUCCESS)
 1734              		.loc 1 1060 0
 1735 0012 7B68     		ldr	r3, [r7, #4]
 1736 0014 002B     		cmp	r3, #0
 1737 0016 2FD1     		bne	.L102
 1738              	.L98:
1061:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
1062:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       break;
1063:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
1064:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** #if SDMMC_SUPPORT_4_BUS_WIDTH
1065:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Switch  to 4-bit bus width if supported */
1066:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     Status = SDMMC003_lSwitchBusWidth();
 1739              		.loc 1 1066 0
 1740 0018 FFF7FEFF 		bl	SDMMC003_lSwitchBusWidth
 1741 001c 7860     		str	r0, [r7, #4]
1067:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*<<<DD_SDMMC_nonAPI_13_2>>> */
1068:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if( Status != (uint32_t)DAVEApp_SUCCESS )
 1742              		.loc 1 1068 0
 1743 001e 7B68     		ldr	r3, [r7, #4]
 1744 0020 002B     		cmp	r3, #0
 1745 0022 0FD0     		beq	.L100
1069:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
1070:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Change bus width to default in the Host Controller */
1071:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       CLR_BIT( SDMMC->HOST_CTRL,SDMMC_HOST_CTRL_DATA_TX_WIDTH_Pos);
 1746              		.loc 1 1071 0
 1747 0024 4FF44043 		mov	r3, #49152
 1748 0028 C4F60103 		movt	r3, 18433
 1749 002c 4FF44042 		mov	r2, #49152
 1750 0030 C4F60102 		movt	r2, 18433
 1751 0034 92F82820 		ldrb	r2, [r2, #40]
 1752 0038 D2B2     		uxtb	r2, r2
 1753 003a 22F00202 		bic	r2, r2, #2
 1754 003e D2B2     		uxtb	r2, r2
 1755 0040 83F82820 		strb	r2, [r3, #40]
 1756              	.L100:
1072:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
1073:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Switch  to High Speed Mode */
1074:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     Status = SDMMC003_lSwitchSpeed();
 1757              		.loc 1 1074 0
 1758 0044 FFF7FEFF 		bl	SDMMC003_lSwitchSpeed
 1759 0048 7860     		str	r0, [r7, #4]
1075:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*<<<DD_SDMMC_nonAPI_13_3>>> */
1076:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if( Status != (uint32_t)DAVEApp_SUCCESS )
 1760              		.loc 1 1076 0
 1761 004a 7B68     		ldr	r3, [r7, #4]
 1762 004c 002B     		cmp	r3, #0
 1763 004e 14D0     		beq	.L99
1077:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
1078:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Change Speed mode to default in the Host Controller */
1079:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       CLR_BIT( SDMMC->HOST_CTRL,SDMMC_HOST_CTRL_HIGH_SPEED_EN_Pos );
 1764              		.loc 1 1079 0
 1765 0050 4FF44043 		mov	r3, #49152
 1766 0054 C4F60103 		movt	r3, 18433
 1767 0058 4FF44042 		mov	r2, #49152
 1768 005c C4F60102 		movt	r2, 18433
 1769 0060 92F82820 		ldrb	r2, [r2, #40]
 1770 0064 D2B2     		uxtb	r2, r2
 1771 0066 22F00402 		bic	r2, r2, #4
 1772 006a D2B2     		uxtb	r2, r2
 1773 006c 83F82820 		strb	r2, [r3, #40]
1080:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Status = (uint32_t)DAVEApp_SUCCESS;
 1774              		.loc 1 1080 0
 1775 0070 4FF00003 		mov	r3, #0
 1776 0074 7B60     		str	r3, [r7, #4]
 1777 0076 00E0     		b	.L99
 1778              	.L102:
1062:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       break;
 1779              		.loc 1 1062 0
 1780 0078 00BF     		nop
 1781              	.L99:
1081:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
1082:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** #endif
1083:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   } while(0);
1084:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   FUNCTION_EXIT(GID_SDMMC00x, (uint32_t)SDMMC003_FUNCTION_EXIT);
1085:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   return Status;
 1782              		.loc 1 1085 0
 1783 007a 7B68     		ldr	r3, [r7, #4]
1086:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** }
 1784              		.loc 1 1086 0
 1785 007c 1846     		mov	r0, r3
 1786 007e 07F10807 		add	r7, r7, #8
 1787 0082 BD46     		mov	sp, r7
 1788 0084 80BD     		pop	{r7, pc}
 1789              		.cfi_endproc
 1790              	.LFE131:
 1792 0086 00BF     		.section	.text.SDMMC003_lInitializeCard,"ax",%progbits
 1793              		.align	2
 1794              		.global	SDMMC003_lInitializeCard
 1795              		.thumb
 1796              		.thumb_func
 1798              	SDMMC003_lInitializeCard:
 1799              	.LFB132:
1087:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
1088:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_14>>> */
1089:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*
1090:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  * This function initializes the SD card.
1091:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  */
1092:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** status_t SDMMC003_lInitializeCard()
1093:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** {
 1800              		.loc 1 1093 0
 1801              		.cfi_startproc
 1802              		@ args = 0, pretend = 0, frame = 16
 1803              		@ frame_needed = 1, uses_anonymous_args = 0
 1804 0000 80B5     		push	{r7, lr}
 1805              	.LCFI44:
 1806              		.cfi_def_cfa_offset 8
 1807              		.cfi_offset 7, -8
 1808              		.cfi_offset 14, -4
 1809 0002 84B0     		sub	sp, sp, #16
 1810              	.LCFI45:
 1811              		.cfi_def_cfa_offset 24
 1812 0004 00AF     		add	r7, sp, #0
 1813              	.LCFI46:
 1814              		.cfi_def_cfa_register 7
1094:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   status_t Status;
1095:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   uint32_t LockStatus ;
1096:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   uint8_t Count= 0;
 1815              		.loc 1 1096 0
 1816 0006 4FF00003 		mov	r3, #0
 1817 000a FB72     		strb	r3, [r7, #11]
 1818              	.L106:
1097:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   FUNCTION_ENTRY(GID_SDMMC00x, (uint32_t)SDMMC003_FUNCTION_ENTRY);
1098:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   do
1099:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
1100:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_14_1>>> */
1101:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Repeat the below steps 2 times if bad response is received.    */
1102:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     do
1103:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
1104:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Reset the card. i.e cmd0 */
1105:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Status = SDMMC003_lSendCommand( &(SDMMC003_COMMON_COMMAND(0)), \
 1819              		.loc 1 1105 0
 1820 000c 40F20003 		movw	r3, #:lower16:SDMMC003_SDHashTable
 1821 0010 C0F20003 		movt	r3, #:upper16:SDMMC003_SDHashTable
 1822 0014 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1823 0016 4FEA4302 		lsl	r2, r3, #1
 1824 001a 40F20003 		movw	r3, #:lower16:SDMMC003_Command
 1825 001e C0F20003 		movt	r3, #:upper16:SDMMC003_Command
 1826 0022 D318     		adds	r3, r2, r3
 1827 0024 1846     		mov	r0, r3
 1828 0026 4FF00001 		mov	r1, #0
 1829 002a 4FF00002 		mov	r2, #0
 1830 002e 4FF00003 		mov	r3, #0
 1831 0032 FFF7FEFF 		bl	SDMMC003_lSendCommand
 1832 0036 F860     		str	r0, [r7, #12]
1106:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                         SDMMC003_ARGUMENT0, \
1107:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                         SDMMC003_NO_RESPONSE, \
1108:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                         NULL);
1109:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_14_2>>> */
1110:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       if (Status != (uint32_t)DAVEApp_SUCCESS)
 1833              		.loc 1 1110 0
 1834 0038 FB68     		ldr	r3, [r7, #12]
 1835 003a 002B     		cmp	r3, #0
 1836 003c 0DD1     		bne	.L115
 1837              	.L104:
1111:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       {
1112:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         break;
1113:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       }/* End of "if(Status != DAVEApp_SUCCESS )" */
1114:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Query the Operation Condition Info from the card.*/
1115:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_14_3>>> */
1116:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Status = SDMMC003_lQueryOperatingCond();
 1838              		.loc 1 1116 0
 1839 003e FFF7FEFF 		bl	SDMMC003_lQueryOperatingCond
 1840 0042 F860     		str	r0, [r7, #12]
1117:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Count++;
 1841              		.loc 1 1117 0
 1842 0044 FB7A     		ldrb	r3, [r7, #11]
 1843 0046 03F10103 		add	r3, r3, #1
 1844 004a FB72     		strb	r3, [r7, #11]
1118:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     } while(( Count < SDMMC003_NUM_CARD_RESET_RETRIES) && \
 1845              		.loc 1 1118 0
 1846 004c FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1847 004e 012B     		cmp	r3, #1
 1848 0050 04D8     		bhi	.L105
 1849              		.loc 1 1118 0 is_stmt 0 discriminator 1
 1850 0052 FB68     		ldr	r3, [r7, #12]
 1851 0054 192B     		cmp	r3, #25
 1852 0056 D9D0     		beq	.L106
 1853 0058 00E0     		b	.L105
 1854              	.L115:
1112:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         break;
 1855              		.loc 1 1112 0 is_stmt 1
 1856 005a 00BF     		nop
 1857              	.L105:
1119:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****             ( Status == (uint32_t)SDMMC003_BAD_RESPONSE));
1120:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_14_4>> */
1121:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if (Status != (uint32_t)DAVEApp_SUCCESS)
 1858              		.loc 1 1121 0
 1859 005c FB68     		ldr	r3, [r7, #12]
 1860 005e 002B     		cmp	r3, #0
 1861 0060 63D1     		bne	.L116
 1862              	.L107:
1122:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
1123:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       break;
1124:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }/* End of "if(Status != DAVEApp_SUCCESS )" */
1125:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Query & Set voltage window  */
1126:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
1127:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     Status = SDMMC003_lQueryVoltage(SDMMC003_CardInfo.Rca);
 1863              		.loc 1 1127 0
 1864 0062 40F20003 		movw	r3, #:lower16:SDMMC003_CardInfo
 1865 0066 C0F20003 		movt	r3, #:upper16:SDMMC003_CardInfo
 1866 006a 9B8D     		ldrh	r3, [r3, #44]
 1867 006c 1846     		mov	r0, r3
 1868 006e FFF7FEFF 		bl	SDMMC003_lQueryVoltage
 1869 0072 F860     		str	r0, [r7, #12]
1128:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_14_5>> */
1129:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if (Status != (uint32_t)DAVEApp_SUCCESS)
 1870              		.loc 1 1129 0
 1871 0074 FB68     		ldr	r3, [r7, #12]
 1872 0076 002B     		cmp	r3, #0
 1873 0078 59D1     		bne	.L117
 1874              	.L109:
1130:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
1131:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       break;
1132:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
1133:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Read CID */
1134:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     Status = SDMMC003_lSendCommand(&(SDMMC003_COMMON_COMMAND(2)), \
 1875              		.loc 1 1134 0
 1876 007a 40F20003 		movw	r3, #:lower16:SDMMC003_SDHashTable
 1877 007e C0F20003 		movt	r3, #:upper16:SDMMC003_SDHashTable
 1878 0082 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1879 0084 4FEA4302 		lsl	r2, r3, #1
 1880 0088 40F20003 		movw	r3, #:lower16:SDMMC003_Command
 1881 008c C0F20003 		movt	r3, #:upper16:SDMMC003_Command
 1882 0090 D318     		adds	r3, r2, r3
 1883 0092 1846     		mov	r0, r3
 1884 0094 4FF00001 		mov	r1, #0
 1885 0098 4FF00302 		mov	r2, #3
 1886 009c 2A4B     		ldr	r3, .L121
 1887 009e FFF7FEFF 		bl	SDMMC003_lSendCommand
 1888 00a2 F860     		str	r0, [r7, #12]
1135:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                      SDMMC003_ARGUMENT0,SDMMC003_RESPONSE_R2, \
1136:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                      (void *)SDMMC003_CardInfo.CidArray);
1137:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_14_6>> */
1138:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if (Status != (uint32_t)DAVEApp_SUCCESS)
 1889              		.loc 1 1138 0
 1890 00a4 FB68     		ldr	r3, [r7, #12]
 1891 00a6 002B     		cmp	r3, #0
 1892 00a8 43D1     		bne	.L118
 1893              	.L110:
1139:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
1140:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       break;
1141:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
1142:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Read RCA */
1143:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     Status = SDMMC003_lReadRca();
 1894              		.loc 1 1143 0
 1895 00aa FFF7FEFF 		bl	SDMMC003_lReadRca
 1896 00ae F860     		str	r0, [r7, #12]
1144:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_14_7>> */
1145:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if (Status != (uint32_t)DAVEApp_SUCCESS)
 1897              		.loc 1 1145 0
 1898 00b0 FB68     		ldr	r3, [r7, #12]
 1899 00b2 002B     		cmp	r3, #0
 1900 00b4 3FD1     		bne	.L119
 1901              	.L111:
1146:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
1147:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       break;
1148:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     } 
1149:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Check the card Lock/ Unlock Status */
1150:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     Status = SDMMC003_GetLockStatus(&LockStatus);
 1902              		.loc 1 1150 0
 1903 00b6 07F10403 		add	r3, r7, #4
 1904 00ba 1846     		mov	r0, r3
 1905 00bc FFF7FEFF 		bl	SDMMC003_GetLockStatus
 1906 00c0 F860     		str	r0, [r7, #12]
1151:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if (Status != (uint32_t)DAVEApp_SUCCESS)
 1907              		.loc 1 1151 0
 1908 00c2 FB68     		ldr	r3, [r7, #12]
 1909 00c4 002B     		cmp	r3, #0
 1910 00c6 38D1     		bne	.L120
 1911              	.L112:
1152:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
1153:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       break;
1154:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
1155:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_14_8>> */
1156:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if (LockStatus == (uint32_t)SDMMC003_CARD_IS_LOCKED)
 1912              		.loc 1 1156 0
 1913 00c8 7B68     		ldr	r3, [r7, #4]
 1914 00ca 202B     		cmp	r3, #32
 1915 00cc 10D1     		bne	.L113
1157:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
1158:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC003_Handle.State |= SDMMC003_STATE_CARD_LOCKED ;
 1916              		.loc 1 1158 0
 1917 00ce 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 1918 00d2 C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 1919 00d6 1B88     		ldrh	r3, [r3, #0]	@ movhi
 1920 00d8 9BB2     		uxth	r3, r3
 1921 00da 43F04003 		orr	r3, r3, #64
 1922 00de 9AB2     		uxth	r2, r3
 1923 00e0 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 1924 00e4 C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 1925 00e8 1A80     		strh	r2, [r3, #0]	@ movhi
1159:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Status = (uint32_t)SDMMC003_INITIALIZED_BUT_LOCKED;     
 1926              		.loc 1 1159 0
 1927 00ea 4FF02B03 		mov	r3, #43
 1928 00ee FB60     		str	r3, [r7, #12]
 1929              	.L113:
1160:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
1161:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Update card initialization Status */
1162:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC003_Handle.State |= SDMMC003_STATE_CARD_INITIALIZED;
 1930              		.loc 1 1162 0
 1931 00f0 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 1932 00f4 C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 1933 00f8 1B88     		ldrh	r3, [r3, #0]	@ movhi
 1934 00fa 9BB2     		uxth	r3, r3
 1935 00fc 43F00103 		orr	r3, r3, #1
 1936 0100 9AB2     		uxth	r2, r3
 1937 0102 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 1938 0106 C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 1939 010a 1A80     		strh	r2, [r3, #0]	@ movhi
1163:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC003_Handle.State &=  ~(SDMMC003_STATE_NO_CARD);
 1940              		.loc 1 1163 0
 1941 010c 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 1942 0110 C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 1943 0114 1B88     		ldrh	r3, [r3, #0]	@ movhi
 1944 0116 9BB2     		uxth	r3, r3
 1945 0118 23F00203 		bic	r3, r3, #2
 1946 011c 9AB2     		uxth	r2, r3
 1947 011e 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 1948 0122 C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 1949 0126 1A80     		strh	r2, [r3, #0]	@ movhi
 1950 0128 08E0     		b	.L108
 1951              	.L116:
1123:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       break;
 1952              		.loc 1 1123 0
 1953 012a 00BF     		nop
 1954 012c 06E0     		b	.L108
 1955              	.L117:
1131:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       break;
 1956              		.loc 1 1131 0
 1957 012e 00BF     		nop
 1958 0130 04E0     		b	.L108
 1959              	.L118:
1140:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       break;
 1960              		.loc 1 1140 0
 1961 0132 00BF     		nop
 1962 0134 02E0     		b	.L108
 1963              	.L119:
1147:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       break;
 1964              		.loc 1 1147 0
 1965 0136 00BF     		nop
 1966 0138 00E0     		b	.L108
 1967              	.L120:
1153:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       break;
 1968              		.loc 1 1153 0
 1969 013a 00BF     		nop
 1970              	.L108:
1164:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   } while(0);
1165:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   FUNCTION_EXIT(GID_SDMMC00x, (uint32_t)SDMMC003_FUNCTION_EXIT);
1166:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   return Status;
 1971              		.loc 1 1166 0
 1972 013c FB68     		ldr	r3, [r7, #12]
1167:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** }
 1973              		.loc 1 1167 0
 1974 013e 1846     		mov	r0, r3
 1975 0140 07F11007 		add	r7, r7, #16
 1976 0144 BD46     		mov	sp, r7
 1977 0146 80BD     		pop	{r7, pc}
 1978              	.L122:
 1979              		.align	2
 1980              	.L121:
 1981 0148 04000000 		.word	SDMMC003_CardInfo+4
 1982              		.cfi_endproc
 1983              	.LFE132:
 1985              		.section	.text.SDMMC003_lWriteCardType,"ax",%progbits
 1986              		.align	2
 1987              		.global	SDMMC003_lWriteCardType
 1988              		.thumb
 1989              		.thumb_func
 1991              	SDMMC003_lWriteCardType:
 1992              	.LFB133:
1168:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
1169:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_15>>> */
1170:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*
1171:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  * This function finds out the card Type information.
1172:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  */
1173:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** void SDMMC003_lWriteCardType()
1174:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** {
 1993              		.loc 1 1174 0
 1994              		.cfi_startproc
 1995              		@ args = 0, pretend = 0, frame = 0
 1996              		@ frame_needed = 1, uses_anonymous_args = 0
 1997              		@ link register save eliminated.
 1998 0000 80B4     		push	{r7}
 1999              	.LCFI47:
 2000              		.cfi_def_cfa_offset 4
 2001              		.cfi_offset 7, -4
 2002 0002 00AF     		add	r7, sp, #0
 2003              	.LCFI48:
 2004              		.cfi_def_cfa_register 7
1175:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   FUNCTION_ENTRY(GID_SDMMC00x, (uint32_t)SDMMC003_FUNCTION_ENTRY);
1176:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   /* If F8 =0 , Standard Capacity V1 Card */
1177:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_15_1>>> */
1178:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   if ( SDMMC003_Handle.f8 == 0)
 2005              		.loc 1 1178 0
 2006 0004 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 2007 0008 C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 2008 000c 5B7A     		ldrb	r3, [r3, #9]
 2009 000e DBB2     		uxtb	r3, r3
 2010 0010 002B     		cmp	r3, #0
 2011 0012 0ED1     		bne	.L124
1179:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
1180:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC003_Handle.CardType |= SDMMC003_SD_STANDARD_CAPACITY_V1x;
 2012              		.loc 1 1180 0
 2013 0014 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 2014 0018 C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 2015 001c 9B78     		ldrb	r3, [r3, #2]
 2016 001e DBB2     		uxtb	r3, r3
 2017 0020 43F00203 		orr	r3, r3, #2
 2018 0024 DAB2     		uxtb	r2, r3
 2019 0026 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 2020 002a C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 2021 002e 9A70     		strb	r2, [r3, #2]
 2022 0030 25E0     		b	.L123
 2023              	.L124:
1181:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   }
1182:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   /* If F8 =1 , Standard Capacity V2 or High Capacity Card */
1183:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_15_2>>> */
1184:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   else
1185:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
1186:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Check CCS bit in the OCR register, CCS=1 means High Capacity  card*/
1187:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_15_3>>> */
1188:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if ((SDMMC003_CardInfo.Ocr & SDMMC003_OCR_CCS_BITMASK ) != 0)
 2024              		.loc 1 1188 0
 2025 0032 40F20003 		movw	r3, #:lower16:SDMMC003_CardInfo
 2026 0036 C0F20003 		movt	r3, #:upper16:SDMMC003_CardInfo
 2027 003a 1B68     		ldr	r3, [r3, #0]
 2028 003c 03F08043 		and	r3, r3, #1073741824
 2029 0040 002B     		cmp	r3, #0
 2030 0042 0ED0     		beq	.L126
1189:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
1190:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC003_Handle.CardType |= SDMMC003_SD_HIGH_CAPACITY | \
 2031              		.loc 1 1190 0
 2032 0044 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 2033 0048 C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 2034 004c 9B78     		ldrb	r3, [r3, #2]
 2035 004e DBB2     		uxtb	r3, r3
 2036 0050 43F00C03 		orr	r3, r3, #12
 2037 0054 DAB2     		uxtb	r2, r3
 2038 0056 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 2039 005a C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 2040 005e 9A70     		strb	r2, [r3, #2]
 2041 0060 0DE0     		b	.L123
 2042              	.L126:
1191:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                   SDMMC003_BLOCK_ADDRESSING;
1192:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
1193:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_15_4>>> */
1194:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* CCS=0 means Standard Capacity Version2*/
1195:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     else
1196:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
1197:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC003_Handle.CardType |= SDMMC003_SD_STANDARD_CAPACITY_V2;
 2043              		.loc 1 1197 0
 2044 0062 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 2045 0066 C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 2046 006a 9B78     		ldrb	r3, [r3, #2]
 2047 006c DBB2     		uxtb	r3, r3
 2048 006e 43F00103 		orr	r3, r3, #1
 2049 0072 DAB2     		uxtb	r2, r3
 2050 0074 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 2051 0078 C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 2052 007c 9A70     		strb	r2, [r3, #2]
 2053              	.L123:
1198:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
1199:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   }
1200:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   FUNCTION_EXIT(GID_SDMMC00x, (uint32_t)SDMMC003_FUNCTION_EXIT);
1201:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** }
 2054              		.loc 1 1201 0
 2055 007e BD46     		mov	sp, r7
 2056 0080 80BC     		pop	{r7}
 2057 0082 7047     		bx	lr
 2058              		.cfi_endproc
 2059              	.LFE133:
 2061              		.section	.text.SDMMC003_lSetWriteProtect,"ax",%progbits
 2062              		.align	2
 2063              		.global	SDMMC003_lSetWriteProtect
 2064              		.thumb
 2065              		.thumb_func
 2067              	SDMMC003_lSetWriteProtect:
 2068              	.LFB134:
1202:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
1203:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_16>>> */
1204:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*
1205:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  * This function finds out the Write protection status of the card.
1206:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  */
1207:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** status_t SDMMC003_lSetWriteProtect (void)
1208:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** {
 2069              		.loc 1 1208 0
 2070              		.cfi_startproc
 2071              		@ args = 0, pretend = 0, frame = 72
 2072              		@ frame_needed = 1, uses_anonymous_args = 0
 2073 0000 80B5     		push	{r7, lr}
 2074              	.LCFI49:
 2075              		.cfi_def_cfa_offset 8
 2076              		.cfi_offset 7, -8
 2077              		.cfi_offset 14, -4
 2078 0002 92B0     		sub	sp, sp, #72
 2079              	.LCFI50:
 2080              		.cfi_def_cfa_offset 80
 2081 0004 00AF     		add	r7, sp, #0
 2082              	.LCFI51:
 2083              		.cfi_def_cfa_register 7
1209:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   uint32_t SdStatus[16] = {0};
 2084              		.loc 1 1209 0
 2085 0006 3A46     		mov	r2, r7
 2086 0008 4FF04003 		mov	r3, #64
 2087 000c 1046     		mov	r0, r2
 2088 000e 4FF00001 		mov	r1, #0
 2089 0012 1A46     		mov	r2, r3
 2090 0014 FFF7FEFF 		bl	memset
1210:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   uint32_t WriteProtect;
1211:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   status_t Status = (uint32_t)SDMMC003_ERROR;
 2091              		.loc 1 1211 0
 2092 0018 4FF00103 		mov	r3, #1
 2093 001c 7B64     		str	r3, [r7, #68]
1212:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   FUNCTION_ENTRY(GID_SDMMC00x, (uint32_t)SDMMC003_FUNCTION_ENTRY);
1213:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   do
1214:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
1215:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** #if SDMMC_SUPPORT_MMC_CARD
1216:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC003_MMCCSDType *TmpMmcCsdPtr;
1217:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_16_1>>> */
1218:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if ((SDMMC003_Handle.CardType & SDMMC003_MMC) != 0)
1219:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
1220:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       TmpMmcCsdPtr = (SDMMC003_MMCCSDType *)&SDMMC003_CardInfo.CsdArray;
1221:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Read Write Protection bits from CSD Register i.e both Temp & Permanent */
1222:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_16_2>>> */
1223:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       if ( ((TmpMmcCsdPtr->TempWriteProtect) != 0) || \
1224:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****            ((TmpMmcCsdPtr->PermWriteProtect) != 0))
1225:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       {
1226:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         SDMMC003_Handle.State |=(uint32_t)SDMMC003_STATE_CARD_WRITE_PROTECT;
1227:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       }
1228:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
1229:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     else
1230:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** #endif
1231:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
1232:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* SD Card Write Protection.  */
1233:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Status  = SDMMC003_GetSdStatus((void*)&(SdStatus[0]));
 2094              		.loc 1 1233 0
 2095 001e 3B46     		mov	r3, r7
 2096 0020 1846     		mov	r0, r3
 2097 0022 FFF7FEFF 		bl	SDMMC003_GetSdStatus
 2098 0026 7864     		str	r0, [r7, #68]
1234:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_16_3>>> */
1235:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       if (Status != DAVEApp_SUCCESS)
 2099              		.loc 1 1235 0
 2100 0028 7B6C     		ldr	r3, [r7, #68]
 2101 002a 002B     		cmp	r3, #0
 2102 002c 21D1     		bne	.L131
 2103              	.L128:
1236:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       {
1237:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         break;
1238:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       }
1239:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_16_4>>> */
1240:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Bits 480:495 in the SD status gives the Write Protection Information */
1241:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       WriteProtect = ((SdStatus[0] & 0xFF000000) >> 24 ) | 
 2104              		.loc 1 1241 0
 2105 002e 3B68     		ldr	r3, [r7, #0]
 2106 0030 4FEA1362 		lsr	r2, r3, #24
1242:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                      (((SdStatus[0] & 0x00FF0000) >> 16 ) << 8) ;
 2107              		.loc 1 1242 0
 2108 0034 3B68     		ldr	r3, [r7, #0]
 2109 0036 03F47F03 		and	r3, r3, #16711680
 2110 003a 4FEA1343 		lsr	r3, r3, #16
 2111 003e 4FEA0323 		lsl	r3, r3, #8
1241:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       WriteProtect = ((SdStatus[0] & 0xFF000000) >> 24 ) | 
 2112              		.loc 1 1241 0
 2113 0042 1343     		orrs	r3, r3, r2
 2114 0044 3B64     		str	r3, [r7, #64]
1243:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       if ( (WriteProtect & SDMMC003_SD_CARD_TYPE_BITMASK) != 0 )
 2115              		.loc 1 1243 0
 2116 0046 3B6C     		ldr	r3, [r7, #64]
 2117 0048 4FEA0343 		lsl	r3, r3, #16
 2118 004c 4FEA1343 		lsr	r3, r3, #16
 2119 0050 002B     		cmp	r3, #0
 2120 0052 0FD0     		beq	.L129
1244:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       {
1245:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         SDMMC003_Handle.State |=(uint32_t)SDMMC003_STATE_CARD_WRITE_PROTECT;
 2121              		.loc 1 1245 0
 2122 0054 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 2123 0058 C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 2124 005c 1B88     		ldrh	r3, [r3, #0]	@ movhi
 2125 005e 9BB2     		uxth	r3, r3
 2126 0060 43F01003 		orr	r3, r3, #16
 2127 0064 9AB2     		uxth	r2, r3
 2128 0066 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 2129 006a C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 2130 006e 1A80     		strh	r2, [r3, #0]	@ movhi
 2131 0070 00E0     		b	.L129
 2132              	.L131:
1237:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         break;
 2133              		.loc 1 1237 0
 2134 0072 00BF     		nop
 2135              	.L129:
1246:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       }
1247:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
1248:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   } while(0);
1249:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   FUNCTION_EXIT(GID_SDMMC00x, (uint32_t)SDMMC003_FUNCTION_EXIT);
1250:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   return Status;
 2136              		.loc 1 1250 0
 2137 0074 7B6C     		ldr	r3, [r7, #68]
1251:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** }
 2138              		.loc 1 1251 0
 2139 0076 1846     		mov	r0, r3
 2140 0078 07F14807 		add	r7, r7, #72
 2141 007c BD46     		mov	sp, r7
 2142 007e 80BD     		pop	{r7, pc}
 2143              		.cfi_endproc
 2144              	.LFE134:
 2146              		.section	.text.SDMMC003_lReadRca,"ax",%progbits
 2147              		.align	2
 2148              		.global	SDMMC003_lReadRca
 2149              		.thumb
 2150              		.thumb_func
 2152              	SDMMC003_lReadRca:
 2153              	.LFB135:
1252:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
1253:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_17>>> */
1254:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*
1255:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  * This function reads the  Relative card address of the card.
1256:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  */
1257:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** status_t SDMMC003_lReadRca()
1258:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** {
 2154              		.loc 1 1258 0
 2155              		.cfi_startproc
 2156              		@ args = 0, pretend = 0, frame = 8
 2157              		@ frame_needed = 1, uses_anonymous_args = 0
 2158 0000 80B5     		push	{r7, lr}
 2159              	.LCFI52:
 2160              		.cfi_def_cfa_offset 8
 2161              		.cfi_offset 7, -8
 2162              		.cfi_offset 14, -4
 2163 0002 82B0     		sub	sp, sp, #8
 2164              	.LCFI53:
 2165              		.cfi_def_cfa_offset 16
 2166 0004 00AF     		add	r7, sp, #0
 2167              	.LCFI54:
 2168              		.cfi_def_cfa_register 7
1259:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   status_t Status ;
1260:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** #if SDMMC_SUPPORT_MMC_CARD
1261:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   uint32_t CardStatus = 0;
1262:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** #endif /* SDMMC_SUPPORT_MMC_CARD */
1263:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   FUNCTION_ENTRY(GID_SDMMC00x, (uint32_t)SDMMC003_FUNCTION_ENTRY);
1264:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   /*  Read RCA for MMC card */
1265:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** #if SDMMC_SUPPORT_MMC_CARD
1266:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_17_1>>> */
1267:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   if ((SDMMC003_Handle.CardType & SDMMC003_MMC) != 0)
1268:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
1269:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     Status = SDMMC003_lSendCommand( &(SDMMC003_COMMON_COMMAND(3)),
1270:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                     (uint32_t)SDMMC003_MMC_DEFAULT_RCA,  \
1271:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                     SDMMC003_RESPONSE_R1, &CardStatus);
1272:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC003_CardInfo.Rca = SDMMC003_MMC_DEFAULT_RCA;
1273:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   }
1274:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   /*  Read RCA for SD  */
1275:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   else
1276:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** #endif
1277:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
1278:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_17_2>>> */
1279:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     Status = SDMMC003_lSendCommand( &(SDMMC003_COMMON_COMMAND(3)), \
 2169              		.loc 1 1279 0
 2170 0006 40F20003 		movw	r3, #:lower16:SDMMC003_SDHashTable
 2171 000a C0F20003 		movt	r3, #:upper16:SDMMC003_SDHashTable
 2172 000e DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 2173 0010 4FEA4302 		lsl	r2, r3, #1
 2174 0014 40F20003 		movw	r3, #:lower16:SDMMC003_Command
 2175 0018 C0F20003 		movt	r3, #:upper16:SDMMC003_Command
 2176 001c D318     		adds	r3, r2, r3
 2177 001e 1846     		mov	r0, r3
 2178 0020 4FF00001 		mov	r1, #0
 2179 0024 4FF00502 		mov	r2, #5
 2180 0028 044B     		ldr	r3, .L134
 2181 002a FFF7FEFF 		bl	SDMMC003_lSendCommand
 2182 002e 7860     		str	r0, [r7, #4]
1280:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                     SDMMC003_ARGUMENT0, \
1281:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                     SDMMC003_RESPONSE_R6, \
1282:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                     &(SDMMC003_CardInfo.Rca));
1283:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   }
1284:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   FUNCTION_EXIT(GID_SDMMC00x, (uint32_t)SDMMC003_FUNCTION_EXIT);
1285:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   return Status;
 2183              		.loc 1 1285 0
 2184 0030 7B68     		ldr	r3, [r7, #4]
1286:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** }
 2185              		.loc 1 1286 0
 2186 0032 1846     		mov	r0, r3
 2187 0034 07F10807 		add	r7, r7, #8
 2188 0038 BD46     		mov	sp, r7
 2189 003a 80BD     		pop	{r7, pc}
 2190              	.L135:
 2191              		.align	2
 2192              	.L134:
 2193 003c 2C000000 		.word	SDMMC003_CardInfo+44
 2194              		.cfi_endproc
 2195              	.LFE135:
 2197              		.section	.text.SDMMC003_lReadCardRegisters,"ax",%progbits
 2198              		.align	2
 2199              		.global	SDMMC003_lReadCardRegisters
 2200              		.thumb
 2201              		.thumb_func
 2203              	SDMMC003_lReadCardRegisters:
 2204              	.LFB136:
1287:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
1288:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_18>>> */
1289:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*
1290:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  * This function initializes the MMC card.
1291:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  */
1292:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** #if SDMMC_SUPPORT_MMC_CARD
1293:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* SDMMC_MMC Initialize */
1294:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** status_t SDMMC003_lInitializeMmcCard()
1295:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** {
1296:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   status_t Status;
1297:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   FUNCTION_ENTRY(GID_SDMMC00x, (uint32_t)SDMMC003_FUNCTION_ENTRY);
1298:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   do
1299:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
1300:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Reset the card. i.e cmd0 */
1301:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     Status = (uint32_t)SDMMC003_lSendCommand( &(SDMMC003_COMMON_COMMAND(0)), \
1302:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                                 SDMMC003_ARGUMENT0,  \
1303:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                                 SDMMC003_NO_RESPONSE, NULL);
1304:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_18_1>>> */
1305:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if (Status != (uint32_t)DAVEApp_SUCCESS )
1306:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
1307:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       break;
1308:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }/* End of "if(Status != DAVEApp_SUCCESS )" */
1309:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****    /*Command1 indicating support for high capacity cards & voltage 2.7 to 3.6v */
1310:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     do
1311:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
1312:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Status = SDMMC003_lSendCommand(&(SDMMC003_MMC_COMMAND(1)), \
1313:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                         MMC_CMD1_ARG ,SDMMC003_RESPONSE_R3,\
1314:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                         &(SDMMC003_CardInfo.Ocr) );
1315:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_18_2>>> */
1316:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       if (Status != (uint32_t)DAVEApp_SUCCESS )
1317:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       {
1318:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         break;
1319:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       }/* End of "if(Status != DAVEApp_SUCCESS )" */
1320:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     } while(SDMMC003_CardInfo.Ocr & SDMMC003_OCR_POWER_STATUS_BITMASK );
1321:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****    /* Check mode. 00b (byte mode) & 10b (sector mode)*/
1322:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_18_3>>> */
1323:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if( ((SDMMC003_CardInfo.Ocr & SDMMC003_MMC_OCR_ACCESS_MODE_BITMASK) >> \
1324:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****        (SDMMC003_MMC_OCR_ACCESS_MODE_BITPOS) != 0))
1325:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
1326:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC003_Handle.CardType |= SDMMC003_BLOCK_ADDRESSING;
1327:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
1328:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC003_Handle.CardType |= SDMMC003_MMC;
1329:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   } while(0);
1330:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   FUNCTION_EXIT(GID_SDMMC00x, (uint32_t)SDMMC003_FUNCTION_EXIT);
1331:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   return Status;
1332:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** }
1333:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** #endif
1334:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
1335:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_19>>> */
1336:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*
1337:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  * This function reads the CSD, SCR and Write protection status of the card.
1338:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  */
1339:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** status_t SDMMC003_lReadCardRegisters (void)
1340:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** {
 2205              		.loc 1 1340 0
 2206              		.cfi_startproc
 2207              		@ args = 0, pretend = 0, frame = 24
 2208              		@ frame_needed = 1, uses_anonymous_args = 0
 2209 0000 80B5     		push	{r7, lr}
 2210              	.LCFI55:
 2211              		.cfi_def_cfa_offset 8
 2212              		.cfi_offset 7, -8
 2213              		.cfi_offset 14, -4
 2214 0002 88B0     		sub	sp, sp, #32
 2215              	.LCFI56:
 2216              		.cfi_def_cfa_offset 40
 2217 0004 02AF     		add	r7, sp, #8
 2218              	.LCFI57:
 2219              		.cfi_def_cfa 7, 32
1341:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   uint32_t Argument = 0;
 2220              		.loc 1 1341 0
 2221 0006 4FF00003 		mov	r3, #0
 2222 000a 3B61     		str	r3, [r7, #16]
1342:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   uint32_t CardStatus = 0;
 2223              		.loc 1 1342 0
 2224 000c 4FF00003 		mov	r3, #0
 2225 0010 FB60     		str	r3, [r7, #12]
1343:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   status_t Status;
1344:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   SDMMC003_SCRType ScrContent = {0};
 2226              		.loc 1 1344 0
 2227 0012 4FF00003 		mov	r3, #0
 2228 0016 7B60     		str	r3, [r7, #4]
 2229 0018 4FF00003 		mov	r3, #0
 2230 001c BB60     		str	r3, [r7, #8]
1345:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   FUNCTION_ENTRY(GID_SDMMC00x, (uint32_t)SDMMC003_FUNCTION_ENTRY);
1346:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   do
1347:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
1348:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Read CSD Register  */
1349:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     Argument |= SDMMC003_CardInfo.Rca << SDMMC003_ARG_RCA_BITPOS;
 2231              		.loc 1 1349 0
 2232 001e 40F20003 		movw	r3, #:lower16:SDMMC003_CardInfo
 2233 0022 C0F20003 		movt	r3, #:upper16:SDMMC003_CardInfo
 2234 0026 9B8D     		ldrh	r3, [r3, #44]
 2235 0028 4FEA0343 		lsl	r3, r3, #16
 2236 002c 3A69     		ldr	r2, [r7, #16]
 2237 002e 1343     		orrs	r3, r3, r2
 2238 0030 3B61     		str	r3, [r7, #16]
1350:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     Status = SDMMC003_lSendCommand( &(SDMMC003_COMMON_COMMAND(9)),Argument, \
 2239              		.loc 1 1350 0
 2240 0032 40F20003 		movw	r3, #:lower16:SDMMC003_SDHashTable
 2241 0036 C0F20003 		movt	r3, #:upper16:SDMMC003_SDHashTable
 2242 003a 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 2243 003c 4FEA4302 		lsl	r2, r3, #1
 2244 0040 40F20003 		movw	r3, #:lower16:SDMMC003_Command
 2245 0044 C0F20003 		movt	r3, #:upper16:SDMMC003_Command
 2246 0048 D318     		adds	r3, r2, r3
 2247 004a 1846     		mov	r0, r3
 2248 004c 3969     		ldr	r1, [r7, #16]
 2249 004e 4FF00302 		mov	r2, #3
 2250 0052 424B     		ldr	r3, .L147
 2251 0054 FFF7FEFF 		bl	SDMMC003_lSendCommand
 2252 0058 7861     		str	r0, [r7, #20]
1351:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                      SDMMC003_RESPONSE_R2, \
1352:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                      (void *)SDMMC003_CardInfo.CsdArray);
1353:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_19_1>>> */
1354:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if( Status != (uint32_t)DAVEApp_SUCCESS )
 2253              		.loc 1 1354 0
 2254 005a 7B69     		ldr	r3, [r7, #20]
 2255 005c 002B     		cmp	r3, #0
 2256 005e 6FD1     		bne	.L143
 2257              	.L137:
1355:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
1356:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       break;
1357:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
1358:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Set Write protection flags */
1359:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     Status = SDMMC003_lSetWriteProtect();
 2258              		.loc 1 1359 0
 2259 0060 FFF7FEFF 		bl	SDMMC003_lSetWriteProtect
 2260 0064 7861     		str	r0, [r7, #20]
1360:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_19_2>>> */
1361:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if (Status != (uint32_t)DAVEApp_SUCCESS)
 2261              		.loc 1 1361 0
 2262 0066 7B69     		ldr	r3, [r7, #20]
 2263 0068 002B     		cmp	r3, #0
 2264 006a 6BD1     		bne	.L144
 2265              	.L139:
1362:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
1363:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       break;
1364:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
1365:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_19_3>>> */
1366:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Read SCR register for SD card */
1367:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if ((SDMMC003_Handle.CardType & SDMMC003_MMC) == 0)
 2266              		.loc 1 1367 0
 2267 006c 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 2268 0070 C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 2269 0074 9B78     		ldrb	r3, [r3, #2]
 2270 0076 DBB2     		uxtb	r3, r3
 2271 0078 03F01003 		and	r3, r3, #16
 2272 007c 002B     		cmp	r3, #0
 2273 007e 66D1     		bne	.L138
1368:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
1369:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Switch to Transferring State. */
1370:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Status = SDMMC003_lSwitchToTransferState();
 2274              		.loc 1 1370 0
 2275 0080 FFF7FEFF 		bl	SDMMC003_lSwitchToTransferState
 2276 0084 7861     		str	r0, [r7, #20]
1371:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_19_4>>> */
1372:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       if( Status != (uint32_t)DAVEApp_SUCCESS)
 2277              		.loc 1 1372 0
 2278 0086 7B69     		ldr	r3, [r7, #20]
 2279 0088 002B     		cmp	r3, #0
 2280 008a 5DD1     		bne	.L145
 2281              	.L140:
1373:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       {
1374:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         break;
1375:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       }   
1376:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /*Send the Application Specific Command i.e. Command 55.*/
1377:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Argument |= SDMMC003_CardInfo.Rca << SDMMC003_ARG_RCA_BITPOS;
 2282              		.loc 1 1377 0
 2283 008c 40F20003 		movw	r3, #:lower16:SDMMC003_CardInfo
 2284 0090 C0F20003 		movt	r3, #:upper16:SDMMC003_CardInfo
 2285 0094 9B8D     		ldrh	r3, [r3, #44]
 2286 0096 4FEA0343 		lsl	r3, r3, #16
 2287 009a 3A69     		ldr	r2, [r7, #16]
 2288 009c 1343     		orrs	r3, r3, r2
 2289 009e 3B61     		str	r3, [r7, #16]
1378:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Status = SDMMC003_lSendCommand( &(SDMMC003_COMMON_COMMAND(55)),Argument, \
 2290              		.loc 1 1378 0
 2291 00a0 40F20003 		movw	r3, #:lower16:SDMMC003_SDHashTable
 2292 00a4 C0F20003 		movt	r3, #:upper16:SDMMC003_SDHashTable
 2293 00a8 93F83730 		ldrb	r3, [r3, #55]	@ zero_extendqisi2
 2294 00ac 4FEA4302 		lsl	r2, r3, #1
 2295 00b0 40F20003 		movw	r3, #:lower16:SDMMC003_Command
 2296 00b4 C0F20003 		movt	r3, #:upper16:SDMMC003_Command
 2297 00b8 D218     		adds	r2, r2, r3
1379:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                       SDMMC003_RESPONSE_R1, &CardStatus );
 2298              		.loc 1 1379 0
 2299 00ba 07F10C03 		add	r3, r7, #12
1378:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Status = SDMMC003_lSendCommand( &(SDMMC003_COMMON_COMMAND(55)),Argument, \
 2300              		.loc 1 1378 0
 2301 00be 1046     		mov	r0, r2
 2302 00c0 3969     		ldr	r1, [r7, #16]
 2303 00c2 4FF00102 		mov	r2, #1
 2304 00c6 FFF7FEFF 		bl	SDMMC003_lSendCommand
 2305 00ca 7861     		str	r0, [r7, #20]
1380:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_19_5>>> */
1381:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       if( Status != (uint32_t)DAVEApp_SUCCESS)
 2306              		.loc 1 1381 0
 2307 00cc 7B69     		ldr	r3, [r7, #20]
 2308 00ce 002B     		cmp	r3, #0
 2309 00d0 3CD1     		bne	.L146
 2310              	.L141:
1382:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       {
1383:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         break;
1384:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       }
1385:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Set Direction Select bit in the Transfer Mode register */
1386:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SET_BIT( SDMMC->TRANSFER_MODE,SDMMC_TRANSFER_MODE_TX_DIR_SELECT_Pos);
 2311              		.loc 1 1386 0
 2312 00d2 4FF44043 		mov	r3, #49152
 2313 00d6 C4F60103 		movt	r3, 18433
 2314 00da 4FF44042 		mov	r2, #49152
 2315 00de C4F60102 		movt	r2, 18433
 2316 00e2 9289     		ldrh	r2, [r2, #12]	@ movhi
 2317 00e4 92B2     		uxth	r2, r2
 2318 00e6 42F01002 		orr	r2, r2, #16
 2319 00ea 92B2     		uxth	r2, r2
 2320 00ec 9A81     		strh	r2, [r3, #12]	@ movhi
1387:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Read the transferred SCR data*/
1388:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Status = SDMMC003_lSingleBlockTransfer( &(SDMMC003_SD_COMMAND(64)), \
 2321              		.loc 1 1388 0
 2322 00ee 40F20003 		movw	r3, #:lower16:SDMMC003_SDHashTable
 2323 00f2 C0F20003 		movt	r3, #:upper16:SDMMC003_SDHashTable
 2324 00f6 93F84030 		ldrb	r3, [r3, #64]	@ zero_extendqisi2
 2325 00fa 4FEA4302 		lsl	r2, r3, #1
 2326 00fe 40F20003 		movw	r3, #:lower16:SDMMC003_Command
 2327 0102 C0F20003 		movt	r3, #:upper16:SDMMC003_Command
 2328 0106 D218     		adds	r2, r2, r3
1389:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                               SDMMC003_ARGUMENT0,8, \
1390:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                               (uint32_t *)&ScrContent, \
 2329              		.loc 1 1390 0
 2330 0108 07F10403 		add	r3, r7, #4
1388:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Status = SDMMC003_lSingleBlockTransfer( &(SDMMC003_SD_COMMAND(64)), \
 2331              		.loc 1 1388 0
 2332 010c 4FF00101 		mov	r1, #1
 2333 0110 0091     		str	r1, [sp, #0]
 2334 0112 1046     		mov	r0, r2
 2335 0114 4FF00001 		mov	r1, #0
 2336 0118 4FF00802 		mov	r2, #8
 2337 011c FFF7FEFF 		bl	SDMMC003_lSingleBlockTransfer
 2338 0120 7861     		str	r0, [r7, #20]
1391:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                               SDMMC003_READ_FROM_BUFF);
1392:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC003_CardInfo.Scr  =   ScrContent;
 2339              		.loc 1 1392 0
 2340 0122 40F20003 		movw	r3, #:lower16:SDMMC003_CardInfo
 2341 0126 C0F20003 		movt	r3, #:upper16:SDMMC003_CardInfo
 2342 012a 03F12403 		add	r3, r3, #36
 2343 012e 07F10402 		add	r2, r7, #4
 2344 0132 92E80300 		ldmia	r2, {r0, r1}
 2345 0136 83E80300 		stmia	r3, {r0, r1}
1393:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_19_6>>> */
1394:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       if( Status != (uint32_t)DAVEApp_SUCCESS)
 2346              		.loc 1 1394 0
 2347 013a 7B69     		ldr	r3, [r7, #20]
 2348 013c 002B     		cmp	r3, #0
 2349 013e 06E0     		b	.L138
 2350              	.L143:
1356:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       break;
 2351              		.loc 1 1356 0
 2352 0140 00BF     		nop
 2353 0142 04E0     		b	.L138
 2354              	.L144:
1363:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       break;
 2355              		.loc 1 1363 0
 2356 0144 00BF     		nop
 2357 0146 02E0     		b	.L138
 2358              	.L145:
1374:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         break;
 2359              		.loc 1 1374 0
 2360 0148 00BF     		nop
 2361 014a 00E0     		b	.L138
 2362              	.L146:
1383:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         break;
 2363              		.loc 1 1383 0
 2364 014c 00BF     		nop
 2365              	.L138:
1395:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       {
1396:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         break;
1397:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       } 
1398:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     } /* End of " if ((SDMMC003_Handle.CardType & SDMMC003_MMC) == 0)"*/
1399:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   } while(0);
1400:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   FUNCTION_EXIT(GID_SDMMC00x, (uint32_t)SDMMC003_FUNCTION_EXIT);
1401:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   return Status;
 2366              		.loc 1 1401 0
 2367 014e 7B69     		ldr	r3, [r7, #20]
1402:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** }
 2368              		.loc 1 1402 0
 2369 0150 1846     		mov	r0, r3
 2370 0152 07F11807 		add	r7, r7, #24
 2371 0156 BD46     		mov	sp, r7
 2372 0158 80BD     		pop	{r7, pc}
 2373              	.L148:
 2374 015a 00BF     		.align	2
 2375              	.L147:
 2376 015c 14000000 		.word	SDMMC003_CardInfo+20
 2377              		.cfi_endproc
 2378              	.LFE136:
 2380              		.section	.text.SDMMC003_lConfigureForSingleTransfer,"ax",%progbits
 2381              		.align	2
 2382              		.global	SDMMC003_lConfigureForSingleTransfer
 2383              		.thumb
 2384              		.thumb_func
 2386              	SDMMC003_lConfigureForSingleTransfer:
 2387              	.LFB137:
1403:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
1404:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_20>>> */
1405:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*
1406:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  * This function configures the registers for Single Block Transfer.
1407:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  */
1408:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** status_t SDMMC003_lConfigureForSingleTransfer
1409:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** (
1410:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   const SDMMC003_CommandType *CommandPtr,
1411:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   uint32_t Argument,
1412:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   uint16_t BlockSize
1413:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** )
1414:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** {
 2388              		.loc 1 1414 0
 2389              		.cfi_startproc
 2390              		@ args = 0, pretend = 0, frame = 24
 2391              		@ frame_needed = 1, uses_anonymous_args = 0
 2392 0000 80B5     		push	{r7, lr}
 2393              	.LCFI58:
 2394              		.cfi_def_cfa_offset 8
 2395              		.cfi_offset 7, -8
 2396              		.cfi_offset 14, -4
 2397 0002 86B0     		sub	sp, sp, #24
 2398              	.LCFI59:
 2399              		.cfi_def_cfa_offset 32
 2400 0004 00AF     		add	r7, sp, #0
 2401              	.LCFI60:
 2402              		.cfi_def_cfa_register 7
 2403 0006 F860     		str	r0, [r7, #12]
 2404 0008 B960     		str	r1, [r7, #8]
 2405 000a 1346     		mov	r3, r2
 2406 000c FB80     		strh	r3, [r7, #6]	@ movhi
1415:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   status_t Status = (uint32_t)SDMMC003_ERROR;
 2407              		.loc 1 1415 0
 2408 000e 4FF00103 		mov	r3, #1
 2409 0012 7B61     		str	r3, [r7, #20]
1416:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   uint32_t CardStatus = 0;
 2410              		.loc 1 1416 0
 2411 0014 4FF00003 		mov	r3, #0
 2412 0018 3B61     		str	r3, [r7, #16]
1417:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   FUNCTION_ENTRY(GID_SDMMC00x, (uint32_t)SDMMC003_FUNCTION_ENTRY);
1418:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   do
1419:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
1420:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Set Block Size Register */
1421:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     WR_REG( SDMMC->BLOCK_SIZE,SDMMC_BLOCK_SIZE_TX_BLOCK_SIZE_Msk , \
 2413              		.loc 1 1421 0
 2414 001a 4FF44043 		mov	r3, #49152
 2415 001e C4F60103 		movt	r3, 18433
 2416 0022 FA88     		ldrh	r2, [r7, #6]	@ movhi
 2417 0024 4FEA0252 		lsl	r2, r2, #20
 2418 0028 4FEA1252 		lsr	r2, r2, #20
 2419 002c 91B2     		uxth	r1, r2
 2420 002e 4FF44042 		mov	r2, #49152
 2421 0032 C4F60102 		movt	r2, 18433
 2422 0036 9288     		ldrh	r2, [r2, #4]	@ movhi
 2423 0038 92B2     		uxth	r2, r2
 2424 003a 22F47F62 		bic	r2, r2, #4080
 2425 003e 22F00F02 		bic	r2, r2, #15
 2426 0042 92B2     		uxth	r2, r2
 2427 0044 0A43     		orrs	r2, r2, r1
 2428 0046 92B2     		uxth	r2, r2
 2429 0048 9A80     		strh	r2, [r3, #4]	@ movhi
1422:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****             SDMMC_BLOCK_SIZE_TX_BLOCK_SIZE_Pos,BlockSize );
1423:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Clear the Multi Block Select bit */
1424:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     CLR_BIT( SDMMC->TRANSFER_MODE,SDMMC_TRANSFER_MODE_MULTI_BLOCK_SELECT_Pos);
 2430              		.loc 1 1424 0
 2431 004a 4FF44043 		mov	r3, #49152
 2432 004e C4F60103 		movt	r3, 18433
 2433 0052 4FF44042 		mov	r2, #49152
 2434 0056 C4F60102 		movt	r2, 18433
 2435 005a 9289     		ldrh	r2, [r2, #12]	@ movhi
 2436 005c 92B2     		uxth	r2, r2
 2437 005e 22F02002 		bic	r2, r2, #32
 2438 0062 92B2     		uxth	r2, r2
 2439 0064 9A81     		strh	r2, [r3, #12]	@ movhi
1425:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Clear the ACMD Enable bit*/
1426:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     CLR_BIT( SDMMC->TRANSFER_MODE,SDMMC_TRANSFER_MODE_ACMD_EN_Pos);
 2440              		.loc 1 1426 0
 2441 0066 4FF44043 		mov	r3, #49152
 2442 006a C4F60103 		movt	r3, 18433
 2443 006e 4FF44042 		mov	r2, #49152
 2444 0072 C4F60102 		movt	r2, 18433
 2445 0076 9289     		ldrh	r2, [r2, #12]	@ movhi
 2446 0078 92B2     		uxth	r2, r2
 2447 007a 22F00402 		bic	r2, r2, #4
 2448 007e 92B2     		uxth	r2, r2
 2449 0080 9A81     		strh	r2, [r3, #12]	@ movhi
1427:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Clear the Block Count Enable bit*/
1428:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     CLR_BIT( SDMMC->TRANSFER_MODE,SDMMC_TRANSFER_MODE_BLOCK_COUNT_EN_Pos);
 2450              		.loc 1 1428 0
 2451 0082 4FF44043 		mov	r3, #49152
 2452 0086 C4F60103 		movt	r3, 18433
 2453 008a 4FF44042 		mov	r2, #49152
 2454 008e C4F60102 		movt	r2, 18433
 2455 0092 9289     		ldrh	r2, [r2, #12]	@ movhi
 2456 0094 92B2     		uxth	r2, r2
 2457 0096 22F00202 		bic	r2, r2, #2
 2458 009a 92B2     		uxth	r2, r2
 2459 009c 9A81     		strh	r2, [r3, #12]	@ movhi
1429:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
1430:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** #if SDMMC_UVP_TEST
1431:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if (Test_TriggerInterrupt.Trigger_TC13Error == TRUE)
1432:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
1433:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Test_TriggerInterrupt.Trigger_CommandErrorInterrupt =TRUE ;
1434:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
1435:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if (Test_TriggerInterrupt.Trigger_TC20Error == TRUE)
1436:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
1437:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Test_TriggerInterrupt.Trigger_CommandErrorInterrupt =TRUE ;
1438:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
1439:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if (Test_TriggerInterrupt.Trigger_Command42Error == TRUE)
1440:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
1441:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Test_TriggerInterrupt.Trigger_CommandErrorInterrupt =TRUE ;
1442:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
1443:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if (Test_TriggerInterrupt.Trigger_CommandErrorInterrupt == TRUE)
1444:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
1445:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Disable the Command Complete Status Interrupt */
1446:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC->EN_INT_STATUS_NORM &= ~(SDMMC_EN_INT_STATUS_NORM_CMD_COMPLETE_EN_Msk);
1447:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Disable the Command Complete Signal Interrupt */
1448:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC->EN_INT_SIGNAL_NORM &= ~( SDMMC_EN_INT_SIGNAL_NORM_CMD_COMPLETE_EN_Msk);
1449:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
1450:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Disable the Buffer Ready Status & Signal Interrupt */
1451:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC->EN_INT_STATUS_NORM &= ~(SDMMC_EN_INT_STATUS_NORM_BUFF_READ_READY_EN_Msk);
1452:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC->EN_INT_SIGNAL_NORM &= ~(SDMMC_EN_INT_STATUS_NORM_BUFF_READ_READY_EN_Msk);
1453:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Disable the Buffer Write  Status & Signal Interrupt */
1454:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC->EN_INT_STATUS_NORM &= ~(SDMMC_EN_INT_STATUS_NORM_BUFF_WRITE_READY_EN_Msk);
1455:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC->EN_INT_SIGNAL_NORM &= ~(SDMMC_EN_INT_STATUS_NORM_BUFF_WRITE_READY_EN_Msk);
1456:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****        /* Disable the Transfer Complete  Status & Signal Interrupt */
1457:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC->EN_INT_STATUS_NORM &= ~(SDMMC_EN_INT_STATUS_NORM_TX_COMPLETE_EN_Msk);
1458:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC->EN_INT_SIGNAL_NORM &= ~(SDMMC_EN_INT_SIGNAL_NORM_TX_COMPLETE_EN_Msk);
1459:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
1460:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if (Test_TriggerInterrupt.Trigger_DataErrorInterrupt == TRUE)
1461:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
1462:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Disable the Buffer Ready Status & Signal Interrupt */
1463:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC->EN_INT_STATUS_NORM &= ~(SDMMC_EN_INT_STATUS_NORM_BUFF_READ_READY_EN_Msk);
1464:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC->EN_INT_SIGNAL_NORM &= ~(SDMMC_EN_INT_STATUS_NORM_BUFF_READ_READY_EN_Msk);
1465:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Disable the Buffer Ready Status & Signal Interrupt */
1466:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC->EN_INT_STATUS_NORM &= ~(SDMMC_EN_INT_STATUS_NORM_BUFF_WRITE_READY_EN_Msk);
1467:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC->EN_INT_SIGNAL_NORM &= ~(SDMMC_EN_INT_STATUS_NORM_BUFF_WRITE_READY_EN_Msk);
1468:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
1469:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** #endif
1470:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Send Single Block Transfer Command */
1471:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     Status = (uint32_t)SDMMC003_lSendCommand( CommandPtr, Argument, \
1472:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                               SDMMC003_RESPONSE_R1, &CardStatus);
 2460              		.loc 1 1472 0
 2461 009e 07F11003 		add	r3, r7, #16
1471:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     Status = (uint32_t)SDMMC003_lSendCommand( CommandPtr, Argument, \
 2462              		.loc 1 1471 0
 2463 00a2 F868     		ldr	r0, [r7, #12]
 2464 00a4 B968     		ldr	r1, [r7, #8]
 2465 00a6 4FF00102 		mov	r2, #1
 2466 00aa FFF7FEFF 		bl	SDMMC003_lSendCommand
 2467 00ae 7861     		str	r0, [r7, #20]
1473:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_20_1>>> */
1474:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if (Status != (uint32_t)DAVEApp_SUCCESS)
 2468              		.loc 1 1474 0
 2469 00b0 7B69     		ldr	r3, [r7, #20]
 2470 00b2 002B     		cmp	r3, #0
1475:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
1476:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       break;
1477:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
1478:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   } while(0);
1479:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   FUNCTION_EXIT(GID_SDMMC00x, (uint32_t)SDMMC003_FUNCTION_EXIT);
1480:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   return Status;
 2471              		.loc 1 1480 0
 2472 00b4 7B69     		ldr	r3, [r7, #20]
1481:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** }
 2473              		.loc 1 1481 0
 2474 00b6 1846     		mov	r0, r3
 2475 00b8 07F11807 		add	r7, r7, #24
 2476 00bc BD46     		mov	sp, r7
 2477 00be 80BD     		pop	{r7, pc}
 2478              		.cfi_endproc
 2479              	.LFE137:
 2481              		.section	.text.SDMMC003_lConfigureRegForMultiTransfer,"ax",%progbits
 2482              		.align	2
 2483              		.global	SDMMC003_lConfigureRegForMultiTransfer
 2484              		.thumb
 2485              		.thumb_func
 2487              	SDMMC003_lConfigureRegForMultiTransfer:
 2488              	.LFB138:
1482:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
1483:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_21>>> */
1484:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*
1485:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  * This function configures the registers for Multiple Block Transfer.
1486:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  */
1487:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** status_t SDMMC003_lConfigureRegForMultiTransfer
1488:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** (
1489:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   uint32_t *TmpAddrPtr,
1490:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   uint32_t NumberOfBlocks,
1491:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   const SDMMC003_CommandType *CommandPtr
1492:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** )
1493:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** {
 2489              		.loc 1 1493 0
 2490              		.cfi_startproc
 2491              		@ args = 0, pretend = 0, frame = 24
 2492              		@ frame_needed = 1, uses_anonymous_args = 0
 2493 0000 80B5     		push	{r7, lr}
 2494              	.LCFI61:
 2495              		.cfi_def_cfa_offset 8
 2496              		.cfi_offset 7, -8
 2497              		.cfi_offset 14, -4
 2498 0002 86B0     		sub	sp, sp, #24
 2499              	.LCFI62:
 2500              		.cfi_def_cfa_offset 32
 2501 0004 00AF     		add	r7, sp, #0
 2502              	.LCFI63:
 2503              		.cfi_def_cfa_register 7
 2504 0006 F860     		str	r0, [r7, #12]
 2505 0008 B960     		str	r1, [r7, #8]
 2506 000a 7A60     		str	r2, [r7, #4]
1494:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   status_t Status;
1495:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   uint32_t CardStatus = 0;
 2507              		.loc 1 1495 0
 2508 000c 4FF00003 		mov	r3, #0
 2509 0010 3B61     		str	r3, [r7, #16]
1496:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   FUNCTION_ENTRY(GID_SDMMC00x, (uint32_t)SDMMC003_FUNCTION_ENTRY);
1497:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   do
1498:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
1499:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Block Addressing */
1500:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* <<<DD_SDMMC_nonAPI_21_1>>> */
1501:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if ((SDMMC003_Handle.CardType & SDMMC003_BLOCK_ADDRESSING) == 0UL)
 2510              		.loc 1 1501 0
 2511 0012 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 2512 0016 C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 2513 001a 9B78     		ldrb	r3, [r3, #2]
 2514 001c DBB2     		uxtb	r3, r3
 2515 001e 03F00803 		and	r3, r3, #8
 2516 0022 002B     		cmp	r3, #0
 2517 0024 05D1     		bne	.L153
1502:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
1503:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       *TmpAddrPtr *= 512UL;
 2518              		.loc 1 1503 0
 2519 0026 FB68     		ldr	r3, [r7, #12]
 2520 0028 1B68     		ldr	r3, [r3, #0]
 2521 002a 4FEA4322 		lsl	r2, r3, #9
 2522 002e FB68     		ldr	r3, [r7, #12]
 2523 0030 1A60     		str	r2, [r3, #0]
 2524              	.L153:
1504:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
1505:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Set Block Size Register */
1506:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     WR_REG( SDMMC->BLOCK_SIZE,SDMMC_BLOCK_SIZE_TX_BLOCK_SIZE_Msk , \
 2525              		.loc 1 1506 0
 2526 0032 4FF44043 		mov	r3, #49152
 2527 0036 C4F60103 		movt	r3, 18433
 2528 003a 4FF44042 		mov	r2, #49152
 2529 003e C4F60102 		movt	r2, 18433
 2530 0042 9288     		ldrh	r2, [r2, #4]	@ movhi
 2531 0044 92B2     		uxth	r2, r2
 2532 0046 22F47F62 		bic	r2, r2, #4080
 2533 004a 22F00F02 		bic	r2, r2, #15
 2534 004e 92B2     		uxth	r2, r2
 2535 0050 42F40072 		orr	r2, r2, #512
 2536 0054 92B2     		uxth	r2, r2
 2537 0056 9A80     		strh	r2, [r3, #4]	@ movhi
1507:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****             SDMMC_BLOCK_SIZE_TX_BLOCK_SIZE_Pos,SDMMC003_TX_BLOCK_SIZE_VALUE);
1508:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Set Transfer Mode Register */
1509:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SET_BIT( SDMMC->TRANSFER_MODE,SDMMC_TRANSFER_MODE_MULTI_BLOCK_SELECT_Pos);
 2538              		.loc 1 1509 0
 2539 0058 4FF44043 		mov	r3, #49152
 2540 005c C4F60103 		movt	r3, 18433
 2541 0060 4FF44042 		mov	r2, #49152
 2542 0064 C4F60102 		movt	r2, 18433
 2543 0068 9289     		ldrh	r2, [r2, #12]	@ movhi
 2544 006a 92B2     		uxth	r2, r2
 2545 006c 42F02002 		orr	r2, r2, #32
 2546 0070 92B2     		uxth	r2, r2
 2547 0072 9A81     		strh	r2, [r3, #12]	@ movhi
1510:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SET_BIT( SDMMC->TRANSFER_MODE,SDMMC_TRANSFER_MODE_ACMD_EN_Pos);
 2548              		.loc 1 1510 0
 2549 0074 4FF44043 		mov	r3, #49152
 2550 0078 C4F60103 		movt	r3, 18433
 2551 007c 4FF44042 		mov	r2, #49152
 2552 0080 C4F60102 		movt	r2, 18433
 2553 0084 9289     		ldrh	r2, [r2, #12]	@ movhi
 2554 0086 92B2     		uxth	r2, r2
 2555 0088 42F00402 		orr	r2, r2, #4
 2556 008c 92B2     		uxth	r2, r2
 2557 008e 9A81     		strh	r2, [r3, #12]	@ movhi
1511:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SET_BIT( SDMMC->TRANSFER_MODE,SDMMC_TRANSFER_MODE_BLOCK_COUNT_EN_Pos);
 2558              		.loc 1 1511 0
 2559 0090 4FF44043 		mov	r3, #49152
 2560 0094 C4F60103 		movt	r3, 18433
 2561 0098 4FF44042 		mov	r2, #49152
 2562 009c C4F60102 		movt	r2, 18433
 2563 00a0 9289     		ldrh	r2, [r2, #12]	@ movhi
 2564 00a2 92B2     		uxth	r2, r2
 2565 00a4 42F00202 		orr	r2, r2, #2
 2566 00a8 92B2     		uxth	r2, r2
 2567 00aa 9A81     		strh	r2, [r3, #12]	@ movhi
1512:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
1513:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Set Block Count Register */
1514:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     WR_REG( SDMMC->BLOCK_COUNT, SDMMC_BLOCK_COUNT_BLOCK_COUNT_Msk ,   \
 2568              		.loc 1 1514 0
 2569 00ac 4FF44043 		mov	r3, #49152
 2570 00b0 C4F60103 		movt	r3, 18433
 2571 00b4 DB88     		ldrh	r3, [r3, #6]	@ movhi
 2572 00b6 4FF44043 		mov	r3, #49152
 2573 00ba C4F60103 		movt	r3, 18433
 2574 00be BA68     		ldr	r2, [r7, #8]
 2575 00c0 92B2     		uxth	r2, r2
 2576 00c2 DA80     		strh	r2, [r3, #6]	@ movhi
1515:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****             SDMMC_BLOCK_COUNT_BLOCK_COUNT_Pos, NumberOfBlocks);
1516:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
1517:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Enable ACMD 12 Interrupt Signal  */
1518:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC->EN_INT_SIGNAL_ERR &= ~SDMMC_EN_INT_SIGNAL_ERR_ACMD_ERR_EN_Msk;
 2577              		.loc 1 1518 0
 2578 00c4 4FF44043 		mov	r3, #49152
 2579 00c8 C4F60103 		movt	r3, 18433
 2580 00cc 4FF44042 		mov	r2, #49152
 2581 00d0 C4F60102 		movt	r2, 18433
 2582 00d4 528F     		ldrh	r2, [r2, #58]	@ movhi
 2583 00d6 92B2     		uxth	r2, r2
 2584 00d8 22F48072 		bic	r2, r2, #256
 2585 00dc 92B2     		uxth	r2, r2
 2586 00de 5A87     		strh	r2, [r3, #58]	@ movhi
1519:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC->EN_INT_SIGNAL_ERR |= SDMMC_EN_INT_SIGNAL_ERR_ACMD_ERR_EN_Msk;
 2587              		.loc 1 1519 0
 2588 00e0 4FF44043 		mov	r3, #49152
 2589 00e4 C4F60103 		movt	r3, 18433
 2590 00e8 4FF44042 		mov	r2, #49152
 2591 00ec C4F60102 		movt	r2, 18433
 2592 00f0 528F     		ldrh	r2, [r2, #58]	@ movhi
 2593 00f2 92B2     		uxth	r2, r2
 2594 00f4 42F48072 		orr	r2, r2, #256
 2595 00f8 92B2     		uxth	r2, r2
 2596 00fa 5A87     		strh	r2, [r3, #58]	@ movhi
1520:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
1521:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** #if SDMMC_UVP_TEST 
1522:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if ( Test_TriggerInterrupt.Trigger_TC8Error == TRUE)
1523:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
1524:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Test_TriggerInterrupt.Trigger_CommandErrorInterrupt = TRUE;
1525:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
1526:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if ( Test_TriggerInterrupt.Trigger_TC10Error == TRUE)
1527:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
1528:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Test_TriggerInterrupt.Trigger_CommandErrorInterrupt = TRUE;
1529:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
1530:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if ( Test_TriggerInterrupt.Trigger_TC17Error == TRUE)
1531:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
1532:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Test_TriggerInterrupt.Trigger_CommandErrorInterrupt = TRUE;
1533:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
1534:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
1535:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if (Test_TriggerInterrupt.Trigger_CommandErrorInterrupt == TRUE)
1536:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
1537:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Disable the Command Complete Status Interrupt */
1538:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC->EN_INT_STATUS_NORM &= ~(SDMMC_EN_INT_STATUS_NORM_CMD_COMPLETE_EN_Msk);
1539:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Disable the Command Complete Signal Interrupt */
1540:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC->EN_INT_SIGNAL_NORM &= ~( SDMMC_EN_INT_SIGNAL_NORM_CMD_COMPLETE_EN_Msk);
1541:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Disable the Buffer Ready Status & Signal Interrupt */
1542:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC->EN_INT_STATUS_NORM &= ~(SDMMC_EN_INT_STATUS_NORM_BUFF_READ_READY_EN_Msk);
1543:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC->EN_INT_SIGNAL_NORM &= ~(SDMMC_EN_INT_STATUS_NORM_BUFF_READ_READY_EN_Msk);
1544:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Disable the Buffer Write Status & Signal Interrupt */
1545:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC->EN_INT_STATUS_NORM &= ~(SDMMC_EN_INT_STATUS_NORM_BUFF_WRITE_READY_EN_Msk);
1546:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC->EN_INT_SIGNAL_NORM &= ~(SDMMC_EN_INT_STATUS_NORM_BUFF_WRITE_READY_EN_Msk);
1547:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Disable the Transfer Complete Status & Signal Interrupt */
1548:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC->EN_INT_STATUS_NORM &= ~(SDMMC_EN_INT_STATUS_NORM_TX_COMPLETE_EN_Msk);
1549:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC->EN_INT_SIGNAL_NORM &= ~(SDMMC_EN_INT_SIGNAL_NORM_TX_COMPLETE_EN_Msk);
1550:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
1551:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if (Test_TriggerInterrupt.Trigger_DataErrorInterrupt == TRUE)
1552:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
1553:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Disable the Buffer Ready Status & Signal Interrupt */
1554:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC->EN_INT_STATUS_NORM &= ~(SDMMC_EN_INT_STATUS_NORM_BUFF_READ_READY_EN_Msk);
1555:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC->EN_INT_SIGNAL_NORM &= ~(SDMMC_EN_INT_STATUS_NORM_BUFF_READ_READY_EN_Msk);
1556:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
1557:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****        /* Disable the Buffer Ready Status & Signal Interrupt */
1558:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC->EN_INT_STATUS_NORM &= ~(SDMMC_EN_INT_STATUS_NORM_BUFF_WRITE_READY_EN_Msk);
1559:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC->EN_INT_SIGNAL_NORM &= ~(SDMMC_EN_INT_STATUS_NORM_BUFF_WRITE_READY_EN_Msk);
1560:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
1561:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** #endif
1562:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****    /* Send Multiple Block  Transfer Command */
1563:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     Status = SDMMC003_lSendCommand( CommandPtr,  *TmpAddrPtr, \
 2597              		.loc 1 1563 0
 2598 00fc FB68     		ldr	r3, [r7, #12]
 2599 00fe 1A68     		ldr	r2, [r3, #0]
1564:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                     SDMMC003_RESPONSE_R1, &CardStatus );
 2600              		.loc 1 1564 0
 2601 0100 07F11003 		add	r3, r7, #16
1563:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     Status = SDMMC003_lSendCommand( CommandPtr,  *TmpAddrPtr, \
 2602              		.loc 1 1563 0
 2603 0104 7868     		ldr	r0, [r7, #4]
 2604 0106 1146     		mov	r1, r2
 2605 0108 4FF00102 		mov	r2, #1
 2606 010c FFF7FEFF 		bl	SDMMC003_lSendCommand
 2607 0110 7861     		str	r0, [r7, #20]
1565:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_21_2>>> */
1566:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if (Status != (uint32_t)DAVEApp_SUCCESS)
 2608              		.loc 1 1566 0
 2609 0112 7B69     		ldr	r3, [r7, #20]
 2610 0114 002B     		cmp	r3, #0
1567:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
1568:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       break;
1569:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
1570:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   } while(0);
1571:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   FUNCTION_EXIT(GID_SDMMC00x, (uint32_t)SDMMC003_FUNCTION_EXIT);
1572:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   return Status;
 2611              		.loc 1 1572 0
 2612 0116 7B69     		ldr	r3, [r7, #20]
1573:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** }
 2613              		.loc 1 1573 0
 2614 0118 1846     		mov	r0, r3
 2615 011a 07F11807 		add	r7, r7, #24
 2616 011e BD46     		mov	sp, r7
 2617 0120 80BD     		pop	{r7, pc}
 2618              		.cfi_endproc
 2619              	.LFE138:
 2621 0122 00BF     		.section	.text.SDMMC003_lMultiBlockTransfer,"ax",%progbits
 2622              		.align	2
 2623              		.global	SDMMC003_lMultiBlockTransfer
 2624              		.thumb
 2625              		.thumb_func
 2627              	SDMMC003_lMultiBlockTransfer:
 2628              	.LFB139:
1574:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
1575:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_22>>> */
1576:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*
1577:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  * This function is used to transfer multiple blocks of data.
1578:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  */
1579:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** status_t SDMMC003_lMultiBlockTransfer( uint32_t *AddrPtr,uint32_t NumberOfBlocks,\
1580:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                        const SDMMC003_CommandType *CommandPtr, \
1581:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                        uint32_t *BufferPtr, \
1582:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                        SDMMC003_DataTrasferType TransferMode
1583:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                      )
1584:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** {
 2629              		.loc 1 1584 0
 2630              		.cfi_startproc
 2631              		@ args = 4, pretend = 0, frame = 24
 2632              		@ frame_needed = 1, uses_anonymous_args = 0
 2633 0000 80B5     		push	{r7, lr}
 2634              	.LCFI64:
 2635              		.cfi_def_cfa_offset 8
 2636              		.cfi_offset 7, -8
 2637              		.cfi_offset 14, -4
 2638 0002 86B0     		sub	sp, sp, #24
 2639              	.LCFI65:
 2640              		.cfi_def_cfa_offset 32
 2641 0004 00AF     		add	r7, sp, #0
 2642              	.LCFI66:
 2643              		.cfi_def_cfa_register 7
 2644 0006 F860     		str	r0, [r7, #12]
 2645 0008 B960     		str	r1, [r7, #8]
 2646 000a 7A60     		str	r2, [r7, #4]
 2647 000c 3B60     		str	r3, [r7, #0]
1585:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   status_t Status ;
1586:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   SDMMC003_Handle.TransferInterruptError = SDMMC003_ERROR;
 2648              		.loc 1 1586 0
 2649 000e 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 2650 0012 C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 2651 0016 4FF00102 		mov	r2, #1
 2652 001a 5A71     		strb	r2, [r3, #5]
1587:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   do
1588:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
1589:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Configure Registers for Multi block transfer*/
1590:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     Status = SDMMC003_lConfigureRegForMultiTransfer( AddrPtr, \
 2653              		.loc 1 1590 0
 2654 001c F868     		ldr	r0, [r7, #12]
 2655 001e B968     		ldr	r1, [r7, #8]
 2656 0020 7A68     		ldr	r2, [r7, #4]
 2657 0022 FFF7FEFF 		bl	SDMMC003_lConfigureRegForMultiTransfer
 2658 0026 7861     		str	r0, [r7, #20]
1591:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                                     NumberOfBlocks,CommandPtr );
1592:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_22_1>>> */
1593:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if (Status != (uint32_t)DAVEApp_SUCCESS)
 2659              		.loc 1 1593 0
 2660 0028 7B69     		ldr	r3, [r7, #20]
 2661 002a 002B     		cmp	r3, #0
 2662 002c 14D0     		beq	.L159
1594:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
1595:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****        break;
 2663              		.loc 1 1595 0
 2664 002e 2FE0     		b	.L158
 2665              	.L162:
1596:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
1597:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** #if SDMMC_UVP_TEST
1598:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if (Test_TriggerInterrupt.Trigger_DataErrorInterrupt == TRUE)
1599:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
1600:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Forcefully trigger the Data Crc Error Interrupt */
1601:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC->FORCE_EVENT_ERR_STATUS = 0x0020 ;
1602:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
1603:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** #endif
1604:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  /* Read/Write  Block Data  */
1605:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_22_2>>> */
1606:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     while( NumberOfBlocks > 0 )
1607:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
1608:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Perform Transfer */
1609:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Status = SDMMC003_lDataTransfer( BufferPtr, TransferMode,  \
 2666              		.loc 1 1609 0
 2667 0030 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 2668 0034 3868     		ldr	r0, [r7, #0]
 2669 0036 1946     		mov	r1, r3
 2670 0038 4FF08002 		mov	r2, #128
 2671 003c FFF7FEFF 		bl	SDMMC003_lDataTransfer
 2672 0040 7861     		str	r0, [r7, #20]
1610:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                        SDMMC003_NUM_QUADLETS_IN_BLOCK);
1611:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_22_3>>> */
1612:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       if (Status != (uint32_t)DAVEApp_SUCCESS)
 2673              		.loc 1 1612 0
 2674 0042 7B69     		ldr	r3, [r7, #20]
 2675 0044 002B     		cmp	r3, #0
 2676 0046 0BD1     		bne	.L165
 2677              	.L160:
1613:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       {
1614:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         break;
1615:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       }
1616:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Decrement Number of blocks Variable */
1617:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       NumberOfBlocks--;
 2678              		.loc 1 1617 0
 2679 0048 BB68     		ldr	r3, [r7, #8]
 2680 004a 03F1FF33 		add	r3, r3, #-1
 2681 004e BB60     		str	r3, [r7, #8]
1618:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Pointer pointing to the next Block Pointer*/
1619:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       BufferPtr += SDMMC003_NUM_QUADLETS_IN_BLOCK;
 2682              		.loc 1 1619 0
 2683 0050 3B68     		ldr	r3, [r7, #0]
 2684 0052 03F50073 		add	r3, r3, #512
 2685 0056 3B60     		str	r3, [r7, #0]
 2686              	.L159:
1606:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     while( NumberOfBlocks > 0 )
 2687              		.loc 1 1606 0 discriminator 1
 2688 0058 BB68     		ldr	r3, [r7, #8]
 2689 005a 002B     		cmp	r3, #0
 2690 005c E8D1     		bne	.L162
 2691 005e 00E0     		b	.L161
 2692              	.L165:
1614:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         break;
 2693              		.loc 1 1614 0
 2694 0060 00BF     		nop
 2695              	.L161:
1620:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }/* End of " while( NumberOfBlocks > 0 )"*/
1621:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_22_4>>> */
1622:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if ( Status == (uint32_t)DAVEApp_SUCCESS)
 2696              		.loc 1 1622 0
 2697 0062 7B69     		ldr	r3, [r7, #20]
 2698 0064 002B     		cmp	r3, #0
 2699 0066 07D1     		bne	.L163
1623:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
1624:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****      /* Block on Transfer Complete Interrupt */
1625:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_22_5>>> */      
1626:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Timeout of 5ms.*/
1627:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Status = SDMMC003_lTransferDelay(SDMMC003_DELAY_IN_TRANSFER);
 2700              		.loc 1 1627 0
 2701 0068 4FF47A70 		mov	r0, #1000
 2702 006c FFF7FEFF 		bl	SDMMC003_lTransferDelay
 2703 0070 7861     		str	r0, [r7, #20]
1628:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       if(Status != (uint32_t) DAVEApp_SUCCESS)
 2704              		.loc 1 1628 0
 2705 0072 7B69     		ldr	r3, [r7, #20]
 2706 0074 002B     		cmp	r3, #0
 2707 0076 0AD1     		bne	.L166
 2708              	.L163:
1629:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       {
1630:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         ERROR(GID_SDMMC00x, Status, 0, NULL);
1631:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         break;
1632:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       }
1633:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_22_6>>> */
1634:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }/* End of " if ( Status == (uint32_t)DAVEApp_SUCCESS)"*/
1635:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Check Transfer Completed Successfully */
1636:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* Check ACMD status*/
1637:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_22_7>>> */
1638:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if(SDMMC003_Handle.AcmdInterruptError == SDMMC003_ACMD12_ERROR)
 2709              		.loc 1 1638 0
 2710 0078 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 2711 007c C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 2712 0080 9B79     		ldrb	r3, [r3, #6]
 2713 0082 DBB2     		uxtb	r3, r3
 2714 0084 092B     		cmp	r3, #9
 2715 0086 03D1     		bne	.L158
1639:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
1640:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Call ACMD12 Error Recovery */
1641:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC003_lAcmdErrorRecovery();
 2716              		.loc 1 1641 0
 2717 0088 FFF7FEFF 		bl	SDMMC003_lAcmdErrorRecovery
 2718 008c 00E0     		b	.L158
 2719              	.L166:
1631:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         break;
 2720              		.loc 1 1631 0
 2721 008e 00BF     		nop
 2722              	.L158:
1642:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
1643:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   } while(0);
1644:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   return Status;
 2723              		.loc 1 1644 0
 2724 0090 7B69     		ldr	r3, [r7, #20]
1645:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** }
 2725              		.loc 1 1645 0
 2726 0092 1846     		mov	r0, r3
 2727 0094 07F11807 		add	r7, r7, #24
 2728 0098 BD46     		mov	sp, r7
 2729 009a 80BD     		pop	{r7, pc}
 2730              		.cfi_endproc
 2731              	.LFE139:
 2733              		.section	.text.SDMMC003_lSingleBlockTransfer,"ax",%progbits
 2734              		.align	2
 2735              		.global	SDMMC003_lSingleBlockTransfer
 2736              		.thumb
 2737              		.thumb_func
 2739              	SDMMC003_lSingleBlockTransfer:
 2740              	.LFB140:
1646:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
1647:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_23>>> */
1648:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*
1649:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  * This function performs the  Single Block Transfer.
1650:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  */
1651:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** status_t SDMMC003_lSingleBlockTransfer
1652:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** (
1653:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   const SDMMC003_CommandType *CommandPtr,
1654:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   uint32_t Argument,
1655:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   uint16_t BlockSize,
1656:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   uint32_t *BufferPtr,
1657:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   SDMMC003_DataTrasferType TransferMode
1658:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** )
1659:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** {
 2741              		.loc 1 1659 0
 2742              		.cfi_startproc
 2743              		@ args = 4, pretend = 0, frame = 24
 2744              		@ frame_needed = 1, uses_anonymous_args = 0
 2745 0000 80B5     		push	{r7, lr}
 2746              	.LCFI67:
 2747              		.cfi_def_cfa_offset 8
 2748              		.cfi_offset 7, -8
 2749              		.cfi_offset 14, -4
 2750 0002 86B0     		sub	sp, sp, #24
 2751              	.LCFI68:
 2752              		.cfi_def_cfa_offset 32
 2753 0004 00AF     		add	r7, sp, #0
 2754              	.LCFI69:
 2755              		.cfi_def_cfa_register 7
 2756 0006 F860     		str	r0, [r7, #12]
 2757 0008 B960     		str	r1, [r7, #8]
 2758 000a 3B60     		str	r3, [r7, #0]
 2759 000c 1346     		mov	r3, r2	@ movhi
 2760 000e FB80     		strh	r3, [r7, #6]	@ movhi
1660:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   status_t Status;
1661:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   handle_t TimerId;
1662:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   do
1663:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
1664:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Configure Register  for Single Block Transfer */
1665:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     Status = SDMMC003_lConfigureForSingleTransfer(CommandPtr,Argument,BlockSize);
 2761              		.loc 1 1665 0
 2762 0010 FB88     		ldrh	r3, [r7, #6]
 2763 0012 F868     		ldr	r0, [r7, #12]
 2764 0014 B968     		ldr	r1, [r7, #8]
 2765 0016 1A46     		mov	r2, r3
 2766 0018 FFF7FEFF 		bl	SDMMC003_lConfigureForSingleTransfer
 2767 001c 7861     		str	r0, [r7, #20]
1666:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_23_1>>> */
1667:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if ((uint32_t)DAVEApp_SUCCESS != Status)
 2768              		.loc 1 1667 0
 2769 001e 7B69     		ldr	r3, [r7, #20]
 2770 0020 002B     		cmp	r3, #0
 2771 0022 5DD1     		bne	.L176
 2772              	.L168:
1668:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
1669:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       break;
1670:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
1671:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** #if SDMMC_UVP_TEST
1672:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if (Test_TriggerInterrupt.Trigger_DataErrorInterrupt == TRUE)
1673:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
1674:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Forcefully trigger the Data Crc Error Interrupt */
1675:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC->FORCE_EVENT_ERR_STATUS = 0x0020 ;
1676:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
1677:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** #endif
1678:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Perform Data Transfer */
1679:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     Status = SDMMC003_lDataTransfer(BufferPtr,TransferMode,(BlockSize/4));
 2773              		.loc 1 1679 0
 2774 0024 FB88     		ldrh	r3, [r7, #6]
 2775 0026 4FEA9303 		lsr	r3, r3, #2
 2776 002a 9BB2     		uxth	r3, r3
 2777 002c 97F82020 		ldrb	r2, [r7, #32]	@ zero_extendqisi2
 2778 0030 3868     		ldr	r0, [r7, #0]
 2779 0032 1146     		mov	r1, r2
 2780 0034 1A46     		mov	r2, r3
 2781 0036 FFF7FEFF 		bl	SDMMC003_lDataTransfer
 2782 003a 7861     		str	r0, [r7, #20]
1680:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_23_2>>> */
1681:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if (Status != (uint32_t)DAVEApp_SUCCESS)
 2783              		.loc 1 1681 0
 2784 003c 7B69     		ldr	r3, [r7, #20]
 2785 003e 002B     		cmp	r3, #0
 2786 0040 50D1     		bne	.L177
 2787              	.L170:
1682:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
1683:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       break;
1684:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
1685:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* Block on Transfer Complete Interrupt */
1686:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Timeout of 5ms.*/
1687:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     TimerId = SDMMC003_lStartTimer (SDMMC003_DELAY_IN_TRANSFER);
 2788              		.loc 1 1687 0
 2789 0042 4FF47A70 		mov	r0, #1000
 2790 0046 FFF7FEFF 		bl	SDMMC003_lStartTimer
 2791 004a 3861     		str	r0, [r7, #16]
1688:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if(0 == TimerId)
 2792              		.loc 1 1688 0
 2793 004c 3B69     		ldr	r3, [r7, #16]
 2794 004e 002B     		cmp	r3, #0
 2795 0050 03D1     		bne	.L171
1689:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
1690:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Status = (uint32_t) SDMMC003_START_TIMER_FAILED;
 2796              		.loc 1 1690 0
 2797 0052 4FF02F03 		mov	r3, #47
 2798 0056 7B61     		str	r3, [r7, #20]
1691:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       ERROR(GID_SDMMC00x, Status, 0, NULL);   
1692:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       break; 
 2799              		.loc 1 1692 0
 2800 0058 45E0     		b	.L169
 2801              	.L171:
1693:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
1694:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     do
1695:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
1696:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       if (SDMMC003_Handle.TimerExpire == 0)
 2802              		.loc 1 1696 0
 2803 005a 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 2804 005e C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 2805 0062 9B7A     		ldrb	r3, [r3, #10]
 2806 0064 DBB2     		uxtb	r3, r3
 2807 0066 002B     		cmp	r3, #0
 2808 0068 03D1     		bne	.L172
1697:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       {
1698:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         Status = (uint32_t)SDMMC003_TIMEOUT_OCCURED;
 2809              		.loc 1 1698 0
 2810 006a 4FF02E03 		mov	r3, #46
 2811 006e 7B61     		str	r3, [r7, #20]
1699:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         ERROR(GID_SDMMC00x, Status, 0, NULL);
1700:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         break;
 2812              		.loc 1 1700 0
 2813 0070 07E0     		b	.L173
 2814              	.L172:
1701:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       }
1702:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     } while (SDMMC003_ISRContext.TransferFlag == 0);
 2815              		.loc 1 1702 0
 2816 0072 40F20003 		movw	r3, #:lower16:SDMMC003_ISRContext
 2817 0076 C0F20003 		movt	r3, #:upper16:SDMMC003_ISRContext
 2818 007a 1B79     		ldrb	r3, [r3, #4]
 2819 007c DBB2     		uxtb	r3, r3
 2820 007e 002B     		cmp	r3, #0
 2821 0080 EBD0     		beq	.L171
 2822              	.L173:
1703:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC003_lStopTimer(TimerId);
 2823              		.loc 1 1703 0
 2824 0082 3869     		ldr	r0, [r7, #16]
 2825 0084 FFF7FEFF 		bl	SDMMC003_lStopTimer
1704:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC003_ISRContext.TransferFlag = 0;
 2826              		.loc 1 1704 0
 2827 0088 40F20003 		movw	r3, #:lower16:SDMMC003_ISRContext
 2828 008c C0F20003 		movt	r3, #:upper16:SDMMC003_ISRContext
 2829 0090 4FF00002 		mov	r2, #0
 2830 0094 1A71     		strb	r2, [r3, #4]
1705:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Check Transfer Complete Status */
1706:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_23_4>>> */
1707:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if (SDMMC003_Handle.TransferInterruptError == SDMMC003_TRANSFER_COMPLETE )
 2831              		.loc 1 1707 0
 2832 0096 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 2833 009a C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 2834 009e 5B79     		ldrb	r3, [r3, #5]
 2835 00a0 DBB2     		uxtb	r3, r3
 2836 00a2 1F2B     		cmp	r3, #31
 2837 00a4 03D1     		bne	.L174
1708:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
1709:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Status = (uint32_t)DAVEApp_SUCCESS;
 2838              		.loc 1 1709 0
 2839 00a6 4FF00003 		mov	r3, #0
 2840 00aa 7B61     		str	r3, [r7, #20]
 2841 00ac 1BE0     		b	.L169
 2842              	.L174:
1710:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
1711:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_23_5>>> */
1712:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     else
1713:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
1714:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC003_Handle.IssueAbort = 1;
 2843              		.loc 1 1714 0
 2844 00ae 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 2845 00b2 C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 2846 00b6 4FF00102 		mov	r2, #1
 2847 00ba DA72     		strb	r2, [r3, #11]
1715:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Status = SDMMC003_lErrorInterruptRecovery(\
 2848              		.loc 1 1715 0
 2849 00bc 40F20003 		movw	r3, #:lower16:SDMMC003_ISRContext
 2850 00c0 C0F20003 		movt	r3, #:upper16:SDMMC003_ISRContext
 2851 00c4 1B88     		ldrh	r3, [r3, #0]	@ movhi
 2852 00c6 9AB2     		uxth	r2, r3
 2853 00c8 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 2854 00cc C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 2855 00d0 DB7A     		ldrb	r3, [r3, #11]
 2856 00d2 DBB2     		uxtb	r3, r3
 2857 00d4 1046     		mov	r0, r2
 2858 00d6 1946     		mov	r1, r3
 2859 00d8 FFF7FEFF 		bl	SDMMC003_lErrorInterruptRecovery
 2860 00dc 7861     		str	r0, [r7, #20]
1716:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                     SDMMC003_ISRContext.InterruptStatusShadow, \
1717:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                     SDMMC003_Handle.IssueAbort);
1718:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       break;
 2861              		.loc 1 1718 0
 2862 00de 02E0     		b	.L169
 2863              	.L176:
1669:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       break;
 2864              		.loc 1 1669 0
 2865 00e0 00BF     		nop
 2866 00e2 00E0     		b	.L169
 2867              	.L177:
1683:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       break;
 2868              		.loc 1 1683 0
 2869 00e4 00BF     		nop
 2870              	.L169:
1719:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
1720:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   } while(0);
1721:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   return Status;
 2871              		.loc 1 1721 0
 2872 00e6 7B69     		ldr	r3, [r7, #20]
1722:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** }
 2873              		.loc 1 1722 0
 2874 00e8 1846     		mov	r0, r3
 2875 00ea 07F11807 		add	r7, r7, #24
 2876 00ee BD46     		mov	sp, r7
 2877 00f0 80BD     		pop	{r7, pc}
 2878              		.cfi_endproc
 2879              	.LFE140:
 2881 00f2 00BF     		.section	.text.SDMMC003_lCheckLockStatus,"ax",%progbits
 2882              		.align	2
 2883              		.global	SDMMC003_lCheckLockStatus
 2884              		.thumb
 2885              		.thumb_func
 2887              	SDMMC003_lCheckLockStatus:
 2888              	.LFB141:
1723:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
1724:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_24>>> */
1725:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*
1726:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  * This function checks the Lock Status .
1727:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  */
1728:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** status_t SDMMC003_lCheckLockStatus( SDMMC003_CardLockMode OperationMode )
1729:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** {
 2889              		.loc 1 1729 0
 2890              		.cfi_startproc
 2891              		@ args = 0, pretend = 0, frame = 16
 2892              		@ frame_needed = 1, uses_anonymous_args = 0
 2893 0000 80B5     		push	{r7, lr}
 2894              	.LCFI70:
 2895              		.cfi_def_cfa_offset 8
 2896              		.cfi_offset 7, -8
 2897              		.cfi_offset 14, -4
 2898 0002 84B0     		sub	sp, sp, #16
 2899              	.LCFI71:
 2900              		.cfi_def_cfa_offset 24
 2901 0004 00AF     		add	r7, sp, #0
 2902              	.LCFI72:
 2903              		.cfi_def_cfa_register 7
 2904 0006 0346     		mov	r3, r0
 2905 0008 FB71     		strb	r3, [r7, #7]
1730:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   status_t Status ;
1731:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   uint32_t LockStatus = 0;
 2906              		.loc 1 1731 0
 2907 000a 4FF00003 		mov	r3, #0
 2908 000e BB60     		str	r3, [r7, #8]
1732:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   FUNCTION_ENTRY(GID_SDMMC00x, (uint32_t)SDMMC003_FUNCTION_ENTRY);
1733:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   Status =  SDMMC003_GetLockStatus(&LockStatus);
 2909              		.loc 1 1733 0
 2910 0010 07F10803 		add	r3, r7, #8
 2911 0014 1846     		mov	r0, r3
 2912 0016 FFF7FEFF 		bl	SDMMC003_GetLockStatus
 2913 001a F860     		str	r0, [r7, #12]
1734:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   /* For Lock, Card State must be locked */
1735:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_24_1>>> */
1736:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   if (Status == (uint32_t)DAVEApp_SUCCESS)
 2914              		.loc 1 1736 0
 2915 001c FB68     		ldr	r3, [r7, #12]
 2916 001e 002B     		cmp	r3, #0
 2917 0020 16D1     		bne	.L179
1737:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
1738:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if ((LockStatus == (uint32_t)SDMMC003_CARD_IS_LOCKED) && \
 2918              		.loc 1 1738 0
 2919 0022 BB68     		ldr	r3, [r7, #8]
 2920 0024 202B     		cmp	r3, #32
 2921 0026 06D1     		bne	.L180
 2922              		.loc 1 1738 0 is_stmt 0 discriminator 1
 2923 0028 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2924 002a 002B     		cmp	r3, #0
 2925 002c 03D1     		bne	.L180
1739:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                         (OperationMode == SDMMC003_LOCK) )
1740:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
1741:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Status = (uint32_t)DAVEApp_SUCCESS;
 2926              		.loc 1 1741 0 is_stmt 1
 2927 002e 4FF00003 		mov	r3, #0
 2928 0032 FB60     		str	r3, [r7, #12]
 2929 0034 0CE0     		b	.L179
 2930              	.L180:
1742:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
1743:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_24_2>>> */
1744:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* For UnLock, Card State must be unlock */
1745:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     else if( (LockStatus == (uint32_t)SDMMC003_CARD_UNLOCKED) && \
 2931              		.loc 1 1745 0
 2932 0036 BB68     		ldr	r3, [r7, #8]
 2933 0038 212B     		cmp	r3, #33
 2934 003a 06D1     		bne	.L181
 2935              		.loc 1 1745 0 is_stmt 0 discriminator 1
 2936 003c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2937 003e 012B     		cmp	r3, #1
 2938 0040 03D1     		bne	.L181
1746:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****              (OperationMode == SDMMC003_UNLOCK) )
1747:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
1748:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Status = (uint32_t)DAVEApp_SUCCESS;
 2939              		.loc 1 1748 0 is_stmt 1
 2940 0042 4FF00003 		mov	r3, #0
 2941 0046 FB60     		str	r3, [r7, #12]
 2942 0048 02E0     		b	.L179
 2943              	.L181:
1749:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
1750:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Some Error */
1751:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     else
1752:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
1753:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Status = (uint32_t)SDMMC003_LOCK_UNLOCK_ERROR;
 2944              		.loc 1 1753 0
 2945 004a 4FF01003 		mov	r3, #16
 2946 004e FB60     		str	r3, [r7, #12]
 2947              	.L179:
1754:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
1755:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   }
1756:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   FUNCTION_EXIT(GID_SDMMC00x, (uint32_t)SDMMC003_FUNCTION_EXIT);
1757:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   return Status;
 2948              		.loc 1 1757 0
 2949 0050 FB68     		ldr	r3, [r7, #12]
1758:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** }
 2950              		.loc 1 1758 0
 2951 0052 1846     		mov	r0, r3
 2952 0054 07F11007 		add	r7, r7, #16
 2953 0058 BD46     		mov	sp, r7
 2954 005a 80BD     		pop	{r7, pc}
 2955              		.cfi_endproc
 2956              	.LFE141:
 2958              		.section	.text.SDMMC003_lSwitchBusWidth,"ax",%progbits
 2959              		.align	2
 2960              		.global	SDMMC003_lSwitchBusWidth
 2961              		.thumb
 2962              		.thumb_func
 2964              	SDMMC003_lSwitchBusWidth:
 2965              	.LFB142:
1759:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
1760:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_25>>> */
1761:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*
1762:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  * This function switches the bus width to 4-bit if is supported.
1763:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  */
1764:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** status_t SDMMC003_lSwitchBusWidth(void)
1765:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** {
 2966              		.loc 1 1765 0
 2967              		.cfi_startproc
 2968              		@ args = 0, pretend = 0, frame = 16
 2969              		@ frame_needed = 1, uses_anonymous_args = 0
 2970 0000 80B5     		push	{r7, lr}
 2971              	.LCFI73:
 2972              		.cfi_def_cfa_offset 8
 2973              		.cfi_offset 7, -8
 2974              		.cfi_offset 14, -4
 2975 0002 84B0     		sub	sp, sp, #16
 2976              	.LCFI74:
 2977              		.cfi_def_cfa_offset 24
 2978 0004 00AF     		add	r7, sp, #0
 2979              	.LCFI75:
 2980              		.cfi_def_cfa_register 7
1766:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   uint32_t Argument = 0;
 2981              		.loc 1 1766 0
 2982 0006 4FF00003 		mov	r3, #0
 2983 000a BB60     		str	r3, [r7, #8]
1767:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   status_t Status = (uint32_t)SDMMC003_ERROR;
 2984              		.loc 1 1767 0
 2985 000c 4FF00103 		mov	r3, #1
 2986 0010 FB60     		str	r3, [r7, #12]
1768:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   uint32_t CardStatus = 0;
 2987              		.loc 1 1768 0
 2988 0012 4FF00003 		mov	r3, #0
 2989 0016 7B60     		str	r3, [r7, #4]
1769:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   FUNCTION_ENTRY(GID_SDMMC00x, (uint32_t)SDMMC003_FUNCTION_ENTRY);
1770:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   do
1771:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
1772:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Switch to transfer state i.e. CMD7 */
1773:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     Status = SDMMC003_lSwitchToTransferState();
 2990              		.loc 1 1773 0
 2991 0018 FFF7FEFF 		bl	SDMMC003_lSwitchToTransferState
 2992 001c F860     		str	r0, [r7, #12]
1774:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_25_1>>> */
1775:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if( Status != (uint32_t)DAVEApp_SUCCESS )
 2993              		.loc 1 1775 0
 2994 001e FB68     		ldr	r3, [r7, #12]
 2995 0020 002B     		cmp	r3, #0
 2996 0022 68D1     		bne	.L190
 2997              	.L184:
1776:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
1777:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       break;
1778:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
1779:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Disable Card Interrupt */
1780:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     CLR_BIT( SDMMC->EN_INT_SIGNAL_NORM, SDMMC_EN_INT_STATUS_NORM_CARD_INS_EN_Pos );
 2998              		.loc 1 1780 0
 2999 0024 4FF44043 		mov	r3, #49152
 3000 0028 C4F60103 		movt	r3, 18433
 3001 002c 4FF44042 		mov	r2, #49152
 3002 0030 C4F60102 		movt	r2, 18433
 3003 0034 128F     		ldrh	r2, [r2, #56]	@ movhi
 3004 0036 92B2     		uxth	r2, r2
 3005 0038 22F04002 		bic	r2, r2, #64
 3006 003c 92B2     		uxth	r2, r2
 3007 003e 1A87     		strh	r2, [r3, #56]	@ movhi
1781:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* MMC Card */
1782:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_25_2>>> */
1783:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** #if SDMMC_SUPPORT_MMC_CARD
1784:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if ((SDMMC003_Handle.CardType & SDMMC003_MMC) != 0)
1785:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
1786:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Status = SDMMC003_lSendCommand (&(SDMMC003_MMC_COMMAND(6)), \
1787:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                       MMC_4BUS_WIDTH_ARG,\
1788:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                       SDMMC003_RESPONSE_R1, &CardStatus);
1789:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_25_3>>> */
1790:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       if (Status != (uint32_t)DAVEApp_SUCCESS)
1791:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       {
1792:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         break;
1793:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       }
1794:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
1795:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* SD card */
1796:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     else
1797:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** #endif /* SDMMC_SUPPORT_MMC_CARD*/
1798:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
1799:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_25_4>>> */
1800:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Check the Data Transfer width supported in SCR Register */
1801:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       if( !(SDMMC003_CardInfo.Scr.SdBusWidth & SDMMC003_SCR_BUS_WIDTH4_BITMASK))
 3008              		.loc 1 1801 0
 3009 0040 40F20003 		movw	r3, #:lower16:SDMMC003_CardInfo
 3010 0044 C0F20003 		movt	r3, #:upper16:SDMMC003_CardInfo
 3011 0048 93F82530 		ldrb	r3, [r3, #37]
 3012 004c C3F30303 		ubfx	r3, r3, #0, #4
 3013 0050 DBB2     		uxtb	r3, r3
 3014 0052 03F00403 		and	r3, r3, #4
 3015 0056 002B     		cmp	r3, #0
 3016 0058 4FD0     		beq	.L191
 3017              	.L186:
1802:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       {
1803:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         break;
1804:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       }
1805:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Set the Argument.*/
1806:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Argument |= SDMMC003_CardInfo.Rca << SDMMC003_ARG_RCA_BITPOS;
 3018              		.loc 1 1806 0
 3019 005a 40F20003 		movw	r3, #:lower16:SDMMC003_CardInfo
 3020 005e C0F20003 		movt	r3, #:upper16:SDMMC003_CardInfo
 3021 0062 9B8D     		ldrh	r3, [r3, #44]
 3022 0064 4FEA0343 		lsl	r3, r3, #16
 3023 0068 BA68     		ldr	r2, [r7, #8]
 3024 006a 1343     		orrs	r3, r3, r2
 3025 006c BB60     		str	r3, [r7, #8]
1807:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Send Application Specific Command */
1808:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Status = SDMMC003_lSendCommand( &(SDMMC003_COMMON_COMMAND(55)), \
 3026              		.loc 1 1808 0
 3027 006e 40F20003 		movw	r3, #:lower16:SDMMC003_SDHashTable
 3028 0072 C0F20003 		movt	r3, #:upper16:SDMMC003_SDHashTable
 3029 0076 93F83730 		ldrb	r3, [r3, #55]	@ zero_extendqisi2
 3030 007a 4FEA4302 		lsl	r2, r3, #1
 3031 007e 40F20003 		movw	r3, #:lower16:SDMMC003_Command
 3032 0082 C0F20003 		movt	r3, #:upper16:SDMMC003_Command
 3033 0086 D218     		adds	r2, r2, r3
1809:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                       Argument, SDMMC003_RESPONSE_R1, \
1810:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                       &CardStatus);
 3034              		.loc 1 1810 0
 3035 0088 07F10403 		add	r3, r7, #4
1808:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Status = SDMMC003_lSendCommand( &(SDMMC003_COMMON_COMMAND(55)), \
 3036              		.loc 1 1808 0
 3037 008c 1046     		mov	r0, r2
 3038 008e B968     		ldr	r1, [r7, #8]
 3039 0090 4FF00102 		mov	r2, #1
 3040 0094 FFF7FEFF 		bl	SDMMC003_lSendCommand
 3041 0098 F860     		str	r0, [r7, #12]
1811:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_25_5>>> */
1812:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       if (Status != (uint32_t)DAVEApp_SUCCESS)
 3042              		.loc 1 1812 0
 3043 009a FB68     		ldr	r3, [r7, #12]
 3044 009c 002B     		cmp	r3, #0
 3045 009e 2ED1     		bne	.L192
 3046              	.L187:
1813:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       {
1814:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         break;
1815:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       }
1816:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Send ACMD6 to switch the bus width. */
1817:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Status = SDMMC003_lSendCommand( &(SDMMC003_SD_COMMAND(58)), \
 3047              		.loc 1 1817 0
 3048 00a0 40F20003 		movw	r3, #:lower16:SDMMC003_SDHashTable
 3049 00a4 C0F20003 		movt	r3, #:upper16:SDMMC003_SDHashTable
 3050 00a8 93F83A30 		ldrb	r3, [r3, #58]	@ zero_extendqisi2
 3051 00ac 4FEA4302 		lsl	r2, r3, #1
 3052 00b0 40F20003 		movw	r3, #:lower16:SDMMC003_Command
 3053 00b4 C0F20003 		movt	r3, #:upper16:SDMMC003_Command
 3054 00b8 D218     		adds	r2, r2, r3
1818:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                       SDMMC003_SD_4BUS_WIDTH_ARG, \
1819:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                       SDMMC003_RESPONSE_R1, \
1820:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                       &CardStatus);
 3055              		.loc 1 1820 0
 3056 00ba 07F10403 		add	r3, r7, #4
1817:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Status = SDMMC003_lSendCommand( &(SDMMC003_SD_COMMAND(58)), \
 3057              		.loc 1 1817 0
 3058 00be 1046     		mov	r0, r2
 3059 00c0 4FF00201 		mov	r1, #2
 3060 00c4 4FF00102 		mov	r2, #1
 3061 00c8 FFF7FEFF 		bl	SDMMC003_lSendCommand
 3062 00cc F860     		str	r0, [r7, #12]
1821:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_25_6>>> */
1822:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       if (Status != (uint32_t)DAVEApp_SUCCESS)
 3063              		.loc 1 1822 0
 3064 00ce FB68     		ldr	r3, [r7, #12]
 3065 00d0 002B     		cmp	r3, #0
 3066 00d2 16D1     		bne	.L193
 3067              	.L188:
1823:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       {
1824:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         break;
1825:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       }
1826:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
1827:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Set Data Transfer Width  in Host Control Register. */
1828:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SET_BIT( SDMMC->HOST_CTRL,SDMMC_HOST_CTRL_DATA_TX_WIDTH_Pos);
 3068              		.loc 1 1828 0
 3069 00d4 4FF44043 		mov	r3, #49152
 3070 00d8 C4F60103 		movt	r3, 18433
 3071 00dc 4FF44042 		mov	r2, #49152
 3072 00e0 C4F60102 		movt	r2, 18433
 3073 00e4 92F82820 		ldrb	r2, [r2, #40]
 3074 00e8 D2B2     		uxtb	r2, r2
 3075 00ea 42F00202 		orr	r2, r2, #2
 3076 00ee D2B2     		uxtb	r2, r2
 3077 00f0 83F82820 		strb	r2, [r3, #40]
 3078 00f4 06E0     		b	.L185
 3079              	.L190:
1777:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       break;
 3080              		.loc 1 1777 0
 3081 00f6 00BF     		nop
 3082 00f8 04E0     		b	.L185
 3083              	.L191:
1803:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         break;
 3084              		.loc 1 1803 0
 3085 00fa 00BF     		nop
 3086 00fc 02E0     		b	.L185
 3087              	.L192:
1814:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         break;
 3088              		.loc 1 1814 0
 3089 00fe 00BF     		nop
 3090 0100 00E0     		b	.L185
 3091              	.L193:
1824:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         break;
 3092              		.loc 1 1824 0
 3093 0102 00BF     		nop
 3094              	.L185:
1829:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   } while(0);
1830:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   FUNCTION_EXIT(GID_SDMMC00x, (uint32_t)SDMMC003_FUNCTION_EXIT);
1831:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   return Status;
 3095              		.loc 1 1831 0
 3096 0104 FB68     		ldr	r3, [r7, #12]
1832:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** }
 3097              		.loc 1 1832 0
 3098 0106 1846     		mov	r0, r3
 3099 0108 07F11007 		add	r7, r7, #16
 3100 010c BD46     		mov	sp, r7
 3101 010e 80BD     		pop	{r7, pc}
 3102              		.cfi_endproc
 3103              	.LFE142:
 3105              		.section	.text.SDMMC003_lSwitchSpeed,"ax",%progbits
 3106              		.align	2
 3107              		.global	SDMMC003_lSwitchSpeed
 3108              		.thumb
 3109              		.thumb_func
 3111              	SDMMC003_lSwitchSpeed:
 3112              	.LFB143:
1833:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
1834:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_26>>> */
1835:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*
1836:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  * This function switches the card speed to high speed if is supported.
1837:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  */
1838:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** status_t  SDMMC003_lSwitchSpeed( void)
1839:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** {
 3113              		.loc 1 1839 0
 3114              		.cfi_startproc
 3115              		@ args = 0, pretend = 0, frame = 72
 3116              		@ frame_needed = 1, uses_anonymous_args = 0
 3117 0000 80B5     		push	{r7, lr}
 3118              	.LCFI76:
 3119              		.cfi_def_cfa_offset 8
 3120              		.cfi_offset 7, -8
 3121              		.cfi_offset 14, -4
 3122 0002 94B0     		sub	sp, sp, #80
 3123              	.LCFI77:
 3124              		.cfi_def_cfa_offset 88
 3125 0004 02AF     		add	r7, sp, #8
 3126              	.LCFI78:
 3127              		.cfi_def_cfa 7, 80
1840:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** #if SDMMC_SUPPORT_MMC_CARD
1841:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** uint32_t CardStatus;
1842:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** #endif
1843:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   uint32_t SwitchStatus[16] = {0 };
 3128              		.loc 1 1843 0
 3129 0006 07F10402 		add	r2, r7, #4
 3130 000a 4FF04003 		mov	r3, #64
 3131 000e 1046     		mov	r0, r2
 3132 0010 4FF00001 		mov	r1, #0
 3133 0014 1A46     		mov	r2, r3
 3134 0016 FFF7FEFF 		bl	memset
1844:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   status_t Status = (uint32_t)SDMMC003_ERROR;
 3135              		.loc 1 1844 0
 3136 001a 4FF00103 		mov	r3, #1
 3137 001e 7B64     		str	r3, [r7, #68]
1845:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   FUNCTION_ENTRY(GID_SDMMC00x, (uint32_t)SDMMC003_FUNCTION_ENTRY);
1846:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   do
1847:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
1848:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** #if SDMMC_SUPPORT_MMC_CARD
1849:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_26_1>>> */
1850:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if ((SDMMC003_Handle.CardType & SDMMC003_MMC) != 0)
1851:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
1852:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Switch to transfer state i.e. CMD7 */
1853:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Status = SDMMC003_lSwitchToTransferState();
1854:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       if( Status != DAVEApp_SUCCESS )
1855:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       {
1856:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         break;
1857:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       }
1858:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Status = SDMMC003_lSendCommand(&(SDMMC003_MMC_COMMAND(6)),
1859:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                        MMC_HIGH_SPEED_ARG,\
1860:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                        SDMMC003_RESPONSE_R1,&CardStatus);
1861:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       if (Status != (uint32_t)DAVEApp_SUCCESS)
1862:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       {
1863:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         break;
1864:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       }
1865:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
1866:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* SD card */
1867:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     else
1868:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** #endif /* SDMMC_SUPPORT_MMC_CARD */
1869:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
1870:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_26_2>>> */
1871:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Check CMD6 support in SCR register*/
1872:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       if ( SDMMC003_CardInfo.Scr.SdSpec == 0 )
 3138              		.loc 1 1872 0
 3139 0020 40F20003 		movw	r3, #:lower16:SDMMC003_CardInfo
 3140 0024 C0F20003 		movt	r3, #:upper16:SDMMC003_CardInfo
 3141 0028 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 3142 002c 03F00F03 		and	r3, r3, #15
 3143 0030 DBB2     		uxtb	r3, r3
 3144 0032 002B     		cmp	r3, #0
 3145 0034 3DD0     		beq	.L201
 3146              	.L195:
1873:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       {
1874:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         break;
1875:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       }
1876:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Switch to transfer state i.e. CMD7 */
1877:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Status = SDMMC003_lSwitchToTransferState();
 3147              		.loc 1 1877 0
 3148 0036 FFF7FEFF 		bl	SDMMC003_lSwitchToTransferState
 3149 003a 7864     		str	r0, [r7, #68]
1878:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_26_3>>> */
1879:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       if( Status != (uint32_t)DAVEApp_SUCCESS )
 3150              		.loc 1 1879 0
 3151 003c 7B6C     		ldr	r3, [r7, #68]
 3152 003e 002B     		cmp	r3, #0
 3153 0040 39D1     		bne	.L202
 3154              	.L197:
1880:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       {
1881:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         break;
1882:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       }
1883:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Send the Switch function  command and read the transferred block of
1884:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****        * data from the card */
1885:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Status = SDMMC003_lSingleBlockTransfer( &(SDMMC003_SD_COMMAND(6)), \
 3155              		.loc 1 1885 0
 3156 0042 40F20003 		movw	r3, #:lower16:SDMMC003_SDHashTable
 3157 0046 C0F20003 		movt	r3, #:upper16:SDMMC003_SDHashTable
 3158 004a 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 3159 004c 4FEA4302 		lsl	r2, r3, #1
 3160 0050 40F20003 		movw	r3, #:lower16:SDMMC003_Command
 3161 0054 C0F20003 		movt	r3, #:upper16:SDMMC003_Command
 3162 0058 D218     		adds	r2, r2, r3
1886:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                                SDMMC003_SD_HIGH_SPEED_ARG,64, \
1887:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                                (uint32_t*)SwitchStatus, \
 3163              		.loc 1 1887 0
 3164 005a 07F10403 		add	r3, r7, #4
1885:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Status = SDMMC003_lSingleBlockTransfer( &(SDMMC003_SD_COMMAND(6)), \
 3165              		.loc 1 1885 0
 3166 005e 4FF00101 		mov	r1, #1
 3167 0062 0091     		str	r1, [sp, #0]
 3168 0064 1046     		mov	r0, r2
 3169 0066 4FF00101 		mov	r1, #1
 3170 006a C8F20001 		movt	r1, 32768
 3171 006e 4FF04002 		mov	r2, #64
 3172 0072 FFF7FEFF 		bl	SDMMC003_lSingleBlockTransfer
 3173 0076 7864     		str	r0, [r7, #68]
1888:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                                SDMMC003_READ_FROM_BUFF
1889:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                             );
1890:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_26_4>>> */
1891:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       if ( Status != (uint32_t)DAVEApp_SUCCESS)
 3174              		.loc 1 1891 0
 3175 0078 7B6C     		ldr	r3, [r7, #68]
 3176 007a 002B     		cmp	r3, #0
 3177 007c 1DD1     		bne	.L203
 3178              	.L198:
1892:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       {
1893:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         break;
1894:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       }
1895:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_26_5>>> */
1896:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       if ( ((SwitchStatus[4] & SDMMC003_SWITCH_FUNC_GRP1_STATUS_BITMASK)>>
 3179              		.loc 1 1896 0
 3180 007e 7B69     		ldr	r3, [r7, #20]
 3181 0080 03F00F03 		and	r3, r3, #15
 3182 0084 012B     		cmp	r3, #1
 3183 0086 03D0     		beq	.L199
1897:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****             SDMMC003_SWITCH_FUNC_GRP1_STATUS_BITPOS) != 1UL )
1898:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       {
1899:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         Status = (uint32_t)SDMMC003_ERROR;
 3184              		.loc 1 1899 0
 3185 0088 4FF00103 		mov	r3, #1
 3186 008c 7B64     		str	r3, [r7, #68]
1900:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         break;
 3187              		.loc 1 1900 0
 3188 008e 15E0     		b	.L196
 3189              	.L199:
1901:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       }
1902:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Change Speed mode in the Host Controller */
1903:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SET_BIT( SDMMC->HOST_CTRL,SDMMC_HOST_CTRL_HIGH_SPEED_EN_Pos );
 3190              		.loc 1 1903 0
 3191 0090 4FF44043 		mov	r3, #49152
 3192 0094 C4F60103 		movt	r3, 18433
 3193 0098 4FF44042 		mov	r2, #49152
 3194 009c C4F60102 		movt	r2, 18433
 3195 00a0 92F82820 		ldrb	r2, [r2, #40]
 3196 00a4 D2B2     		uxtb	r2, r2
 3197 00a6 42F00402 		orr	r2, r2, #4
 3198 00aa D2B2     		uxtb	r2, r2
 3199 00ac 83F82820 		strb	r2, [r3, #40]
 3200 00b0 04E0     		b	.L196
 3201              	.L201:
1874:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         break;
 3202              		.loc 1 1874 0
 3203 00b2 00BF     		nop
 3204 00b4 02E0     		b	.L196
 3205              	.L202:
1881:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         break;
 3206              		.loc 1 1881 0
 3207 00b6 00BF     		nop
 3208 00b8 00E0     		b	.L196
 3209              	.L203:
1893:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         break;
 3210              		.loc 1 1893 0
 3211 00ba 00BF     		nop
 3212              	.L196:
1904:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
1905:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   } while(0);
1906:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   FUNCTION_EXIT(GID_SDMMC00x, (uint32_t)SDMMC003_FUNCTION_EXIT);
1907:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   return Status;
 3213              		.loc 1 1907 0
 3214 00bc 7B6C     		ldr	r3, [r7, #68]
1908:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** }
 3215              		.loc 1 1908 0
 3216 00be 1846     		mov	r0, r3
 3217 00c0 07F14807 		add	r7, r7, #72
 3218 00c4 BD46     		mov	sp, r7
 3219 00c6 80BD     		pop	{r7, pc}
 3220              		.cfi_endproc
 3221              	.LFE143:
 3223              		.section	.text.SDMMC003_lCommandDelay,"ax",%progbits
 3224              		.align	2
 3225              		.global	SDMMC003_lCommandDelay
 3226              		.thumb
 3227              		.thumb_func
 3229              	SDMMC003_lCommandDelay:
 3230              	.LFB144:
1909:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
1910:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*
1911:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  * This function provides delay in command execution.
1912:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  */
1913:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** status_t SDMMC003_lCommandDelay(uint32_t DelayTime)
1914:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** {
 3231              		.loc 1 1914 0
 3232              		.cfi_startproc
 3233              		@ args = 0, pretend = 0, frame = 16
 3234              		@ frame_needed = 1, uses_anonymous_args = 0
 3235 0000 80B5     		push	{r7, lr}
 3236              	.LCFI79:
 3237              		.cfi_def_cfa_offset 8
 3238              		.cfi_offset 7, -8
 3239              		.cfi_offset 14, -4
 3240 0002 84B0     		sub	sp, sp, #16
 3241              	.LCFI80:
 3242              		.cfi_def_cfa_offset 24
 3243 0004 00AF     		add	r7, sp, #0
 3244              	.LCFI81:
 3245              		.cfi_def_cfa_register 7
 3246 0006 7860     		str	r0, [r7, #4]
1915:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   handle_t TimerId;
1916:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   status_t Status = (uint32_t)DAVEApp_SUCCESS;
 3247              		.loc 1 1916 0
 3248 0008 4FF00003 		mov	r3, #0
 3249 000c FB60     		str	r3, [r7, #12]
1917:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   SDMMC003_Handle.TimerExpire = 1;
 3250              		.loc 1 1917 0
 3251 000e 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 3252 0012 C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 3253 0016 4FF00102 		mov	r2, #1
 3254 001a 9A72     		strb	r2, [r3, #10]
1918:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   TimerId = SDMMC003_lStartTimer(DelayTime);
 3255              		.loc 1 1918 0
 3256 001c 7868     		ldr	r0, [r7, #4]
 3257 001e FFF7FEFF 		bl	SDMMC003_lStartTimer
 3258 0022 B860     		str	r0, [r7, #8]
1919:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   if(0 == TimerId)
 3259              		.loc 1 1919 0
 3260 0024 BB68     		ldr	r3, [r7, #8]
 3261 0026 002B     		cmp	r3, #0
 3262 0028 02D1     		bne	.L205
1920:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
1921:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     Status = (uint32_t) SDMMC003_START_TIMER_FAILED;
 3263              		.loc 1 1921 0
 3264 002a 4FF02F03 		mov	r3, #47
 3265 002e FB60     		str	r3, [r7, #12]
 3266              	.L205:
1922:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   }
1923:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   if(Status != (uint32_t) SDMMC003_START_TIMER_FAILED)
 3267              		.loc 1 1923 0
 3268 0030 FB68     		ldr	r3, [r7, #12]
 3269 0032 2F2B     		cmp	r3, #47
 3270 0034 27D0     		beq	.L206
 3271              	.L209:
1924:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
1925:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     do
1926:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
1927:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* If any error interrupt bit is set, then break*/
1928:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       if (SDMMC->INT_STATUS_NORM &  SDMMC_INT_STATUS_NORM_ERR_INT_Msk )
 3272              		.loc 1 1928 0
 3273 0036 4FF44043 		mov	r3, #49152
 3274 003a C4F60103 		movt	r3, 18433
 3275 003e 1B8E     		ldrh	r3, [r3, #48]	@ movhi
 3276 0040 9BB2     		uxth	r3, r3
 3277 0042 9BB2     		uxth	r3, r3
 3278 0044 1BB2     		sxth	r3, r3
 3279 0046 002B     		cmp	r3, #0
 3280 0048 1CDB     		blt	.L211
 3281              	.L207:
1929:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       {
1930:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         break;
1931:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       }
1932:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       if (SDMMC003_Handle.TimerExpire == 0)
 3282              		.loc 1 1932 0
 3283 004a 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 3284 004e C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 3285 0052 9B7A     		ldrb	r3, [r3, #10]
 3286 0054 DBB2     		uxtb	r3, r3
 3287 0056 002B     		cmp	r3, #0
 3288 0058 03D1     		bne	.L208
1933:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       {
1934:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         Status = (uint32_t)SDMMC003_TIMEOUT_OCCURED;
 3289              		.loc 1 1934 0
 3290 005a 4FF02E03 		mov	r3, #46
 3291 005e FB60     		str	r3, [r7, #12]
1935:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         ERROR(GID_SDMMC00x, Status, 0, NULL);
1936:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         break;
 3292              		.loc 1 1936 0
 3293 0060 11E0     		b	.L206
 3294              	.L208:
1937:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       }
1938:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     } while (!(SDMMC003_ISRContext.CmdFlag  || \
 3295              		.loc 1 1938 0
 3296 0062 40F20003 		movw	r3, #:lower16:SDMMC003_ISRContext
 3297 0066 C0F20003 		movt	r3, #:upper16:SDMMC003_ISRContext
 3298 006a 9B78     		ldrb	r3, [r3, #2]
 3299 006c DBB2     		uxtb	r3, r3
 3300 006e 002B     		cmp	r3, #0
 3301 0070 09D1     		bne	.L206
1939:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****              SDMMC003_ISRContext.DataFlag ));
 3302              		.loc 1 1939 0 discriminator 1
 3303 0072 40F20003 		movw	r3, #:lower16:SDMMC003_ISRContext
 3304 0076 C0F20003 		movt	r3, #:upper16:SDMMC003_ISRContext
 3305 007a DB78     		ldrb	r3, [r3, #3]
 3306 007c DBB2     		uxtb	r3, r3
1938:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     } while (!(SDMMC003_ISRContext.CmdFlag  || \
 3307              		.loc 1 1938 0 discriminator 1
 3308 007e 002B     		cmp	r3, #0
 3309 0080 D9D0     		beq	.L209
 3310 0082 00E0     		b	.L206
 3311              	.L211:
1930:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         break;
 3312              		.loc 1 1930 0
 3313 0084 00BF     		nop
 3314              	.L206:
1940:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   }
1941:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   SDMMC003_lStopTimer(TimerId);
 3315              		.loc 1 1941 0
 3316 0086 B868     		ldr	r0, [r7, #8]
 3317 0088 FFF7FEFF 		bl	SDMMC003_lStopTimer
1942:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   SDMMC003_ISRContext.CmdFlag = 0;
 3318              		.loc 1 1942 0
 3319 008c 40F20003 		movw	r3, #:lower16:SDMMC003_ISRContext
 3320 0090 C0F20003 		movt	r3, #:upper16:SDMMC003_ISRContext
 3321 0094 4FF00002 		mov	r2, #0
 3322 0098 9A70     		strb	r2, [r3, #2]
1943:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   SDMMC003_ISRContext.DataFlag = 0;
 3323              		.loc 1 1943 0
 3324 009a 40F20003 		movw	r3, #:lower16:SDMMC003_ISRContext
 3325 009e C0F20003 		movt	r3, #:upper16:SDMMC003_ISRContext
 3326 00a2 4FF00002 		mov	r2, #0
 3327 00a6 DA70     		strb	r2, [r3, #3]
1944:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   return Status;
 3328              		.loc 1 1944 0
 3329 00a8 FB68     		ldr	r3, [r7, #12]
1945:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** }
 3330              		.loc 1 1945 0
 3331 00aa 1846     		mov	r0, r3
 3332 00ac 07F11007 		add	r7, r7, #16
 3333 00b0 BD46     		mov	sp, r7
 3334 00b2 80BD     		pop	{r7, pc}
 3335              		.cfi_endproc
 3336              	.LFE144:
 3338              		.section	.text.SDMMC003_lErrorInterruptRecovery,"ax",%progbits
 3339              		.align	2
 3340              		.global	SDMMC003_lErrorInterruptRecovery
 3341              		.thumb
 3342              		.thumb_func
 3344              	SDMMC003_lErrorInterruptRecovery:
 3345              	.LFB145:
1946:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
1947:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
1948:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_27>>> */
1949:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*
1950:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  * This function performs the recovery task if any error interrupt occurs.
1951:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  */
1952:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** status_t SDMMC003_lErrorInterruptRecovery(uint16_t InterruptStatus,
1953:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                                     uint8_t IssueAbort)
1954:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** {
 3346              		.loc 1 1954 0
 3347              		.cfi_startproc
 3348              		@ args = 0, pretend = 0, frame = 16
 3349              		@ frame_needed = 1, uses_anonymous_args = 0
 3350 0000 80B5     		push	{r7, lr}
 3351              	.LCFI82:
 3352              		.cfi_def_cfa_offset 8
 3353              		.cfi_offset 7, -8
 3354              		.cfi_offset 14, -4
 3355 0002 84B0     		sub	sp, sp, #16
 3356              	.LCFI83:
 3357              		.cfi_def_cfa_offset 24
 3358 0004 00AF     		add	r7, sp, #0
 3359              	.LCFI84:
 3360              		.cfi_def_cfa_register 7
 3361 0006 0246     		mov	r2, r0
 3362 0008 0B46     		mov	r3, r1
 3363 000a FA80     		strh	r2, [r7, #6]	@ movhi
 3364 000c 7B71     		strb	r3, [r7, #5]
1955:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   status_t Status =  (uint32_t)SDMMC003_NONRECOVERABLE_ERROR;
 3365              		.loc 1 1955 0
 3366 000e 4FF02503 		mov	r3, #37
 3367 0012 FB60     		str	r3, [r7, #12]
1956:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   FUNCTION_ENTRY(GID_SDMMC00x, (uint32_t)SDMMC003_FUNCTION_ENTRY);
1957:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   do
1958:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
1959:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Disable the Error Interrupt Signal  */
1960:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC->EN_INT_SIGNAL_ERR = 0;
 3368              		.loc 1 1960 0
 3369 0014 4FF44043 		mov	r3, #49152
 3370 0018 C4F60103 		movt	r3, 18433
 3371 001c 4FF00002 		mov	r2, #0
 3372 0020 5A87     		strh	r2, [r3, #58]	@ movhi
1961:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Check Error Interrupt Status bits D0-D3 for CMD line errors */
1962:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_27_1>>> */
1963:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if ( ((InterruptStatus & SDMMC003_ERROR_CMD_STATUS_BITMASK) != 0 ) ||  \
 3373              		.loc 1 1963 0
 3374 0022 FB88     		ldrh	r3, [r7, #6]
 3375 0024 03F00F03 		and	r3, r3, #15
 3376 0028 002B     		cmp	r3, #0
 3377 002a 08D1     		bne	.L213
1964:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****          ( SDMMC->PRESENT_STATE  & SDMMC_PRESENT_STATE_COMMAND_INHIBIT_CMD_Msk ))
 3378              		.loc 1 1964 0 discriminator 1
 3379 002c 4FF44043 		mov	r3, #49152
 3380 0030 C4F60103 		movt	r3, 18433
 3381 0034 5B6A     		ldr	r3, [r3, #36]
 3382 0036 03F00103 		and	r3, r3, #1
1963:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if ( ((InterruptStatus & SDMMC003_ERROR_CMD_STATUS_BITMASK) != 0 ) ||  \
 3383              		.loc 1 1963 0 discriminator 1
 3384 003a 002B     		cmp	r3, #0
 3385 003c 04D0     		beq	.L214
 3386              	.L213:
1965:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
1966:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Set Software Reset for CMD Line  */
1967:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Status = SDMMC003_lReset(SDMMC_SW_RESET_SW_RST_CMD_LINE_Msk);
 3387              		.loc 1 1967 0
 3388 003e 4FF00200 		mov	r0, #2
 3389 0042 FFF7FEFF 		bl	SDMMC003_lReset
 3390 0046 F860     		str	r0, [r7, #12]
 3391              	.L214:
1968:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
1969:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_27_2>>> */
1970:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Check Error Interrupt Status bits D4-D6 for Data line errors */
1971:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if ( ((InterruptStatus & SDMMC003_ERROR_DATA_STATUS_BITMASK) != 0 ) ||   \
 3392              		.loc 1 1971 0
 3393 0048 FB88     		ldrh	r3, [r7, #6]
 3394 004a 03F07003 		and	r3, r3, #112
 3395 004e 002B     		cmp	r3, #0
 3396 0050 08D1     		bne	.L215
1972:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****          ( SDMMC->PRESENT_STATE  & SDMMC_PRESENT_STATE_COMMAND_INHIBIT_DAT_Msk ))
 3397              		.loc 1 1972 0 discriminator 1
 3398 0052 4FF44043 		mov	r3, #49152
 3399 0056 C4F60103 		movt	r3, 18433
 3400 005a 5B6A     		ldr	r3, [r3, #36]
 3401 005c 03F00203 		and	r3, r3, #2
1971:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if ( ((InterruptStatus & SDMMC003_ERROR_DATA_STATUS_BITMASK) != 0 ) ||   \
 3402              		.loc 1 1971 0 discriminator 1
 3403 0060 002B     		cmp	r3, #0
 3404 0062 04D0     		beq	.L216
 3405              	.L215:
1973:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
1974:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /*  Set Software Reset for Data Line */
1975:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_27_3>>> */
1976:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Status = SDMMC003_lReset( SDMMC_SW_RESET_SW_RST_DAT_LINE_Msk);
 3406              		.loc 1 1976 0
 3407 0064 4FF00400 		mov	r0, #4
 3408 0068 FFF7FEFF 		bl	SDMMC003_lReset
 3409 006c F860     		str	r0, [r7, #12]
 3410              	.L216:
1977:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
1978:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /*  Clear previous error status  */
1979:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC->INT_STATUS_ERR = SDMMC003_ALL_ERROR_STATUS_BITMASK ;
 3411              		.loc 1 1979 0
 3412 006e 4FF44043 		mov	r3, #49152
 3413 0072 C4F60103 		movt	r3, 18433
 3414 0076 4FF6FF72 		movw	r2, #65535
 3415 007a 5A86     		strh	r2, [r3, #50]	@ movhi
1980:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if (IssueAbort == 1)
 3416              		.loc 1 1980 0
 3417 007c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3418 007e 012B     		cmp	r3, #1
 3419 0080 44D1     		bne	.L217
1981:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {   
1982:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /*  Issue Abort Command.  */
1983:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /*  Set argument register */
1984:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC->ARGUMENT1 = SDMMC003_ARGUMENT0;
 3420              		.loc 1 1984 0
 3421 0082 4FF44043 		mov	r3, #49152
 3422 0086 C4F60103 		movt	r3, 18433
 3423 008a 4FF00002 		mov	r2, #0
 3424 008e 9A60     		str	r2, [r3, #8]
1985:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC->COMMAND = (uint16_t)(*(uint16_t*)&(SDMMC003_COMMON_COMMAND(12)));  
 3425              		.loc 1 1985 0
 3426 0090 4FF44043 		mov	r3, #49152
 3427 0094 C4F60103 		movt	r3, 18433
 3428 0098 40F20002 		movw	r2, #:lower16:SDMMC003_SDHashTable
 3429 009c C0F20002 		movt	r2, #:upper16:SDMMC003_SDHashTable
 3430 00a0 127B     		ldrb	r2, [r2, #12]	@ zero_extendqisi2
 3431 00a2 4FEA4201 		lsl	r1, r2, #1
 3432 00a6 40F20002 		movw	r2, #:lower16:SDMMC003_Command
 3433 00aa C0F20002 		movt	r2, #:upper16:SDMMC003_Command
 3434 00ae 8A18     		adds	r2, r1, r2
 3435 00b0 1288     		ldrh	r2, [r2, #0]
 3436 00b2 DA81     		strh	r2, [r3, #14]	@ movhi
1986:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* Wait for any Interrupt status  bit to set */
1987:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_27_4>>> */    
1988:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Timeout of 5ms.*/
1989:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Status =SDMMC003_lCommandDelay(SDMMC003_DELAY_IN_COMMAND);
 3437              		.loc 1 1989 0
 3438 00b4 4FF47A70 		mov	r0, #1000
 3439 00b8 FFF7FEFF 		bl	SDMMC003_lCommandDelay
 3440 00bc F860     		str	r0, [r7, #12]
1990:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       if (Status != (uint32_t)DAVEApp_SUCCESS)
 3441              		.loc 1 1990 0
 3442 00be FB68     		ldr	r3, [r7, #12]
 3443 00c0 002B     		cmp	r3, #0
 3444 00c2 36D1     		bne	.L222
 3445              	.L218:
1991:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       {
1992:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         break;
1993:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       }
1994:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* If error status bit is set in the Status register */
1995:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_27_5>>> */
1996:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       if (SDMMC->INT_STATUS_ERR )
 3446              		.loc 1 1996 0
 3447 00c4 4FF44043 		mov	r3, #49152
 3448 00c8 C4F60103 		movt	r3, 18433
 3449 00cc 5B8E     		ldrh	r3, [r3, #50]	@ movhi
 3450 00ce 9BB2     		uxth	r3, r3
 3451 00d0 002B     		cmp	r3, #0
 3452 00d2 1BD0     		beq	.L217
1997:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       {
1998:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         Status = (uint32_t)SDMMC003_NONRECOVERABLE_ERROR;
 3453              		.loc 1 1998 0
 3454 00d4 4FF02503 		mov	r3, #37
 3455 00d8 FB60     		str	r3, [r7, #12]
1999:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         SDMMC->INT_STATUS_ERR = SDMMC003_ALL_ERROR_STATUS_BITMASK ;
 3456              		.loc 1 1999 0
 3457 00da 4FF44043 		mov	r3, #49152
 3458 00de C4F60103 		movt	r3, 18433
 3459 00e2 4FF6FF72 		movw	r2, #65535
 3460 00e6 5A86     		strh	r2, [r3, #50]	@ movhi
2000:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         SDMMC->INT_STATUS_NORM = SDMMC003_ALL_ERROR_STATUS_BITMASK ;
 3461              		.loc 1 2000 0
 3462 00e8 4FF44043 		mov	r3, #49152
 3463 00ec C4F60103 		movt	r3, 18433
 3464 00f0 4FF6FF72 		movw	r2, #65535
 3465 00f4 1A86     		strh	r2, [r3, #48]	@ movhi
2001:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****          /* Set Software Reset for CMD Line and Data Line  */
2002:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         SDMMC003_ReturnStatus = SDMMC003_lReset(SDMMC_SW_RESET_SW_RST_CMD_LINE_Msk | \
 3466              		.loc 1 2002 0
 3467 00f6 4FF00600 		mov	r0, #6
 3468 00fa FFF7FEFF 		bl	SDMMC003_lReset
 3469 00fe 0246     		mov	r2, r0
 3470 0100 40F20003 		movw	r3, #:lower16:SDMMC003_ReturnStatus
 3471 0104 C0F20003 		movt	r3, #:upper16:SDMMC003_ReturnStatus
 3472 0108 1A60     		str	r2, [r3, #0]
2003:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                 SDMMC_SW_RESET_SW_RST_DAT_LINE_Msk );
2004:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         break;
 3473              		.loc 1 2004 0
 3474 010a 13E0     		b	.L219
 3475              	.L217:
2005:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       }
2006:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
2007:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Check Data lines status in present status register  */
2008:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_27_6>>> */
2009:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if (( (SDMMC->PRESENT_STATE  & SDMMC_PRESENT_STATE_DAT_3_0_PIN_LEVEL_Msk) >> \
 3476              		.loc 1 2009 0
 3477 010c 4FF44043 		mov	r3, #49152
 3478 0110 C4F60103 		movt	r3, 18433
 3479 0114 5B6A     		ldr	r3, [r3, #36]
 3480 0116 03F47003 		and	r3, r3, #15728640
 3481 011a 4FEA1353 		lsr	r3, r3, #20
 3482 011e 0F2B     		cmp	r3, #15
 3483 0120 03D1     		bne	.L220
2010:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****            SDMMC_PRESENT_STATE_DAT_3_0_PIN_LEVEL_Pos) == SDMMC003_ALL_DATA_LINES_HIGH)
2011:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
2012:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Status = (uint32_t)SDMMC003_RECOVERABLE_ERROR;
 3484              		.loc 1 2012 0
 3485 0122 4FF02403 		mov	r3, #36
 3486 0126 FB60     		str	r3, [r7, #12]
 3487 0128 04E0     		b	.L219
 3488              	.L220:
2013:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
2014:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     else
2015:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
2016:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Status =  (uint32_t)SDMMC003_NONRECOVERABLE_ERROR;
 3489              		.loc 1 2016 0
 3490 012a 4FF02503 		mov	r3, #37
 3491 012e FB60     		str	r3, [r7, #12]
 3492 0130 00E0     		b	.L219
 3493              	.L222:
1992:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         break;
 3494              		.loc 1 1992 0
 3495 0132 00BF     		nop
 3496              	.L219:
2017:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
2018:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   } while(0);
2019:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   /* Enable the Error Interrupt signal */
2020:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   SDMMC->EN_INT_SIGNAL_ERR |= SDMMC003_ERROR_INT_SIGNAL_ENABLE;
 3497              		.loc 1 2020 0
 3498 0134 4FF44043 		mov	r3, #49152
 3499 0138 C4F60103 		movt	r3, 18433
 3500 013c 4FF44042 		mov	r2, #49152
 3501 0140 C4F60102 		movt	r2, 18433
 3502 0144 528F     		ldrh	r2, [r2, #58]	@ movhi
 3503 0146 92B2     		uxth	r2, r2
 3504 0148 62F4F852 		orn	r2, r2, #7936
 3505 014c 92B2     		uxth	r2, r2
 3506 014e 5A87     		strh	r2, [r3, #58]	@ movhi
2021:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
2022:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   /* Global Error Recovery Variable */
2023:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   SDMMC003_Handle.ErrorRecoveryStatus = (SDMMC003_ErrorCodesType)Status;
 3507              		.loc 1 2023 0
 3508 0150 FB68     		ldr	r3, [r7, #12]
 3509 0152 DAB2     		uxtb	r2, r3
 3510 0154 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 3511 0158 C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 3512 015c DA71     		strb	r2, [r3, #7]
2024:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   FUNCTION_EXIT(GID_SDMMC00x, (uint32_t)SDMMC003_FUNCTION_EXIT);
2025:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   return Status;
 3513              		.loc 1 2025 0
 3514 015e FB68     		ldr	r3, [r7, #12]
2026:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** }
 3515              		.loc 1 2026 0
 3516 0160 1846     		mov	r0, r3
 3517 0162 07F11007 		add	r7, r7, #16
 3518 0166 BD46     		mov	sp, r7
 3519 0168 80BD     		pop	{r7, pc}
 3520              		.cfi_endproc
 3521              	.LFE145:
 3523 016a 00BF     		.section	.text.SDMMC003_lNormalInterruptHandler,"ax",%progbits
 3524              		.align	2
 3525              		.global	SDMMC003_lNormalInterruptHandler
 3526              		.thumb
 3527              		.thumb_func
 3529              	SDMMC003_lNormalInterruptHandler:
 3530              	.LFB146:
2027:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
2028:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_28>>> */
2029:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*
2030:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  * This function handles the Interrupt in Normal Interrupt Status Register.
2031:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  */
2032:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** status_t SDMMC003_lNormalInterruptHandler (uint16_t IntStatus)
2033:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** {
 3531              		.loc 1 2033 0
 3532              		.cfi_startproc
 3533              		@ args = 0, pretend = 0, frame = 16
 3534              		@ frame_needed = 1, uses_anonymous_args = 0
 3535              		@ link register save eliminated.
 3536 0000 80B4     		push	{r7}
 3537              	.LCFI85:
 3538              		.cfi_def_cfa_offset 4
 3539              		.cfi_offset 7, -4
 3540 0002 85B0     		sub	sp, sp, #20
 3541              	.LCFI86:
 3542              		.cfi_def_cfa_offset 24
 3543 0004 00AF     		add	r7, sp, #0
 3544              	.LCFI87:
 3545              		.cfi_def_cfa_register 7
 3546 0006 0346     		mov	r3, r0
 3547 0008 FB80     		strh	r3, [r7, #6]	@ movhi
2034:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   status_t Status = (uint32_t)DAVEApp_SUCCESS;
 3548              		.loc 1 2034 0
 3549 000a 4FF00003 		mov	r3, #0
 3550 000e FB60     		str	r3, [r7, #12]
2035:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   FUNCTION_ENTRY(GID_SDMMC00x, (uint32_t)SDMMC003_FUNCTION_ENTRY);
2036:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** #if SDMMC_CARD_DETECTION_SUPPORT
2037:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_28_1>>> */
2038:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   /* CARD REMOVAL INTERRUPT */
2039:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   if ((IntStatus & SDMMC_INT_STATUS_NORM_CARD_REMOVAL_Msk) != 0)
2040:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
2041:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Confirm that the Card Insertion bit is clear in Present State Status*/
2042:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     do
2043:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
2044:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     } while(( SDMMC->PRESENT_STATE &  SDMMC_PRESENT_STATE_CARD_INSERTED_Msk)!= 0);
2045:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Clear the Interrupt Status bit */
2046:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC->INT_STATUS_NORM = SDMMC_INT_STATUS_NORM_CARD_REMOVAL_Msk;
2047:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     
2048:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Call back to upper layer function for card removal interrupt*/
2049:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if (SDMMC003_Handle.CallBackPtr != NULL)
2050:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
2051:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC003_Handle.CallBackPtr(SDMMC003_CARD_REMOVAL); 
2052:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
2053:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     else
2054:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
2055:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Status = SDMMC003_NULL_POINTER;
2056:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       ERROR(GID_SDMMC00x, Status,0,0);
2057:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
2058:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   }
2059:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_28_2>>> */
2060:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   /* CARD INSERTION INTERRUPT */
2061:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   if ((IntStatus & SDMMC_INT_STATUS_NORM_CARD_INS_Msk) != 0)
2062:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
2063:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Confirm that the Card Insertion bit is set in Present State Status*/
2064:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     do
2065:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
2066:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     } while((SDMMC->PRESENT_STATE & SDMMC_PRESENT_STATE_CARD_INSERTED_Msk) == 0);
2067:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Clear the Interrupt Status */
2068:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC->INT_STATUS_NORM = SDMMC_INT_STATUS_NORM_CARD_INS_Msk;
2069:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
2070:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Call back to upper layer function for card insertion interrupt*/
2071:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if (SDMMC003_Handle.CallBackPtr != NULL)
2072:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
2073:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC003_Handle.CallBackPtr(SDMMC003_CARD_INSERTION); 
2074:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
2075:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     else
2076:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
2077:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Status = SDMMC003_NULL_POINTER;
2078:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       ERROR(GID_SDMMC00x, Status,0,0);
2079:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
2080:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   }
2081:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** #endif
2082:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_28_3>>> */
2083:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   /* BUFFER READ READY INTERRUPT */
2084:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   if ((IntStatus & SDMMC_INT_STATUS_NORM_BUFF_READ_READY_Msk) != 0)
 3551              		.loc 1 2084 0
 3552 0010 FB88     		ldrh	r3, [r7, #6]
 3553 0012 03F02003 		and	r3, r3, #32
 3554 0016 002B     		cmp	r3, #0
 3555 0018 14D0     		beq	.L224
2085:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
2086:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Update the Global Variable */
2087:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC003_Handle.DataInterruptError = SDMMC003_BUFFER_READY;
 3556              		.loc 1 2087 0
 3557 001a 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 3558 001e C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 3559 0022 4FF01E02 		mov	r2, #30
 3560 0026 DA70     		strb	r2, [r3, #3]
2088:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Clear the Interrupt Status Bit */
2089:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC->INT_STATUS_NORM = SDMMC_INT_STATUS_NORM_BUFF_READ_READY_Msk;
 3561              		.loc 1 2089 0
 3562 0028 4FF44043 		mov	r3, #49152
 3563 002c C4F60103 		movt	r3, 18433
 3564 0030 4FF02002 		mov	r2, #32
 3565 0034 1A86     		strh	r2, [r3, #48]	@ movhi
2090:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Update the Interrupt variable */
2091:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC003_ISRContext.DataFlag = 1;
 3566              		.loc 1 2091 0
 3567 0036 40F20003 		movw	r3, #:lower16:SDMMC003_ISRContext
 3568 003a C0F20003 		movt	r3, #:upper16:SDMMC003_ISRContext
 3569 003e 4FF00102 		mov	r2, #1
 3570 0042 DA70     		strb	r2, [r3, #3]
 3571              	.L224:
2092:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   }
2093:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
2094:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_28_4>>> */
2095:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   /* BUFFER WRITE READY INTERRUPT */
2096:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   if ((IntStatus & SDMMC_INT_STATUS_NORM_BUFF_WRITE_READY_Msk) != 0)
 3572              		.loc 1 2096 0
 3573 0044 FB88     		ldrh	r3, [r7, #6]
 3574 0046 03F01003 		and	r3, r3, #16
 3575 004a 002B     		cmp	r3, #0
 3576 004c 14D0     		beq	.L225
2097:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
2098:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Update the Global Variable */
2099:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC003_Handle.DataInterruptError = SDMMC003_BUFFER_READY;
 3577              		.loc 1 2099 0
 3578 004e 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 3579 0052 C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 3580 0056 4FF01E02 		mov	r2, #30
 3581 005a DA70     		strb	r2, [r3, #3]
2100:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Clear the Interrupt Status Bit */
2101:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC->INT_STATUS_NORM = SDMMC_INT_STATUS_NORM_BUFF_WRITE_READY_Msk;
 3582              		.loc 1 2101 0
 3583 005c 4FF44043 		mov	r3, #49152
 3584 0060 C4F60103 		movt	r3, 18433
 3585 0064 4FF01002 		mov	r2, #16
 3586 0068 1A86     		strh	r2, [r3, #48]	@ movhi
2102:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Update the Interrupt variable */
2103:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC003_ISRContext.DataFlag = 1;
 3587              		.loc 1 2103 0
 3588 006a 40F20003 		movw	r3, #:lower16:SDMMC003_ISRContext
 3589 006e C0F20003 		movt	r3, #:upper16:SDMMC003_ISRContext
 3590 0072 4FF00102 		mov	r2, #1
 3591 0076 DA70     		strb	r2, [r3, #3]
 3592              	.L225:
2104:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   }
2105:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_28_5>>> */
2106:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   /* TRANSFER COMPLETE INTERRUPT */
2107:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   if ((IntStatus & SDMMC_INT_STATUS_NORM_TX_COMPLETE_Msk ) != 0)
 3593              		.loc 1 2107 0
 3594 0078 FB88     		ldrh	r3, [r7, #6]
 3595 007a 03F00203 		and	r3, r3, #2
 3596 007e 002B     		cmp	r3, #0
 3597 0080 22D0     		beq	.L226
2108:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
2109:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Update the Global Variable */
2110:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC003_Handle.TransferInterruptError = SDMMC003_TRANSFER_COMPLETE;
 3598              		.loc 1 2110 0
 3599 0082 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 3600 0086 C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 3601 008a 4FF01F02 		mov	r2, #31
 3602 008e 5A71     		strb	r2, [r3, #5]
2111:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Clear the Interrupt Status Bit */
2112:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC->INT_STATUS_NORM = SDMMC_INT_STATUS_NORM_TX_COMPLETE_Msk;
 3603              		.loc 1 2112 0
 3604 0090 4FF44043 		mov	r3, #49152
 3605 0094 C4F60103 		movt	r3, 18433
 3606 0098 4FF00202 		mov	r2, #2
 3607 009c 1A86     		strh	r2, [r3, #48]	@ movhi
2113:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Change the data line Status  to be free */
2114:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC003_Handle.State &= ~SDMMC003_STATE_DATA_ACTIVE;
 3608              		.loc 1 2114 0
 3609 009e 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 3610 00a2 C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 3611 00a6 1B88     		ldrh	r3, [r3, #0]	@ movhi
 3612 00a8 9BB2     		uxth	r3, r3
 3613 00aa 23F00803 		bic	r3, r3, #8
 3614 00ae 9AB2     		uxth	r2, r3
 3615 00b0 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 3616 00b4 C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 3617 00b8 1A80     		strh	r2, [r3, #0]	@ movhi
2115:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Update the Interrupt variable */
2116:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC003_ISRContext.TransferFlag = 1;
 3618              		.loc 1 2116 0
 3619 00ba 40F20003 		movw	r3, #:lower16:SDMMC003_ISRContext
 3620 00be C0F20003 		movt	r3, #:upper16:SDMMC003_ISRContext
 3621 00c2 4FF00102 		mov	r2, #1
 3622 00c6 1A71     		strb	r2, [r3, #4]
 3623              	.L226:
2117:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   }
2118:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   
2119:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_28_6>>> */
2120:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   /* COMMAND COMPLETE INTERRUPT */
2121:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   if ((IntStatus &  SDMMC_INT_STATUS_NORM_CMD_COMPLETE_Msk) != 0)
 3624              		.loc 1 2121 0
 3625 00c8 FB88     		ldrh	r3, [r7, #6]
 3626 00ca 03F00103 		and	r3, r3, #1
 3627 00ce 002B     		cmp	r3, #0
 3628 00d0 22D0     		beq	.L227
2122:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
2123:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Update the Global Variable */
2124:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC003_Handle.CommandInterruptError = SDMMC003_COMMAND_COMPLETE;
 3629              		.loc 1 2124 0
 3630 00d2 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 3631 00d6 C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 3632 00da 4FF01C02 		mov	r2, #28
 3633 00de 1A71     		strb	r2, [r3, #4]
2125:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Clear the Interrupt Status Bit */
2126:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC->INT_STATUS_NORM = SDMMC_INT_STATUS_NORM_CMD_COMPLETE_Msk;
 3634              		.loc 1 2126 0
 3635 00e0 4FF44043 		mov	r3, #49152
 3636 00e4 C4F60103 		movt	r3, 18433
 3637 00e8 4FF00102 		mov	r2, #1
 3638 00ec 1A86     		strh	r2, [r3, #48]	@ movhi
2127:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Change the Command Line Status to free */
2128:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC003_Handle.State &= ~SDMMC003_STATE_CMD_ACTIVE;
 3639              		.loc 1 2128 0
 3640 00ee 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 3641 00f2 C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 3642 00f6 1B88     		ldrh	r3, [r3, #0]	@ movhi
 3643 00f8 9BB2     		uxth	r3, r3
 3644 00fa 23F00403 		bic	r3, r3, #4
 3645 00fe 9AB2     		uxth	r2, r3
 3646 0100 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 3647 0104 C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 3648 0108 1A80     		strh	r2, [r3, #0]	@ movhi
2129:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Update the Interrupt variable */
2130:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC003_ISRContext.CmdFlag = 1;
 3649              		.loc 1 2130 0
 3650 010a 40F20003 		movw	r3, #:lower16:SDMMC003_ISRContext
 3651 010e C0F20003 		movt	r3, #:upper16:SDMMC003_ISRContext
 3652 0112 4FF00102 		mov	r2, #1
 3653 0116 9A70     		strb	r2, [r3, #2]
 3654              	.L227:
2131:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   }
2132:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   FUNCTION_EXIT(GID_SDMMC00x, (uint32_t)SDMMC003_FUNCTION_EXIT);
2133:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   return (uint32_t)Status;
 3655              		.loc 1 2133 0
 3656 0118 FB68     		ldr	r3, [r7, #12]
2134:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** }
 3657              		.loc 1 2134 0
 3658 011a 1846     		mov	r0, r3
 3659 011c 07F11407 		add	r7, r7, #20
 3660 0120 BD46     		mov	sp, r7
 3661 0122 80BC     		pop	{r7}
 3662 0124 7047     		bx	lr
 3663              		.cfi_endproc
 3664              	.LFE146:
 3666 0126 00BF     		.section	.text.SDMMC003_lErrorInterruptHandler,"ax",%progbits
 3667              		.align	2
 3668              		.global	SDMMC003_lErrorInterruptHandler
 3669              		.thumb
 3670              		.thumb_func
 3672              	SDMMC003_lErrorInterruptHandler:
 3673              	.LFB147:
2135:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_29>>> */
2136:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*
2137:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  * This function handles the Interrupt in Error Interrupt Status Register.
2138:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  */
2139:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
2140:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** status_t SDMMC003_lErrorInterruptHandler(uint16_t IntStatus)
2141:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** {
 3674              		.loc 1 2141 0
 3675              		.cfi_startproc
 3676              		@ args = 0, pretend = 0, frame = 16
 3677              		@ frame_needed = 1, uses_anonymous_args = 0
 3678              		@ link register save eliminated.
 3679 0000 80B4     		push	{r7}
 3680              	.LCFI88:
 3681              		.cfi_def_cfa_offset 4
 3682              		.cfi_offset 7, -4
 3683 0002 85B0     		sub	sp, sp, #20
 3684              	.LCFI89:
 3685              		.cfi_def_cfa_offset 24
 3686 0004 00AF     		add	r7, sp, #0
 3687              	.LCFI90:
 3688              		.cfi_def_cfa_register 7
 3689 0006 0346     		mov	r3, r0
 3690 0008 FB80     		strh	r3, [r7, #6]	@ movhi
2142:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   status_t Status = (uint32_t)SDMMC003_ERROR;
 3691              		.loc 1 2142 0
 3692 000a 4FF00103 		mov	r3, #1
 3693 000e FB60     		str	r3, [r7, #12]
2143:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
2144:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   FUNCTION_ENTRY(GID_SDMMC00x, (uint32_t)SDMMC003_FUNCTION_ENTRY);
2145:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   SDMMC003_ISRContext.InterruptStatusShadow = IntStatus;
 3694              		.loc 1 2145 0
 3695 0010 40F20003 		movw	r3, #:lower16:SDMMC003_ISRContext
 3696 0014 C0F20003 		movt	r3, #:upper16:SDMMC003_ISRContext
 3697 0018 FA88     		ldrh	r2, [r7, #6]	@ movhi
 3698 001a 1A80     		strh	r2, [r3, #0]	@ movhi
2146:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_29_1>>> */
2147:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   /* COMMAND TIMEOUT ERROR INTERRUPT */
2148:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   if ((IntStatus & SDMMC_INT_STATUS_ERR_CMD_TIMEOUT_ERR_Msk)!= 0)
 3699              		.loc 1 2148 0
 3700 001c FB88     		ldrh	r3, [r7, #6]
 3701 001e 03F00103 		and	r3, r3, #1
 3702 0022 002B     		cmp	r3, #0
 3703 0024 22D0     		beq	.L230
2149:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
2150:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Update the Global Variable */
2151:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC003_Handle.CommandInterruptError = SDMMC003_COMMAND_TIMEOUT_ERROR;
 3704              		.loc 1 2151 0
 3705 0026 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 3706 002a C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 3707 002e 4FF00202 		mov	r2, #2
 3708 0032 1A71     		strb	r2, [r3, #4]
2152:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Change the Command Line Status to free */
2153:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC003_Handle.State &= ~SDMMC003_STATE_CMD_ACTIVE;
 3709              		.loc 1 2153 0
 3710 0034 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 3711 0038 C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 3712 003c 1B88     		ldrh	r3, [r3, #0]	@ movhi
 3713 003e 9BB2     		uxth	r3, r3
 3714 0040 23F00403 		bic	r3, r3, #4
 3715 0044 9AB2     		uxth	r2, r3
 3716 0046 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 3717 004a C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 3718 004e 1A80     		strh	r2, [r3, #0]	@ movhi
2154:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** #if SDMMC_UVP_TEST
2155:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if (Test_TriggerInterrupt.Trigger_CommandErrorInterrupt == TRUE)
2156:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
2157:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Forcefully disable the Command Timeout Error Interrupt */
2158:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC->FORCE_EVENT_ERR_STATUS = 0x0000 ;
2159:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
2160:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****    
2161:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if (Test_TriggerInterrupt.Trigger_Cmd55Error == TRUE)
2162:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
2163:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****      /* Forcefully disable the Command Timeout Error Interrupt */
2164:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC->FORCE_EVENT_ERR_STATUS = 0x0000 ;
2165:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
2166:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if (Test_TriggerInterrupt.Trigger_Command42Error == TRUE)
2167:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
2168:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****      /* Forcefully disable the Command Timeout Error Interrupt */
2169:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC->FORCE_EVENT_ERR_STATUS = 0x0000 ;
2170:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
2171:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** #endif  /*SDMMC_UVP_TEST*/
2172:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Clear the Interrupt Status Bit */
2173:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC->INT_STATUS_ERR =  SDMMC_INT_STATUS_ERR_CMD_TIMEOUT_ERR_Msk;
 3719              		.loc 1 2173 0
 3720 0050 4FF44043 		mov	r3, #49152
 3721 0054 C4F60103 		movt	r3, 18433
 3722 0058 4FF00102 		mov	r2, #1
 3723 005c 5A86     		strh	r2, [r3, #50]	@ movhi
2174:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Update the Interrupt variable */
2175:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC003_ISRContext.CmdFlag = 1;
 3724              		.loc 1 2175 0
 3725 005e 40F20003 		movw	r3, #:lower16:SDMMC003_ISRContext
 3726 0062 C0F20003 		movt	r3, #:upper16:SDMMC003_ISRContext
 3727 0066 4FF00102 		mov	r2, #1
 3728 006a 9A70     		strb	r2, [r3, #2]
 3729              	.L230:
2176:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   }
2177:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_29_2>>> */
2178:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* COMMAND CRC ERROR INTERRUPT */
2179:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   if ((IntStatus & SDMMC_INT_STATUS_ERR_CMD_CRC_ERR_Msk ) != 0)
 3730              		.loc 1 2179 0
 3731 006c FB88     		ldrh	r3, [r7, #6]
 3732 006e 03F00203 		and	r3, r3, #2
 3733 0072 002B     		cmp	r3, #0
 3734 0074 22D0     		beq	.L231
2180:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
2181:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Update the Global Variable */
2182:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC003_Handle.CommandInterruptError = SDMMC003_COMMAND_CRC_ERROR;
 3735              		.loc 1 2182 0
 3736 0076 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 3737 007a C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 3738 007e 4FF00302 		mov	r2, #3
 3739 0082 1A71     		strb	r2, [r3, #4]
2183:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****    /* Change the Command Line Status to free */
2184:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC003_Handle.State &= ~SDMMC003_STATE_CMD_ACTIVE;
 3740              		.loc 1 2184 0
 3741 0084 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 3742 0088 C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 3743 008c 1B88     		ldrh	r3, [r3, #0]	@ movhi
 3744 008e 9BB2     		uxth	r3, r3
 3745 0090 23F00403 		bic	r3, r3, #4
 3746 0094 9AB2     		uxth	r2, r3
 3747 0096 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 3748 009a C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 3749 009e 1A80     		strh	r2, [r3, #0]	@ movhi
2185:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****    /* Clear the Interrupt Status Bit */
2186:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC->INT_STATUS_ERR = SDMMC_INT_STATUS_ERR_CMD_CRC_ERR_Msk;
 3750              		.loc 1 2186 0
 3751 00a0 4FF44043 		mov	r3, #49152
 3752 00a4 C4F60103 		movt	r3, 18433
 3753 00a8 4FF00202 		mov	r2, #2
 3754 00ac 5A86     		strh	r2, [r3, #50]	@ movhi
2187:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****    /* Update the Interrupt variable */
2188:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC003_ISRContext.CmdFlag = 1;
 3755              		.loc 1 2188 0
 3756 00ae 40F20003 		movw	r3, #:lower16:SDMMC003_ISRContext
 3757 00b2 C0F20003 		movt	r3, #:upper16:SDMMC003_ISRContext
 3758 00b6 4FF00102 		mov	r2, #1
 3759 00ba 9A70     		strb	r2, [r3, #2]
 3760              	.L231:
2189:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   }
2190:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_29_3>>> */
2191:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   /* COMMAND END BIT ERROR INTERRUPT */
2192:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   if ((IntStatus & SDMMC_INT_STATUS_ERR_CMD_END_BIT_ERR_Msk ) != 0)
 3761              		.loc 1 2192 0
 3762 00bc FB88     		ldrh	r3, [r7, #6]
 3763 00be 03F00403 		and	r3, r3, #4
 3764 00c2 002B     		cmp	r3, #0
 3765 00c4 22D0     		beq	.L232
2193:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
2194:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****    /* Update the Global Variable */
2195:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC003_Handle.CommandInterruptError = SDMMC003_COMMAND_ENDBIT_ERROR;
 3766              		.loc 1 2195 0
 3767 00c6 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 3768 00ca C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 3769 00ce 4FF00402 		mov	r2, #4
 3770 00d2 1A71     		strb	r2, [r3, #4]
2196:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****    /* Change the Command Line Status to free */
2197:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC003_Handle.State &= ~SDMMC003_STATE_CMD_ACTIVE;
 3771              		.loc 1 2197 0
 3772 00d4 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 3773 00d8 C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 3774 00dc 1B88     		ldrh	r3, [r3, #0]	@ movhi
 3775 00de 9BB2     		uxth	r3, r3
 3776 00e0 23F00403 		bic	r3, r3, #4
 3777 00e4 9AB2     		uxth	r2, r3
 3778 00e6 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 3779 00ea C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 3780 00ee 1A80     		strh	r2, [r3, #0]	@ movhi
2198:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****    /* Clear the Interrupt Status Bit */
2199:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC->INT_STATUS_ERR = SDMMC_INT_STATUS_ERR_CMD_END_BIT_ERR_Msk;
 3781              		.loc 1 2199 0
 3782 00f0 4FF44043 		mov	r3, #49152
 3783 00f4 C4F60103 		movt	r3, 18433
 3784 00f8 4FF00402 		mov	r2, #4
 3785 00fc 5A86     		strh	r2, [r3, #50]	@ movhi
2200:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Update the Interrupt variable */
2201:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC003_ISRContext.CmdFlag = 1;
 3786              		.loc 1 2201 0
 3787 00fe 40F20003 		movw	r3, #:lower16:SDMMC003_ISRContext
 3788 0102 C0F20003 		movt	r3, #:upper16:SDMMC003_ISRContext
 3789 0106 4FF00102 		mov	r2, #1
 3790 010a 9A70     		strb	r2, [r3, #2]
 3791              	.L232:
2202:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   }
2203:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_29_4>>> */
2204:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   /* COMMAND INDEX ERROR INTERRUPT */
2205:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   if ((IntStatus & SDMMC_INT_STATUS_ERR_CMD_IND_ERR_Msk ) != 0)
 3792              		.loc 1 2205 0
 3793 010c FB88     		ldrh	r3, [r7, #6]
 3794 010e 03F00803 		and	r3, r3, #8
 3795 0112 002B     		cmp	r3, #0
 3796 0114 22D0     		beq	.L233
2206:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
2207:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Update the Global Variable */
2208:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC003_Handle.CommandInterruptError = SDMMC003_COMMAND_INDEX_ERROR;
 3797              		.loc 1 2208 0
 3798 0116 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 3799 011a C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 3800 011e 4FF00502 		mov	r2, #5
 3801 0122 1A71     		strb	r2, [r3, #4]
2209:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Change the Command Line Status to free */
2210:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC003_Handle.State &= ~SDMMC003_STATE_CMD_ACTIVE;
 3802              		.loc 1 2210 0
 3803 0124 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 3804 0128 C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 3805 012c 1B88     		ldrh	r3, [r3, #0]	@ movhi
 3806 012e 9BB2     		uxth	r3, r3
 3807 0130 23F00403 		bic	r3, r3, #4
 3808 0134 9AB2     		uxth	r2, r3
 3809 0136 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 3810 013a C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 3811 013e 1A80     		strh	r2, [r3, #0]	@ movhi
2211:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
2212:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** #if SDMMC_UVP_TEST
2213:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if (Test_TriggerInterrupt.Trigger_EraseEndError == TRUE)
2214:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
2215:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Forcefully disable the Command Index Error Interrupt */
2216:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC->FORCE_EVENT_ERR_STATUS = 0x0000 ;
2217:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
2218:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if (Test_TriggerInterrupt.Trigger_EraseStartError == TRUE)
2219:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
2220:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Forcefully disable the Command Index Error Interrupt */
2221:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC->FORCE_EVENT_ERR_STATUS = 0x0000 ;
2222:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
2223:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** #endif  /*SDMMC_UVP_TEST*/
2224:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Clear the Interrupt Status Bit */
2225:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC->INT_STATUS_ERR = SDMMC_INT_STATUS_ERR_CMD_IND_ERR_Msk;
 3812              		.loc 1 2225 0
 3813 0140 4FF44043 		mov	r3, #49152
 3814 0144 C4F60103 		movt	r3, 18433
 3815 0148 4FF00802 		mov	r2, #8
 3816 014c 5A86     		strh	r2, [r3, #50]	@ movhi
2226:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Update the Interrupt variable */
2227:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC003_ISRContext.CmdFlag = 1;
 3817              		.loc 1 2227 0
 3818 014e 40F20003 		movw	r3, #:lower16:SDMMC003_ISRContext
 3819 0152 C0F20003 		movt	r3, #:upper16:SDMMC003_ISRContext
 3820 0156 4FF00102 		mov	r2, #1
 3821 015a 9A70     		strb	r2, [r3, #2]
 3822              	.L233:
2228:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   }
2229:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_29_5>>> */
2230:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   /* DATA TIMEOUT ERROR INTERRUPT */
2231:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   if ((IntStatus & SDMMC_INT_STATUS_ERR_DATA_TIMEOUT_ERR_Msk) != 0)
 3823              		.loc 1 2231 0
 3824 015c FB88     		ldrh	r3, [r7, #6]
 3825 015e 03F01003 		and	r3, r3, #16
 3826 0162 002B     		cmp	r3, #0
 3827 0164 22D0     		beq	.L234
2232:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
2233:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Update the Global Variable */
2234:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC003_Handle.DataInterruptError = SDMMC003_DATA_TIMEOUT_ERROR;
 3828              		.loc 1 2234 0
 3829 0166 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 3830 016a C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 3831 016e 4FF00602 		mov	r2, #6
 3832 0172 DA70     		strb	r2, [r3, #3]
2235:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Change the Data line to free  */
2236:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC003_Handle.State &= ~SDMMC003_STATE_DATA_ACTIVE;
 3833              		.loc 1 2236 0
 3834 0174 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 3835 0178 C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 3836 017c 1B88     		ldrh	r3, [r3, #0]	@ movhi
 3837 017e 9BB2     		uxth	r3, r3
 3838 0180 23F00803 		bic	r3, r3, #8
 3839 0184 9AB2     		uxth	r2, r3
 3840 0186 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 3841 018a C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 3842 018e 1A80     		strh	r2, [r3, #0]	@ movhi
2237:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Clear the Interrupt Status Bit */
2238:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC->INT_STATUS_ERR = SDMMC_INT_STATUS_ERR_DATA_TIMEOUT_ERR_Msk;
 3843              		.loc 1 2238 0
 3844 0190 4FF44043 		mov	r3, #49152
 3845 0194 C4F60103 		movt	r3, 18433
 3846 0198 4FF01002 		mov	r2, #16
 3847 019c 5A86     		strh	r2, [r3, #50]	@ movhi
2239:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Update the Interrupt variable */
2240:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC003_ISRContext.DataFlag = 1;
 3848              		.loc 1 2240 0
 3849 019e 40F20003 		movw	r3, #:lower16:SDMMC003_ISRContext
 3850 01a2 C0F20003 		movt	r3, #:upper16:SDMMC003_ISRContext
 3851 01a6 4FF00102 		mov	r2, #1
 3852 01aa DA70     		strb	r2, [r3, #3]
 3853              	.L234:
2241:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   }
2242:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_29_6>>> */
2243:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   /* DATA CRC ERROR INTERRUPT  */
2244:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   if ((IntStatus & SDMMC_INT_STATUS_ERR_DATA_CRC_ERR_Msk) != 0)
 3854              		.loc 1 2244 0
 3855 01ac FB88     		ldrh	r3, [r7, #6]
 3856 01ae 03F02003 		and	r3, r3, #32
 3857 01b2 002B     		cmp	r3, #0
 3858 01b4 22D0     		beq	.L235
2245:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
2246:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Update the Global Variable */
2247:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC003_Handle.DataInterruptError = SDMMC003_DATA_CRC_ERROR;
 3859              		.loc 1 2247 0
 3860 01b6 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 3861 01ba C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 3862 01be 4FF00702 		mov	r2, #7
 3863 01c2 DA70     		strb	r2, [r3, #3]
2248:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Change the Data line to free  */
2249:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC003_Handle.State &= ~SDMMC003_STATE_DATA_ACTIVE;
 3864              		.loc 1 2249 0
 3865 01c4 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 3866 01c8 C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 3867 01cc 1B88     		ldrh	r3, [r3, #0]	@ movhi
 3868 01ce 9BB2     		uxth	r3, r3
 3869 01d0 23F00803 		bic	r3, r3, #8
 3870 01d4 9AB2     		uxth	r2, r3
 3871 01d6 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 3872 01da C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 3873 01de 1A80     		strh	r2, [r3, #0]	@ movhi
2250:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** #if SDMMC_UVP_TEST
2251:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if (Test_TriggerInterrupt.Trigger_DataErrorInterrupt == TRUE)
2252:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
2253:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Forcefully trigger the Data Crc Error Interrupt */
2254:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC->FORCE_EVENT_ERR_STATUS = 0x0000 ;
2255:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Enable the Buffer Ready Status Interrupt */
2256:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC->EN_INT_STATUS_NORM |= SDMMC_EN_INT_STATUS_NORM_BUFF_READ_READY_EN_Msk;
2257:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC->EN_INT_SIGNAL_NORM |= SDMMC_EN_INT_SIGNAL_NORM_BUFF_READ_READY_EN_Msk;
2258:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
2259:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****        /* Enable the Buffer Ready Status Interrupt */
2260:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC->EN_INT_STATUS_NORM |= SDMMC_EN_INT_STATUS_NORM_BUFF_WRITE_READY_EN_Msk;
2261:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC->EN_INT_SIGNAL_NORM |= SDMMC_EN_INT_SIGNAL_NORM_BUFF_WRITE_READY_EN_Msk;
2262:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
2263:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** #endif
2264:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Clear the Interrupt Status Bit */
2265:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC->INT_STATUS_ERR = SDMMC_INT_STATUS_ERR_DATA_CRC_ERR_Msk;
 3874              		.loc 1 2265 0
 3875 01e0 4FF44043 		mov	r3, #49152
 3876 01e4 C4F60103 		movt	r3, 18433
 3877 01e8 4FF02002 		mov	r2, #32
 3878 01ec 5A86     		strh	r2, [r3, #50]	@ movhi
2266:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Update the Interrupt variable */
2267:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC003_ISRContext.DataFlag = 1;
 3879              		.loc 1 2267 0
 3880 01ee 40F20003 		movw	r3, #:lower16:SDMMC003_ISRContext
 3881 01f2 C0F20003 		movt	r3, #:upper16:SDMMC003_ISRContext
 3882 01f6 4FF00102 		mov	r2, #1
 3883 01fa DA70     		strb	r2, [r3, #3]
 3884              	.L235:
2268:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   }
2269:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_29_7>>> */
2270:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   /*DATA END BIT ERROR INTERRUPT */
2271:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   if ((IntStatus & SDMMC_INT_STATUS_ERR_DATA_END_BIT_ERR_Msk) != 0)
 3885              		.loc 1 2271 0
 3886 01fc FB88     		ldrh	r3, [r7, #6]
 3887 01fe 03F04003 		and	r3, r3, #64
 3888 0202 002B     		cmp	r3, #0
 3889 0204 22D0     		beq	.L236
2272:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
2273:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****    /* Update the Global Variable */
2274:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****    SDMMC003_Handle.DataInterruptError = SDMMC003_DATA_ENDBIT_ERROR;
 3890              		.loc 1 2274 0
 3891 0206 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 3892 020a C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 3893 020e 4FF00802 		mov	r2, #8
 3894 0212 DA70     		strb	r2, [r3, #3]
2275:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****    /* Change the Data line to free  */
2276:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****    SDMMC003_Handle.State &= ~SDMMC003_STATE_DATA_ACTIVE;
 3895              		.loc 1 2276 0
 3896 0214 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 3897 0218 C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 3898 021c 1B88     		ldrh	r3, [r3, #0]	@ movhi
 3899 021e 9BB2     		uxth	r3, r3
 3900 0220 23F00803 		bic	r3, r3, #8
 3901 0224 9AB2     		uxth	r2, r3
 3902 0226 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 3903 022a C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 3904 022e 1A80     		strh	r2, [r3, #0]	@ movhi
2277:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****    /* Clear the Interrupt Status Bit */
2278:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****    SDMMC->INT_STATUS_ERR = SDMMC_INT_STATUS_ERR_DATA_END_BIT_ERR_Msk;
 3905              		.loc 1 2278 0
 3906 0230 4FF44043 		mov	r3, #49152
 3907 0234 C4F60103 		movt	r3, 18433
 3908 0238 4FF04002 		mov	r2, #64
 3909 023c 5A86     		strh	r2, [r3, #50]	@ movhi
2279:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Update the Interrupt variable */
2280:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC003_ISRContext.DataFlag = 1;
 3910              		.loc 1 2280 0
 3911 023e 40F20003 		movw	r3, #:lower16:SDMMC003_ISRContext
 3912 0242 C0F20003 		movt	r3, #:upper16:SDMMC003_ISRContext
 3913 0246 4FF00102 		mov	r2, #1
 3914 024a DA70     		strb	r2, [r3, #3]
 3915              	.L236:
2281:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   }
2282:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_29_8>>> */
2283:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   /* ACMD12 ERROR INTERUPT */
2284:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   if ((IntStatus & SDMMC_INT_STATUS_ERR_ACMD_ERR_Msk) != 0)
 3916              		.loc 1 2284 0
 3917 024c FB88     		ldrh	r3, [r7, #6]
 3918 024e 03F48073 		and	r3, r3, #256
 3919 0252 002B     		cmp	r3, #0
 3920 0254 30D0     		beq	.L237
2285:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
2286:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Update the Global Variable */
2287:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC003_Handle.AcmdInterruptError = SDMMC003_ACMD12_ERROR;
 3921              		.loc 1 2287 0
 3922 0256 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 3923 025a C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 3924 025e 4FF00902 		mov	r2, #9
 3925 0262 9A71     		strb	r2, [r3, #6]
2288:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Change the Cmd line to free  */
2289:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC003_Handle.State &= ~SDMMC003_STATE_CMD_ACTIVE;
 3926              		.loc 1 2289 0
 3927 0264 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 3928 0268 C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 3929 026c 1B88     		ldrh	r3, [r3, #0]	@ movhi
 3930 026e 9BB2     		uxth	r3, r3
 3931 0270 23F00403 		bic	r3, r3, #4
 3932 0274 9AB2     		uxth	r2, r3
 3933 0276 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 3934 027a C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 3935 027e 1A80     		strh	r2, [r3, #0]	@ movhi
2290:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Change the Data line to free  */
2291:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC003_Handle.State &= ~SDMMC003_STATE_DATA_ACTIVE;
 3936              		.loc 1 2291 0
 3937 0280 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 3938 0284 C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 3939 0288 1B88     		ldrh	r3, [r3, #0]	@ movhi
 3940 028a 9BB2     		uxth	r3, r3
 3941 028c 23F00803 		bic	r3, r3, #8
 3942 0290 9AB2     		uxth	r2, r3
 3943 0292 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 3944 0296 C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 3945 029a 1A80     		strh	r2, [r3, #0]	@ movhi
2292:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Clear the Interrupt Status Bit */
2293:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC->INT_STATUS_ERR = SDMMC_INT_STATUS_ERR_ACMD_ERR_Msk;
 3946              		.loc 1 2293 0
 3947 029c 4FF44043 		mov	r3, #49152
 3948 02a0 C4F60103 		movt	r3, 18433
 3949 02a4 4FF48072 		mov	r2, #256
 3950 02a8 5A86     		strh	r2, [r3, #50]	@ movhi
2294:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Update the Interrupt variable */
2295:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC003_ISRContext.CmdFlag = 1;
 3951              		.loc 1 2295 0
 3952 02aa 40F20003 		movw	r3, #:lower16:SDMMC003_ISRContext
 3953 02ae C0F20003 		movt	r3, #:upper16:SDMMC003_ISRContext
 3954 02b2 4FF00102 		mov	r2, #1
 3955 02b6 9A70     		strb	r2, [r3, #2]
 3956              	.L237:
2296:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   }
2297:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   FUNCTION_EXIT(GID_SDMMC00x, (uint32_t)SDMMC003_FUNCTION_EXIT);
2298:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   return Status;
 3957              		.loc 1 2298 0
 3958 02b8 FB68     		ldr	r3, [r7, #12]
2299:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** }
 3959              		.loc 1 2299 0
 3960 02ba 1846     		mov	r0, r3
 3961 02bc 07F11407 		add	r7, r7, #20
 3962 02c0 BD46     		mov	sp, r7
 3963 02c2 80BC     		pop	{r7}
 3964 02c4 7047     		bx	lr
 3965              		.cfi_endproc
 3966              	.LFE147:
 3968 02c6 00BF     		.section	.text.SDMMC003_lSwitchToTransferState,"ax",%progbits
 3969              		.align	2
 3970              		.global	SDMMC003_lSwitchToTransferState
 3971              		.thumb
 3972              		.thumb_func
 3974              	SDMMC003_lSwitchToTransferState:
 3975              	.LFB148:
2300:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
2301:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_30>>> */
2302:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*
2303:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  * This function is use to switch the card state to transferring state if the
2304:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  * card is not in the transferring state.
2305:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  */
2306:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
2307:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** status_t SDMMC003_lSwitchToTransferState()
2308:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** {
 3976              		.loc 1 2308 0
 3977              		.cfi_startproc
 3978              		@ args = 0, pretend = 0, frame = 16
 3979              		@ frame_needed = 1, uses_anonymous_args = 0
 3980 0000 80B5     		push	{r7, lr}
 3981              	.LCFI91:
 3982              		.cfi_def_cfa_offset 8
 3983              		.cfi_offset 7, -8
 3984              		.cfi_offset 14, -4
 3985 0002 84B0     		sub	sp, sp, #16
 3986              	.LCFI92:
 3987              		.cfi_def_cfa_offset 24
 3988 0004 00AF     		add	r7, sp, #0
 3989              	.LCFI93:
 3990              		.cfi_def_cfa_register 7
2309:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   status_t Status = (uint32_t)SDMMC003_ERROR;
 3991              		.loc 1 2309 0
 3992 0006 4FF00103 		mov	r3, #1
 3993 000a FB60     		str	r3, [r7, #12]
2310:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   uint32_t Argument = 0;
 3994              		.loc 1 2310 0
 3995 000c 4FF00003 		mov	r3, #0
 3996 0010 BB60     		str	r3, [r7, #8]
2311:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   uint32_t CardStatus = 0UL;
 3997              		.loc 1 2311 0
 3998 0012 4FF00003 		mov	r3, #0
 3999 0016 7B60     		str	r3, [r7, #4]
2312:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   FUNCTION_ENTRY(GID_SDMMC00x, (uint32_t)SDMMC003_FUNCTION_ENTRY);
2313:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   /* Check the current state of the card */
2314:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   do
2315:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   { 
2316:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****      Argument |= SDMMC003_CardInfo.Rca << SDMMC003_ARG_RCA_BITPOS;
 4000              		.loc 1 2316 0
 4001 0018 40F20003 		movw	r3, #:lower16:SDMMC003_CardInfo
 4002 001c C0F20003 		movt	r3, #:upper16:SDMMC003_CardInfo
 4003 0020 9B8D     		ldrh	r3, [r3, #44]
 4004 0022 4FEA0343 		lsl	r3, r3, #16
 4005 0026 BA68     		ldr	r2, [r7, #8]
 4006 0028 1343     		orrs	r3, r3, r2
 4007 002a BB60     		str	r3, [r7, #8]
2317:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Send Cmd13 to read card status  */
2318:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     Status = SDMMC003_lSendCommand( &(SDMMC003_COMMON_COMMAND(13)),Argument, \
 4008              		.loc 1 2318 0
 4009 002c 40F20003 		movw	r3, #:lower16:SDMMC003_SDHashTable
 4010 0030 C0F20003 		movt	r3, #:upper16:SDMMC003_SDHashTable
 4011 0034 5B7B     		ldrb	r3, [r3, #13]	@ zero_extendqisi2
 4012 0036 4FEA4302 		lsl	r2, r3, #1
 4013 003a 40F20003 		movw	r3, #:lower16:SDMMC003_Command
 4014 003e C0F20003 		movt	r3, #:upper16:SDMMC003_Command
 4015 0042 D218     		adds	r2, r2, r3
2319:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                       SDMMC003_RESPONSE_R1,&CardStatus);
 4016              		.loc 1 2319 0
 4017 0044 07F10403 		add	r3, r7, #4
2318:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     Status = SDMMC003_lSendCommand( &(SDMMC003_COMMON_COMMAND(13)),Argument, \
 4018              		.loc 1 2318 0
 4019 0048 1046     		mov	r0, r2
 4020 004a B968     		ldr	r1, [r7, #8]
 4021 004c 4FF00102 		mov	r2, #1
 4022 0050 FFF7FEFF 		bl	SDMMC003_lSendCommand
 4023 0054 F860     		str	r0, [r7, #12]
2320:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_30_1>>> */
2321:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if (Status != (uint32_t)DAVEApp_SUCCESS)
 4024              		.loc 1 2321 0
 4025 0056 FB68     		ldr	r3, [r7, #12]
 4026 0058 002B     		cmp	r3, #0
 4027 005a 20D1     		bne	.L244
 4028              	.L240:
2322:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
2323:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       break;
2324:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
2325:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_30_2>>> */
2326:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Check if it is in transferring state */
2327:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if( (( CardStatus & SDMMC003_CSR_CURRENT_STATE_BITMASK) >>\
 4029              		.loc 1 2327 0
 4030 005c 7B68     		ldr	r3, [r7, #4]
 4031 005e 03F4E853 		and	r3, r3, #7424
 4032 0062 4FEA5323 		lsr	r3, r3, #9
 4033 0066 042B     		cmp	r3, #4
 4034 0068 03D1     		bne	.L242
2328:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                SDMMC003_CSR_CURRENT_STATE_BITPOS ) ==  \
2329:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                SDMMC003_CSR_CURRENT_STATE_TRANS_VALUE )
2330:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
2331:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** #if SDMMC_UVP_TEST
2332:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       if ( Test_TriggerInterrupt.Trigger_TransferStateError == TRUE)
2333:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       {
2334:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****          /* Toggle to the Standby state.*/
2335:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         Status = SDMMC003_lSendCommand( &(SDMMC003_COMMON_COMMAND(7)),Argument, \
2336:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                         SDMMC003_RESPONSE_R1b, &CardStatus);
2337:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         break;
2338:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       }
2339:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** #endif
2340:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Status = (uint32_t)DAVEApp_SUCCESS;
 4035              		.loc 1 2340 0
 4036 006a 4FF00003 		mov	r3, #0
 4037 006e FB60     		str	r3, [r7, #12]
2341:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       break;
 4038              		.loc 1 2341 0
 4039 0070 16E0     		b	.L241
 4040              	.L242:
2342:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
2343:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Switch to transfer state i.e. CMD7 */
2344:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_30_3>>> */
2345:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     Status = SDMMC003_lSendCommand( &(SDMMC003_COMMON_COMMAND(7)),Argument, \
 4041              		.loc 1 2345 0
 4042 0072 40F20003 		movw	r3, #:lower16:SDMMC003_SDHashTable
 4043 0076 C0F20003 		movt	r3, #:upper16:SDMMC003_SDHashTable
 4044 007a DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 4045 007c 4FEA4302 		lsl	r2, r3, #1
 4046 0080 40F20003 		movw	r3, #:lower16:SDMMC003_Command
 4047 0084 C0F20003 		movt	r3, #:upper16:SDMMC003_Command
 4048 0088 D218     		adds	r2, r2, r3
2346:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                    SDMMC003_RESPONSE_R1b, &CardStatus);
 4049              		.loc 1 2346 0
 4050 008a 07F10403 		add	r3, r7, #4
2345:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     Status = SDMMC003_lSendCommand( &(SDMMC003_COMMON_COMMAND(7)),Argument, \
 4051              		.loc 1 2345 0
 4052 008e 1046     		mov	r0, r2
 4053 0090 B968     		ldr	r1, [r7, #8]
 4054 0092 4FF00202 		mov	r2, #2
 4055 0096 FFF7FEFF 		bl	SDMMC003_lSendCommand
 4056 009a F860     		str	r0, [r7, #12]
 4057 009c 00E0     		b	.L241
 4058              	.L244:
2323:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       break;
 4059              		.loc 1 2323 0
 4060 009e 00BF     		nop
 4061              	.L241:
2347:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   } while(0);
2348:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   FUNCTION_EXIT(GID_SDMMC00x, (uint32_t)SDMMC003_FUNCTION_EXIT);
2349:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   return Status;
 4062              		.loc 1 2349 0
 4063 00a0 FB68     		ldr	r3, [r7, #12]
2350:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** }
 4064              		.loc 1 2350 0
 4065 00a2 1846     		mov	r0, r3
 4066 00a4 07F11007 		add	r7, r7, #16
 4067 00a8 BD46     		mov	sp, r7
 4068 00aa 80BD     		pop	{r7, pc}
 4069              		.cfi_endproc
 4070              	.LFE148:
 4072              		.section	.text.SDMMC003_lDataTransfer,"ax",%progbits
 4073              		.align	2
 4074              		.global	SDMMC003_lDataTransfer
 4075              		.thumb
 4076              		.thumb_func
 4078              	SDMMC003_lDataTransfer:
 4079              	.LFB149:
2351:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
2352:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_31>>> */
2353:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*
2354:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  * This function performs the data transfer to/from the card .
2355:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  */
2356:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** status_t SDMMC003_lDataTransfer( uint32_t *BufferPtr, \
2357:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                               SDMMC003_DataTrasferType TransferMode, \
2358:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                               uint32_t QuadBytes)
2359:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** {
 4080              		.loc 1 2359 0
 4081              		.cfi_startproc
 4082              		@ args = 0, pretend = 0, frame = 32
 4083              		@ frame_needed = 1, uses_anonymous_args = 0
 4084 0000 80B5     		push	{r7, lr}
 4085              	.LCFI94:
 4086              		.cfi_def_cfa_offset 8
 4087              		.cfi_offset 7, -8
 4088              		.cfi_offset 14, -4
 4089 0002 88B0     		sub	sp, sp, #32
 4090              	.LCFI95:
 4091              		.cfi_def_cfa_offset 40
 4092 0004 00AF     		add	r7, sp, #0
 4093              	.LCFI96:
 4094              		.cfi_def_cfa_register 7
 4095 0006 F860     		str	r0, [r7, #12]
 4096 0008 0B46     		mov	r3, r1
 4097 000a 7A60     		str	r2, [r7, #4]
 4098 000c FB72     		strb	r3, [r7, #11]
2360:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   status_t Status = (uint32_t)SDMMC003_ERROR;
 4099              		.loc 1 2360 0
 4100 000e 4FF00103 		mov	r3, #1
 4101 0012 FB61     		str	r3, [r7, #28]
2361:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   handle_t TimerId;
2362:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   uint32_t Count = 0;
 4102              		.loc 1 2362 0
 4103 0014 4FF00003 		mov	r3, #0
 4104 0018 BB61     		str	r3, [r7, #24]
2363:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   FUNCTION_ENTRY(GID_SDMMC00x, (uint32_t)SDMMC003_FUNCTION_ENTRY);
2364:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   do
2365:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
2366:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* Block on Buffer Read/Write Ready Interrupt */
2367:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_31_1>>> */
2368:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     TimerId = SDMMC003_lStartTimer(SDMMC003_RESET_In_DATA_TRANSFER);
 4105              		.loc 1 2368 0
 4106 001a 4FF47A70 		mov	r0, #1000
 4107 001e FFF7FEFF 		bl	SDMMC003_lStartTimer
 4108 0022 7861     		str	r0, [r7, #20]
2369:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if(0 == TimerId)
 4109              		.loc 1 2369 0
 4110 0024 7B69     		ldr	r3, [r7, #20]
 4111 0026 002B     		cmp	r3, #0
 4112 0028 03D1     		bne	.L246
2370:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
2371:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Status = (uint32_t) SDMMC003_START_TIMER_FAILED;
 4113              		.loc 1 2371 0
 4114 002a 4FF02F03 		mov	r3, #47
 4115 002e FB61     		str	r3, [r7, #28]
2372:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       ERROR(GID_SDMMC00x, Status, 0, NULL);  
2373:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       break;  
 4116              		.loc 1 2373 0
 4117 0030 65E0     		b	.L247
 4118              	.L246:
2374:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
2375:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     do
2376:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
2377:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       if (SDMMC003_Handle.TimerExpire == 0)
 4119              		.loc 1 2377 0
 4120 0032 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 4121 0036 C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 4122 003a 9B7A     		ldrb	r3, [r3, #10]
 4123 003c DBB2     		uxtb	r3, r3
 4124 003e 002B     		cmp	r3, #0
 4125 0040 03D1     		bne	.L248
2378:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       {
2379:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         Status = (uint32_t)SDMMC003_TIMEOUT_OCCURED;
 4126              		.loc 1 2379 0
 4127 0042 4FF02E03 		mov	r3, #46
 4128 0046 FB61     		str	r3, [r7, #28]
2380:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         ERROR(GID_SDMMC00x, Status, 0, NULL);
2381:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         break;
 4129              		.loc 1 2381 0
 4130 0048 07E0     		b	.L249
 4131              	.L248:
2382:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       }
2383:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     } while( SDMMC003_ISRContext.DataFlag == 0);
 4132              		.loc 1 2383 0
 4133 004a 40F20003 		movw	r3, #:lower16:SDMMC003_ISRContext
 4134 004e C0F20003 		movt	r3, #:upper16:SDMMC003_ISRContext
 4135 0052 DB78     		ldrb	r3, [r3, #3]
 4136 0054 DBB2     		uxtb	r3, r3
 4137 0056 002B     		cmp	r3, #0
 4138 0058 EBD0     		beq	.L246
 4139              	.L249:
2384:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC003_lStopTimer(TimerId);
 4140              		.loc 1 2384 0
 4141 005a 7869     		ldr	r0, [r7, #20]
 4142 005c FFF7FEFF 		bl	SDMMC003_lStopTimer
2385:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC003_ISRContext.DataFlag = 0;
 4143              		.loc 1 2385 0
 4144 0060 40F20003 		movw	r3, #:lower16:SDMMC003_ISRContext
 4145 0064 C0F20003 		movt	r3, #:upper16:SDMMC003_ISRContext
 4146 0068 4FF00002 		mov	r2, #0
 4147 006c DA70     		strb	r2, [r3, #3]
2386:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Check Buffer is ready */
2387:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_31_2>>> */
2388:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if (SDMMC003_Handle.DataInterruptError == SDMMC003_BUFFER_READY)
 4148              		.loc 1 2388 0
 4149 006e 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 4150 0072 C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 4151 0076 DB78     		ldrb	r3, [r3, #3]
 4152 0078 DBB2     		uxtb	r3, r3
 4153 007a 1E2B     		cmp	r3, #30
 4154 007c 27D1     		bne	.L250
2389:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
2390:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****      /* Non-DMA transfer */
2391:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*<<<DD_SDMMC_nonAPI_31_7>>> */
2392:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Data transfer 4bytes in each iteration  */
2393:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       for (Count=0; Count<QuadBytes; Count++)
 4155              		.loc 1 2393 0
 4156 007e 4FF00003 		mov	r3, #0
 4157 0082 BB61     		str	r3, [r7, #24]
 4158 0084 1BE0     		b	.L251
 4159              	.L254:
2394:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       {
2395:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*<<<DD_SDMMC_nonAPI_31_8>>> */
2396:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         if (TransferMode == SDMMC003_READ_FROM_BUFF)
 4160              		.loc 1 2396 0
 4161 0086 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 4162 0088 012B     		cmp	r3, #1
 4163 008a 06D1     		bne	.L252
2397:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         {
2398:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****           *BufferPtr  = SDMMC->DATA_BUFFER;
 4164              		.loc 1 2398 0
 4165 008c 4FF44043 		mov	r3, #49152
 4166 0090 C4F60103 		movt	r3, 18433
 4167 0094 1A6A     		ldr	r2, [r3, #32]
 4168 0096 FB68     		ldr	r3, [r7, #12]
 4169 0098 1A60     		str	r2, [r3, #0]
 4170              	.L252:
2399:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         }
2400:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*<<<DD_SDMMC_nonAPI_31_9>>> */
2401:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         if(TransferMode == SDMMC003_WRITE_INTO_BUFF)
 4171              		.loc 1 2401 0
 4172 009a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 4173 009c 022B     		cmp	r3, #2
 4174 009e 06D1     		bne	.L253
2402:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         {
2403:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****           SDMMC->DATA_BUFFER = *BufferPtr;
 4175              		.loc 1 2403 0
 4176 00a0 4FF44043 		mov	r3, #49152
 4177 00a4 C4F60103 		movt	r3, 18433
 4178 00a8 FA68     		ldr	r2, [r7, #12]
 4179 00aa 1268     		ldr	r2, [r2, #0]
 4180 00ac 1A62     		str	r2, [r3, #32]
 4181              	.L253:
2404:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         }
2405:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         BufferPtr++;
 4182              		.loc 1 2405 0
 4183 00ae FB68     		ldr	r3, [r7, #12]
 4184 00b0 03F10403 		add	r3, r3, #4
 4185 00b4 FB60     		str	r3, [r7, #12]
2393:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       for (Count=0; Count<QuadBytes; Count++)
 4186              		.loc 1 2393 0
 4187 00b6 BB69     		ldr	r3, [r7, #24]
 4188 00b8 03F10103 		add	r3, r3, #1
 4189 00bc BB61     		str	r3, [r7, #24]
 4190              	.L251:
2393:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       for (Count=0; Count<QuadBytes; Count++)
 4191              		.loc 1 2393 0 is_stmt 0 discriminator 1
 4192 00be BA69     		ldr	r2, [r7, #24]
 4193 00c0 7B68     		ldr	r3, [r7, #4]
 4194 00c2 9A42     		cmp	r2, r3
 4195 00c4 DFD3     		bcc	.L254
2406:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       }
2407:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Status = (uint32_t)DAVEApp_SUCCESS;
 4196              		.loc 1 2407 0 is_stmt 1
 4197 00c6 4FF00003 		mov	r3, #0
 4198 00ca FB61     		str	r3, [r7, #28]
 4199 00cc 17E0     		b	.L247
 4200              	.L250:
2408:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }/* End of "if (SDMMC_Handle.DataInterruptError == SDMMC003_BUFFER_READY)" */
2409:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*<<<DD_SDMMC_nonAPI_31_10>>> */
2410:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     else
2411:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
2412:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC003_Handle.IssueAbort = 1;
 4201              		.loc 1 2412 0
 4202 00ce 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 4203 00d2 C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 4204 00d6 4FF00102 		mov	r2, #1
 4205 00da DA72     		strb	r2, [r3, #11]
2413:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Status = SDMMC003_lErrorInterruptRecovery(\
 4206              		.loc 1 2413 0
 4207 00dc 40F20003 		movw	r3, #:lower16:SDMMC003_ISRContext
 4208 00e0 C0F20003 		movt	r3, #:upper16:SDMMC003_ISRContext
 4209 00e4 1B88     		ldrh	r3, [r3, #0]	@ movhi
 4210 00e6 9AB2     		uxth	r2, r3
 4211 00e8 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 4212 00ec C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 4213 00f0 DB7A     		ldrb	r3, [r3, #11]
 4214 00f2 DBB2     		uxtb	r3, r3
 4215 00f4 1046     		mov	r0, r2
 4216 00f6 1946     		mov	r1, r3
 4217 00f8 FFF7FEFF 		bl	SDMMC003_lErrorInterruptRecovery
 4218 00fc F861     		str	r0, [r7, #28]
 4219              	.L247:
2414:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                               SDMMC003_ISRContext.InterruptStatusShadow, \
2415:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                               SDMMC003_Handle.IssueAbort);
2416:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
2417:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   } while(0);
2418:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   FUNCTION_EXIT(GID_SDMMC00x, (uint32_t)SDMMC003_FUNCTION_EXIT);
2419:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   return Status;
 4220              		.loc 1 2419 0
 4221 00fe FB69     		ldr	r3, [r7, #28]
2420:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** }
 4222              		.loc 1 2420 0
 4223 0100 1846     		mov	r0, r3
 4224 0102 07F12007 		add	r7, r7, #32
 4225 0106 BD46     		mov	sp, r7
 4226 0108 80BD     		pop	{r7, pc}
 4227              		.cfi_endproc
 4228              	.LFE149:
 4230 010a 00BF     		.section	.text.SDMMC003_CheckPCMDFlag,"ax",%progbits
 4231              		.align	2
 4232              		.global	SDMMC003_CheckPCMDFlag
 4233              		.thumb
 4234              		.thumb_func
 4236              	SDMMC003_CheckPCMDFlag:
 4237              	.LFB150:
2421:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
2422:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*
2423:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  * This function checks the PCMD flag.
2424:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  */
2425:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** void SDMMC003_CheckPCMDFlag(status_t PCMDFlag)
2426:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** {
 4238              		.loc 1 2426 0
 4239              		.cfi_startproc
 4240              		@ args = 0, pretend = 0, frame = 8
 4241              		@ frame_needed = 1, uses_anonymous_args = 0
 4242              		@ link register save eliminated.
 4243 0000 80B4     		push	{r7}
 4244              	.LCFI97:
 4245              		.cfi_def_cfa_offset 4
 4246              		.cfi_offset 7, -4
 4247 0002 83B0     		sub	sp, sp, #12
 4248              	.LCFI98:
 4249              		.cfi_def_cfa_offset 16
 4250 0004 00AF     		add	r7, sp, #0
 4251              	.LCFI99:
 4252              		.cfi_def_cfa_register 7
 4253 0006 7860     		str	r0, [r7, #4]
2427:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   SDMMC003_ReturnStatus  = 1UL;
 4254              		.loc 1 2427 0
 4255 0008 40F20003 		movw	r3, #:lower16:SDMMC003_ReturnStatus
 4256 000c C0F20003 		movt	r3, #:upper16:SDMMC003_ReturnStatus
 4257 0010 4FF00102 		mov	r2, #1
 4258 0014 1A60     		str	r2, [r3, #0]
2428:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   if (PCMDFlag == 1)
2429:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
2430:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     ERROR(GID_SDMMC00x, SDMMC003_ACMD_BOTH_ERROR,0,0);
2431:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   }
2432:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   else
2433:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
2434:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     ERROR(GID_SDMMC00x, SDMMC003_ACMD_SD_TRANSFER_ERROR,0,0);
2435:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   }
2436:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** }
 4259              		.loc 1 2436 0
 4260 0016 07F10C07 		add	r7, r7, #12
 4261 001a BD46     		mov	sp, r7
 4262 001c 80BC     		pop	{r7}
 4263 001e 7047     		bx	lr
 4264              		.cfi_endproc
 4265              	.LFE150:
 4267              		.section	.text.SDMMC003_lAcmdErrorRecovery,"ax",%progbits
 4268              		.align	2
 4269              		.global	SDMMC003_lAcmdErrorRecovery
 4270              		.thumb
 4271              		.thumb_func
 4273              	SDMMC003_lAcmdErrorRecovery:
 4274              	.LFB151:
2437:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
2438:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_32>>> */
2439:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*
2440:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  * This function performs the ACMD error Recovery.
2441:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  */
2442:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** void SDMMC003_lAcmdErrorRecovery()
2443:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** {
 4275              		.loc 1 2443 0
 4276              		.cfi_startproc
 4277              		@ args = 0, pretend = 0, frame = 16
 4278              		@ frame_needed = 1, uses_anonymous_args = 0
 4279 0000 80B5     		push	{r7, lr}
 4280              	.LCFI100:
 4281              		.cfi_def_cfa_offset 8
 4282              		.cfi_offset 7, -8
 4283              		.cfi_offset 14, -4
 4284 0002 84B0     		sub	sp, sp, #16
 4285              	.LCFI101:
 4286              		.cfi_def_cfa_offset 24
 4287 0004 00AF     		add	r7, sp, #0
 4288              	.LCFI102:
 4289              		.cfi_def_cfa_register 7
2444:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   status_t Status;
2445:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   status_t PCMDFlag = 0;
 4290              		.loc 1 2445 0
 4291 0006 4FF00003 		mov	r3, #0
 4292 000a FB60     		str	r3, [r7, #12]
2446:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   uint32_t CardStatus = 0;
 4293              		.loc 1 2446 0
 4294 000c 4FF00003 		mov	r3, #0
 4295 0010 7B60     		str	r3, [r7, #4]
2447:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   do
2448:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
2449:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_32_1>>> */
2450:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /** Check Auto CMD12 Not Executed Err in Auto CMd12 Error Status Register */
2451:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if ( ((SDMMC->ACMD_ERR_STATUS & SDMMC_ACMD_ERR_STATUS_ACMD12_NOT_EXEC_ERR_Msk) >> \
 4296              		.loc 1 2451 0
 4297 0012 4FF44043 		mov	r3, #49152
 4298 0016 C4F60103 		movt	r3, 18433
 4299 001a 9B8F     		ldrh	r3, [r3, #60]	@ movhi
 4300 001c 9BB2     		uxth	r3, r3
 4301 001e 03F00103 		and	r3, r3, #1
 4302 0022 002B     		cmp	r3, #0
 4303 0024 27D0     		beq	.L258
2452:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****             SDMMC_ACMD_ERR_STATUS_ACMD12_NOT_EXEC_ERR_Pos)  == 1)
2453:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
2454:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Set PCMDFlag to 1*/
2455:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       PCMDFlag = 1;
 4304              		.loc 1 2455 0
 4305 0026 4FF00103 		mov	r3, #1
 4306 002a FB60     		str	r3, [r7, #12]
2456:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Check Return Status of Recovery function of CMD_wo_DAT command */
2457:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_32_2>>> */
2458:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       if (SDMMC003_Handle.ErrorRecoveryStatus != SDMMC003_RECOVERABLE_ERROR)
 4307              		.loc 1 2458 0
 4308 002c 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 4309 0030 C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 4310 0034 DB79     		ldrb	r3, [r3, #7]
 4311 0036 DBB2     		uxtb	r3, r3
 4312 0038 242B     		cmp	r3, #36
 4313 003a 55D1     		bne	.L265
 4314              	.L259:
2459:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       {
2460:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         ERROR(GID_SDMMC00x, SDMMC003_NONRECOVERABLE_ERROR,0,0);
2461:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         break;
2462:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       }
2463:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* For recoverable error, issue CMD12 */
2464:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Status = SDMMC003_lSendCommand( &(SDMMC003_COMMON_COMMAND(12)), \
 4315              		.loc 1 2464 0
 4316 003c 40F20003 		movw	r3, #:lower16:SDMMC003_SDHashTable
 4317 0040 C0F20003 		movt	r3, #:upper16:SDMMC003_SDHashTable
 4318 0044 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 4319 0046 4FEA4302 		lsl	r2, r3, #1
 4320 004a 40F20003 		movw	r3, #:lower16:SDMMC003_Command
 4321 004e C0F20003 		movt	r3, #:upper16:SDMMC003_Command
 4322 0052 D218     		adds	r2, r2, r3
2465:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                       SDMMC003_ARGUMENT0, \
2466:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                       SDMMC003_RESPONSE_R1, &CardStatus);
 4323              		.loc 1 2466 0
 4324 0054 07F10403 		add	r3, r7, #4
2464:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Status = SDMMC003_lSendCommand( &(SDMMC003_COMMON_COMMAND(12)), \
 4325              		.loc 1 2464 0
 4326 0058 1046     		mov	r0, r2
 4327 005a 4FF00001 		mov	r1, #0
 4328 005e 4FF00102 		mov	r2, #1
 4329 0062 FFF7FEFF 		bl	SDMMC003_lSendCommand
 4330 0066 B860     		str	r0, [r7, #8]
2467:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* No Error */
2468:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_32_3>>> */
2469:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       if (Status == (uint32_t)DAVEApp_SUCCESS)
 4331              		.loc 1 2469 0
 4332 0068 BB68     		ldr	r3, [r7, #8]
 4333 006a 002B     		cmp	r3, #0
 4334 006c 3ED0     		beq	.L266
 4335              	.L261:
2470:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       {
2471:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         ERROR(GID_SDMMC00x, SDMMC003_ACMD_CMD_wo_DAT_ERROR,0,0);
2472:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         break;
2473:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       }
2474:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_32_4>>> */
2475:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Non Recoverable Error */
2476:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       if (Status == (uint32_t)SDMMC003_NONRECOVERABLE_ERROR)
 4336              		.loc 1 2476 0
 4337 006e BB68     		ldr	r3, [r7, #8]
 4338 0070 252B     		cmp	r3, #37
 4339 0072 21D1     		bne	.L262
2477:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       {
2478:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         ERROR(GID_SDMMC00x, Status,0,0);
2479:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         break;
 4340              		.loc 1 2479 0
 4341 0074 41E0     		b	.L257
 4342              	.L258:
2480:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       }
2481:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
2482:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_32_5>>> */
2483:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     else
2484:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
2485:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Set software reset for CMD line */
2486:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Status = SDMMC003_lReset(SDMMC_SW_RESET_SW_RST_CMD_LINE_Msk);
 4343              		.loc 1 2486 0
 4344 0076 4FF00200 		mov	r0, #2
 4345 007a FFF7FEFF 		bl	SDMMC003_lReset
 4346 007e B860     		str	r0, [r7, #8]
2487:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       if ( Status !=(uint32_t)DAVEApp_SUCCESS)
 4347              		.loc 1 2487 0
 4348 0080 BB68     		ldr	r3, [r7, #8]
 4349 0082 002B     		cmp	r3, #0
 4350 0084 34D1     		bne	.L267
 4351              	.L263:
2488:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       {
2489:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         break;
2490:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       }
2491:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Issue Cmd 12*/
2492:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_32_6>>> */
2493:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Status = SDMMC003_lSendCommand(  &(SDMMC003_COMMON_COMMAND(12)), \
 4352              		.loc 1 2493 0
 4353 0086 40F20003 		movw	r3, #:lower16:SDMMC003_SDHashTable
 4354 008a C0F20003 		movt	r3, #:upper16:SDMMC003_SDHashTable
 4355 008e 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 4356 0090 4FEA4302 		lsl	r2, r3, #1
 4357 0094 40F20003 		movw	r3, #:lower16:SDMMC003_Command
 4358 0098 C0F20003 		movt	r3, #:upper16:SDMMC003_Command
 4359 009c D218     		adds	r2, r2, r3
2494:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                       SDMMC003_ARGUMENT0, \
2495:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                       SDMMC003_RESPONSE_R1, \
2496:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                       &CardStatus);
 4360              		.loc 1 2496 0
 4361 009e 07F10403 		add	r3, r7, #4
2493:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Status = SDMMC003_lSendCommand(  &(SDMMC003_COMMON_COMMAND(12)), \
 4362              		.loc 1 2493 0
 4363 00a2 1046     		mov	r0, r2
 4364 00a4 4FF00001 		mov	r1, #0
 4365 00a8 4FF00102 		mov	r2, #1
 4366 00ac FFF7FEFF 		bl	SDMMC003_lSendCommand
 4367 00b0 B860     		str	r0, [r7, #8]
2497:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Non Recoverable Error */
2498:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_32_7>>> */
2499:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       if (Status == (uint32_t)SDMMC003_NONRECOVERABLE_ERROR)
 4368              		.loc 1 2499 0
 4369 00b2 BB68     		ldr	r3, [r7, #8]
 4370 00b4 252B     		cmp	r3, #37
 4371 00b6 1DD0     		beq	.L268
 4372              	.L262:
2500:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       {
2501:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         ERROR(GID_SDMMC00x, Status,0,0);
2502:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         break;
2503:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       }
2504:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
2505:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /*Set Software Reset for  Data line*/
2506:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     Status = SDMMC003_lReset(SDMMC_SW_RESET_SW_RST_DAT_LINE_Msk);
 4373              		.loc 1 2506 0
 4374 00b8 4FF00400 		mov	r0, #4
 4375 00bc FFF7FEFF 		bl	SDMMC003_lReset
 4376 00c0 B860     		str	r0, [r7, #8]
2507:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if ( Status !=(uint32_t)DAVEApp_SUCCESS)
 4377              		.loc 1 2507 0
 4378 00c2 BB68     		ldr	r3, [r7, #8]
 4379 00c4 002B     		cmp	r3, #0
 4380 00c6 17D1     		bne	.L269
 4381              	.L264:
2508:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
2509:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       break;
2510:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
2511:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_32_8>>> */
2512:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /*Check Command Not issued by Auto CMD12 Error */
2513:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if (((SDMMC->ACMD_ERR_STATUS & SDMMC_ACMD_ERR_STATUS_CMD_NOT_ISSUED_BY_ACMD12_ERR_Msk) >> \
 4382              		.loc 1 2513 0
 4383 00c8 4FF44043 		mov	r3, #49152
 4384 00cc C4F60103 		movt	r3, 18433
 4385 00d0 9B8F     		ldrh	r3, [r3, #60]	@ movhi
 4386 00d2 9BB2     		uxth	r3, r3
 4387 00d4 03F08003 		and	r3, r3, #128
 4388 00d8 4FEAD313 		lsr	r3, r3, #7
 4389 00dc 012B     		cmp	r3, #1
 4390 00de 0CD0     		beq	.L257
2514:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****             SDMMC_ACMD_ERR_STATUS_CMD_NOT_ISSUED_BY_ACMD12_ERR_Pos) == 1)
2515:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
2516:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       ERROR(GID_SDMMC00x, SDMMC003_ACMD_CMD_wo_DAT_NOT_ISSUED,0,0);
2517:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
2518:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_nonAPI_32_9>>> */
2519:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     else
2520:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
2521:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****      /* Check PCMD flag.If 1 means that An error occurred in CMD_wo_DAT,
2522:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       *  and also occurred in the SD memory transfer */
2523:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC003_CheckPCMDFlag(PCMDFlag);
 4391              		.loc 1 2523 0
 4392 00e0 F868     		ldr	r0, [r7, #12]
 4393 00e2 FFF7FEFF 		bl	SDMMC003_CheckPCMDFlag
 4394 00e6 08E0     		b	.L257
 4395              	.L265:
2461:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         break;
 4396              		.loc 1 2461 0
 4397 00e8 00BF     		nop
 4398 00ea 06E0     		b	.L257
 4399              	.L266:
2472:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         break;
 4400              		.loc 1 2472 0
 4401 00ec 00BF     		nop
 4402 00ee 04E0     		b	.L257
 4403              	.L267:
2489:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         break;
 4404              		.loc 1 2489 0
 4405 00f0 00BF     		nop
 4406 00f2 02E0     		b	.L257
 4407              	.L268:
2502:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         break;
 4408              		.loc 1 2502 0
 4409 00f4 00BF     		nop
 4410 00f6 00E0     		b	.L257
 4411              	.L269:
2509:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       break;
 4412              		.loc 1 2509 0
 4413 00f8 00BF     		nop
 4414              	.L257:
2524:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
2525:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   } while(0);
2526:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** }
 4415              		.loc 1 2526 0
 4416 00fa 07F11007 		add	r7, r7, #16
 4417 00fe BD46     		mov	sp, r7
 4418 0100 80BD     		pop	{r7, pc}
 4419              		.cfi_endproc
 4420              	.LFE151:
 4422 0102 00BF     		.section	.text.Timer_CallBack,"ax",%progbits
 4423              		.align	2
 4424              		.global	Timer_CallBack
 4425              		.thumb
 4426              		.thumb_func
 4428              	Timer_CallBack:
 4429              	.LFB152:
2527:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
2528:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** void Timer_CallBack(void* Temp)
2529:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** {
 4430              		.loc 1 2529 0
 4431              		.cfi_startproc
 4432              		@ args = 0, pretend = 0, frame = 8
 4433              		@ frame_needed = 1, uses_anonymous_args = 0
 4434              		@ link register save eliminated.
 4435 0000 80B4     		push	{r7}
 4436              	.LCFI103:
 4437              		.cfi_def_cfa_offset 4
 4438              		.cfi_offset 7, -4
 4439 0002 83B0     		sub	sp, sp, #12
 4440              	.LCFI104:
 4441              		.cfi_def_cfa_offset 16
 4442 0004 00AF     		add	r7, sp, #0
 4443              	.LCFI105:
 4444              		.cfi_def_cfa_register 7
 4445 0006 7860     		str	r0, [r7, #4]
2530:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   if (Temp != NULL)
 4446              		.loc 1 2530 0
 4447 0008 7B68     		ldr	r3, [r7, #4]
 4448 000a 002B     		cmp	r3, #0
 4449 000c 05D0     		beq	.L271
2531:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
2532:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC003_ReturnStatus = (status_t)Temp;
 4450              		.loc 1 2532 0
 4451 000e 7A68     		ldr	r2, [r7, #4]
 4452 0010 40F20003 		movw	r3, #:lower16:SDMMC003_ReturnStatus
 4453 0014 C0F20003 		movt	r3, #:upper16:SDMMC003_ReturnStatus
 4454 0018 1A60     		str	r2, [r3, #0]
 4455              	.L271:
2533:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   }
2534:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   SDMMC003_Handle.TimerExpire =0;
 4456              		.loc 1 2534 0
 4457 001a 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 4458 001e C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 4459 0022 4FF00002 		mov	r2, #0
 4460 0026 9A72     		strb	r2, [r3, #10]
2535:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** }
 4461              		.loc 1 2535 0
 4462 0028 07F10C07 		add	r7, r7, #12
 4463 002c BD46     		mov	sp, r7
 4464 002e 80BC     		pop	{r7}
 4465 0030 7047     		bx	lr
 4466              		.cfi_endproc
 4467              	.LFE152:
 4469 0032 00BF     		.section	.text.SDMMC003_lDelay,"ax",%progbits
 4470              		.align	2
 4471              		.global	SDMMC003_lDelay
 4472              		.thumb
 4473              		.thumb_func
 4475              	SDMMC003_lDelay:
 4476              	.LFB153:
2536:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
2537:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
2538:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<< DD_SDMMC_nonAPI_33 >>> */
2539:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /**
2540:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  * This function is used to some delay.
2541:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  */
2542:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** void SDMMC003_lDelay(uint32_t DelayTime)
2543:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** {
 4477              		.loc 1 2543 0
 4478              		.cfi_startproc
 4479              		@ args = 0, pretend = 0, frame = 16
 4480              		@ frame_needed = 1, uses_anonymous_args = 0
 4481 0000 80B5     		push	{r7, lr}
 4482              	.LCFI106:
 4483              		.cfi_def_cfa_offset 8
 4484              		.cfi_offset 7, -8
 4485              		.cfi_offset 14, -4
 4486 0002 84B0     		sub	sp, sp, #16
 4487              	.LCFI107:
 4488              		.cfi_def_cfa_offset 24
 4489 0004 00AF     		add	r7, sp, #0
 4490              	.LCFI108:
 4491              		.cfi_def_cfa_register 7
 4492 0006 7860     		str	r0, [r7, #4]
2544:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   handle_t TimerId;
2545:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   status_t Status;
2546:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   SDMMC003_Handle.TimerExpire = 1;
 4493              		.loc 1 2546 0
 4494 0008 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 4495 000c C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 4496 0010 4FF00102 		mov	r2, #1
 4497 0014 9A72     		strb	r2, [r3, #10]
2547:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   TimerId = SYSTM001_CreateTimer(DelayTime,SYSTM001_ONE_SHOT,Timer_CallBack,NULL);
 4498              		.loc 1 2547 0
 4499 0016 7868     		ldr	r0, [r7, #4]
 4500 0018 4FF00001 		mov	r1, #0
 4501 001c 40F20002 		movw	r2, #:lower16:Timer_CallBack
 4502 0020 C0F20002 		movt	r2, #:upper16:Timer_CallBack
 4503 0024 4FF00003 		mov	r3, #0
 4504 0028 FFF7FEFF 		bl	SYSTM001_CreateTimer
 4505 002c F860     		str	r0, [r7, #12]
2548:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   if(TimerId != 0)
 4506              		.loc 1 2548 0
 4507 002e FB68     		ldr	r3, [r7, #12]
 4508 0030 002B     		cmp	r3, #0
 4509 0032 1FD0     		beq	.L272
2549:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
2550:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Timer is created successfully */
2551:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     Status = SYSTM001_StartTimer(TimerId);
 4510              		.loc 1 2551 0
 4511 0034 F868     		ldr	r0, [r7, #12]
 4512 0036 FFF7FEFF 		bl	SYSTM001_StartTimer
 4513 003a B860     		str	r0, [r7, #8]
2552:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if(Status == DAVEApp_SUCCESS)
 4514              		.loc 1 2552 0
 4515 003c BB68     		ldr	r3, [r7, #8]
 4516 003e 002B     		cmp	r3, #0
 4517 0040 18D1     		bne	.L272
2553:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
2554:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Wait in infinite loop till the timer expires */
2555:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       while(SDMMC003_Handle.TimerExpire)
 4518              		.loc 1 2555 0
 4519 0042 00BF     		nop
 4520              	.L274:
 4521              		.loc 1 2555 0 is_stmt 0 discriminator 1
 4522 0044 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 4523 0048 C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 4524 004c 9B7A     		ldrb	r3, [r3, #10]
 4525 004e DBB2     		uxtb	r3, r3
 4526 0050 002B     		cmp	r3, #0
 4527 0052 F7D1     		bne	.L274
2556:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       {
2557:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       }
2558:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* stop the timer */
2559:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Status = SYSTM001_StopTimer(TimerId);
 4528              		.loc 1 2559 0 is_stmt 1
 4529 0054 F868     		ldr	r0, [r7, #12]
 4530 0056 FFF7FEFF 		bl	SYSTM001_StopTimer
 4531 005a B860     		str	r0, [r7, #8]
2560:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Delete the Timer*/
2561:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       if(Status == DAVEApp_SUCCESS)
 4532              		.loc 1 2561 0
 4533 005c BB68     		ldr	r3, [r7, #8]
 4534 005e 002B     		cmp	r3, #0
 4535 0060 08D1     		bne	.L272
2562:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       {
2563:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         SDMMC003_ReturnStatus = SYSTM001_DeleteTimer(TimerId);
 4536              		.loc 1 2563 0
 4537 0062 F868     		ldr	r0, [r7, #12]
 4538 0064 FFF7FEFF 		bl	SYSTM001_DeleteTimer
 4539 0068 0246     		mov	r2, r0
 4540 006a 40F20003 		movw	r3, #:lower16:SDMMC003_ReturnStatus
 4541 006e C0F20003 		movt	r3, #:upper16:SDMMC003_ReturnStatus
 4542 0072 1A60     		str	r2, [r3, #0]
 4543              	.L272:
2564:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       } /* End of " if(Status == DAVEApp_SUCCESS)"*/
2565:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     } /* End of " if(Status == DAVEApp_SUCCESS)"*/
2566:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   }/* End of "if(TimerId != 0)" */
2567:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** }
 4544              		.loc 1 2567 0
 4545 0074 07F11007 		add	r7, r7, #16
 4546 0078 BD46     		mov	sp, r7
 4547 007a 80BD     		pop	{r7, pc}
 4548              		.cfi_endproc
 4549              	.LFE153:
 4551              		.section	.text.SDMMC0_0_IRQHandler,"ax",%progbits
 4552              		.align	2
 4553              		.global	SDMMC0_0_IRQHandler
 4554              		.thumb
 4555              		.thumb_func
 4557              	SDMMC0_0_IRQHandler:
 4558              	.LFB154:
2568:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
2569:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<< DD_SDMMC_nonAPI_34 >>>
2570:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  *  SDMMC Interrupt Handler */
2571:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** void SDMMC0_0_IRQHandler()
2572:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** {
 4559              		.loc 1 2572 0
 4560              		.cfi_startproc
 4561              		@ args = 0, pretend = 0, frame = 8
 4562              		@ frame_needed = 1, uses_anonymous_args = 0
 4563 0000 80B5     		push	{r7, lr}
 4564              	.LCFI109:
 4565              		.cfi_def_cfa_offset 8
 4566              		.cfi_offset 7, -8
 4567              		.cfi_offset 14, -4
 4568 0002 82B0     		sub	sp, sp, #8
 4569              	.LCFI110:
 4570              		.cfi_def_cfa_offset 16
 4571 0004 00AF     		add	r7, sp, #0
 4572              	.LCFI111:
 4573              		.cfi_def_cfa_register 7
2573:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   uint32_t Status;
2574:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   NormalIntStatus = SDMMC->INT_STATUS_NORM;
 4574              		.loc 1 2574 0
 4575 0006 4FF44043 		mov	r3, #49152
 4576 000a C4F60103 		movt	r3, 18433
 4577 000e 1B8E     		ldrh	r3, [r3, #48]	@ movhi
 4578 0010 9AB2     		uxth	r2, r3
 4579 0012 40F20003 		movw	r3, #:lower16:NormalIntStatus
 4580 0016 C0F20003 		movt	r3, #:upper16:NormalIntStatus
 4581 001a 1A80     		strh	r2, [r3, #0]	@ movhi
2575:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   ErrorIntStatus  = SDMMC->INT_STATUS_ERR;
 4582              		.loc 1 2575 0
 4583 001c 4FF44043 		mov	r3, #49152
 4584 0020 C4F60103 		movt	r3, 18433
 4585 0024 5B8E     		ldrh	r3, [r3, #50]	@ movhi
 4586 0026 9AB2     		uxth	r2, r3
 4587 0028 40F20003 		movw	r3, #:lower16:ErrorIntStatus
 4588 002c C0F20003 		movt	r3, #:upper16:ErrorIntStatus
 4589 0030 1A80     		strh	r2, [r3, #0]	@ movhi
2576:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<< DD_SDMMC_nonAPI_34_1 >>> */
2577:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   if (NormalIntStatus & SDMMC_INT_STATUS_NORM_ERR_INT_Msk)
 4590              		.loc 1 2577 0
 4591 0032 40F20003 		movw	r3, #:lower16:NormalIntStatus
 4592 0036 C0F20003 		movt	r3, #:upper16:NormalIntStatus
 4593 003a 1B88     		ldrh	r3, [r3, #0]	@ movhi
 4594 003c 9BB2     		uxth	r3, r3
 4595 003e 9BB2     		uxth	r3, r3
 4596 0040 1BB2     		sxth	r3, r3
 4597 0042 002B     		cmp	r3, #0
 4598 0044 09DA     		bge	.L276
2578:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
2579:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     Status = SDMMC003_lErrorInterruptHandler( ErrorIntStatus );
 4599              		.loc 1 2579 0
 4600 0046 40F20003 		movw	r3, #:lower16:ErrorIntStatus
 4601 004a C0F20003 		movt	r3, #:upper16:ErrorIntStatus
 4602 004e 1B88     		ldrh	r3, [r3, #0]	@ movhi
 4603 0050 9BB2     		uxth	r3, r3
 4604 0052 1846     		mov	r0, r3
 4605 0054 FFF7FEFF 		bl	SDMMC003_lErrorInterruptHandler
 4606 0058 7860     		str	r0, [r7, #4]
 4607              	.L276:
2580:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if (Status != (uint32_t)DAVEApp_SUCCESS)
2581:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
2582:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       ERROR(GID_SDMMC00x, Status,0,0);
2583:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
2584:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   }
2585:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<< DD_SDMMC_nonAPI_34_2 >>> */
2586:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   if(NormalIntStatus & SDMMC003_NORMAL_INT_STATUS_BITS)
 4608              		.loc 1 2586 0
 4609 005a 40F20003 		movw	r3, #:lower16:NormalIntStatus
 4610 005e C0F20003 		movt	r3, #:upper16:NormalIntStatus
 4611 0062 1B88     		ldrh	r3, [r3, #0]	@ movhi
 4612 0064 9BB2     		uxth	r3, r3
 4613 0066 4FEA4343 		lsl	r3, r3, #17
 4614 006a 4FEA5343 		lsr	r3, r3, #17
 4615 006e 002B     		cmp	r3, #0
 4616 0070 09D0     		beq	.L275
2587:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
2588:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     Status = SDMMC003_lNormalInterruptHandler( NormalIntStatus);
 4617              		.loc 1 2588 0
 4618 0072 40F20003 		movw	r3, #:lower16:NormalIntStatus
 4619 0076 C0F20003 		movt	r3, #:upper16:NormalIntStatus
 4620 007a 1B88     		ldrh	r3, [r3, #0]	@ movhi
 4621 007c 9BB2     		uxth	r3, r3
 4622 007e 1846     		mov	r0, r3
 4623 0080 FFF7FEFF 		bl	SDMMC003_lNormalInterruptHandler
 4624 0084 7860     		str	r0, [r7, #4]
 4625              	.L275:
2589:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if (Status != (uint32_t)DAVEApp_SUCCESS)
2590:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
2591:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       ERROR(GID_SDMMC00x, Status,0,0);
2592:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
2593:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   }
2594:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** }
 4626              		.loc 1 2594 0
 4627 0086 07F10807 		add	r7, r7, #8
 4628 008a BD46     		mov	sp, r7
 4629 008c 80BD     		pop	{r7, pc}
 4630              		.cfi_endproc
 4631              	.LFE154:
 4633 008e 00BF     		.section	.text.SDMMC003_lCardIdentificationProcess,"ax",%progbits
 4634              		.align	2
 4635              		.global	SDMMC003_lCardIdentificationProcess
 4636              		.thumb
 4637              		.thumb_func
 4639              	SDMMC003_lCardIdentificationProcess:
 4640              	.LFB155:
2595:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
2596:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
2597:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<< DD_SDMMC_nonAPI_36 >>> */
2598:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*
2599:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  * This function performs the card initialization and identification operation.
2600:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  */
2601:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** status_t SDMMC003_lCardIdentificationProcess()
2602:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** {
 4641              		.loc 1 2602 0
 4642              		.cfi_startproc
 4643              		@ args = 0, pretend = 0, frame = 8
 4644              		@ frame_needed = 1, uses_anonymous_args = 0
 4645 0000 80B5     		push	{r7, lr}
 4646              	.LCFI112:
 4647              		.cfi_def_cfa_offset 8
 4648              		.cfi_offset 7, -8
 4649              		.cfi_offset 14, -4
 4650 0002 82B0     		sub	sp, sp, #8
 4651              	.LCFI113:
 4652              		.cfi_def_cfa_offset 16
 4653 0004 00AF     		add	r7, sp, #0
 4654              	.LCFI114:
 4655              		.cfi_def_cfa_register 7
2603:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   status_t Status = (uint32_t)SDMMC003_ERROR;
 4656              		.loc 1 2603 0
 4657 0006 4FF00103 		mov	r3, #1
 4658 000a 7B60     		str	r3, [r7, #4]
2604:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   handle_t TimerId = 0;
 4659              		.loc 1 2604 0
 4660 000c 4FF00003 		mov	r3, #0
 4661 0010 3B60     		str	r3, [r7, #0]
2605:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   /* Silicon Testing Added */
2606:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   do
2607:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
2608:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<< DD_SDMMC_nonAPI_36_1 >>> */
2609:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****    /* Wait till the Internal clock gets Stable.*/
2610:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     TimerId = SDMMC003_lStartTimer(SDMMC003_CLOCK_STABLE_DELAY);
 4662              		.loc 1 2610 0
 4663 0012 4FF47A70 		mov	r0, #1000
 4664 0016 FFF7FEFF 		bl	SDMMC003_lStartTimer
 4665 001a 3860     		str	r0, [r7, #0]
2611:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if(0 == TimerId)
 4666              		.loc 1 2611 0
 4667 001c 3B68     		ldr	r3, [r7, #0]
 4668 001e 002B     		cmp	r3, #0
 4669 0020 03D1     		bne	.L279
2612:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
2613:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Status = (uint32_t) SDMMC003_START_TIMER_FAILED;
 4670              		.loc 1 2613 0
 4671 0022 4FF02F03 		mov	r3, #47
 4672 0026 7B60     		str	r3, [r7, #4]
2614:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       ERROR(GID_SDMMC00x, Status, 0, NULL);  
2615:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       break; 
 4673              		.loc 1 2615 0
 4674 0028 50E0     		b	.L280
 4675              	.L279:
2616:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
2617:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     do
2618:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
2619:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       if (SDMMC003_Handle.TimerExpire == 0)
 4676              		.loc 1 2619 0
 4677 002a 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 4678 002e C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 4679 0032 9B7A     		ldrb	r3, [r3, #10]
 4680 0034 DBB2     		uxtb	r3, r3
 4681 0036 002B     		cmp	r3, #0
 4682 0038 03D1     		bne	.L281
2620:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       {
2621:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         Status = (uint32_t)SDMMC003_TIMEOUT_OCCURED;
 4683              		.loc 1 2621 0
 4684 003a 4FF02E03 		mov	r3, #46
 4685 003e 7B60     		str	r3, [r7, #4]
2622:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         ERROR(GID_SDMMC00x, Status, 0, NULL);
2623:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         break;
 4686              		.loc 1 2623 0
 4687 0040 09E0     		b	.L282
 4688              	.L281:
2624:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       }
2625:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     } while((SDMMC->CLOCK_CTRL & SDMMC_CLOCK_CTRL_INTERNAL_CLOCK_STABLE_Msk ) == 0);
 4689              		.loc 1 2625 0
 4690 0042 4FF44043 		mov	r3, #49152
 4691 0046 C4F60103 		movt	r3, 18433
 4692 004a 9B8D     		ldrh	r3, [r3, #44]	@ movhi
 4693 004c 9BB2     		uxth	r3, r3
 4694 004e 03F00203 		and	r3, r3, #2
 4695 0052 002B     		cmp	r3, #0
 4696 0054 E9D0     		beq	.L279
 4697              	.L282:
2626:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC003_lStopTimer(TimerId);    
 4698              		.loc 1 2626 0
 4699 0056 3868     		ldr	r0, [r7, #0]
 4700 0058 FFF7FEFF 		bl	SDMMC003_lStopTimer
2627:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if (Status == (uint32_t)SDMMC003_TIMEOUT_OCCURED )
 4701              		.loc 1 2627 0
 4702 005c 7B68     		ldr	r3, [r7, #4]
 4703 005e 2E2B     		cmp	r3, #46
 4704 0060 31D0     		beq	.L286
 4705              	.L283:
2628:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
2629:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       break; 
2630:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
2631:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Enable the SD clock */
2632:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC->CLOCK_CTRL |= SDMMC_CLOCK_CTRL_SDCLOCK_EN_Msk;
 4706              		.loc 1 2632 0
 4707 0062 4FF44043 		mov	r3, #49152
 4708 0066 C4F60103 		movt	r3, 18433
 4709 006a 4FF44042 		mov	r2, #49152
 4710 006e C4F60102 		movt	r2, 18433
 4711 0072 928D     		ldrh	r2, [r2, #44]	@ movhi
 4712 0074 92B2     		uxth	r2, r2
 4713 0076 42F00402 		orr	r2, r2, #4
 4714 007a 92B2     		uxth	r2, r2
 4715 007c 9A85     		strh	r2, [r3, #44]	@ movhi
2633:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Set Power Control Register */
2634:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SET_BIT( SDMMC->POWER_CTRL, SDMMC_POWER_CTRL_SD_BUS_POWER_Pos);
 4716              		.loc 1 2634 0
 4717 007e 4FF44043 		mov	r3, #49152
 4718 0082 C4F60103 		movt	r3, 18433
 4719 0086 4FF44042 		mov	r2, #49152
 4720 008a C4F60102 		movt	r2, 18433
 4721 008e 92F82920 		ldrb	r2, [r2, #41]
 4722 0092 D2B2     		uxtb	r2, r2
 4723 0094 42F00102 		orr	r2, r2, #1
 4724 0098 D2B2     		uxtb	r2, r2
 4725 009a 83F82920 		strb	r2, [r3, #41]
2635:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<< DD_SDMMC_nonAPI_36_2 >>> */    
2636:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if(SDMMC003_Handle.InitializeFlag == 0)
 4726              		.loc 1 2636 0
 4727 009e 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 4728 00a2 C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 4729 00a6 1B7A     		ldrb	r3, [r3, #8]
 4730 00a8 DBB2     		uxtb	r3, r3
 4731 00aa 002B     		cmp	r3, #0
 4732 00ac 0ED1     		bne	.L280
2637:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
2638:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Status  = SDMMC003_lInitializeCard();
 4733              		.loc 1 2638 0
 4734 00ae FFF7FEFF 		bl	SDMMC003_lInitializeCard
 4735 00b2 7860     		str	r0, [r7, #4]
2639:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<< DD_SDMMC_nonAPI_36_3 >>> */    
2640:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       if( Status != (uint32_t)DAVEApp_SUCCESS )
 4736              		.loc 1 2640 0
 4737 00b4 7B68     		ldr	r3, [r7, #4]
 4738 00b6 002B     		cmp	r3, #0
 4739 00b8 07D1     		bne	.L287
 4740              	.L284:
2641:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       {
2642:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         ERROR(GID_SDMMC00x, Status, 0, NULL);
2643:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         break;
2644:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       }/* End of " if( Status != DAVEApp_SUCCESS )"*/
2645:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Status = SDMMC003_lAfterCardInitialize();
 4741              		.loc 1 2645 0
 4742 00ba FFF7FEFF 		bl	SDMMC003_lAfterCardInitialize
 4743 00be 7860     		str	r0, [r7, #4]
2646:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<< DD_SDMMC_nonAPI_36_4 >>> */  
2647:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       if( Status != (uint32_t)DAVEApp_SUCCESS )
 4744              		.loc 1 2647 0
 4745 00c0 7B68     		ldr	r3, [r7, #4]
 4746 00c2 002B     		cmp	r3, #0
 4747 00c4 02E0     		b	.L280
 4748              	.L286:
2629:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       break; 
 4749              		.loc 1 2629 0
 4750 00c6 00BF     		nop
 4751 00c8 00E0     		b	.L280
 4752              	.L287:
2643:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         break;
 4753              		.loc 1 2643 0
 4754 00ca 00BF     		nop
 4755              	.L280:
2648:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       {
2649:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         ERROR(GID_SDMMC00x, Status, 0, NULL);
2650:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         break;
2651:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       }/* End of "if(Status != DAVEApp_SUCCESS )" */
2652:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }/* End of "if((SDMMC003_Handle.State & SDMMC003_STATE_CARD_INITIALIZED)== 0 )"*/
2653:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   } while(0);
2654:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   return Status;
 4756              		.loc 1 2654 0
 4757 00cc 7B68     		ldr	r3, [r7, #4]
2655:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** }
 4758              		.loc 1 2655 0
 4759 00ce 1846     		mov	r0, r3
 4760 00d0 07F10807 		add	r7, r7, #8
 4761 00d4 BD46     		mov	sp, r7
 4762 00d6 80BD     		pop	{r7, pc}
 4763              		.cfi_endproc
 4764              	.LFE155:
 4766              		.section	.text.SDMMC003_lStartTimer,"ax",%progbits
 4767              		.align	2
 4768              		.global	SDMMC003_lStartTimer
 4769              		.thumb
 4770              		.thumb_func
 4772              	SDMMC003_lStartTimer:
 4773              	.LFB156:
2656:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
2657:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<< DD_SDMMC_nonAPI_37 >>> */
2658:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /**
2659:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  * This function is used to create and start timer in NON-RTOS environment.
2660:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  */
2661:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** handle_t SDMMC003_lStartTimer(uint32_t DelayTime)
2662:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** {
 4774              		.loc 1 2662 0
 4775              		.cfi_startproc
 4776              		@ args = 0, pretend = 0, frame = 16
 4777              		@ frame_needed = 1, uses_anonymous_args = 0
 4778 0000 80B5     		push	{r7, lr}
 4779              	.LCFI115:
 4780              		.cfi_def_cfa_offset 8
 4781              		.cfi_offset 7, -8
 4782              		.cfi_offset 14, -4
 4783 0002 84B0     		sub	sp, sp, #16
 4784              	.LCFI116:
 4785              		.cfi_def_cfa_offset 24
 4786 0004 00AF     		add	r7, sp, #0
 4787              	.LCFI117:
 4788              		.cfi_def_cfa_register 7
 4789 0006 7860     		str	r0, [r7, #4]
2663:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   handle_t TimerId;
2664:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   status_t Status;
2665:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   SDMMC003_Handle.TimerExpire = 1;
 4790              		.loc 1 2665 0
 4791 0008 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 4792 000c C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 4793 0010 4FF00102 		mov	r2, #1
 4794 0014 9A72     		strb	r2, [r3, #10]
2666:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   TimerId = SYSTM001_CreateTimer(DelayTime,SYSTM001_ONE_SHOT,Timer_CallBack,NULL);
 4795              		.loc 1 2666 0
 4796 0016 7868     		ldr	r0, [r7, #4]
 4797 0018 4FF00001 		mov	r1, #0
 4798 001c 40F20002 		movw	r2, #:lower16:Timer_CallBack
 4799 0020 C0F20002 		movt	r2, #:upper16:Timer_CallBack
 4800 0024 4FF00003 		mov	r3, #0
 4801 0028 FFF7FEFF 		bl	SYSTM001_CreateTimer
 4802 002c F860     		str	r0, [r7, #12]
2667:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<< DD_SDMMC_nonAPI_37_1 >>> */
2668:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   if(TimerId != 0)
 4803              		.loc 1 2668 0
 4804 002e FB68     		ldr	r3, [r7, #12]
 4805 0030 002B     		cmp	r3, #0
 4806 0032 12D0     		beq	.L289
2669:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
2670:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* Timer is created successfully */
2671:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     Status = SYSTM001_StartTimer(TimerId);
 4807              		.loc 1 2671 0
 4808 0034 F868     		ldr	r0, [r7, #12]
 4809 0036 FFF7FEFF 		bl	SYSTM001_StartTimer
 4810 003a B860     		str	r0, [r7, #8]
2672:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<< DD_SDMMC_nonAPI_37_2 >>> */
2673:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if(DAVEApp_SUCCESS != Status)
 4811              		.loc 1 2673 0
 4812 003c BB68     		ldr	r3, [r7, #8]
 4813 003e 002B     		cmp	r3, #0
 4814 0040 0BD0     		beq	.L289
2674:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
2675:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /*Delete Timer*/
2676:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC003_ReturnStatus = SYSTM001_DeleteTimer(TimerId);
 4815              		.loc 1 2676 0
 4816 0042 F868     		ldr	r0, [r7, #12]
 4817 0044 FFF7FEFF 		bl	SYSTM001_DeleteTimer
 4818 0048 0246     		mov	r2, r0
 4819 004a 40F20003 		movw	r3, #:lower16:SDMMC003_ReturnStatus
 4820 004e C0F20003 		movt	r3, #:upper16:SDMMC003_ReturnStatus
 4821 0052 1A60     		str	r2, [r3, #0]
2677:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       TimerId = 0;
 4822              		.loc 1 2677 0
 4823 0054 4FF00003 		mov	r3, #0
 4824 0058 FB60     		str	r3, [r7, #12]
 4825              	.L289:
2678:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
2679:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   }
2680:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   return TimerId;
 4826              		.loc 1 2680 0
 4827 005a FB68     		ldr	r3, [r7, #12]
2681:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** }
 4828              		.loc 1 2681 0
 4829 005c 1846     		mov	r0, r3
 4830 005e 07F11007 		add	r7, r7, #16
 4831 0062 BD46     		mov	sp, r7
 4832 0064 80BD     		pop	{r7, pc}
 4833              		.cfi_endproc
 4834              	.LFE156:
 4836 0066 00BF     		.section	.text.SDMMC003_lStopTimer,"ax",%progbits
 4837              		.align	2
 4838              		.global	SDMMC003_lStopTimer
 4839              		.thumb
 4840              		.thumb_func
 4842              	SDMMC003_lStopTimer:
 4843              	.LFB157:
2682:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
2683:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<< DD_SDMMC_nonAPI_38 >>> */
2684:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /**
2685:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  * This function is used to stop timer in NON-RTOS environment.
2686:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  */
2687:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** void SDMMC003_lStopTimer(handle_t TimerId)
2688:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** {
 4844              		.loc 1 2688 0
 4845              		.cfi_startproc
 4846              		@ args = 0, pretend = 0, frame = 16
 4847              		@ frame_needed = 1, uses_anonymous_args = 0
 4848 0000 80B5     		push	{r7, lr}
 4849              	.LCFI118:
 4850              		.cfi_def_cfa_offset 8
 4851              		.cfi_offset 7, -8
 4852              		.cfi_offset 14, -4
 4853 0002 84B0     		sub	sp, sp, #16
 4854              	.LCFI119:
 4855              		.cfi_def_cfa_offset 24
 4856 0004 00AF     		add	r7, sp, #0
 4857              	.LCFI120:
 4858              		.cfi_def_cfa_register 7
 4859 0006 7860     		str	r0, [r7, #4]
2689:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   status_t Status;
2690:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   /* stop the timer */
2691:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   Status = SYSTM001_StopTimer(TimerId);
 4860              		.loc 1 2691 0
 4861 0008 7868     		ldr	r0, [r7, #4]
 4862 000a FFF7FEFF 		bl	SYSTM001_StopTimer
 4863 000e F860     		str	r0, [r7, #12]
2692:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   /* Delete the Timer*/
2693:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<< DD_SDMMC_nonAPI_38_1 >>> */
2694:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   if(Status == DAVEApp_SUCCESS)
 4864              		.loc 1 2694 0
 4865 0010 FB68     		ldr	r3, [r7, #12]
 4866 0012 002B     		cmp	r3, #0
 4867 0014 08D1     		bne	.L291
2695:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
2696:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC003_ReturnStatus = SYSTM001_DeleteTimer(TimerId);
 4868              		.loc 1 2696 0
 4869 0016 7868     		ldr	r0, [r7, #4]
 4870 0018 FFF7FEFF 		bl	SYSTM001_DeleteTimer
 4871 001c 0246     		mov	r2, r0
 4872 001e 40F20003 		movw	r3, #:lower16:SDMMC003_ReturnStatus
 4873 0022 C0F20003 		movt	r3, #:upper16:SDMMC003_ReturnStatus
 4874 0026 1A60     		str	r2, [r3, #0]
 4875              	.L291:
2697:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   }
2698:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** }
 4876              		.loc 1 2698 0
 4877 0028 07F11007 		add	r7, r7, #16
 4878 002c BD46     		mov	sp, r7
 4879 002e 80BD     		pop	{r7, pc}
 4880              		.cfi_endproc
 4881              	.LFE157:
 4883              		.section	.text.SDMMC003_lCheckSectorBound,"ax",%progbits
 4884              		.align	2
 4885              		.global	SDMMC003_lCheckSectorBound
 4886              		.thumb
 4887              		.thumb_func
 4889              	SDMMC003_lCheckSectorBound:
 4890              	.LFB158:
2699:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
2700:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
2701:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<< DD_SDMMC_nonAPI_39 >>> */
2702:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /**
2703:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  * This function is used to check the sector address is out of bound or not.
2704:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  */
2705:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** status_t SDMMC003_lCheckSectorBound (uint32_t SectorNumberParam, \
2706:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                      uint32_t SectorCountParam)
2707:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** {
 4891              		.loc 1 2707 0
 4892              		.cfi_startproc
 4893              		@ args = 0, pretend = 0, frame = 16
 4894              		@ frame_needed = 1, uses_anonymous_args = 0
 4895 0000 80B5     		push	{r7, lr}
 4896              	.LCFI121:
 4897              		.cfi_def_cfa_offset 8
 4898              		.cfi_offset 7, -8
 4899              		.cfi_offset 14, -4
 4900 0002 84B0     		sub	sp, sp, #16
 4901              	.LCFI122:
 4902              		.cfi_def_cfa_offset 24
 4903 0004 00AF     		add	r7, sp, #0
 4904              	.LCFI123:
 4905              		.cfi_def_cfa_register 7
 4906 0006 7860     		str	r0, [r7, #4]
 4907 0008 3960     		str	r1, [r7, #0]
2708:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   status_t Status;
2709:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   uint32_t SectorCount = 0;
 4908              		.loc 1 2709 0
 4909 000a 4FF00003 		mov	r3, #0
 4910 000e BB60     		str	r3, [r7, #8]
2710:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   do
2711:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
2712:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* Get Sector Count function   */  
2713:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<< DD_SDMMC_nonAPI_39_1 >>> */
2714:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     Status = SDMMC003_GetSectorCount((void *)&SectorCount);
 4911              		.loc 1 2714 0
 4912 0010 07F10803 		add	r3, r7, #8
 4913 0014 1846     		mov	r0, r3
 4914 0016 FFF7FEFF 		bl	SDMMC003_GetSectorCount
 4915 001a F860     		str	r0, [r7, #12]
2715:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if (Status != (uint32_t)DAVEApp_SUCCESS)
 4916              		.loc 1 2715 0
 4917 001c FB68     		ldr	r3, [r7, #12]
 4918 001e 002B     		cmp	r3, #0
 4919 0020 09D1     		bne	.L297
 4920              	.L294:
2716:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
2717:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       break;
2718:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
2719:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<< DD_SDMMC_nonAPI_39_2 >>> */
2720:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* Check the Sector Count limit */
2721:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if((SectorNumberParam + SectorCountParam) >= SectorCount)
 4921              		.loc 1 2721 0
 4922 0022 7A68     		ldr	r2, [r7, #4]
 4923 0024 3B68     		ldr	r3, [r7, #0]
 4924 0026 D218     		adds	r2, r2, r3
 4925 0028 BB68     		ldr	r3, [r7, #8]
 4926 002a 9A42     		cmp	r2, r3
 4927 002c 04D3     		bcc	.L295
2722:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
2723:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Status = (uint32_t)SDMMC003_SECTOR_OUT_OF_BOUND;
 4928              		.loc 1 2723 0
 4929 002e 4FF03003 		mov	r3, #48
 4930 0032 FB60     		str	r3, [r7, #12]
 4931 0034 00E0     		b	.L295
 4932              	.L297:
2717:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       break;
 4933              		.loc 1 2717 0
 4934 0036 00BF     		nop
 4935              	.L295:
2724:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
2725:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   } while(0);
2726:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   return Status;
 4936              		.loc 1 2726 0
 4937 0038 FB68     		ldr	r3, [r7, #12]
2727:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** }
 4938              		.loc 1 2727 0
 4939 003a 1846     		mov	r0, r3
 4940 003c 07F11007 		add	r7, r7, #16
 4941 0040 BD46     		mov	sp, r7
 4942 0042 80BD     		pop	{r7, pc}
 4943              		.cfi_endproc
 4944              	.LFE158:
 4946              		.section	.text.SDMMC003_lLocalErase,"ax",%progbits
 4947              		.align	2
 4948              		.global	SDMMC003_lLocalErase
 4949              		.thumb
 4950              		.thumb_func
 4952              	SDMMC003_lLocalErase:
 4953              	.LFB159:
2728:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
2729:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /*
2730:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  * The function performs the actual erase operation.
2731:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****  */
2732:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** status_t SDMMC003_lLocalErase
2733:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** (
2734:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   uint32_t StartAddr,
2735:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   uint32_t EndAddr,
2736:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   uint32_t TimeoutVal
2737:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** )
2738:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** {
 4954              		.loc 1 2738 0
 4955              		.cfi_startproc
 4956              		@ args = 0, pretend = 0, frame = 24
 4957              		@ frame_needed = 1, uses_anonymous_args = 0
 4958 0000 80B5     		push	{r7, lr}
 4959              	.LCFI124:
 4960              		.cfi_def_cfa_offset 8
 4961              		.cfi_offset 7, -8
 4962              		.cfi_offset 14, -4
 4963 0002 86B0     		sub	sp, sp, #24
 4964              	.LCFI125:
 4965              		.cfi_def_cfa_offset 32
 4966 0004 00AF     		add	r7, sp, #0
 4967              	.LCFI126:
 4968              		.cfi_def_cfa_register 7
 4969 0006 F860     		str	r0, [r7, #12]
 4970 0008 B960     		str	r1, [r7, #8]
 4971 000a 7A60     		str	r2, [r7, #4]
2739:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   /* Stores the response received  */
2740:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   uint32_t CardStatus = 0;
 4972              		.loc 1 2740 0
 4973 000c 4FF00003 		mov	r3, #0
 4974 0010 3B61     		str	r3, [r7, #16]
2741:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   status_t Status = (uint32_t)SDMMC003_ERROR;
 4975              		.loc 1 2741 0
 4976 0012 4FF00103 		mov	r3, #1
 4977 0016 7B61     		str	r3, [r7, #20]
2742:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   do
2743:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   {
2744:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   /* <<<DD_SDMMC_API_7_3>>> */
2745:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if ((SDMMC003_Handle.CardType & SDMMC003_BLOCK_ADDRESSING) == 0UL)
 4978              		.loc 1 2745 0
 4979 0018 40F20003 		movw	r3, #:lower16:SDMMC003_Handle
 4980 001c C0F20003 		movt	r3, #:upper16:SDMMC003_Handle
 4981 0020 9B78     		ldrb	r3, [r3, #2]
 4982 0022 DBB2     		uxtb	r3, r3
 4983 0024 03F00803 		and	r3, r3, #8
 4984 0028 002B     		cmp	r3, #0
 4985 002a 07D1     		bne	.L299
2746:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
2747:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       StartAddr *= 512UL;
 4986              		.loc 1 2747 0
 4987 002c FB68     		ldr	r3, [r7, #12]
 4988 002e 4FEA4323 		lsl	r3, r3, #9
 4989 0032 FB60     		str	r3, [r7, #12]
2748:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       EndAddr *=  512UL;
 4990              		.loc 1 2748 0
 4991 0034 BB68     		ldr	r3, [r7, #8]
 4992 0036 4FEA4323 		lsl	r3, r3, #9
 4993 003a BB60     		str	r3, [r7, #8]
 4994              	.L299:
2749:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }/*End of "if((SDMMC003_Handle.CardType & SDMMC003_BLOCK_ADDRESSING) == 0UL)" */
2750:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   /* MMC Card */
2751:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** #if SDMMC_SUPPORT_MMC_CARD
2752:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_API_7_4>>> */
2753:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if ((SDMMC003_Handle.CardType & SDMMC003_MMC) != 0 )
2754:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
2755:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* Erase Start Command */
2756:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** #if SDMMC_UVP_TEST
2757:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       if (Test_TriggerInterrupt.Trigger_EraseStartError == TRUE)
2758:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       {
2759:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         /* Forcefully trigger the Command Index Error Interrupt */
2760:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         /* Disable the Command Complete Status Interrupt */
2761:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         SDMMC->EN_INT_STATUS_NORM &= ~( SDMMC_EN_INT_STATUS_NORM_CMD_COMPLETE_EN_Msk);
2762:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         /* Disable the Command Complete Signal Interrupt */
2763:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         SDMMC->EN_INT_SIGNAL_NORM &= ~( SDMMC_EN_INT_SIGNAL_NORM_CMD_COMPLETE_EN_Msk );
2764:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       }
2765:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** #endif
2766:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Status = SDMMC003_lSendCommand( &(SDMMC003_MMC_COMMAND(35)),\
2767:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                               StartAddr, RESPONSE_R1, &CardStatus );
2768:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_API_7_5>>> */
2769:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       if (Status != (uint32_t)DAVEApp_SUCCESS)
2770:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       {
2771:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         break;
2772:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       }
2773:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Erase End Command */
2774:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** #if SDMMC_UVP_TEST
2775:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       if (Test_TriggerInterrupt.Trigger_EraseEndError == TRUE)
2776:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       {
2777:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         /* Disable the Command Complete Status Interrupt */
2778:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         SDMMC->EN_INT_STATUS_NORM &= ~( SDMMC_EN_INT_STATUS_NORM_CMD_COMPLETE_EN_Msk);
2779:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         /* Disable the Command Complete Signal Interrupt */
2780:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         SDMMC->EN_INT_SIGNAL_NORM &= ~( SDMMC_EN_INT_SIGNAL_NORM_CMD_COMPLETE_EN_Msk );
2781:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       }
2782:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** #endif
2783:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Status = SDMMC003_lSendCommand( &(SDMMC003_MMC_COMMAND(36)),EndAddr, \
2784:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                              RESPONSE_R1,&CardStatus );
2785:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_API_7_6>>> */
2786:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       if (Status != (uint32_t)DAVEApp_SUCCESS)
2787:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       {
2788:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****          break;
2789:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       }
2790:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
2791:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     /* SD Card */
2792:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     else
2793:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** #endif /* SDMMC_SUPPORT_MMC_CARD */
2794:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
2795:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** #if SDMMC_UVP_TEST
2796:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       if (Test_TriggerInterrupt.Trigger_EraseStartError == TRUE)
2797:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       {
2798:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         /* Forcefully trigger the Command Index Error Interrupt */
2799:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       //  SDMMC->FORCE_EVENT_ERR_STATUS = 0x0004 ;
2800:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         /* Disable the Command Complete Status Interrupt */
2801:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         SDMMC->EN_INT_STATUS_NORM &= ~( SDMMC_EN_INT_STATUS_NORM_CMD_COMPLETE_EN_Msk);
2802:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         /* Disable the Command Complete Signal Interrupt */
2803:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         SDMMC->EN_INT_SIGNAL_NORM &= ~( SDMMC_EN_INT_SIGNAL_NORM_CMD_COMPLETE_EN_Msk );
2804:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       }
2805:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** #endif
2806:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_API_7_7>>> */
2807:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* SD Erase Start Command */
2808:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Status = SDMMC003_lSendCommand( &(SDMMC003_SD_COMMAND(32)), \
 4995              		.loc 1 2808 0
 4996 003c 40F20003 		movw	r3, #:lower16:SDMMC003_SDHashTable
 4997 0040 C0F20003 		movt	r3, #:upper16:SDMMC003_SDHashTable
 4998 0044 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 4999 0048 4FEA4302 		lsl	r2, r3, #1
 5000 004c 40F20003 		movw	r3, #:lower16:SDMMC003_Command
 5001 0050 C0F20003 		movt	r3, #:upper16:SDMMC003_Command
 5002 0054 D218     		adds	r2, r2, r3
2809:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                               StartAddr, SDMMC003_RESPONSE_R1, &CardStatus);
 5003              		.loc 1 2809 0
 5004 0056 07F11003 		add	r3, r7, #16
2808:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Status = SDMMC003_lSendCommand( &(SDMMC003_SD_COMMAND(32)), \
 5005              		.loc 1 2808 0
 5006 005a 1046     		mov	r0, r2
 5007 005c F968     		ldr	r1, [r7, #12]
 5008 005e 4FF00102 		mov	r2, #1
 5009 0062 FFF7FEFF 		bl	SDMMC003_lSendCommand
 5010 0066 7861     		str	r0, [r7, #20]
2810:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       if (Status != (uint32_t)DAVEApp_SUCCESS)
 5011              		.loc 1 2810 0
 5012 0068 7B69     		ldr	r3, [r7, #20]
 5013 006a 002B     		cmp	r3, #0
 5014 006c 3BD1     		bne	.L305
 5015              	.L300:
2811:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       {
2812:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****          break;
2813:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       } /* if (Status != (uint32_t)DAVEApp_SUCCESS) */
2814:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* SD Erase End Command */
2815:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** #if SDMMC_UVP_TEST
2816:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       if (Test_TriggerInterrupt.Trigger_EraseEndError == TRUE)
2817:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       {
2818:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         /* Forcefully trigger the Command Index Error Interrupt */
2819:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****      //   SDMMC->FORCE_EVENT_ERR_STATUS = 0x0004 ;
2820:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         /* Disable the Command Complete Status Interrupt */
2821:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         SDMMC->EN_INT_STATUS_NORM &= ~( SDMMC_EN_INT_STATUS_NORM_CMD_COMPLETE_EN_Msk);
2822:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         /* Disable the Command Complete Signal Interrupt */
2823:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****         SDMMC->EN_INT_SIGNAL_NORM &= ~( SDMMC_EN_INT_SIGNAL_NORM_CMD_COMPLETE_EN_Msk );
2824:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       }
2825:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** #endif
2826:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Status = SDMMC003_lSendCommand( &(SDMMC003_SD_COMMAND(33)),EndAddr, \
 5016              		.loc 1 2826 0
 5017 006e 40F20003 		movw	r3, #:lower16:SDMMC003_SDHashTable
 5018 0072 C0F20003 		movt	r3, #:upper16:SDMMC003_SDHashTable
 5019 0076 93F82130 		ldrb	r3, [r3, #33]	@ zero_extendqisi2
 5020 007a 4FEA4302 		lsl	r2, r3, #1
 5021 007e 40F20003 		movw	r3, #:lower16:SDMMC003_Command
 5022 0082 C0F20003 		movt	r3, #:upper16:SDMMC003_Command
 5023 0086 D218     		adds	r2, r2, r3
2827:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                       SDMMC003_RESPONSE_R1, &CardStatus);
 5024              		.loc 1 2827 0
 5025 0088 07F11003 		add	r3, r7, #16
2826:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       Status = SDMMC003_lSendCommand( &(SDMMC003_SD_COMMAND(33)),EndAddr, \
 5026              		.loc 1 2826 0
 5027 008c 1046     		mov	r0, r2
 5028 008e B968     		ldr	r1, [r7, #8]
 5029 0090 4FF00102 		mov	r2, #1
 5030 0094 FFF7FEFF 		bl	SDMMC003_lSendCommand
 5031 0098 7861     		str	r0, [r7, #20]
2828:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** /* <<<DD_SDMMC_API_7_8>>> */
2829:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       if (Status != (uint32_t)DAVEApp_SUCCESS)
 5032              		.loc 1 2829 0
 5033 009a 7B69     		ldr	r3, [r7, #20]
 5034 009c 002B     		cmp	r3, #0
 5035 009e 24D1     		bne	.L306
 5036              	.L302:
2830:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       {
2831:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****          break;
2832:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       }/* End of " if (Status != (uint32_t)DAVEApp_SUCCESS)"*/
2833:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }/* End of "if SD card"*/
2834:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** #if SDMMC_UVP_TEST
2835:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if (Test_TriggerInterrupt.Trigger_DataErrorInterrupt == TRUE)
2836:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
2837:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Disable the Transfer Complete Status Interrupt */
2838:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC->EN_INT_STATUS_NORM &= ~(SDMMC_EN_INT_STATUS_NORM_TX_COMPLETE_EN_Msk);
2839:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Disable the Transfer Complete Signal Interrupt */
2840:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC->EN_INT_SIGNAL_NORM &= ~(SDMMC_EN_INT_SIGNAL_NORM_TX_COMPLETE_EN_Msk  );
2841:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
2842:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** 
2843:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if (Test_TriggerInterrupt.Trigger_TransferInterruptError == TRUE)
2844:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
2845:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Disable the Transfer Complete Status Interrupt */
2846:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC->EN_INT_STATUS_NORM &= ~(SDMMC_EN_INT_STATUS_NORM_TX_COMPLETE_EN_Msk);
2847:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       /* Disable the Transfer Complete Signal Interrupt */
2848:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****       SDMMC->EN_INT_SIGNAL_NORM &= ~(SDMMC_EN_INT_SIGNAL_NORM_TX_COMPLETE_EN_Msk  );
2849:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }
2850:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** #endif
2851:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     Status = SDMMC003_lSendCommand( &(SDMMC003_SD_COMMAND(38)),
 5037              		.loc 1 2851 0
 5038 00a0 40F20003 		movw	r3, #:lower16:SDMMC003_SDHashTable
 5039 00a4 C0F20003 		movt	r3, #:upper16:SDMMC003_SDHashTable
 5040 00a8 93F82630 		ldrb	r3, [r3, #38]	@ zero_extendqisi2
 5041 00ac 4FEA4302 		lsl	r2, r3, #1
 5042 00b0 40F20003 		movw	r3, #:lower16:SDMMC003_Command
 5043 00b4 C0F20003 		movt	r3, #:upper16:SDMMC003_Command
 5044 00b8 D218     		adds	r2, r2, r3
2852:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                     SDMMC003_ARGUMENT0,
2853:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                     SDMMC003_RESPONSE_R1b,
2854:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****                                     &CardStatus);   
 5045              		.loc 1 2854 0
 5046 00ba 07F11003 		add	r3, r7, #16
2851:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     Status = SDMMC003_lSendCommand( &(SDMMC003_SD_COMMAND(38)),
 5047              		.loc 1 2851 0
 5048 00be 1046     		mov	r0, r2
 5049 00c0 4FF00001 		mov	r1, #0
 5050 00c4 4FF00202 		mov	r2, #2
 5051 00c8 FFF7FEFF 		bl	SDMMC003_lSendCommand
 5052 00cc 7861     		str	r0, [r7, #20]
2855:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     if (Status != (uint32_t)DAVEApp_SUCCESS)
 5053              		.loc 1 2855 0
 5054 00ce 7B69     		ldr	r3, [r7, #20]
 5055 00d0 002B     		cmp	r3, #0
 5056 00d2 0CD1     		bne	.L307
 5057              	.L303:
2856:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     {
2857:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****        break;
2858:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     }/* End of " if (Status != (uint32_t)DAVEApp_SUCCESS)"*/
2859:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****     SDMMC003_lDelay(TimeoutVal * 1000);
 5058              		.loc 1 2859 0
 5059 00d4 7B68     		ldr	r3, [r7, #4]
 5060 00d6 4FF47A72 		mov	r2, #1000
 5061 00da 02FB03F3 		mul	r3, r2, r3
 5062 00de 1846     		mov	r0, r3
 5063 00e0 FFF7FEFF 		bl	SDMMC003_lDelay
 5064 00e4 04E0     		b	.L301
 5065              	.L305:
2812:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****          break;
 5066              		.loc 1 2812 0
 5067 00e6 00BF     		nop
 5068 00e8 02E0     		b	.L301
 5069              	.L306:
2831:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****          break;
 5070              		.loc 1 2831 0
 5071 00ea 00BF     		nop
 5072 00ec 00E0     		b	.L301
 5073              	.L307:
2857:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****        break;
 5074              		.loc 1 2857 0
 5075 00ee 00BF     		nop
 5076              	.L301:
2860:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   } while(0);
2861:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c ****   return Status;
 5077              		.loc 1 2861 0
 5078 00f0 7B69     		ldr	r3, [r7, #20]
2862:../Dave/Generated/src/SDMMC003/SDMMC003_Private.c **** }
 5079              		.loc 1 2862 0
 5080 00f2 1846     		mov	r0, r3
 5081 00f4 07F11807 		add	r7, r7, #24
 5082 00f8 BD46     		mov	sp, r7
 5083 00fa 80BD     		pop	{r7, pc}
 5084              		.cfi_endproc
 5085              	.LFE159:
 5087              		.text
 5088              	.Letext0:
 5089              		.file 2 "c:\\dave-3.1.10\\arm-gcc\\bin\\../lib/gcc/arm-none-eabi/4.7.4/../../../../arm-none-eabi/i
 5090              		.file 3 "C:\\DAVE-3.1.10\\eclipse\\/../CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 5091              		.file 4 "F:\\WORK\\SmartHome_checkout1\\XMC4500_RK_HTTPserver\\Dave\\Generated\\inc\\DAVESupport/.
 5092              		.file 5 "F:\\WORK\\SmartHome_checkout1\\XMC4500_RK_HTTPserver\\Dave\\Generated\\inc\\DAVESupport/.
 5093              		.file 6 "F:\\WORK\\SmartHome_checkout1\\XMC4500_RK_HTTPserver\\Dave\\Generated\\inc\\DAVESupport/.
 5094              		.file 7 "F:\\WORK\\SmartHome_checkout1\\XMC4500_RK_HTTPserver\\Dave\\Generated\\inc\\DAVESupport/.
 5095              		.file 8 "F:\\WORK\\SmartHome_checkout1\\XMC4500_RK_HTTPserver\\Dave\\Generated\\inc\\DAVESupport/.
 5096              		.file 9 "../Dave/Generated/src/SDMMC003/../../inc/SDMMC003/SDMMC003_Private.h"
 5097              		.file 10 "C:\\DAVE-3.1.10\\eclipse\\/../CMSIS/Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 SDMMC003_Private.c
                            *COM*:00000030 SDMMC003_CardInfo
                            *COM*:00000006 SDMMC003_ISRContext
                            *COM*:00000004 SDMMC003_ReturnStatus
                            *COM*:00000002 NormalIntStatus
                            *COM*:00000002 ErrorIntStatus
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:29     .rodata:00000000 SDMMC003_Command
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:26     .rodata:00000000 $d
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:114    .rodata:00000050 SDMMC003_SDHashTable
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:181    .text.SDMMC003_lReset:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:186    .text.SDMMC003_lReset:00000000 SDMMC003_lReset
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:4772   .text.SDMMC003_lStartTimer:00000000 SDMMC003_lStartTimer
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:4842   .text.SDMMC003_lStopTimer:00000000 SDMMC003_lStopTimer
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:272    .text.SDMMC003_lCardCleanUp:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:277    .text.SDMMC003_lCardCleanUp:00000000 SDMMC003_lCardCleanUp
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:348    .text.SDMMC003_lCheckDatCmdline:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:353    .text.SDMMC003_lCheckDatCmdline:00000000 SDMMC003_lCheckDatCmdline
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:474    .text.SDMMC003_lCheckArgumentError:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:479    .text.SDMMC003_lCheckArgumentError:00000000 SDMMC003_lCheckArgumentError
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:550    .text.SDMMC003_lCheckEraseError:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:555    .text.SDMMC003_lCheckEraseError:00000000 SDMMC003_lCheckEraseError
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:616    .text.SDMMC003_lCheckCardError:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:621    .text.SDMMC003_lCheckCardError:00000000 SDMMC003_lCheckCardError
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:682    .text.SDMMC003_lCheckErrorInResponse:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:687    .text.SDMMC003_lCheckErrorInResponse:00000000 SDMMC003_lCheckErrorInResponse
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:775    .text.SDMMC003_lGetCardLockState:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:780    .text.SDMMC003_lGetCardLockState:00000000 SDMMC003_lGetCardLockState
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:841    .text.SDMMC003_lTransferDelay:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:846    .text.SDMMC003_lTransferDelay:00000000 SDMMC003_lTransferDelay
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:944    .text.SDMMC003_lReadResponse:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:949    .text.SDMMC003_lReadResponse:00000000 SDMMC003_lReadResponse
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:1025   .text.SDMMC003_lReadResponse:00000074 $d
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:1034   .text.SDMMC003_lReadResponse:00000090 $t
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:1159   .text.SDMMC003_lSendCommand:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:1164   .text.SDMMC003_lSendCommand:00000000 SDMMC003_lSendCommand
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:3344   .text.SDMMC003_lErrorInterruptRecovery:00000000 SDMMC003_lErrorInterruptRecovery
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:1345   .text.SDMMC003_lSetVoltageWindow:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:1350   .text.SDMMC003_lSetVoltageWindow:00000000 SDMMC003_lSetVoltageWindow
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:4475   .text.SDMMC003_lDelay:00000000 SDMMC003_lDelay
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:1486   .text.SDMMC003_lQueryOperatingCond:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:1491   .text.SDMMC003_lQueryOperatingCond:00000000 SDMMC003_lQueryOperatingCond
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:1593   .text.SDMMC003_lQueryVoltage:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:1598   .text.SDMMC003_lQueryVoltage:00000000 SDMMC003_lQueryVoltage
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:1991   .text.SDMMC003_lWriteCardType:00000000 SDMMC003_lWriteCardType
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:1706   .text.SDMMC003_lAfterCardInitialize:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:1711   .text.SDMMC003_lAfterCardInitialize:00000000 SDMMC003_lAfterCardInitialize
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:2203   .text.SDMMC003_lReadCardRegisters:00000000 SDMMC003_lReadCardRegisters
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:2964   .text.SDMMC003_lSwitchBusWidth:00000000 SDMMC003_lSwitchBusWidth
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:3111   .text.SDMMC003_lSwitchSpeed:00000000 SDMMC003_lSwitchSpeed
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:1793   .text.SDMMC003_lInitializeCard:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:1798   .text.SDMMC003_lInitializeCard:00000000 SDMMC003_lInitializeCard
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:2152   .text.SDMMC003_lReadRca:00000000 SDMMC003_lReadRca
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:1981   .text.SDMMC003_lInitializeCard:00000148 $d
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:1986   .text.SDMMC003_lWriteCardType:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:2062   .text.SDMMC003_lSetWriteProtect:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:2067   .text.SDMMC003_lSetWriteProtect:00000000 SDMMC003_lSetWriteProtect
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:2147   .text.SDMMC003_lReadRca:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:2193   .text.SDMMC003_lReadRca:0000003c $d
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:2198   .text.SDMMC003_lReadCardRegisters:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:3974   .text.SDMMC003_lSwitchToTransferState:00000000 SDMMC003_lSwitchToTransferState
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:2739   .text.SDMMC003_lSingleBlockTransfer:00000000 SDMMC003_lSingleBlockTransfer
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:2376   .text.SDMMC003_lReadCardRegisters:0000015c $d
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:2381   .text.SDMMC003_lConfigureForSingleTransfer:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:2386   .text.SDMMC003_lConfigureForSingleTransfer:00000000 SDMMC003_lConfigureForSingleTransfer
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:2482   .text.SDMMC003_lConfigureRegForMultiTransfer:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:2487   .text.SDMMC003_lConfigureRegForMultiTransfer:00000000 SDMMC003_lConfigureRegForMultiTransfer
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:2622   .text.SDMMC003_lMultiBlockTransfer:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:2627   .text.SDMMC003_lMultiBlockTransfer:00000000 SDMMC003_lMultiBlockTransfer
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:4078   .text.SDMMC003_lDataTransfer:00000000 SDMMC003_lDataTransfer
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:4273   .text.SDMMC003_lAcmdErrorRecovery:00000000 SDMMC003_lAcmdErrorRecovery
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:2734   .text.SDMMC003_lSingleBlockTransfer:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:2882   .text.SDMMC003_lCheckLockStatus:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:2887   .text.SDMMC003_lCheckLockStatus:00000000 SDMMC003_lCheckLockStatus
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:2959   .text.SDMMC003_lSwitchBusWidth:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:3106   .text.SDMMC003_lSwitchSpeed:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:3224   .text.SDMMC003_lCommandDelay:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:3229   .text.SDMMC003_lCommandDelay:00000000 SDMMC003_lCommandDelay
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:3339   .text.SDMMC003_lErrorInterruptRecovery:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:3524   .text.SDMMC003_lNormalInterruptHandler:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:3529   .text.SDMMC003_lNormalInterruptHandler:00000000 SDMMC003_lNormalInterruptHandler
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:3667   .text.SDMMC003_lErrorInterruptHandler:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:3672   .text.SDMMC003_lErrorInterruptHandler:00000000 SDMMC003_lErrorInterruptHandler
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:3969   .text.SDMMC003_lSwitchToTransferState:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:4073   .text.SDMMC003_lDataTransfer:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:4231   .text.SDMMC003_CheckPCMDFlag:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:4236   .text.SDMMC003_CheckPCMDFlag:00000000 SDMMC003_CheckPCMDFlag
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:4268   .text.SDMMC003_lAcmdErrorRecovery:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:4423   .text.Timer_CallBack:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:4428   .text.Timer_CallBack:00000000 Timer_CallBack
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:4470   .text.SDMMC003_lDelay:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:4552   .text.SDMMC0_0_IRQHandler:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:4557   .text.SDMMC0_0_IRQHandler:00000000 SDMMC0_0_IRQHandler
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:4634   .text.SDMMC003_lCardIdentificationProcess:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:4639   .text.SDMMC003_lCardIdentificationProcess:00000000 SDMMC003_lCardIdentificationProcess
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:4767   .text.SDMMC003_lStartTimer:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:4837   .text.SDMMC003_lStopTimer:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:4884   .text.SDMMC003_lCheckSectorBound:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:4889   .text.SDMMC003_lCheckSectorBound:00000000 SDMMC003_lCheckSectorBound
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:4947   .text.SDMMC003_lLocalErase:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccuewLYk.s:4952   .text.SDMMC003_lLocalErase:00000000 SDMMC003_lLocalErase
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.1791a5ae2e936ca1033c1c44be394cc7
                           .group:00000000 wm4.SDMMC003_Conf.h.50.e707c07613fb4e6f2eaec982a892429d
                           .group:00000000 wm4.XMC4500.h.45.215f4b8c79f46c7645c15373868d08c0
                           .group:00000000 wm4.core_cm4.h.47.41af406cb4cda82c972f112a9cd0a024
                           .group:00000000 wm4.newlib.h.8.a9901dc52d1357e3e94003403d43f8b5
                           .group:00000000 wm4.features.h.22.b72b3baab2bb2eab3661375590100b6b
                           .group:00000000 wm4.config.h.193.5fb8ef056cdff92dec3dee9552839d8c
                           .group:00000000 wm4._ansi.h.23.7aefdac4826acebbfc9f3822a0aeb14c
                           .group:00000000 wm4.stdint.h.20.54ad762faa59e3c05491630641c8d8bf
                           .group:00000000 wm4.core_cmInstr.h.39.3d3d1b4a79aef37532666dc6ee87c6ac
                           .group:00000000 wm4.core_cm4_simd.h.43.b5d1d38735af6366227b4256d330cf13
                           .group:00000000 wm4.core_cm4.h.178.e5ef5ce66d198d7f00f9d0076e267c41
                           .group:00000000 wm4.system_XMC4500.h.29.827f68baa362c84f2abae4ab67dde7c9
                           .group:00000000 wm4.XMC4500.h.198.8e022f279ff353ed081df898dc7b9cf3
                           .group:00000000 wm4.stddef.h.40.50cf36416e06376af8a9dca28536f2e4
                           .group:00000000 wm4.types.h.55.0006b5fda1d606516f2dcaf4aca92b11
                           .group:00000000 wm4.MULTIPLEXER.h.43.4aa654be3ec80895f631b5281bbb9105
                           .group:00000000 wm4.CCU8PWMLIB.h.70.a5d6a5267902b8b4aea2a0224518259a
                           .group:00000000 wm4.DBG001.h.116.d6d9e7459a0faa3905c97c1d2edb339d
                           .group:00000000 wm4.SYSTM001.h.63.668098b2213d40a5bd0db5fbe813cf05
                           .group:00000000 wm4.ETH002_Conf.h.56.5bd2b085b66f43d51abd69396be7f35f
                           .group:00000000 wm4.EthernetPHY.h.54.7af1709186b21e62a5f1d4049da3988b
                           .group:00000000 wm4.ETH001_Conf.h.71.1e151af1ba54dd023e1f942bdf922819
                           .group:00000000 wm4.synopGMAC_plat.h.78.7a90e072b497857344aea4ba1e994097
                           .group:00000000 wm4.synopGMAC_stack_interface.h.73.6be6aaee0ac6637432f4d0589044479b
                           .group:00000000 wm4.SynopGMAC_Dev.h.72.7c89c07cf666d37f5c9b615720d5e111
                           .group:00000000 wm4.synopGMAC_network_interface.h.73.4dd08316a11bc43c8c4a9da15277fb0f
                           .group:00000000 wm4.stdlib.h.13.603ed7eb09a1561ab06840b7c0fcff58
                           .group:00000000 wm4.stddef.h.161.e50ff8a9d5d1abbc15641da28ac571bf
                           .group:00000000 wm4._default_types.h.6.5e12cd604db8ce00b62bb2f02708eaf3
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4.stddef.h.161.c6104a0666cf681b6269ddc9b4f516d4
                           .group:00000000 wm4.reent.h.16.9e42f0e588b85e70b2bf6572af57ce64
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.53.c69c7609933ff56d59c757cec2d13230
                           .group:00000000 wm4.string.h.8.ef946ad0bc9ad5c970c365dcd1fc4b0a
                           .group:00000000 wm4.string.h.86.d5c872ff52e2712c985b588a0ef39f3c
                           .group:00000000 wm4.ETH004_Conf.h.56.564c3f309c32b3c742fc91049cf66940
                           .group:00000000 wm4.lwipopts.h.73.a7a63bda1e8216abd1d90275eaaa0027
                           .group:00000000 wm4.arch.h.33.6fa4aa86d33d1490ae882caef7316405
                           .group:00000000 wm4.cpu.h.33.b213c7fd77614ebc3691cef18ad2ff22
                           .group:00000000 wm4.cc.h.66.ec134211c658dcc89de4610e4e7bab46
                           .group:00000000 wm4.arch.h.47.5153c52bfb94ee3b37299920afab6afd
                           .group:00000000 wm4.debug.h.43.557ecd6c90cc70b375bb8a29118be47b
                           .group:00000000 wm4.opt.h.94.d36882acafebb8726bce646fc8b2397b
                           .group:00000000 wm4.err.h.52.37c5d17538f8e8347a9c84196701e92d
                           .group:00000000 wm4.pbuf.h.43.e9a1ad12b97478787a109e22d5306820
                           .group:00000000 wm4.inet.h.46.b516065779826845d16d49f513869a2b
                           .group:00000000 wm4.ip_addr.h.79.9a0ce887ca8c88c22ad7686bcb5105df
                           .group:00000000 wm4.sys.h.65.4a0cd87b9e0d8bb4cd6b30e939b2ca7e
                           .group:00000000 wm4.mem.h.96.20770766e6c9e6c42af6bfa95ef5c63f
                           .group:00000000 wm4.def.h.33.049f911dab26023a266ed46ced0ce4bc
                           .group:00000000 wm4.netif.h.53.c13431a64f0e73a26710e71455725e84
                           .group:00000000 wm4.ip.h.48.ad46847692d4d729760949b27e48a442
                           .group:00000000 wm4.icmp.h.44.450dbf91f594cc26ad19d086cdc83713
                           .group:00000000 wm4.tcp.h.55.5c30b9432fa60afaa85cbdd225b0c683
                           .group:00000000 wm4.udp.h.48.1a8dde095cd0a13580afaba1443e5a3f
                           .group:00000000 wm4.SDMMC003.h.85.b66055f6032a052f5173e3d123f9c61e
                           .group:00000000 wm4.SDMMC001.h.50.3e2fedc7e5ace33db4121d5cc027e8a4
                           .group:00000000 wm4.types.h.23.0d949686bbcadd1621462d4fa1f884f9
                           .group:00000000 wm4.types.h.2.e9cec8c90ab35f77d9f499e06ae02400
                           .group:00000000 wm4.types.h.80.1f2c84c0d57dd52dd9936095d9ac218e
                           .group:00000000 wm4.time.h.16.a4579e68956d2601c6113814b546764b
                           .group:00000000 wm4.diskio.h.7.93a3c8131d08770c060b04d2180fd09a
                           .group:00000000 wm4.diskio.h.42.a863614abe78d56d18ed7cb292d0028d
                           .group:00000000 wm4.ffconf.h.57.4ab321a2116d35ff7f28236ac31fad7c
                           .group:00000000 wm4.ff.h.82.8f05a37d35a49dba2681a7f047fee4ee
                           .group:00000000 wm4.lmm001_debuglog.h.40.8031299705ecf04ad726bd19baff976d
                           .group:00000000 wm4.LMM001.h.42.c21fe9cbedc336738c3dc89405cad216
                           .group:00000000 wm4.stdio.h.27.f2ac352bab34f31f9f478442827b2ba6
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.63.dfdea6580b080784d08faace69b6ed76
                           .group:00000000 wm4.time.h.2.9857e62ad6ac99431e29d58067232314
                           .group:00000000 wm4.time.h.24.c499d4c1915694df17abb795fd34b719
                           .group:00000000 wm4.time.h.124.10ced469f846269cafc58b59c853e1bb
                           .group:00000000 wm4.errno.h.2.ba016d646105af6cad23be83630b6a3f
                           .group:00000000 wm4.errno.h.9.65044c2b5d8494e43f5986ab0a1d770f
                           .group:00000000 wm4.unistd.h.2.6ce1b91c4223f6078c1b210c7538c1d2
                           .group:00000000 wm4.unistd.h.251.605bc560cdc6c3b07b599bb71ac4e425
                           .group:00000000 wm4.malloc.h.4.62bd13b8107d5245f60bd92bb5994838
                           .group:00000000 wm4.malloc.h.148.73b7de3bd065dafbd594b04197a9466e
                           .group:00000000 wm4.reent.h.91.faac4d0ac97c0fcf23d10d0786197642
                           .group:00000000 wm4.SLTHA003.h.100.69cb08672bc6ab3f052aa9d5bd6dc5ca
                           .group:00000000 wm4._default_fcntl.h.6.d036cf640d0f9a06bcff1be55acd66be
                           .group:00000000 wm4.stat.h.2.a761b02482a54847ff0d09dfcff24a5c
                           .group:00000000 wm4.fcntl.h.9.9336f33d7f5028f694c75e6e224e0cf7
                           .group:00000000 wm4.SLTHA001.h.97.d7e87c19a31e3244bdd5839e7cc42a61
                           .group:00000000 wm4.WEBSERVER001_Conf.h.54.cd6d29aaa96a848cbc5321bab5d6cd90
                           .group:00000000 wm4.IO004.h.51.dbf9dd216c57d6a7f14a22b2cb7e5626
                           .group:00000000 wm4.MOTORLIBS.h.59.b2e97de0df555dedfa51e24447b57ab8
                           .group:00000000 wm4.uc_id.h.35.a6c4837fad81477ba31967683332b8cc
                           .group:00000000 wm4.Usic.h.90.22743468abc46f16747d12430b219aaf
                           .group:00000000 wm4.UART001_Conf.h.53.c5c972f6f634bc5116c171852aaab668
                           .group:00000000 wm4.UART001.h.109.3e835815a7a59791d8bd39655f4d4cc9
                           .group:00000000 wm4.NVIC002_Conf.h.63.91a0613dae6f500837ac7c56dab852ab
                           .group:00000000 wm4.SDMMC003_Private.h.51.65f011a4ed3b9c916aeb9b57038ffa07

UNDEFINED SYMBOLS
SDMMC003_Handle
memset
SDMMC003_GetLockStatus
SDMMC003_GetSdStatus
SYSTM001_CreateTimer
SYSTM001_StartTimer
SYSTM001_StopTimer
SYSTM001_DeleteTimer
SDMMC003_GetSectorCount
