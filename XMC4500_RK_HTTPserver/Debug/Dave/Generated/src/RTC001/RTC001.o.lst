   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"RTC001.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	RTC001_DAYS_IN_MONTH
  20              		.section	.rodata
  21              		.align	2
  24              	RTC001_DAYS_IN_MONTH:
  25 0000 00000000 		.word	0
  26 0004 1F000000 		.word	31
  27 0008 1C000000 		.word	28
  28 000c 1F000000 		.word	31
  29 0010 1E000000 		.word	30
  30 0014 1F000000 		.word	31
  31 0018 1E000000 		.word	30
  32 001c 1F000000 		.word	31
  33 0020 1F000000 		.word	31
  34 0024 1E000000 		.word	30
  35 0028 1F000000 		.word	31
  36 002c 1E000000 		.word	30
  37 0030 1F000000 		.word	31
  38              		.section	.text.RTC001_lInit,"ax",%progbits
  39              		.align	2
  40              		.thumb
  41              		.thumb_func
  43              	RTC001_lInit:
  44              	.LFB112:
  45              		.file 1 "../Dave/Generated/src/RTC001/RTC001.c"
   1:../Dave/Generated/src/RTC001/RTC001.c **** /*******************************************************************************
   2:../Dave/Generated/src/RTC001/RTC001.c **** **  DAVE App Name : RTC001       App Version: 1.0.22               
   3:../Dave/Generated/src/RTC001/RTC001.c **** **  This file is generated by DAVE, User modification to this file will be    **
   4:../Dave/Generated/src/RTC001/RTC001.c **** **  overwritten at the next code generation.                                  **
   5:../Dave/Generated/src/RTC001/RTC001.c **** *******************************************************************************/
   6:../Dave/Generated/src/RTC001/RTC001.c **** 
   7:../Dave/Generated/src/RTC001/RTC001.c **** 
   8:../Dave/Generated/src/RTC001/RTC001.c **** /*CODE_BLOCK_BEGIN[RTC001.c]*/
   9:../Dave/Generated/src/RTC001/RTC001.c **** 
  10:../Dave/Generated/src/RTC001/RTC001.c ****  /*******************************************************************************
  11:../Dave/Generated/src/RTC001/RTC001.c ****  Copyright (c) 2011, Infineon Technologies AG                                 **
  12:../Dave/Generated/src/RTC001/RTC001.c ****  All rights reserved.                                                         **
  13:../Dave/Generated/src/RTC001/RTC001.c ****                                                                               **
  14:../Dave/Generated/src/RTC001/RTC001.c ****  Redistribution and use in source and binary forms, with or without           **
  15:../Dave/Generated/src/RTC001/RTC001.c ****  modification,are permitted provided that the following conditions are met:   **
  16:../Dave/Generated/src/RTC001/RTC001.c ****                                                                               **
  17:../Dave/Generated/src/RTC001/RTC001.c ****  *Redistributions of source code must retain the above copyright notice,      **
  18:../Dave/Generated/src/RTC001/RTC001.c ****  this list of conditions and the following disclaimer.                        **
  19:../Dave/Generated/src/RTC001/RTC001.c ****  *Redistributions in binary form must reproduce the above copyright notice,   **
  20:../Dave/Generated/src/RTC001/RTC001.c ****  this list of conditions and the following disclaimer in the documentation    **
  21:../Dave/Generated/src/RTC001/RTC001.c ****  and/or other materials provided with the distribution.                       **
  22:../Dave/Generated/src/RTC001/RTC001.c ****  *Neither the name of the copyright holders nor the names of its contributors **
  23:../Dave/Generated/src/RTC001/RTC001.c ****  may be used to endorse or promote products derived from this software without**
  24:../Dave/Generated/src/RTC001/RTC001.c ****  specific prior written permission.                                           **
  25:../Dave/Generated/src/RTC001/RTC001.c ****                                                                               **
  26:../Dave/Generated/src/RTC001/RTC001.c ****  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"  **
  27:../Dave/Generated/src/RTC001/RTC001.c ****  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE    **
  28:../Dave/Generated/src/RTC001/RTC001.c ****  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE   **
  29:../Dave/Generated/src/RTC001/RTC001.c ****  ARE  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE   **
  30:../Dave/Generated/src/RTC001/RTC001.c ****  LIABLE  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR         **
  31:../Dave/Generated/src/RTC001/RTC001.c ****  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF         **
  32:../Dave/Generated/src/RTC001/RTC001.c ****  SUBSTITUTE GOODS OR  SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS    **
  33:../Dave/Generated/src/RTC001/RTC001.c ****  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN      **
  34:../Dave/Generated/src/RTC001/RTC001.c ****  CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)       **
  35:../Dave/Generated/src/RTC001/RTC001.c ****  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE   **
  36:../Dave/Generated/src/RTC001/RTC001.c ****  POSSIBILITY OF SUCH DAMAGE.                                                  **
  37:../Dave/Generated/src/RTC001/RTC001.c ****                                                                               **
  38:../Dave/Generated/src/RTC001/RTC001.c ****  To improve the quality of the software, users are encouraged to share        **
  39:../Dave/Generated/src/RTC001/RTC001.c ****  modifications, enhancements or bug fixes with Infineon Technologies AG       **
  40:../Dave/Generated/src/RTC001/RTC001.c ****  dave@infineon.com).                                                          **
  41:../Dave/Generated/src/RTC001/RTC001.c ****                                                                               **
  42:../Dave/Generated/src/RTC001/RTC001.c **** ********************************************************************************
  43:../Dave/Generated/src/RTC001/RTC001.c **** **                                                                            **
  44:../Dave/Generated/src/RTC001/RTC001.c **** **                                                                            **
  45:../Dave/Generated/src/RTC001/RTC001.c **** ** PLATFORM : Infineon XMC4000/XMC1000 Series                                 **
  46:../Dave/Generated/src/RTC001/RTC001.c **** **                                                                            **
  47:../Dave/Generated/src/RTC001/RTC001.c **** ** COMPILER : Compiler Independent                                            **
  48:../Dave/Generated/src/RTC001/RTC001.c **** **                                                                            **
  49:../Dave/Generated/src/RTC001/RTC001.c **** ** AUTHOR   : App Developer                                                   **
  50:../Dave/Generated/src/RTC001/RTC001.c **** **                                                                            **
  51:../Dave/Generated/src/RTC001/RTC001.c **** ** MAY BE CHANGED BY USER [yes/no]: Yes                                       **
  52:../Dave/Generated/src/RTC001/RTC001.c **** **                                                                            **
  53:../Dave/Generated/src/RTC001/RTC001.c **** ** MODIFICATION DATE : Feb 12, 2013                                           **
  54:../Dave/Generated/src/RTC001/RTC001.c **** **                                                                            **
  55:../Dave/Generated/src/RTC001/RTC001.c **** *******************************************************************************/
  56:../Dave/Generated/src/RTC001/RTC001.c **** /*******************************************************************************
  57:../Dave/Generated/src/RTC001/RTC001.c **** **                      Author(s) Identity                                    **
  58:../Dave/Generated/src/RTC001/RTC001.c **** ********************************************************************************
  59:../Dave/Generated/src/RTC001/RTC001.c **** **                                                                            **
  60:../Dave/Generated/src/RTC001/RTC001.c **** ** Initials     Name                                                          **
  61:../Dave/Generated/src/RTC001/RTC001.c **** ** ---------------------------------------------------------------------------**
  62:../Dave/Generated/src/RTC001/RTC001.c **** ** RP        App Developer                                                    **
  63:../Dave/Generated/src/RTC001/RTC001.c **** **                                                                            **
  64:../Dave/Generated/src/RTC001/RTC001.c **** *******************************************************************************/ 
  65:../Dave/Generated/src/RTC001/RTC001.c **** 
  66:../Dave/Generated/src/RTC001/RTC001.c **** 
  67:../Dave/Generated/src/RTC001/RTC001.c **** /**
  68:../Dave/Generated/src/RTC001/RTC001.c ****  * @file RTC001.c
  69:../Dave/Generated/src/RTC001/RTC001.c ****  *
  70:../Dave/Generated/src/RTC001/RTC001.c ****  * @App Version RTC001 <1.0.22>
  71:../Dave/Generated/src/RTC001/RTC001.c ****  *
  72:../Dave/Generated/src/RTC001/RTC001.c ****  * @brief  Real Time Clock App Implementation.
  73:../Dave/Generated/src/RTC001/RTC001.c ****  *
  74:../Dave/Generated/src/RTC001/RTC001.c ****  */
  75:../Dave/Generated/src/RTC001/RTC001.c **** /*******************************************************************************
  76:../Dave/Generated/src/RTC001/RTC001.c ****  ** INCLUDE FILES                                                             **
  77:../Dave/Generated/src/RTC001/RTC001.c ****  ******************************************************************************/
  78:../Dave/Generated/src/RTC001/RTC001.c **** 
  79:../Dave/Generated/src/RTC001/RTC001.c **** /* Inclusion of header file */
  80:../Dave/Generated/src/RTC001/RTC001.c **** #include <DAVE3.h>
  81:../Dave/Generated/src/RTC001/RTC001.c **** 
  82:../Dave/Generated/src/RTC001/RTC001.c ****   
  83:../Dave/Generated/src/RTC001/RTC001.c **** /*****************************************************************************
  84:../Dave/Generated/src/RTC001/RTC001.c ****               DUMMY DEFINTIONS OF DEBUG LOG MACROS
  85:../Dave/Generated/src/RTC001/RTC001.c **** *****************************************************************************/
  86:../Dave/Generated/src/RTC001/RTC001.c **** /*These definitions are included here to avoid compilation errors,
  87:../Dave/Generated/src/RTC001/RTC001.c ****  since the DBG002 app is not part of the project. All the macros are defined
  88:../Dave/Generated/src/RTC001/RTC001.c ****  as empty*/ 
  89:../Dave/Generated/src/RTC001/RTC001.c **** #ifndef _DBG002_H_
  90:../Dave/Generated/src/RTC001/RTC001.c **** 
  91:../Dave/Generated/src/RTC001/RTC001.c **** #define DBG002_RegisterCallBack(A,B,C)
  92:../Dave/Generated/src/RTC001/RTC001.c **** #define DBG002_I(e) 
  93:../Dave/Generated/src/RTC001/RTC001.c **** #define DBG002_IG(e,g) 
  94:../Dave/Generated/src/RTC001/RTC001.c **** #define DBG002_IH(e,h) 
  95:../Dave/Generated/src/RTC001/RTC001.c **** #define DBG002_IP(e,p) 
  96:../Dave/Generated/src/RTC001/RTC001.c **** #define DBG002_IGH(e,g,h) 
  97:../Dave/Generated/src/RTC001/RTC001.c **** #define DBG002_IGP(e,g,p) 
  98:../Dave/Generated/src/RTC001/RTC001.c **** #define DBG002_IHP(e,h,p) 
  99:../Dave/Generated/src/RTC001/RTC001.c **** #define DBG002_IGHP(e,g,h,p) 
 100:../Dave/Generated/src/RTC001/RTC001.c **** #define DBG002_N(e) 
 101:../Dave/Generated/src/RTC001/RTC001.c **** #define DBG002_NG(e,g) 
 102:../Dave/Generated/src/RTC001/RTC001.c **** #define DBG002_NH(e,h) 
 103:../Dave/Generated/src/RTC001/RTC001.c **** #define DBG002_NP(e,p) 
 104:../Dave/Generated/src/RTC001/RTC001.c **** #define DBG002_NGH(e,g,h) 
 105:../Dave/Generated/src/RTC001/RTC001.c **** #define DBG002_NGP(e,g,p) 
 106:../Dave/Generated/src/RTC001/RTC001.c **** #define DBG002_NHP(e,h,p) 
 107:../Dave/Generated/src/RTC001/RTC001.c **** #define DBG002_NGHP(e,g,h,p) 
 108:../Dave/Generated/src/RTC001/RTC001.c **** #define DBG002_ID(e) 
 109:../Dave/Generated/src/RTC001/RTC001.c **** #define DBG002_IS(e) 
 110:../Dave/Generated/src/RTC001/RTC001.c **** #define DBG002_ISG(e,g) 
 111:../Dave/Generated/src/RTC001/RTC001.c **** #define DBG002_SAFETY_CRITICAL(groupid,messageid,length,value)
 112:../Dave/Generated/src/RTC001/RTC001.c **** #define DBG002_CRITICAL(groupid,messageid,length,value)
 113:../Dave/Generated/src/RTC001/RTC001.c **** #define DBG002_ERROR(groupid,messageid,length,value)
 114:../Dave/Generated/src/RTC001/RTC001.c **** #define DBG002_WARNING(groupid,messageid,length,value)
 115:../Dave/Generated/src/RTC001/RTC001.c **** #define DBG002_INFO(groupid,messageid,length,value)
 116:../Dave/Generated/src/RTC001/RTC001.c **** #define DBG002_TRACE(groupid,messageid,length,value)
 117:../Dave/Generated/src/RTC001/RTC001.c **** #define DBG002_FUNCTION_ENTRY(GID, Status) 
 118:../Dave/Generated/src/RTC001/RTC001.c **** #define DBG002_FUNCTION_EXIT(GID, Status) 
 119:../Dave/Generated/src/RTC001/RTC001.c **** 
 120:../Dave/Generated/src/RTC001/RTC001.c **** #endif/* End of defintions of dummy Debug Log macros*/                  
 121:../Dave/Generated/src/RTC001/RTC001.c ****  
 122:../Dave/Generated/src/RTC001/RTC001.c **** #define APP_GID DBG002_GID_RTC001
 123:../Dave/Generated/src/RTC001/RTC001.c **** /*******************************************************************************
 124:../Dave/Generated/src/RTC001/RTC001.c **** **                      Private Macro Definitions                             **
 125:../Dave/Generated/src/RTC001/RTC001.c **** *******************************************************************************/
 126:../Dave/Generated/src/RTC001/RTC001.c **** 
 127:../Dave/Generated/src/RTC001/RTC001.c **** 
 128:../Dave/Generated/src/RTC001/RTC001.c **** /*******************************************************************************
 129:../Dave/Generated/src/RTC001/RTC001.c **** **                      Private Type Definitions                              **
 130:../Dave/Generated/src/RTC001/RTC001.c **** *******************************************************************************/
 131:../Dave/Generated/src/RTC001/RTC001.c **** 
 132:../Dave/Generated/src/RTC001/RTC001.c **** /*******************************************************************************
 133:../Dave/Generated/src/RTC001/RTC001.c **** **                 Private Function Declarations:
 134:../Dave/Generated/src/RTC001/RTC001.c **** *******************************************************************************/
 135:../Dave/Generated/src/RTC001/RTC001.c **** 
 136:../Dave/Generated/src/RTC001/RTC001.c **** /*
 137:../Dave/Generated/src/RTC001/RTC001.c ****  * Function to check whether the date is valid
 138:../Dave/Generated/src/RTC001/RTC001.c ****  *              
 139:../Dave/Generated/src/RTC001/RTC001.c ****  * @return     void 
 140:../Dave/Generated/src/RTC001/RTC001.c ****  *      
 141:../Dave/Generated/src/RTC001/RTC001.c ****  * <b>Reentrant: NO </b><BR>
 142:../Dave/Generated/src/RTC001/RTC001.c ****  *
 143:../Dave/Generated/src/RTC001/RTC001.c ****  */
 144:../Dave/Generated/src/RTC001/RTC001.c **** static uint32_t RTC001_ldatevalid(uint16_t m, uint16_t d, uint16_t y);
 145:../Dave/Generated/src/RTC001/RTC001.c **** 
 146:../Dave/Generated/src/RTC001/RTC001.c **** 
 147:../Dave/Generated/src/RTC001/RTC001.c **** /*
 148:../Dave/Generated/src/RTC001/RTC001.c ****  * Function to calculate day of the week
 149:../Dave/Generated/src/RTC001/RTC001.c ****  *              
 150:../Dave/Generated/src/RTC001/RTC001.c ****  * @return     void 
 151:../Dave/Generated/src/RTC001/RTC001.c ****  *      
 152:../Dave/Generated/src/RTC001/RTC001.c ****  * <b>Reentrant: NO </b><BR>
 153:../Dave/Generated/src/RTC001/RTC001.c ****  *
 154:../Dave/Generated/src/RTC001/RTC001.c ****  */
 155:../Dave/Generated/src/RTC001/RTC001.c **** static uint32_t RTC001_lweekday(uint16_t m, uint16_t d, uint16_t y);
 156:../Dave/Generated/src/RTC001/RTC001.c **** 
 157:../Dave/Generated/src/RTC001/RTC001.c **** /*
 158:../Dave/Generated/src/RTC001/RTC001.c ****  *  Initialization function for the app. Configures the registers
 159:../Dave/Generated/src/RTC001/RTC001.c ****  *  based on options selected in UI.
 160:../Dave/Generated/src/RTC001/RTC001.c ****  *
 161:../Dave/Generated/src/RTC001/RTC001.c ****  * @return     void
 162:../Dave/Generated/src/RTC001/RTC001.c ****  *
 163:../Dave/Generated/src/RTC001/RTC001.c ****  * <b>Reentrant: NO </b><BR>
 164:../Dave/Generated/src/RTC001/RTC001.c ****  *
 165:../Dave/Generated/src/RTC001/RTC001.c ****  */
 166:../Dave/Generated/src/RTC001/RTC001.c **** static void  RTC001_lInit(const RTC001_HandleType* Handle);
 167:../Dave/Generated/src/RTC001/RTC001.c **** 
 168:../Dave/Generated/src/RTC001/RTC001.c **** /*******************************************************************************
 169:../Dave/Generated/src/RTC001/RTC001.c **** **                      Global Constant Definitions                           **
 170:../Dave/Generated/src/RTC001/RTC001.c **** *******************************************************************************/
 171:../Dave/Generated/src/RTC001/RTC001.c **** 
 172:../Dave/Generated/src/RTC001/RTC001.c **** 
 173:../Dave/Generated/src/RTC001/RTC001.c **** 
 174:../Dave/Generated/src/RTC001/RTC001.c **** /*******************************************************************************
 175:../Dave/Generated/src/RTC001/RTC001.c **** **                      Global Variable Definitions                           **
 176:../Dave/Generated/src/RTC001/RTC001.c **** *******************************************************************************/
 177:../Dave/Generated/src/RTC001/RTC001.c **** 
 178:../Dave/Generated/src/RTC001/RTC001.c **** /*******************************************************************************
 179:../Dave/Generated/src/RTC001/RTC001.c **** **                      Private Constant Definitions                          **
 180:../Dave/Generated/src/RTC001/RTC001.c **** *******************************************************************************/
 181:../Dave/Generated/src/RTC001/RTC001.c **** const uint32_t RTC001_DAYS_IN_MONTH[13] =
 182:../Dave/Generated/src/RTC001/RTC001.c **** {
 183:../Dave/Generated/src/RTC001/RTC001.c ****    /* Index from 1, hence skip 0*/
 184:../Dave/Generated/src/RTC001/RTC001.c ****     0U,
 185:../Dave/Generated/src/RTC001/RTC001.c ****     /*Jan, Feb, Mar, Apr, May, Jun, Jul, Aug, Sep, Oct, Nov, Dec*/
 186:../Dave/Generated/src/RTC001/RTC001.c ****        31U,28U, 31U, 30U, 31U, 30U, 31U, 31U, 30U, 31U, 30U, 31U
 187:../Dave/Generated/src/RTC001/RTC001.c **** };
 188:../Dave/Generated/src/RTC001/RTC001.c **** #define RTC001_DAYS_IN_AN_YEAR     (365U)
 189:../Dave/Generated/src/RTC001/RTC001.c **** #define RTC001_SECONDS_IN_A_DAY    (24U * 60U * 60U)
 190:../Dave/Generated/src/RTC001/RTC001.c **** #define RTC001_SECONDS_IN_AN_HOUR  (60U * 60U)
 191:../Dave/Generated/src/RTC001/RTC001.c **** #define RTC001_SECONDS_IN_A_MINUTE (60U)
 192:../Dave/Generated/src/RTC001/RTC001.c **** #define RTC001_EPOCH_YEAR          (1970U)
 193:../Dave/Generated/src/RTC001/RTC001.c **** /*******************************************************************************
 194:../Dave/Generated/src/RTC001/RTC001.c **** **                 Function like macro definitions                            **
 195:../Dave/Generated/src/RTC001/RTC001.c **** *******************************************************************************/
 196:../Dave/Generated/src/RTC001/RTC001.c **** 
 197:../Dave/Generated/src/RTC001/RTC001.c **** 
 198:../Dave/Generated/src/RTC001/RTC001.c **** 
 199:../Dave/Generated/src/RTC001/RTC001.c **** /*******************************************************************************
 200:../Dave/Generated/src/RTC001/RTC001.c **** **                      Private Function Definitions                          **
 201:../Dave/Generated/src/RTC001/RTC001.c **** *******************************************************************************/
 202:../Dave/Generated/src/RTC001/RTC001.c ****  
 203:../Dave/Generated/src/RTC001/RTC001.c **** 
 204:../Dave/Generated/src/RTC001/RTC001.c **** /*
 205:../Dave/Generated/src/RTC001/RTC001.c ****  *  Initialization function for the app. Configures the registers
 206:../Dave/Generated/src/RTC001/RTC001.c ****  *  based on options selected in UI.
 207:../Dave/Generated/src/RTC001/RTC001.c ****  */ 
 208:../Dave/Generated/src/RTC001/RTC001.c **** 
 209:../Dave/Generated/src/RTC001/RTC001.c **** static void  RTC001_lInit(const RTC001_HandleType* Handle)
 210:../Dave/Generated/src/RTC001/RTC001.c **** {
  46              		.loc 1 210 0
  47              		.cfi_startproc
  48              		@ args = 0, pretend = 0, frame = 16
  49              		@ frame_needed = 1, uses_anonymous_args = 0
  50 0000 80B5     		push	{r7, lr}
  51              	.LCFI0:
  52              		.cfi_def_cfa_offset 8
  53              		.cfi_offset 7, -8
  54              		.cfi_offset 14, -4
  55 0002 84B0     		sub	sp, sp, #16
  56              	.LCFI1:
  57              		.cfi_def_cfa_offset 24
  58 0004 00AF     		add	r7, sp, #0
  59              	.LCFI2:
  60              		.cfi_def_cfa_register 7
  61 0006 7860     		str	r0, [r7, #4]
 211:../Dave/Generated/src/RTC001/RTC001.c **** 
 212:../Dave/Generated/src/RTC001/RTC001.c ****   status_t status = (uint32_t) DAVEApp_SUCCESS;  	  
  62              		.loc 1 212 0
  63 0008 4FF00003 		mov	r3, #0
  64 000c FB60     		str	r3, [r7, #12]
 213:../Dave/Generated/src/RTC001/RTC001.c ****    /* <<<DD_RTC001_API_1>>> */
 214:../Dave/Generated/src/RTC001/RTC001.c ****   DBG002_FUNCTION_ENTRY(APP_GID,RTC001_FUNCTION_ENTRY); 
 215:../Dave/Generated/src/RTC001/RTC001.c ****    	  
 216:../Dave/Generated/src/RTC001/RTC001.c **** 
 217:../Dave/Generated/src/RTC001/RTC001.c ****   /* Clear Mirror register update status of RTC registers in SCU*/
 218:../Dave/Generated/src/RTC001/RTC001.c ****   SCU_INTERRUPT->SRCLR = \
  65              		.loc 1 218 0
  66 000e 44F27403 		movw	r3, #16500
  67 0012 C5F20003 		movt	r3, 20480
  68 0016 4FF0F852 		mov	r2, #520093696
  69 001a DA60     		str	r2, [r3, #12]
 219:../Dave/Generated/src/RTC001/RTC001.c ****       (SCU_INTERRUPT_SRCLR_RTC_CTR_Msk | SCU_INTERRUPT_SRCLR_RTC_ATIM0_Msk | \
 220:../Dave/Generated/src/RTC001/RTC001.c ****   		SCU_INTERRUPT_SRCLR_RTC_ATIM1_Msk | SCU_INTERRUPT_SRCLR_RTC_TIM0_Msk |\
 221:../Dave/Generated/src/RTC001/RTC001.c ****   		SCU_INTERRUPT_SRCLR_RTC_TIM1_Msk);
 222:../Dave/Generated/src/RTC001/RTC001.c ****   
 223:../Dave/Generated/src/RTC001/RTC001.c ****   if ((((RTC->CTR & RTC_CTR_ENB_Msk) >> RTC_CTR_ENB_Pos) == 0U ) ||\
  70              		.loc 1 223 0
  71 001c 4FF49443 		mov	r3, #18944
  72 0020 C5F20003 		movt	r3, 20480
  73 0024 5B68     		ldr	r3, [r3, #4]
  74 0026 03F00103 		and	r3, r3, #1
  75 002a 002B     		cmp	r3, #0
  76 002c 03D0     		beq	.L2
 224:../Dave/Generated/src/RTC001/RTC001.c ****     (Handle->RTCInitOnce != 1U))
  77              		.loc 1 224 0 discriminator 1
  78 002e 7B68     		ldr	r3, [r7, #4]
  79 0030 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 223:../Dave/Generated/src/RTC001/RTC001.c ****   if ((((RTC->CTR & RTC_CTR_ENB_Msk) >> RTC_CTR_ENB_Pos) == 0U ) ||\
  80              		.loc 1 223 0 discriminator 1
  81 0032 012B     		cmp	r3, #1
  82 0034 0CD0     		beq	.L3
  83              	.L2:
 225:../Dave/Generated/src/RTC001/RTC001.c ****   {
 226:../Dave/Generated/src/RTC001/RTC001.c ****      /* RTC disabled to set the time */
 227:../Dave/Generated/src/RTC001/RTC001.c ****      status = RTC001_Disable();
  84              		.loc 1 227 0
  85 0036 FFF7FEFF 		bl	RTC001_Disable
  86 003a F860     		str	r0, [r7, #12]
 228:../Dave/Generated/src/RTC001/RTC001.c ****      /*assert status = DAVEApp_SUCCESS*/
 229:../Dave/Generated/src/RTC001/RTC001.c ****      DBG002_I (status = DAVEApp_SUCCESS);
 230:../Dave/Generated/src/RTC001/RTC001.c ****      /* Calendar time and date set in RTC registers */
 231:../Dave/Generated/src/RTC001/RTC001.c ****      status |= RTC001_Clock_SetTime(&timeptr1);
  87              		.loc 1 231 0
  88 003c 40F20000 		movw	r0, #:lower16:timeptr1
  89 0040 C0F20000 		movt	r0, #:upper16:timeptr1
  90 0044 FFF7FEFF 		bl	RTC001_Clock_SetTime
  91 0048 0346     		mov	r3, r0
  92 004a FA68     		ldr	r2, [r7, #12]
  93 004c 1343     		orrs	r3, r3, r2
  94 004e FB60     		str	r3, [r7, #12]
  95              	.L3:
 232:../Dave/Generated/src/RTC001/RTC001.c ****      /*assert status = DAVEApp_SUCCESS*/
 233:../Dave/Generated/src/RTC001/RTC001.c ****      DBG002_I (status = DAVEApp_SUCCESS);
 234:../Dave/Generated/src/RTC001/RTC001.c **** 
 235:../Dave/Generated/src/RTC001/RTC001.c ****   }
 236:../Dave/Generated/src/RTC001/RTC001.c ****   
 237:../Dave/Generated/src/RTC001/RTC001.c ****   /* Enable the RTC module */
 238:../Dave/Generated/src/RTC001/RTC001.c ****   RTC->CTR |= ((uint32_t)(RTC_CTR_ENB_Msk));
  96              		.loc 1 238 0
  97 0050 4FF49443 		mov	r3, #18944
  98 0054 C5F20003 		movt	r3, 20480
  99 0058 4FF49442 		mov	r2, #18944
 100 005c C5F20002 		movt	r2, 20480
 101 0060 5268     		ldr	r2, [r2, #4]
 102 0062 42F00102 		orr	r2, r2, #1
 103 0066 5A60     		str	r2, [r3, #4]
 239:../Dave/Generated/src/RTC001/RTC001.c ****   /* Wait for Mirror register update and clear the update indication */
 240:../Dave/Generated/src/RTC001/RTC001.c ****   while((SCU_INTERRUPT->SRRAW & SCU_INTERRUPT_SRRAW_RTC_CTR_Msk) == 0U) 
 104              		.loc 1 240 0
 105 0068 00BF     		nop
 106              	.L4:
 107              		.loc 1 240 0 is_stmt 0 discriminator 1
 108 006a 44F27403 		movw	r3, #16500
 109 006e C5F20003 		movt	r3, 20480
 110 0072 5B68     		ldr	r3, [r3, #4]
 111 0074 03F08073 		and	r3, r3, #16777216
 112 0078 002B     		cmp	r3, #0
 113 007a F6D0     		beq	.L4
 241:../Dave/Generated/src/RTC001/RTC001.c ****   {}
 242:../Dave/Generated/src/RTC001/RTC001.c ****   SCU_INTERRUPT->SRCLR = SCU_INTERRUPT_SRRAW_RTC_CTR_Msk;	
 114              		.loc 1 242 0 is_stmt 1
 115 007c 44F27403 		movw	r3, #16500
 116 0080 C5F20003 		movt	r3, 20480
 117 0084 4FF08072 		mov	r2, #16777216
 118 0088 DA60     		str	r2, [r3, #12]
 243:../Dave/Generated/src/RTC001/RTC001.c ****   
 244:../Dave/Generated/src/RTC001/RTC001.c **** 		
 245:../Dave/Generated/src/RTC001/RTC001.c **** 	  
 246:../Dave/Generated/src/RTC001/RTC001.c ****       
 247:../Dave/Generated/src/RTC001/RTC001.c ****   /* Enable RTC alarm interrupt in SCU */
 248:../Dave/Generated/src/RTC001/RTC001.c ****   SCU_INTERRUPT->SRMSK |= SCU_INTERRUPT_SRMSK_AI_Msk; 
 119              		.loc 1 248 0
 120 008a 44F27403 		movw	r3, #16500
 121 008e C5F20003 		movt	r3, 20480
 122 0092 44F27402 		movw	r2, #16500
 123 0096 C5F20002 		movt	r2, 20480
 124 009a 9268     		ldr	r2, [r2, #8]
 125 009c 42F00402 		orr	r2, r2, #4
 126 00a0 9A60     		str	r2, [r3, #8]
 249:../Dave/Generated/src/RTC001/RTC001.c ****      	
 250:../Dave/Generated/src/RTC001/RTC001.c **** 	
 251:../Dave/Generated/src/RTC001/RTC001.c ****   /*configure RTC prescaler*/
 252:../Dave/Generated/src/RTC001/RTC001.c ****   WR_REGHIB(RTC->CTR, RTC_CTR_DIV_Msk, RTC_CTR_DIV_Pos, \
 127              		.loc 1 252 0
 128 00a2 4FF49443 		mov	r3, #18944
 129 00a6 C5F20003 		movt	r3, 20480
 130 00aa 7A68     		ldr	r2, [r7, #4]
 131 00ac 5288     		ldrh	r2, [r2, #2]
 132 00ae 4FEA0241 		lsl	r1, r2, #16
 133 00b2 4FF49442 		mov	r2, #18944
 134 00b6 C5F20002 		movt	r2, 20480
 135 00ba 5268     		ldr	r2, [r2, #4]
 136 00bc 4FEA0242 		lsl	r2, r2, #16
 137 00c0 4FEA1242 		lsr	r2, r2, #16
 138 00c4 0A43     		orrs	r2, r2, r1
 139 00c6 5A60     		str	r2, [r3, #4]
 140              	.L5:
 141              		.loc 1 252 0 is_stmt 0 discriminator 1
 142 00c8 44F27403 		movw	r3, #16500
 143 00cc C5F20003 		movt	r3, 20480
 144 00d0 5B68     		ldr	r3, [r3, #4]
 145 00d2 03F08073 		and	r3, r3, #16777216
 146 00d6 002B     		cmp	r3, #0
 147 00d8 F6D0     		beq	.L5
 148              		.loc 1 252 0 discriminator 2
 149 00da 44F27403 		movw	r3, #16500
 150 00de C5F20003 		movt	r3, 20480
 151 00e2 44F27402 		movw	r2, #16500
 152 00e6 C5F20002 		movt	r2, 20480
 153 00ea D268     		ldr	r2, [r2, #12]
 154 00ec 42F08072 		orr	r2, r2, #16777216
 155 00f0 DA60     		str	r2, [r3, #12]
 253:../Dave/Generated/src/RTC001/RTC001.c ****            (uint32_t)Handle->DividerValue, SCU_INTERRUPT_SRRAW_RTC_CTR_Msk);	    	     
 254:../Dave/Generated/src/RTC001/RTC001.c ****  	 
 255:../Dave/Generated/src/RTC001/RTC001.c ****   /* Enable RTC periodic interrupt in SCU */
 256:../Dave/Generated/src/RTC001/RTC001.c ****   SCU_INTERRUPT->SRMSK |= (uint32_t)SCU_INTERRUPT_SRMSK_PI_Msk;     
 156              		.loc 1 256 0 is_stmt 1 discriminator 2
 157 00f2 44F27403 		movw	r3, #16500
 158 00f6 C5F20003 		movt	r3, 20480
 159 00fa 44F27402 		movw	r2, #16500
 160 00fe C5F20002 		movt	r2, 20480
 161 0102 9268     		ldr	r2, [r2, #8]
 162 0104 42F00202 		orr	r2, r2, #2
 163 0108 9A60     		str	r2, [r3, #8]
 257:../Dave/Generated/src/RTC001/RTC001.c ****   if (status != (uint32_t)DAVEApp_SUCCESS)
 258:../Dave/Generated/src/RTC001/RTC001.c ****   {
 259:../Dave/Generated/src/RTC001/RTC001.c ****     DBG002_ERROR(APP_GID,status, 0, NULL);
 260:../Dave/Generated/src/RTC001/RTC001.c ****   }
 261:../Dave/Generated/src/RTC001/RTC001.c ****   DBG002_FUNCTION_EXIT(APP_GID,RTC001_FUNCTION_EXIT);
 262:../Dave/Generated/src/RTC001/RTC001.c **** }
 164              		.loc 1 262 0 discriminator 2
 165 010a 07F11007 		add	r7, r7, #16
 166 010e BD46     		mov	sp, r7
 167 0110 80BD     		pop	{r7, pc}
 168              		.cfi_endproc
 169              	.LFE112:
 171 0112 00BF     		.section	.text.RTC001_Init,"ax",%progbits
 172              		.align	2
 173              		.global	RTC001_Init
 174              		.thumb
 175              		.thumb_func
 177              	RTC001_Init:
 178              	.LFB113:
 263:../Dave/Generated/src/RTC001/RTC001.c **** 
 264:../Dave/Generated/src/RTC001/RTC001.c **** 
 265:../Dave/Generated/src/RTC001/RTC001.c **** /**
 266:../Dave/Generated/src/RTC001/RTC001.c ****  *@}
 267:../Dave/Generated/src/RTC001/RTC001.c ****  */
 268:../Dave/Generated/src/RTC001/RTC001.c **** 
 269:../Dave/Generated/src/RTC001/RTC001.c **** /*******************************************************************************
 270:../Dave/Generated/src/RTC001/RTC001.c **** **                      Public Function Definitions                           **
 271:../Dave/Generated/src/RTC001/RTC001.c **** *******************************************************************************/
 272:../Dave/Generated/src/RTC001/RTC001.c **** 
 273:../Dave/Generated/src/RTC001/RTC001.c **** 
 274:../Dave/Generated/src/RTC001/RTC001.c **** /** @ingroup RTC001_publicparam
 275:../Dave/Generated/src/RTC001/RTC001.c ****  * @{
 276:../Dave/Generated/src/RTC001/RTC001.c ****  */
 277:../Dave/Generated/src/RTC001/RTC001.c **** 
 278:../Dave/Generated/src/RTC001/RTC001.c **** /*
 279:../Dave/Generated/src/RTC001/RTC001.c ****  *  Initialization function for the app. Configures the registers
 280:../Dave/Generated/src/RTC001/RTC001.c ****  *  based on options selected in UI.
 281:../Dave/Generated/src/RTC001/RTC001.c ****  */
 282:../Dave/Generated/src/RTC001/RTC001.c **** void RTC001_Init()
 283:../Dave/Generated/src/RTC001/RTC001.c **** {
 179              		.loc 1 283 0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 1, uses_anonymous_args = 0
 183 0000 80B5     		push	{r7, lr}
 184              	.LCFI3:
 185              		.cfi_def_cfa_offset 8
 186              		.cfi_offset 7, -8
 187              		.cfi_offset 14, -4
 188 0002 00AF     		add	r7, sp, #0
 189              	.LCFI4:
 190              		.cfi_def_cfa_register 7
 284:../Dave/Generated/src/RTC001/RTC001.c **** 	RTC001_lInit(&RTC001_Handle);
 191              		.loc 1 284 0
 192 0004 40F20000 		movw	r0, #:lower16:RTC001_Handle
 193 0008 C0F20000 		movt	r0, #:upper16:RTC001_Handle
 194 000c FFF7FEFF 		bl	RTC001_lInit
 285:../Dave/Generated/src/RTC001/RTC001.c **** 
 286:../Dave/Generated/src/RTC001/RTC001.c **** }
 195              		.loc 1 286 0
 196 0010 80BD     		pop	{r7, pc}
 197              		.cfi_endproc
 198              	.LFE113:
 200 0012 00BF     		.section	.text.RTC001_DeInit,"ax",%progbits
 201              		.align	2
 202              		.global	RTC001_DeInit
 203              		.thumb
 204              		.thumb_func
 206              	RTC001_DeInit:
 207              	.LFB114:
 287:../Dave/Generated/src/RTC001/RTC001.c **** 
 288:../Dave/Generated/src/RTC001/RTC001.c **** /*
 289:../Dave/Generated/src/RTC001/RTC001.c ****  *  Deinitialization function which initializes the App internal data
 290:../Dave/Generated/src/RTC001/RTC001.c ****  *  structures to default values. 
 291:../Dave/Generated/src/RTC001/RTC001.c ****  */
 292:../Dave/Generated/src/RTC001/RTC001.c **** void  RTC001_DeInit(void)
 293:../Dave/Generated/src/RTC001/RTC001.c **** {
 208              		.loc 1 293 0
 209              		.cfi_startproc
 210              		@ args = 0, pretend = 0, frame = 0
 211              		@ frame_needed = 1, uses_anonymous_args = 0
 212              		@ link register save eliminated.
 213 0000 80B4     		push	{r7}
 214              	.LCFI5:
 215              		.cfi_def_cfa_offset 4
 216              		.cfi_offset 7, -4
 217 0002 00AF     		add	r7, sp, #0
 218              	.LCFI6:
 219              		.cfi_def_cfa_register 7
 294:../Dave/Generated/src/RTC001/RTC001.c ****   DBG002_FUNCTION_ENTRY(APP_GID,RTC001_FUNCTION_ENTRY);
 295:../Dave/Generated/src/RTC001/RTC001.c ****    /* <<<DD_RTC001_API_2>>> */
 296:../Dave/Generated/src/RTC001/RTC001.c **** 	
 297:../Dave/Generated/src/RTC001/RTC001.c ****   DBG002_FUNCTION_EXIT(APP_GID,RTC001_FUNCTION_EXIT);
 298:../Dave/Generated/src/RTC001/RTC001.c **** }
 220              		.loc 1 298 0
 221 0004 BD46     		mov	sp, r7
 222 0006 80BC     		pop	{r7}
 223 0008 7047     		bx	lr
 224              		.cfi_endproc
 225              	.LFE114:
 227 000a 00BF     		.section	.text.RTC001_Enable,"ax",%progbits
 228              		.align	2
 229              		.global	RTC001_Enable
 230              		.thumb
 231              		.thumb_func
 233              	RTC001_Enable:
 234              	.LFB115:
 299:../Dave/Generated/src/RTC001/RTC001.c **** 
 300:../Dave/Generated/src/RTC001/RTC001.c **** 
 301:../Dave/Generated/src/RTC001/RTC001.c **** /*
 302:../Dave/Generated/src/RTC001/RTC001.c ****  *  The function enables the RTC module.
 303:../Dave/Generated/src/RTC001/RTC001.c ****  */
 304:../Dave/Generated/src/RTC001/RTC001.c **** status_t  RTC001_Enable(void)
 305:../Dave/Generated/src/RTC001/RTC001.c **** {
 235              		.loc 1 305 0
 236              		.cfi_startproc
 237              		@ args = 0, pretend = 0, frame = 8
 238              		@ frame_needed = 1, uses_anonymous_args = 0
 239              		@ link register save eliminated.
 240 0000 80B4     		push	{r7}
 241              	.LCFI7:
 242              		.cfi_def_cfa_offset 4
 243              		.cfi_offset 7, -4
 244 0002 83B0     		sub	sp, sp, #12
 245              	.LCFI8:
 246              		.cfi_def_cfa_offset 16
 247 0004 00AF     		add	r7, sp, #0
 248              	.LCFI9:
 249              		.cfi_def_cfa_register 7
 306:../Dave/Generated/src/RTC001/RTC001.c ****   status_t status = (uint32_t) RTC001_ERROR;
 250              		.loc 1 306 0
 251 0006 4FF00203 		mov	r3, #2
 252 000a 7B60     		str	r3, [r7, #4]
 307:../Dave/Generated/src/RTC001/RTC001.c ****   DBG002_FUNCTION_ENTRY(APP_GID,RTC001_FUNCTION_ENTRY);
 308:../Dave/Generated/src/RTC001/RTC001.c ****    /* <<<DD_RTC001_API_3>>> */
 309:../Dave/Generated/src/RTC001/RTC001.c ****  
 310:../Dave/Generated/src/RTC001/RTC001.c ****   /* Clear Mirror register update status of RTC registers in SCU*/
 311:../Dave/Generated/src/RTC001/RTC001.c ****   SCU_INTERRUPT->SRCLR |= (uint32_t)\
 253              		.loc 1 311 0
 254 000c 44F27403 		movw	r3, #16500
 255 0010 C5F20003 		movt	r3, 20480
 256 0014 44F27402 		movw	r2, #16500
 257 0018 C5F20002 		movt	r2, 20480
 258 001c D268     		ldr	r2, [r2, #12]
 259 001e 42F0F852 		orr	r2, r2, #520093696
 260 0022 DA60     		str	r2, [r3, #12]
 312:../Dave/Generated/src/RTC001/RTC001.c ****     (SCU_INTERRUPT_SRCLR_RTC_CTR_Msk | SCU_INTERRUPT_SRCLR_RTC_ATIM0_Msk |\
 313:../Dave/Generated/src/RTC001/RTC001.c ****   	SCU_INTERRUPT_SRCLR_RTC_ATIM1_Msk | SCU_INTERRUPT_SRCLR_RTC_TIM0_Msk |\
 314:../Dave/Generated/src/RTC001/RTC001.c ****   								SCU_INTERRUPT_SRCLR_RTC_TIM1_Msk);
 315:../Dave/Generated/src/RTC001/RTC001.c ****   /* Enable RTC module */
 316:../Dave/Generated/src/RTC001/RTC001.c ****   RTC->CTR |= (uint32_t)(RTC_CTR_ENB_Msk);
 261              		.loc 1 316 0
 262 0024 4FF49443 		mov	r3, #18944
 263 0028 C5F20003 		movt	r3, 20480
 264 002c 4FF49442 		mov	r2, #18944
 265 0030 C5F20002 		movt	r2, 20480
 266 0034 5268     		ldr	r2, [r2, #4]
 267 0036 42F00102 		orr	r2, r2, #1
 268 003a 5A60     		str	r2, [r3, #4]
 317:../Dave/Generated/src/RTC001/RTC001.c ****   /* Wait for Mirror register update and clear the update indication */
 318:../Dave/Generated/src/RTC001/RTC001.c ****   while((SCU_INTERRUPT->SRRAW & SCU_INTERRUPT_SRRAW_RTC_CTR_Msk) == 0U) 
 269              		.loc 1 318 0
 270 003c 00BF     		nop
 271              	.L9:
 272              		.loc 1 318 0 is_stmt 0 discriminator 1
 273 003e 44F27403 		movw	r3, #16500
 274 0042 C5F20003 		movt	r3, 20480
 275 0046 5B68     		ldr	r3, [r3, #4]
 276 0048 03F08073 		and	r3, r3, #16777216
 277 004c 002B     		cmp	r3, #0
 278 004e F6D0     		beq	.L9
 319:../Dave/Generated/src/RTC001/RTC001.c ****   {}
 320:../Dave/Generated/src/RTC001/RTC001.c ****   SCU_INTERRUPT->SRCLR = SCU_INTERRUPT_SRRAW_RTC_CTR_Msk;	
 279              		.loc 1 320 0 is_stmt 1
 280 0050 44F27403 		movw	r3, #16500
 281 0054 C5F20003 		movt	r3, 20480
 282 0058 4FF08072 		mov	r2, #16777216
 283 005c DA60     		str	r2, [r3, #12]
 321:../Dave/Generated/src/RTC001/RTC001.c ****   
 322:../Dave/Generated/src/RTC001/RTC001.c ****   status = (uint32_t) DAVEApp_SUCCESS;	
 284              		.loc 1 322 0
 285 005e 4FF00003 		mov	r3, #0
 286 0062 7B60     		str	r3, [r7, #4]
 323:../Dave/Generated/src/RTC001/RTC001.c ****   DBG002_FUNCTION_EXIT(APP_GID,RTC001_FUNCTION_EXIT);
 324:../Dave/Generated/src/RTC001/RTC001.c ****   return status;
 287              		.loc 1 324 0
 288 0064 7B68     		ldr	r3, [r7, #4]
 325:../Dave/Generated/src/RTC001/RTC001.c **** }
 289              		.loc 1 325 0
 290 0066 1846     		mov	r0, r3
 291 0068 07F10C07 		add	r7, r7, #12
 292 006c BD46     		mov	sp, r7
 293 006e 80BC     		pop	{r7}
 294 0070 7047     		bx	lr
 295              		.cfi_endproc
 296              	.LFE115:
 298 0072 00BF     		.section	.text.RTC001_Disable,"ax",%progbits
 299              		.align	2
 300              		.global	RTC001_Disable
 301              		.thumb
 302              		.thumb_func
 304              	RTC001_Disable:
 305              	.LFB116:
 326:../Dave/Generated/src/RTC001/RTC001.c **** 
 327:../Dave/Generated/src/RTC001/RTC001.c **** 
 328:../Dave/Generated/src/RTC001/RTC001.c **** /*
 329:../Dave/Generated/src/RTC001/RTC001.c ****  *  The function disables the RTC module.
 330:../Dave/Generated/src/RTC001/RTC001.c ****  */
 331:../Dave/Generated/src/RTC001/RTC001.c ****  
 332:../Dave/Generated/src/RTC001/RTC001.c **** status_t  RTC001_Disable(void)	
 333:../Dave/Generated/src/RTC001/RTC001.c **** {
 306              		.loc 1 333 0
 307              		.cfi_startproc
 308              		@ args = 0, pretend = 0, frame = 8
 309              		@ frame_needed = 1, uses_anonymous_args = 0
 310              		@ link register save eliminated.
 311 0000 80B4     		push	{r7}
 312              	.LCFI10:
 313              		.cfi_def_cfa_offset 4
 314              		.cfi_offset 7, -4
 315 0002 83B0     		sub	sp, sp, #12
 316              	.LCFI11:
 317              		.cfi_def_cfa_offset 16
 318 0004 00AF     		add	r7, sp, #0
 319              	.LCFI12:
 320              		.cfi_def_cfa_register 7
 334:../Dave/Generated/src/RTC001/RTC001.c ****   status_t status = (uint32_t) RTC001_ERROR;
 321              		.loc 1 334 0
 322 0006 4FF00203 		mov	r3, #2
 323 000a 7B60     		str	r3, [r7, #4]
 335:../Dave/Generated/src/RTC001/RTC001.c ****   DBG002_FUNCTION_ENTRY(APP_GID,RTC001_FUNCTION_ENTRY);
 336:../Dave/Generated/src/RTC001/RTC001.c ****    /* <<<DD_RTC001_API_4>>> */
 337:../Dave/Generated/src/RTC001/RTC001.c **** 
 338:../Dave/Generated/src/RTC001/RTC001.c ****   /* Disable the RTC module*/
 339:../Dave/Generated/src/RTC001/RTC001.c ****   RTC->CTR &= (uint32_t) (~(RTC_CTR_ENB_Msk));
 324              		.loc 1 339 0
 325 000c 4FF49443 		mov	r3, #18944
 326 0010 C5F20003 		movt	r3, 20480
 327 0014 4FF49442 		mov	r2, #18944
 328 0018 C5F20002 		movt	r2, 20480
 329 001c 5268     		ldr	r2, [r2, #4]
 330 001e 22F00102 		bic	r2, r2, #1
 331 0022 5A60     		str	r2, [r3, #4]
 340:../Dave/Generated/src/RTC001/RTC001.c ****   /* Wait for Mirror register update and clear the update indication */
 341:../Dave/Generated/src/RTC001/RTC001.c ****   while((SCU_INTERRUPT->SRRAW & SCU_INTERRUPT_SRRAW_RTC_CTR_Msk) == 0U) 
 332              		.loc 1 341 0
 333 0024 00BF     		nop
 334              	.L12:
 335              		.loc 1 341 0 is_stmt 0 discriminator 1
 336 0026 44F27403 		movw	r3, #16500
 337 002a C5F20003 		movt	r3, 20480
 338 002e 5B68     		ldr	r3, [r3, #4]
 339 0030 03F08073 		and	r3, r3, #16777216
 340 0034 002B     		cmp	r3, #0
 341 0036 F6D0     		beq	.L12
 342:../Dave/Generated/src/RTC001/RTC001.c ****   {}
 343:../Dave/Generated/src/RTC001/RTC001.c ****   SCU_INTERRUPT->SRCLR = SCU_INTERRUPT_SRRAW_RTC_CTR_Msk;	
 342              		.loc 1 343 0 is_stmt 1
 343 0038 44F27403 		movw	r3, #16500
 344 003c C5F20003 		movt	r3, 20480
 345 0040 4FF08072 		mov	r2, #16777216
 346 0044 DA60     		str	r2, [r3, #12]
 344:../Dave/Generated/src/RTC001/RTC001.c **** 
 345:../Dave/Generated/src/RTC001/RTC001.c ****   /* Clear the RTC Time registers */  
 346:../Dave/Generated/src/RTC001/RTC001.c ****   while((SCU_GENERAL->MIRRSTS & SCU_GENERAL_MIRRSTS_RTC_TIM0_Msk)!= 0x0U)
 347              		.loc 1 346 0
 348 0046 00BF     		nop
 349              	.L13:
 350              		.loc 1 346 0 is_stmt 0 discriminator 1
 351 0048 4FF48043 		mov	r3, #16384
 352 004c C5F20003 		movt	r3, 20480
 353 0050 D3F8C430 		ldr	r3, [r3, #196]
 354 0054 03F40063 		and	r3, r3, #2048
 355 0058 002B     		cmp	r3, #0
 356 005a F5D1     		bne	.L13
 347:../Dave/Generated/src/RTC001/RTC001.c ****   {}
 348:../Dave/Generated/src/RTC001/RTC001.c ****   RTC->TIM0 = 0x00000000U;
 357              		.loc 1 348 0 is_stmt 1
 358 005c 4FF49443 		mov	r3, #18944
 359 0060 C5F20003 		movt	r3, 20480
 360 0064 4FF00002 		mov	r2, #0
 361 0068 1A62     		str	r2, [r3, #32]
 349:../Dave/Generated/src/RTC001/RTC001.c ****   while((SCU_GENERAL->MIRRSTS & SCU_GENERAL_MIRRSTS_RTC_TIM1_Msk)!= 0x0U)
 362              		.loc 1 349 0
 363 006a 00BF     		nop
 364              	.L14:
 365              		.loc 1 349 0 is_stmt 0 discriminator 1
 366 006c 4FF48043 		mov	r3, #16384
 367 0070 C5F20003 		movt	r3, 20480
 368 0074 D3F8C430 		ldr	r3, [r3, #196]
 369 0078 03F48053 		and	r3, r3, #4096
 370 007c 002B     		cmp	r3, #0
 371 007e F5D1     		bne	.L14
 350:../Dave/Generated/src/RTC001/RTC001.c ****   {}
 351:../Dave/Generated/src/RTC001/RTC001.c ****   RTC->TIM1 = 0x00000000U;  
 372              		.loc 1 351 0 is_stmt 1
 373 0080 4FF49443 		mov	r3, #18944
 374 0084 C5F20003 		movt	r3, 20480
 375 0088 4FF00002 		mov	r2, #0
 376 008c 5A62     		str	r2, [r3, #36]
 352:../Dave/Generated/src/RTC001/RTC001.c ****   /* Clear the Alarm registers */
 353:../Dave/Generated/src/RTC001/RTC001.c ****   while((SCU_GENERAL->MIRRSTS & SCU_GENERAL_MIRRSTS_RTC_ATIM0_Msk)!= 0x0U)
 377              		.loc 1 353 0
 378 008e 00BF     		nop
 379              	.L15:
 380              		.loc 1 353 0 is_stmt 0 discriminator 1
 381 0090 4FF48043 		mov	r3, #16384
 382 0094 C5F20003 		movt	r3, 20480
 383 0098 D3F8C430 		ldr	r3, [r3, #196]
 384 009c 03F40073 		and	r3, r3, #512
 385 00a0 002B     		cmp	r3, #0
 386 00a2 F5D1     		bne	.L15
 354:../Dave/Generated/src/RTC001/RTC001.c ****   {}
 355:../Dave/Generated/src/RTC001/RTC001.c ****   RTC->ATIM0 = 0x00000000U;
 387              		.loc 1 355 0 is_stmt 1
 388 00a4 4FF49443 		mov	r3, #18944
 389 00a8 C5F20003 		movt	r3, 20480
 390 00ac 4FF00002 		mov	r2, #0
 391 00b0 9A61     		str	r2, [r3, #24]
 356:../Dave/Generated/src/RTC001/RTC001.c ****   while((SCU_GENERAL->MIRRSTS & SCU_GENERAL_MIRRSTS_RTC_ATIM1_Msk)!= 0x0U)
 392              		.loc 1 356 0
 393 00b2 00BF     		nop
 394              	.L16:
 395              		.loc 1 356 0 is_stmt 0 discriminator 1
 396 00b4 4FF48043 		mov	r3, #16384
 397 00b8 C5F20003 		movt	r3, 20480
 398 00bc D3F8C430 		ldr	r3, [r3, #196]
 399 00c0 03F48063 		and	r3, r3, #1024
 400 00c4 002B     		cmp	r3, #0
 401 00c6 F5D1     		bne	.L16
 357:../Dave/Generated/src/RTC001/RTC001.c ****   {}
 358:../Dave/Generated/src/RTC001/RTC001.c ****   RTC->ATIM1 = 0x00000000U; 	
 402              		.loc 1 358 0 is_stmt 1
 403 00c8 4FF49443 		mov	r3, #18944
 404 00cc C5F20003 		movt	r3, 20480
 405 00d0 4FF00002 		mov	r2, #0
 406 00d4 DA61     		str	r2, [r3, #28]
 359:../Dave/Generated/src/RTC001/RTC001.c ****   /* Clear Mirror register update status of RTC registers in SCU*/
 360:../Dave/Generated/src/RTC001/RTC001.c ****   SCU_INTERRUPT->SRCLR |= (uint32_t)\
 407              		.loc 1 360 0
 408 00d6 44F27403 		movw	r3, #16500
 409 00da C5F20003 		movt	r3, 20480
 410 00de 44F27402 		movw	r2, #16500
 411 00e2 C5F20002 		movt	r2, 20480
 412 00e6 D268     		ldr	r2, [r2, #12]
 413 00e8 42F0F852 		orr	r2, r2, #520093696
 414 00ec DA60     		str	r2, [r3, #12]
 361:../Dave/Generated/src/RTC001/RTC001.c ****     (SCU_INTERRUPT_SRCLR_RTC_CTR_Msk | SCU_INTERRUPT_SRCLR_RTC_ATIM0_Msk |\
 362:../Dave/Generated/src/RTC001/RTC001.c ****   	SCU_INTERRUPT_SRCLR_RTC_ATIM1_Msk | SCU_INTERRUPT_SRCLR_RTC_TIM0_Msk |\
 363:../Dave/Generated/src/RTC001/RTC001.c ****   	SCU_INTERRUPT_SRCLR_RTC_TIM1_Msk);    
 364:../Dave/Generated/src/RTC001/RTC001.c ****   							
 365:../Dave/Generated/src/RTC001/RTC001.c ****   status = (uint32_t)DAVEApp_SUCCESS;
 415              		.loc 1 365 0
 416 00ee 4FF00003 		mov	r3, #0
 417 00f2 7B60     		str	r3, [r7, #4]
 366:../Dave/Generated/src/RTC001/RTC001.c ****   DBG002_FUNCTION_EXIT(APP_GID,RTC001_FUNCTION_EXIT);
 367:../Dave/Generated/src/RTC001/RTC001.c ****   return status;
 418              		.loc 1 367 0
 419 00f4 7B68     		ldr	r3, [r7, #4]
 368:../Dave/Generated/src/RTC001/RTC001.c **** }
 420              		.loc 1 368 0
 421 00f6 1846     		mov	r0, r3
 422 00f8 07F10C07 		add	r7, r7, #12
 423 00fc BD46     		mov	sp, r7
 424 00fe 80BC     		pop	{r7}
 425 0100 7047     		bx	lr
 426              		.cfi_endproc
 427              	.LFE116:
 429 0102 00BF     		.section	.text.RTC001_GetFlagStatus,"ax",%progbits
 430              		.align	2
 431              		.global	RTC001_GetFlagStatus
 432              		.thumb
 433              		.thumb_func
 435              	RTC001_GetFlagStatus:
 436              	.LFB117:
 369:../Dave/Generated/src/RTC001/RTC001.c **** 
 370:../Dave/Generated/src/RTC001/RTC001.c **** 
 371:../Dave/Generated/src/RTC001/RTC001.c **** /*
 372:../Dave/Generated/src/RTC001/RTC001.c ****  *  The function gets RTC status flag for Alarm and Periodic Timer Events.
 373:../Dave/Generated/src/RTC001/RTC001.c ****  */	
 374:../Dave/Generated/src/RTC001/RTC001.c **** status_t  RTC001_GetFlagStatus(RTC001_FlagType Flag)
 375:../Dave/Generated/src/RTC001/RTC001.c **** {
 437              		.loc 1 375 0
 438              		.cfi_startproc
 439              		@ args = 0, pretend = 0, frame = 16
 440              		@ frame_needed = 1, uses_anonymous_args = 0
 441              		@ link register save eliminated.
 442 0000 80B4     		push	{r7}
 443              	.LCFI13:
 444              		.cfi_def_cfa_offset 4
 445              		.cfi_offset 7, -4
 446 0002 85B0     		sub	sp, sp, #20
 447              	.LCFI14:
 448              		.cfi_def_cfa_offset 24
 449 0004 00AF     		add	r7, sp, #0
 450              	.LCFI15:
 451              		.cfi_def_cfa_register 7
 452 0006 0346     		mov	r3, r0
 453 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 376:../Dave/Generated/src/RTC001/RTC001.c ****   status_t status = (uint32_t) RTC001_RESET;
 454              		.loc 1 376 0
 455 000a 4FF00403 		mov	r3, #4
 456 000e FB60     		str	r3, [r7, #12]
 377:../Dave/Generated/src/RTC001/RTC001.c ****   uint32_t TempValue = 0U;
 457              		.loc 1 377 0
 458 0010 4FF00003 		mov	r3, #0
 459 0014 BB60     		str	r3, [r7, #8]
 378:../Dave/Generated/src/RTC001/RTC001.c ****   /* <<<DD_RTC001_API_6>>> */
 379:../Dave/Generated/src/RTC001/RTC001.c ****   DBG002_FUNCTION_ENTRY(APP_GID,RTC001_FUNCTION_ENTRY);
 380:../Dave/Generated/src/RTC001/RTC001.c **** 
 381:../Dave/Generated/src/RTC001/RTC001.c ****   /*read the Status Service Request Register*/
 382:../Dave/Generated/src/RTC001/RTC001.c ****   TempValue = RTC->STSSR;
 460              		.loc 1 382 0
 461 0016 4FF49443 		mov	r3, #18944
 462 001a C5F20003 		movt	r3, 20480
 463 001e DB68     		ldr	r3, [r3, #12]
 464 0020 BB60     		str	r3, [r7, #8]
 383:../Dave/Generated/src/RTC001/RTC001.c ****   
 384:../Dave/Generated/src/RTC001/RTC001.c ****   /*check the given flag*/
 385:../Dave/Generated/src/RTC001/RTC001.c **** 	if((TempValue & (uint32_t) Flag) != 0U)
 465              		.loc 1 385 0
 466 0022 FA88     		ldrh	r2, [r7, #6]
 467 0024 BB68     		ldr	r3, [r7, #8]
 468 0026 1340     		ands	r3, r3, r2
 469 0028 002B     		cmp	r3, #0
 470 002a 02D0     		beq	.L19
 386:../Dave/Generated/src/RTC001/RTC001.c **** 	{
 387:../Dave/Generated/src/RTC001/RTC001.c **** 	  status = (uint32_t) RTC001_SET;
 471              		.loc 1 387 0
 472 002c 4FF00303 		mov	r3, #3
 473 0030 FB60     		str	r3, [r7, #12]
 474              	.L19:
 388:../Dave/Generated/src/RTC001/RTC001.c **** 	}
 389:../Dave/Generated/src/RTC001/RTC001.c **** 
 390:../Dave/Generated/src/RTC001/RTC001.c **** 	DBG002_FUNCTION_EXIT(APP_GID,RTC001_FUNCTION_EXIT);
 391:../Dave/Generated/src/RTC001/RTC001.c **** 	return status;
 475              		.loc 1 391 0
 476 0032 FB68     		ldr	r3, [r7, #12]
 392:../Dave/Generated/src/RTC001/RTC001.c **** }
 477              		.loc 1 392 0
 478 0034 1846     		mov	r0, r3
 479 0036 07F11407 		add	r7, r7, #20
 480 003a BD46     		mov	sp, r7
 481 003c 80BC     		pop	{r7}
 482 003e 7047     		bx	lr
 483              		.cfi_endproc
 484              	.LFE117:
 486              		.section	.text.RTC001_ClearFlagStatus,"ax",%progbits
 487              		.align	2
 488              		.global	RTC001_ClearFlagStatus
 489              		.thumb
 490              		.thumb_func
 492              	RTC001_ClearFlagStatus:
 493              	.LFB118:
 393:../Dave/Generated/src/RTC001/RTC001.c **** 
 394:../Dave/Generated/src/RTC001/RTC001.c **** 
 395:../Dave/Generated/src/RTC001/RTC001.c **** /*
 396:../Dave/Generated/src/RTC001/RTC001.c ****  *  The function clears RTC status flag for Alarm and Periodic Timer Events.
 397:../Dave/Generated/src/RTC001/RTC001.c ****  */
 398:../Dave/Generated/src/RTC001/RTC001.c **** void  RTC001_ClearFlagStatus(RTC001_FlagType Flag)
 399:../Dave/Generated/src/RTC001/RTC001.c **** {
 494              		.loc 1 399 0
 495              		.cfi_startproc
 496              		@ args = 0, pretend = 0, frame = 8
 497              		@ frame_needed = 1, uses_anonymous_args = 0
 498              		@ link register save eliminated.
 499 0000 80B4     		push	{r7}
 500              	.LCFI16:
 501              		.cfi_def_cfa_offset 4
 502              		.cfi_offset 7, -4
 503 0002 83B0     		sub	sp, sp, #12
 504              	.LCFI17:
 505              		.cfi_def_cfa_offset 16
 506 0004 00AF     		add	r7, sp, #0
 507              	.LCFI18:
 508              		.cfi_def_cfa_register 7
 509 0006 0346     		mov	r3, r0
 510 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 400:../Dave/Generated/src/RTC001/RTC001.c ****   /* <<<DD_RTC001_API_5>>> */
 401:../Dave/Generated/src/RTC001/RTC001.c ****   DBG002_FUNCTION_ENTRY(APP_GID,RTC001_FUNCTION_ENTRY);
 402:../Dave/Generated/src/RTC001/RTC001.c ****   
 403:../Dave/Generated/src/RTC001/RTC001.c ****   /*write to the Clear Service Request Register*/
 404:../Dave/Generated/src/RTC001/RTC001.c ****   RTC->CLRSR |= (uint32_t)Flag;
 511              		.loc 1 404 0
 512 000a 4FF49443 		mov	r3, #18944
 513 000e C5F20003 		movt	r3, 20480
 514 0012 4FF49442 		mov	r2, #18944
 515 0016 C5F20002 		movt	r2, 20480
 516 001a 5169     		ldr	r1, [r2, #20]
 517 001c FA88     		ldrh	r2, [r7, #6]
 518 001e 0A43     		orrs	r2, r2, r1
 519 0020 5A61     		str	r2, [r3, #20]
 405:../Dave/Generated/src/RTC001/RTC001.c **** 
 406:../Dave/Generated/src/RTC001/RTC001.c **** 	DBG002_FUNCTION_EXIT(APP_GID,RTC001_FUNCTION_EXIT);
 407:../Dave/Generated/src/RTC001/RTC001.c **** }
 520              		.loc 1 407 0
 521 0022 07F10C07 		add	r7, r7, #12
 522 0026 BD46     		mov	sp, r7
 523 0028 80BC     		pop	{r7}
 524 002a 7047     		bx	lr
 525              		.cfi_endproc
 526              	.LFE118:
 528              		.section	.text.RTC001_ConfigAlarm,"ax",%progbits
 529              		.align	2
 530              		.global	RTC001_ConfigAlarm
 531              		.thumb
 532              		.thumb_func
 534              	RTC001_ConfigAlarm:
 535              	.LFB119:
 408:../Dave/Generated/src/RTC001/RTC001.c **** 
 409:../Dave/Generated/src/RTC001/RTC001.c **** 
 410:../Dave/Generated/src/RTC001/RTC001.c **** /*
 411:../Dave/Generated/src/RTC001/RTC001.c ****  *  Interface to configure the RTC alarm.
 412:../Dave/Generated/src/RTC001/RTC001.c ****  */
 413:../Dave/Generated/src/RTC001/RTC001.c **** 
 414:../Dave/Generated/src/RTC001/RTC001.c **** status_t RTC001_ConfigAlarm (const RTC001_HandleType* Handle, 
 415:../Dave/Generated/src/RTC001/RTC001.c ****     RTC001_TimeHandle* timeptr, AlarmCallBackPtr CallBack,uint32_t CbArg)
 416:../Dave/Generated/src/RTC001/RTC001.c **** {
 536              		.loc 1 416 0
 537              		.cfi_startproc
 538              		@ args = 0, pretend = 0, frame = 32
 539              		@ frame_needed = 1, uses_anonymous_args = 0
 540 0000 80B5     		push	{r7, lr}
 541              	.LCFI19:
 542              		.cfi_def_cfa_offset 8
 543              		.cfi_offset 7, -8
 544              		.cfi_offset 14, -4
 545 0002 88B0     		sub	sp, sp, #32
 546              	.LCFI20:
 547              		.cfi_def_cfa_offset 40
 548 0004 00AF     		add	r7, sp, #0
 549              	.LCFI21:
 550              		.cfi_def_cfa_register 7
 551 0006 F860     		str	r0, [r7, #12]
 552 0008 B960     		str	r1, [r7, #8]
 553 000a 7A60     		str	r2, [r7, #4]
 554 000c 3B60     		str	r3, [r7, #0]
 417:../Dave/Generated/src/RTC001/RTC001.c ****   uint16_t m1 = 0U,y1 = 0U,d1 = 0U;
 555              		.loc 1 417 0
 556 000e 4FF00003 		mov	r3, #0
 557 0012 7B83     		strh	r3, [r7, #26]	@ movhi
 558 0014 4FF00003 		mov	r3, #0
 559 0018 3B83     		strh	r3, [r7, #24]	@ movhi
 560 001a 4FF00003 		mov	r3, #0
 561 001e FB82     		strh	r3, [r7, #22]	@ movhi
 418:../Dave/Generated/src/RTC001/RTC001.c ****   status_t status = (uint32_t)RTC001_ERROR;
 562              		.loc 1 418 0
 563 0020 4FF00203 		mov	r3, #2
 564 0024 FB61     		str	r3, [r7, #28]
 419:../Dave/Generated/src/RTC001/RTC001.c ****   /* <<<DD_RTC001_API_11>>> */
 420:../Dave/Generated/src/RTC001/RTC001.c ****   DBG002_FUNCTION_ENTRY(APP_GID,RTC001_FUNCTION_ENTRY);
 421:../Dave/Generated/src/RTC001/RTC001.c ****   do
 422:../Dave/Generated/src/RTC001/RTC001.c ****   {
 423:../Dave/Generated/src/RTC001/RTC001.c ****     /* <<<DD_RTC001 _API_4>>> */
 424:../Dave/Generated/src/RTC001/RTC001.c ****     /* Clear Mirror register update status of RTC registers in SCU*/
 425:../Dave/Generated/src/RTC001/RTC001.c ****     SCU_INTERRUPT->SRCLR = (uint32_t)\
 565              		.loc 1 425 0
 566 0026 44F27403 		movw	r3, #16500
 567 002a C5F20003 		movt	r3, 20480
 568 002e 4FF0F852 		mov	r2, #520093696
 569 0032 DA60     		str	r2, [r3, #12]
 426:../Dave/Generated/src/RTC001/RTC001.c ****       (SCU_INTERRUPT_SRCLR_RTC_CTR_Msk | SCU_INTERRUPT_SRCLR_RTC_ATIM0_Msk | \
 427:../Dave/Generated/src/RTC001/RTC001.c ****   		SCU_INTERRUPT_SRCLR_RTC_ATIM1_Msk | SCU_INTERRUPT_SRCLR_RTC_TIM0_Msk |\
 428:../Dave/Generated/src/RTC001/RTC001.c ****   		SCU_INTERRUPT_SRCLR_RTC_TIM1_Msk);  	
 429:../Dave/Generated/src/RTC001/RTC001.c **** 
 430:../Dave/Generated/src/RTC001/RTC001.c ****     /* Register the call back function with NVIC_SCU001 */		
 431:../Dave/Generated/src/RTC001/RTC001.c ****     if(CallBack != NULL)
 570              		.loc 1 431 0
 571 0034 7B68     		ldr	r3, [r7, #4]
 572 0036 002B     		cmp	r3, #0
 573 0038 05D0     		beq	.L23
 432:../Dave/Generated/src/RTC001/RTC001.c ****     {    
 433:../Dave/Generated/src/RTC001/RTC001.c **** 	    
 434:../Dave/Generated/src/RTC001/RTC001.c **** 	    NVIC_SCU001_RegisterCallback(NVIC_SCU001_AI,CallBack,CbArg);
 574              		.loc 1 434 0
 575 003a 4FF00200 		mov	r0, #2
 576 003e 7968     		ldr	r1, [r7, #4]
 577 0040 3A68     		ldr	r2, [r7, #0]
 578 0042 FFF7FEFF 		bl	NVIC_SCU001_RegisterCallback
 579              	.L23:
 435:../Dave/Generated/src/RTC001/RTC001.c **** 	    
 436:../Dave/Generated/src/RTC001/RTC001.c **** 	  } 
 437:../Dave/Generated/src/RTC001/RTC001.c ****     /*   Write values into ATIM0 and ATIM1 registers  */
 438:../Dave/Generated/src/RTC001/RTC001.c ****     m1 = timeptr->Month;
 580              		.loc 1 438 0
 581 0046 BB68     		ldr	r3, [r7, #8]
 582 0048 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 583 004a 7B83     		strh	r3, [r7, #26]	@ movhi
 439:../Dave/Generated/src/RTC001/RTC001.c ****     y1 = timeptr->Year;
 584              		.loc 1 439 0
 585 004c BB68     		ldr	r3, [r7, #8]
 586 004e DB88     		ldrh	r3, [r3, #6]	@ movhi
 587 0050 3B83     		strh	r3, [r7, #24]	@ movhi
 440:../Dave/Generated/src/RTC001/RTC001.c ****     d1 = timeptr->Days;
 588              		.loc 1 440 0
 589 0052 BB68     		ldr	r3, [r7, #8]
 590 0054 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 591 0056 FB82     		strh	r3, [r7, #22]	@ movhi
 441:../Dave/Generated/src/RTC001/RTC001.c ****     /* Check whether the date entered is valid */
 442:../Dave/Generated/src/RTC001/RTC001.c ****     if (RTC001_ldatevalid(m1,d1,y1))
 592              		.loc 1 442 0
 593 0058 798B     		ldrh	r1, [r7, #26]
 594 005a FA8A     		ldrh	r2, [r7, #22]
 595 005c 3B8B     		ldrh	r3, [r7, #24]
 596 005e 0846     		mov	r0, r1
 597 0060 1146     		mov	r1, r2
 598 0062 1A46     		mov	r2, r3
 599 0064 FFF7FEFF 		bl	RTC001_ldatevalid
 600 0068 0346     		mov	r3, r0
 601 006a 002B     		cmp	r3, #0
 602 006c 4BD0     		beq	.L24
 443:../Dave/Generated/src/RTC001/RTC001.c ****     { 
 444:../Dave/Generated/src/RTC001/RTC001.c ****       /*Wait until any transfer over serial interface to ATIM0 is completed*/   
 445:../Dave/Generated/src/RTC001/RTC001.c ****       while((SCU_GENERAL->MIRRSTS & SCU_GENERAL_MIRRSTS_RTC_ATIM0_Msk)!= 0x0U)
 603              		.loc 1 445 0
 604 006e 00BF     		nop
 605              	.L25:
 606              		.loc 1 445 0 is_stmt 0 discriminator 1
 607 0070 4FF48043 		mov	r3, #16384
 608 0074 C5F20003 		movt	r3, 20480
 609 0078 D3F8C430 		ldr	r3, [r3, #196]
 610 007c 03F40073 		and	r3, r3, #512
 611 0080 002B     		cmp	r3, #0
 612 0082 F5D1     		bne	.L25
 446:../Dave/Generated/src/RTC001/RTC001.c ****       {}   
 447:../Dave/Generated/src/RTC001/RTC001.c ****       /*Configure the Alarm Time Register 0 */
 448:../Dave/Generated/src/RTC001/RTC001.c ****       RTC->ATIM0 = (uint32_t)\
 613              		.loc 1 448 0 is_stmt 1
 614 0084 4FF49443 		mov	r3, #18944
 615 0088 C5F20003 		movt	r3, 20480
 449:../Dave/Generated/src/RTC001/RTC001.c ****                (((timeptr->Sec) & (uint32_t)RTC_ATIM0_ASE_Msk) | \
 616              		.loc 1 449 0
 617 008c BA68     		ldr	r2, [r7, #8]
 618 008e 1278     		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 619 0090 02F03F01 		and	r1, r2, #63
 450:../Dave/Generated/src/RTC001/RTC001.c ****               ((((uint32_t)timeptr->Min) << RTC_ATIM0_AMI_Pos) & \
 620              		.loc 1 450 0
 621 0094 BA68     		ldr	r2, [r7, #8]
 622 0096 5278     		ldrb	r2, [r2, #1]	@ zero_extendqisi2
 623 0098 4FEA0222 		lsl	r2, r2, #8
 624 009c 02F47C52 		and	r2, r2, #16128
 449:../Dave/Generated/src/RTC001/RTC001.c ****                (((timeptr->Sec) & (uint32_t)RTC_ATIM0_ASE_Msk) | \
 625              		.loc 1 449 0
 626 00a0 1143     		orrs	r1, r1, r2
 451:../Dave/Generated/src/RTC001/RTC001.c ****                                   (uint32_t)RTC_ATIM0_AMI_Msk) | \
 452:../Dave/Generated/src/RTC001/RTC001.c ****             ((((uint32_t)timeptr->Hours) << RTC_ATIM0_AHO_Pos) & \
 627              		.loc 1 452 0
 628 00a2 BA68     		ldr	r2, [r7, #8]
 629 00a4 9278     		ldrb	r2, [r2, #2]	@ zero_extendqisi2
 630 00a6 4FEA0242 		lsl	r2, r2, #16
 631 00aa 02F4F812 		and	r2, r2, #2031616
 451:../Dave/Generated/src/RTC001/RTC001.c ****                                   (uint32_t)RTC_ATIM0_AMI_Msk) | \
 632              		.loc 1 451 0
 633 00ae 1143     		orrs	r1, r1, r2
 453:../Dave/Generated/src/RTC001/RTC001.c ****                                   (uint32_t)RTC_ATIM0_AHO_Msk) | \
 454:../Dave/Generated/src/RTC001/RTC001.c ****         (((((uint32_t)timeptr->Days)-1U) << RTC_ATIM0_ADA_Pos) & \
 634              		.loc 1 454 0
 635 00b0 BA68     		ldr	r2, [r7, #8]
 636 00b2 D278     		ldrb	r2, [r2, #3]	@ zero_extendqisi2
 637 00b4 02F1FF32 		add	r2, r2, #-1
 638 00b8 4FEA0262 		lsl	r2, r2, #24
 639 00bc 02F0F852 		and	r2, r2, #520093696
 448:../Dave/Generated/src/RTC001/RTC001.c ****       RTC->ATIM0 = (uint32_t)\
 640              		.loc 1 448 0
 641 00c0 0A43     		orrs	r2, r2, r1
 642 00c2 9A61     		str	r2, [r3, #24]
 455:../Dave/Generated/src/RTC001/RTC001.c ****                                   (uint32_t)RTC_ATIM0_ADA_Msk));
 456:../Dave/Generated/src/RTC001/RTC001.c **** 
 457:../Dave/Generated/src/RTC001/RTC001.c ****       /*Wait until any transfer over serial interface to ATIM1 is completed*/        
 458:../Dave/Generated/src/RTC001/RTC001.c ****       while((SCU_GENERAL->MIRRSTS & SCU_GENERAL_MIRRSTS_RTC_ATIM1_Msk)!= 0x0U)
 643              		.loc 1 458 0
 644 00c4 00BF     		nop
 645              	.L26:
 646              		.loc 1 458 0 is_stmt 0 discriminator 1
 647 00c6 4FF48043 		mov	r3, #16384
 648 00ca C5F20003 		movt	r3, 20480
 649 00ce D3F8C430 		ldr	r3, [r3, #196]
 650 00d2 03F48063 		and	r3, r3, #1024
 651 00d6 002B     		cmp	r3, #0
 652 00d8 F5D1     		bne	.L26
 459:../Dave/Generated/src/RTC001/RTC001.c ****       {}   
 460:../Dave/Generated/src/RTC001/RTC001.c ****       /*Configure the Alarm Time Register 1 */
 461:../Dave/Generated/src/RTC001/RTC001.c ****       RTC->ATIM1 = (uint32_t)\
 653              		.loc 1 461 0 is_stmt 1
 654 00da 4FF49443 		mov	r3, #18944
 655 00de C5F20003 		movt	r3, 20480
 462:../Dave/Generated/src/RTC001/RTC001.c ****            ((((((uint32_t)timeptr->Month)-1U) << RTC_ATIM1_AMO_Pos) & \
 656              		.loc 1 462 0
 657 00e2 BA68     		ldr	r2, [r7, #8]
 658 00e4 5279     		ldrb	r2, [r2, #5]	@ zero_extendqisi2
 659 00e6 02F1FF32 		add	r2, r2, #-1
 660 00ea 4FEA0222 		lsl	r2, r2, #8
 661 00ee 02F47061 		and	r1, r2, #3840
 463:../Dave/Generated/src/RTC001/RTC001.c ****                                        (uint32_t)RTC_ATIM1_AMO_Msk) | \
 464:../Dave/Generated/src/RTC001/RTC001.c ****         ((uint32_t)(((uint32_t)timeptr->Year) << RTC_ATIM1_AYE_Pos) & \
 662              		.loc 1 464 0
 663 00f2 BA68     		ldr	r2, [r7, #8]
 664 00f4 D288     		ldrh	r2, [r2, #6]
 665 00f6 4FEA0242 		lsl	r2, r2, #16
 461:../Dave/Generated/src/RTC001/RTC001.c ****       RTC->ATIM1 = (uint32_t)\
 666              		.loc 1 461 0
 667 00fa 0A43     		orrs	r2, r2, r1
 668 00fc DA61     		str	r2, [r3, #28]
 465:../Dave/Generated/src/RTC001/RTC001.c ****                                        (uint32_t)RTC_ATIM1_AYE_Msk)); 				       
 466:../Dave/Generated/src/RTC001/RTC001.c ****       status = (uint32_t)DAVEApp_SUCCESS;   
 669              		.loc 1 466 0
 670 00fe 4FF00003 		mov	r3, #0
 671 0102 FB61     		str	r3, [r7, #28]
 672 0104 02E0     		b	.L27
 673              	.L24:
 467:../Dave/Generated/src/RTC001/RTC001.c ****     }  
 468:../Dave/Generated/src/RTC001/RTC001.c ****     else /*date is not valid*/
 469:../Dave/Generated/src/RTC001/RTC001.c ****     {
 470:../Dave/Generated/src/RTC001/RTC001.c ****       status = (uint32_t)RTC001_INVALID_HANDLE;
 674              		.loc 1 470 0
 675 0106 4FF00103 		mov	r3, #1
 676 010a FB61     		str	r3, [r7, #28]
 677              	.L27:
 471:../Dave/Generated/src/RTC001/RTC001.c ****       DBG002_ERROR(APP_GID,status, 0, NULL);
 472:../Dave/Generated/src/RTC001/RTC001.c ****     }
 473:../Dave/Generated/src/RTC001/RTC001.c ****  
 474:../Dave/Generated/src/RTC001/RTC001.c ****   }while(0);
 475:../Dave/Generated/src/RTC001/RTC001.c ****   DBG002_FUNCTION_EXIT(APP_GID,RTC001_FUNCTION_EXIT);
 476:../Dave/Generated/src/RTC001/RTC001.c ****   return status;
 678              		.loc 1 476 0
 679 010c FB69     		ldr	r3, [r7, #28]
 477:../Dave/Generated/src/RTC001/RTC001.c **** }
 680              		.loc 1 477 0
 681 010e 1846     		mov	r0, r3
 682 0110 07F12007 		add	r7, r7, #32
 683 0114 BD46     		mov	sp, r7
 684 0116 80BD     		pop	{r7, pc}
 685              		.cfi_endproc
 686              	.LFE119:
 688              		.section	.text.RTC001_Clock_GetTime,"ax",%progbits
 689              		.align	2
 690              		.global	RTC001_Clock_GetTime
 691              		.thumb
 692              		.thumb_func
 694              	RTC001_Clock_GetTime:
 695              	.LFB120:
 478:../Dave/Generated/src/RTC001/RTC001.c **** 	
 479:../Dave/Generated/src/RTC001/RTC001.c **** 
 480:../Dave/Generated/src/RTC001/RTC001.c **** /*
 481:../Dave/Generated/src/RTC001/RTC001.c ****  *  Function to read the current RTC time
 482:../Dave/Generated/src/RTC001/RTC001.c ****  */
 483:../Dave/Generated/src/RTC001/RTC001.c ****  
 484:../Dave/Generated/src/RTC001/RTC001.c **** status_t RTC001_Clock_GetTime (RTC001_TimeHandle* timeptr)
 485:../Dave/Generated/src/RTC001/RTC001.c **** {
 696              		.loc 1 485 0
 697              		.cfi_startproc
 698              		@ args = 0, pretend = 0, frame = 24
 699              		@ frame_needed = 1, uses_anonymous_args = 0
 700              		@ link register save eliminated.
 701 0000 80B4     		push	{r7}
 702              	.LCFI22:
 703              		.cfi_def_cfa_offset 4
 704              		.cfi_offset 7, -4
 705 0002 87B0     		sub	sp, sp, #28
 706              	.LCFI23:
 707              		.cfi_def_cfa_offset 32
 708 0004 00AF     		add	r7, sp, #0
 709              	.LCFI24:
 710              		.cfi_def_cfa_register 7
 711 0006 7860     		str	r0, [r7, #4]
 486:../Dave/Generated/src/RTC001/RTC001.c ****   status_t status = (uint32_t)RTC001_ERROR;
 712              		.loc 1 486 0
 713 0008 4FF00203 		mov	r3, #2
 714 000c 7B61     		str	r3, [r7, #20]
 487:../Dave/Generated/src/RTC001/RTC001.c ****   uint32_t temp0,temp1;
 488:../Dave/Generated/src/RTC001/RTC001.c ****   temp0 = RTC->TIM0;
 715              		.loc 1 488 0
 716 000e 4FF49443 		mov	r3, #18944
 717 0012 C5F20003 		movt	r3, 20480
 718 0016 1B6A     		ldr	r3, [r3, #32]
 719 0018 3B61     		str	r3, [r7, #16]
 489:../Dave/Generated/src/RTC001/RTC001.c ****   temp1 = RTC->TIM1;
 720              		.loc 1 489 0
 721 001a 4FF49443 		mov	r3, #18944
 722 001e C5F20003 		movt	r3, 20480
 723 0022 5B6A     		ldr	r3, [r3, #36]
 724 0024 FB60     		str	r3, [r7, #12]
 490:../Dave/Generated/src/RTC001/RTC001.c ****   DBG002_FUNCTION_ENTRY(APP_GID,RTC001_FUNCTION_ENTRY);
 491:../Dave/Generated/src/RTC001/RTC001.c ****    /* <<<DD_RTC001_API_12>>> */
 492:../Dave/Generated/src/RTC001/RTC001.c **** 
 493:../Dave/Generated/src/RTC001/RTC001.c ****   /*   Read values from TIM0 and TIM1 registers  */
 494:../Dave/Generated/src/RTC001/RTC001.c ****   /*   Days of Week value  */
 495:../Dave/Generated/src/RTC001/RTC001.c **** 	timeptr->DaWe = (uint8_t)(temp1 & RTC_TIM1_DAWE_Msk);
 725              		.loc 1 495 0
 726 0026 FB68     		ldr	r3, [r7, #12]
 727 0028 DBB2     		uxtb	r3, r3
 728 002a 03F00703 		and	r3, r3, #7
 729 002e DAB2     		uxtb	r2, r3
 730 0030 7B68     		ldr	r3, [r7, #4]
 731 0032 1A71     		strb	r2, [r3, #4]
 496:../Dave/Generated/src/RTC001/RTC001.c ****   /*   Month value  */
 497:../Dave/Generated/src/RTC001/RTC001.c **** 	timeptr->Month = \
 498:../Dave/Generated/src/RTC001/RTC001.c ****           (uint8_t)(((temp1 & RTC_TIM1_MO_Msk) >> RTC_TIM1_MO_Pos) + 1U);
 732              		.loc 1 498 0
 733 0034 FB68     		ldr	r3, [r7, #12]
 734 0036 03F47063 		and	r3, r3, #3840
 735 003a 4FEA1323 		lsr	r3, r3, #8
 736 003e DBB2     		uxtb	r3, r3
 737 0040 03F10103 		add	r3, r3, #1
 738 0044 DAB2     		uxtb	r2, r3
 497:../Dave/Generated/src/RTC001/RTC001.c **** 	timeptr->Month = \
 739              		.loc 1 497 0
 740 0046 7B68     		ldr	r3, [r7, #4]
 741 0048 5A71     		strb	r2, [r3, #5]
 499:../Dave/Generated/src/RTC001/RTC001.c ****   /*   Year value  */
 500:../Dave/Generated/src/RTC001/RTC001.c **** 	timeptr->Year = (uint16_t)((temp1 & RTC_TIM1_YE_Msk) >> RTC_TIM1_YE_Pos);
 742              		.loc 1 500 0
 743 004a FB68     		ldr	r3, [r7, #12]
 744 004c 4FEA1343 		lsr	r3, r3, #16
 745 0050 9AB2     		uxth	r2, r3
 746 0052 7B68     		ldr	r3, [r7, #4]
 747 0054 DA80     		strh	r2, [r3, #6]	@ movhi
 501:../Dave/Generated/src/RTC001/RTC001.c **** 
 502:../Dave/Generated/src/RTC001/RTC001.c ****   /*   Seconds value  */
 503:../Dave/Generated/src/RTC001/RTC001.c **** 	timeptr->Sec =  (uint8_t)((temp0 & RTC_TIM0_SE_Msk));
 748              		.loc 1 503 0
 749 0056 3B69     		ldr	r3, [r7, #16]
 750 0058 DBB2     		uxtb	r3, r3
 751 005a 03F03F03 		and	r3, r3, #63
 752 005e DAB2     		uxtb	r2, r3
 753 0060 7B68     		ldr	r3, [r7, #4]
 754 0062 1A70     		strb	r2, [r3, #0]
 504:../Dave/Generated/src/RTC001/RTC001.c ****   /*   Minutes value  */
 505:../Dave/Generated/src/RTC001/RTC001.c **** 	timeptr->Min = (uint8_t)(((temp0 & RTC_TIM0_MI_Msk) >> RTC_TIM0_MI_Pos));
 755              		.loc 1 505 0
 756 0064 3B69     		ldr	r3, [r7, #16]
 757 0066 03F47C53 		and	r3, r3, #16128
 758 006a 4FEA1323 		lsr	r3, r3, #8
 759 006e DAB2     		uxtb	r2, r3
 760 0070 7B68     		ldr	r3, [r7, #4]
 761 0072 5A70     		strb	r2, [r3, #1]
 506:../Dave/Generated/src/RTC001/RTC001.c ****   /*   Hours value  */
 507:../Dave/Generated/src/RTC001/RTC001.c **** 	timeptr->Hours = (uint8_t)(((temp0 & RTC_TIM0_HO_Msk) >> RTC_TIM0_HO_Pos));
 762              		.loc 1 507 0
 763 0074 3B69     		ldr	r3, [r7, #16]
 764 0076 03F4F813 		and	r3, r3, #2031616
 765 007a 4FEA1343 		lsr	r3, r3, #16
 766 007e DAB2     		uxtb	r2, r3
 767 0080 7B68     		ldr	r3, [r7, #4]
 768 0082 9A70     		strb	r2, [r3, #2]
 508:../Dave/Generated/src/RTC001/RTC001.c ****   /*   Days value starting from the 1st day of the month */
 509:../Dave/Generated/src/RTC001/RTC001.c **** 	timeptr->Days = \
 510:../Dave/Generated/src/RTC001/RTC001.c ****           (uint8_t)(((temp0 & RTC_TIM0_DA_Msk) >> RTC_TIM0_DA_Pos) + 1U);
 769              		.loc 1 510 0
 770 0084 3B69     		ldr	r3, [r7, #16]
 771 0086 03F0F853 		and	r3, r3, #520093696
 772 008a 4FEA1363 		lsr	r3, r3, #24
 773 008e DBB2     		uxtb	r3, r3
 774 0090 03F10103 		add	r3, r3, #1
 775 0094 DAB2     		uxtb	r2, r3
 509:../Dave/Generated/src/RTC001/RTC001.c **** 	timeptr->Days = \
 776              		.loc 1 509 0
 777 0096 7B68     		ldr	r3, [r7, #4]
 778 0098 DA70     		strb	r2, [r3, #3]
 511:../Dave/Generated/src/RTC001/RTC001.c **** 	status = (uint32_t)DAVEApp_SUCCESS;
 779              		.loc 1 511 0
 780 009a 4FF00003 		mov	r3, #0
 781 009e 7B61     		str	r3, [r7, #20]
 512:../Dave/Generated/src/RTC001/RTC001.c ****   DBG002_FUNCTION_EXIT(APP_GID,RTC001_FUNCTION_EXIT);
 513:../Dave/Generated/src/RTC001/RTC001.c ****   return status;
 782              		.loc 1 513 0
 783 00a0 7B69     		ldr	r3, [r7, #20]
 514:../Dave/Generated/src/RTC001/RTC001.c **** }
 784              		.loc 1 514 0
 785 00a2 1846     		mov	r0, r3
 786 00a4 07F11C07 		add	r7, r7, #28
 787 00a8 BD46     		mov	sp, r7
 788 00aa 80BC     		pop	{r7}
 789 00ac 7047     		bx	lr
 790              		.cfi_endproc
 791              	.LFE120:
 793 00ae 00BF     		.section	.text.RTC001_Clock_SetTime,"ax",%progbits
 794              		.align	2
 795              		.global	RTC001_Clock_SetTime
 796              		.thumb
 797              		.thumb_func
 799              	RTC001_Clock_SetTime:
 800              	.LFB121:
 515:../Dave/Generated/src/RTC001/RTC001.c **** 
 516:../Dave/Generated/src/RTC001/RTC001.c **** 
 517:../Dave/Generated/src/RTC001/RTC001.c **** /*
 518:../Dave/Generated/src/RTC001/RTC001.c ****  *  This function is to set the time.
 519:../Dave/Generated/src/RTC001/RTC001.c ****  */
 520:../Dave/Generated/src/RTC001/RTC001.c **** status_t RTC001_Clock_SetTime(RTC001_TimeHandle* timeptr)
 521:../Dave/Generated/src/RTC001/RTC001.c **** {
 801              		.loc 1 521 0
 802              		.cfi_startproc
 803              		@ args = 0, pretend = 0, frame = 24
 804              		@ frame_needed = 1, uses_anonymous_args = 0
 805 0000 80B5     		push	{r7, lr}
 806              	.LCFI25:
 807              		.cfi_def_cfa_offset 8
 808              		.cfi_offset 7, -8
 809              		.cfi_offset 14, -4
 810 0002 86B0     		sub	sp, sp, #24
 811              	.LCFI26:
 812              		.cfi_def_cfa_offset 32
 813 0004 00AF     		add	r7, sp, #0
 814              	.LCFI27:
 815              		.cfi_def_cfa_register 7
 816 0006 7860     		str	r0, [r7, #4]
 522:../Dave/Generated/src/RTC001/RTC001.c ****   uint16_t m1 = 0U,y1 = 0U,d1 = 0U;
 817              		.loc 1 522 0
 818 0008 4FF00003 		mov	r3, #0
 819 000c FB81     		strh	r3, [r7, #14]	@ movhi
 820 000e 4FF00003 		mov	r3, #0
 821 0012 BB81     		strh	r3, [r7, #12]	@ movhi
 822 0014 4FF00003 		mov	r3, #0
 823 0018 7B81     		strh	r3, [r7, #10]	@ movhi
 523:../Dave/Generated/src/RTC001/RTC001.c ****   uint32_t weekDay = 0U;
 824              		.loc 1 523 0
 825 001a 4FF00003 		mov	r3, #0
 826 001e 7B61     		str	r3, [r7, #20]
 524:../Dave/Generated/src/RTC001/RTC001.c ****   status_t status = (uint32_t)RTC001_ERROR;
 827              		.loc 1 524 0
 828 0020 4FF00203 		mov	r3, #2
 829 0024 3B61     		str	r3, [r7, #16]
 525:../Dave/Generated/src/RTC001/RTC001.c ****   
 526:../Dave/Generated/src/RTC001/RTC001.c ****   DBG002_FUNCTION_ENTRY(APP_GID,RTC001_FUNCTION_ENTRY);
 527:../Dave/Generated/src/RTC001/RTC001.c ****    /* <<<DD_RTC001_API_13>>> */
 528:../Dave/Generated/src/RTC001/RTC001.c ****   
 529:../Dave/Generated/src/RTC001/RTC001.c **** 
 530:../Dave/Generated/src/RTC001/RTC001.c **** 
 531:../Dave/Generated/src/RTC001/RTC001.c ****   /* Clear Mirror register update status of RTC registers in SCU*/
 532:../Dave/Generated/src/RTC001/RTC001.c ****   SCU_INTERRUPT->SRCLR = \
 830              		.loc 1 532 0
 831 0026 44F27403 		movw	r3, #16500
 832 002a C5F20003 		movt	r3, 20480
 833 002e 4FF0F852 		mov	r2, #520093696
 834 0032 DA60     		str	r2, [r3, #12]
 533:../Dave/Generated/src/RTC001/RTC001.c ****       (SCU_INTERRUPT_SRCLR_RTC_CTR_Msk | SCU_INTERRUPT_SRCLR_RTC_ATIM0_Msk | \
 534:../Dave/Generated/src/RTC001/RTC001.c ****   		SCU_INTERRUPT_SRCLR_RTC_ATIM1_Msk | SCU_INTERRUPT_SRCLR_RTC_TIM0_Msk |\
 535:../Dave/Generated/src/RTC001/RTC001.c ****   		SCU_INTERRUPT_SRCLR_RTC_TIM1_Msk);
 536:../Dave/Generated/src/RTC001/RTC001.c ****  
 537:../Dave/Generated/src/RTC001/RTC001.c ****   /*   Days of Week value  */
 538:../Dave/Generated/src/RTC001/RTC001.c ****   m1 = timeptr->Month;
 835              		.loc 1 538 0
 836 0034 7B68     		ldr	r3, [r7, #4]
 837 0036 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 838 0038 FB81     		strh	r3, [r7, #14]	@ movhi
 539:../Dave/Generated/src/RTC001/RTC001.c ****   y1 = timeptr->Year;
 839              		.loc 1 539 0
 840 003a 7B68     		ldr	r3, [r7, #4]
 841 003c DB88     		ldrh	r3, [r3, #6]	@ movhi
 842 003e BB81     		strh	r3, [r7, #12]	@ movhi
 540:../Dave/Generated/src/RTC001/RTC001.c ****   d1 = timeptr->Days;
 843              		.loc 1 540 0
 844 0040 7B68     		ldr	r3, [r7, #4]
 845 0042 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 846 0044 7B81     		strh	r3, [r7, #10]	@ movhi
 541:../Dave/Generated/src/RTC001/RTC001.c ****   
 542:../Dave/Generated/src/RTC001/RTC001.c ****   do
 543:../Dave/Generated/src/RTC001/RTC001.c ****   {    
 544:../Dave/Generated/src/RTC001/RTC001.c ****     if (RTC001_ldatevalid(m1,d1,y1))
 847              		.loc 1 544 0
 848 0046 F989     		ldrh	r1, [r7, #14]
 849 0048 7A89     		ldrh	r2, [r7, #10]
 850 004a BB89     		ldrh	r3, [r7, #12]
 851 004c 0846     		mov	r0, r1
 852 004e 1146     		mov	r1, r2
 853 0050 1A46     		mov	r2, r3
 854 0052 FFF7FEFF 		bl	RTC001_ldatevalid
 855 0056 0346     		mov	r3, r0
 856 0058 002B     		cmp	r3, #0
 857 005a 68D0     		beq	.L32
 545:../Dave/Generated/src/RTC001/RTC001.c ****     { 
 546:../Dave/Generated/src/RTC001/RTC001.c ****       weekDay = ((uint32_t)(RTC001_lweekday(m1,d1,y1)));
 858              		.loc 1 546 0
 859 005c F989     		ldrh	r1, [r7, #14]
 860 005e 7A89     		ldrh	r2, [r7, #10]
 861 0060 BB89     		ldrh	r3, [r7, #12]
 862 0062 0846     		mov	r0, r1
 863 0064 1146     		mov	r1, r2
 864 0066 1A46     		mov	r2, r3
 865 0068 FFF7FEFF 		bl	RTC001_lweekday
 866 006c 7861     		str	r0, [r7, #20]
 547:../Dave/Generated/src/RTC001/RTC001.c ****       if(weekDay < 6U)
 867              		.loc 1 547 0
 868 006e 7B69     		ldr	r3, [r7, #20]
 869 0070 052B     		cmp	r3, #5
 870 0072 04D8     		bhi	.L33
 548:../Dave/Generated/src/RTC001/RTC001.c ****       {
 549:../Dave/Generated/src/RTC001/RTC001.c ****         weekDay += 1U;
 871              		.loc 1 549 0
 872 0074 7B69     		ldr	r3, [r7, #20]
 873 0076 03F10103 		add	r3, r3, #1
 874 007a 7B61     		str	r3, [r7, #20]
 550:../Dave/Generated/src/RTC001/RTC001.c ****       }
 551:../Dave/Generated/src/RTC001/RTC001.c ****       else if(weekDay == 6U)
 552:../Dave/Generated/src/RTC001/RTC001.c ****       {
 553:../Dave/Generated/src/RTC001/RTC001.c ****         weekDay = 0U;
 554:../Dave/Generated/src/RTC001/RTC001.c ****       }
 555:../Dave/Generated/src/RTC001/RTC001.c ****       else
 556:../Dave/Generated/src/RTC001/RTC001.c ****       {
 557:../Dave/Generated/src/RTC001/RTC001.c ****         status = (uint32_t)RTC001_INVALID_HANDLE;
 558:../Dave/Generated/src/RTC001/RTC001.c ****         DBG002_ERROR(APP_GID,RTC001_INVALID_HANDLE, 0, NULL);
 559:../Dave/Generated/src/RTC001/RTC001.c ****         break;
 560:../Dave/Generated/src/RTC001/RTC001.c ****       }
 561:../Dave/Generated/src/RTC001/RTC001.c ****       /*Write values into TIM0 and TIM1 registers  */
 562:../Dave/Generated/src/RTC001/RTC001.c ****       /*wait until any serial transaction is completed*/      
 563:../Dave/Generated/src/RTC001/RTC001.c ****       while((SCU_GENERAL->MIRRSTS & SCU_GENERAL_MIRRSTS_RTC_TIM0_Msk)!= 0x0U)
 875              		.loc 1 563 0
 876 007c 0AE0     		b	.L37
 877              	.L33:
 551:../Dave/Generated/src/RTC001/RTC001.c ****       else if(weekDay == 6U)
 878              		.loc 1 551 0
 879 007e 7B69     		ldr	r3, [r7, #20]
 880 0080 062B     		cmp	r3, #6
 881 0082 03D1     		bne	.L35
 553:../Dave/Generated/src/RTC001/RTC001.c ****         weekDay = 0U;
 882              		.loc 1 553 0
 883 0084 4FF00003 		mov	r3, #0
 884 0088 7B61     		str	r3, [r7, #20]
 885              		.loc 1 563 0
 886 008a 03E0     		b	.L37
 887              	.L35:
 557:../Dave/Generated/src/RTC001/RTC001.c ****         status = (uint32_t)RTC001_INVALID_HANDLE;
 888              		.loc 1 557 0
 889 008c 4FF00103 		mov	r3, #1
 890 0090 3B61     		str	r3, [r7, #16]
 559:../Dave/Generated/src/RTC001/RTC001.c ****         break;
 891              		.loc 1 559 0
 892 0092 4FE0     		b	.L36
 893              	.L37:
 894              		.loc 1 563 0 discriminator 1
 895 0094 4FF48043 		mov	r3, #16384
 896 0098 C5F20003 		movt	r3, 20480
 897 009c D3F8C430 		ldr	r3, [r3, #196]
 898 00a0 03F40063 		and	r3, r3, #2048
 899 00a4 002B     		cmp	r3, #0
 900 00a6 F5D1     		bne	.L37
 564:../Dave/Generated/src/RTC001/RTC001.c ****       {}
 565:../Dave/Generated/src/RTC001/RTC001.c ****       /*Configure RTC Time register 0*/
 566:../Dave/Generated/src/RTC001/RTC001.c ****       RTC->TIM0 = (uint32_t)\
 901              		.loc 1 566 0
 902 00a8 4FF49443 		mov	r3, #18944
 903 00ac C5F20003 		movt	r3, 20480
 567:../Dave/Generated/src/RTC001/RTC001.c ****                (((timeptr->Sec) & (uint32_t)RTC_TIM0_SE_Msk) | \
 904              		.loc 1 567 0
 905 00b0 7A68     		ldr	r2, [r7, #4]
 906 00b2 1278     		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 907 00b4 02F03F01 		and	r1, r2, #63
 568:../Dave/Generated/src/RTC001/RTC001.c ****               ((((uint32_t)timeptr->Min) << RTC_TIM0_MI_Pos) & \
 908              		.loc 1 568 0
 909 00b8 7A68     		ldr	r2, [r7, #4]
 910 00ba 5278     		ldrb	r2, [r2, #1]	@ zero_extendqisi2
 911 00bc 4FEA0222 		lsl	r2, r2, #8
 912 00c0 02F47C52 		and	r2, r2, #16128
 567:../Dave/Generated/src/RTC001/RTC001.c ****                (((timeptr->Sec) & (uint32_t)RTC_TIM0_SE_Msk) | \
 913              		.loc 1 567 0
 914 00c4 1143     		orrs	r1, r1, r2
 569:../Dave/Generated/src/RTC001/RTC001.c ****                                   (uint32_t)RTC_TIM0_MI_Msk) | \
 570:../Dave/Generated/src/RTC001/RTC001.c ****             ((((uint32_t)timeptr->Hours) << RTC_TIM0_HO_Pos) & \
 915              		.loc 1 570 0
 916 00c6 7A68     		ldr	r2, [r7, #4]
 917 00c8 9278     		ldrb	r2, [r2, #2]	@ zero_extendqisi2
 918 00ca 4FEA0242 		lsl	r2, r2, #16
 919 00ce 02F4F812 		and	r2, r2, #2031616
 569:../Dave/Generated/src/RTC001/RTC001.c ****                                   (uint32_t)RTC_TIM0_MI_Msk) | \
 920              		.loc 1 569 0
 921 00d2 1143     		orrs	r1, r1, r2
 571:../Dave/Generated/src/RTC001/RTC001.c ****                                   (uint32_t)RTC_TIM0_HO_Msk) | \
 572:../Dave/Generated/src/RTC001/RTC001.c ****       ((((((uint32_t)timeptr->Days)-1U)) << RTC_TIM0_DA_Pos) & \
 922              		.loc 1 572 0
 923 00d4 7A68     		ldr	r2, [r7, #4]
 924 00d6 D278     		ldrb	r2, [r2, #3]	@ zero_extendqisi2
 925 00d8 02F1FF32 		add	r2, r2, #-1
 926 00dc 4FEA0262 		lsl	r2, r2, #24
 927 00e0 02F0F852 		and	r2, r2, #520093696
 566:../Dave/Generated/src/RTC001/RTC001.c ****       RTC->TIM0 = (uint32_t)\
 928              		.loc 1 566 0
 929 00e4 0A43     		orrs	r2, r2, r1
 930 00e6 1A62     		str	r2, [r3, #32]
 573:../Dave/Generated/src/RTC001/RTC001.c ****                                   (uint32_t)RTC_TIM0_DA_Msk));      
 574:../Dave/Generated/src/RTC001/RTC001.c ****       /*wait until any serial transaction is completed*/
 575:../Dave/Generated/src/RTC001/RTC001.c ****       while((SCU_GENERAL->MIRRSTS & SCU_GENERAL_MIRRSTS_RTC_TIM1_Msk)!= 0x0U)
 931              		.loc 1 575 0
 932 00e8 00BF     		nop
 933              	.L38:
 934              		.loc 1 575 0 is_stmt 0 discriminator 1
 935 00ea 4FF48043 		mov	r3, #16384
 936 00ee C5F20003 		movt	r3, 20480
 937 00f2 D3F8C430 		ldr	r3, [r3, #196]
 938 00f6 03F48053 		and	r3, r3, #4096
 939 00fa 002B     		cmp	r3, #0
 940 00fc F5D1     		bne	.L38
 576:../Dave/Generated/src/RTC001/RTC001.c ****       {}     
 577:../Dave/Generated/src/RTC001/RTC001.c ****       /*Configure RTC Time register 1*/
 578:../Dave/Generated/src/RTC001/RTC001.c ****       RTC->TIM1 = (uint32_t) (weekDay |\
 941              		.loc 1 578 0 is_stmt 1
 942 00fe 4FF49443 		mov	r3, #18944
 943 0102 C5F20003 		movt	r3, 20480
 579:../Dave/Generated/src/RTC001/RTC001.c ****                    (((((uint32_t)timeptr->Month)-1U) << RTC_TIM1_MO_Pos) & \
 944              		.loc 1 579 0
 945 0106 7A68     		ldr	r2, [r7, #4]
 946 0108 5279     		ldrb	r2, [r2, #5]	@ zero_extendqisi2
 947 010a 02F1FF32 		add	r2, r2, #-1
 948 010e 4FEA0222 		lsl	r2, r2, #8
 949 0112 02F47061 		and	r1, r2, #3840
 578:../Dave/Generated/src/RTC001/RTC001.c ****       RTC->TIM1 = (uint32_t) (weekDay |\
 950              		.loc 1 578 0
 951 0116 7A69     		ldr	r2, [r7, #20]
 952 0118 1143     		orrs	r1, r1, r2
 580:../Dave/Generated/src/RTC001/RTC001.c ****                                               (uint32_t)RTC_TIM1_MO_Msk) | \
 581:../Dave/Generated/src/RTC001/RTC001.c ****                          ((((uint32_t)timeptr->Year) << RTC_TIM1_YE_Pos) & \
 953              		.loc 1 581 0
 954 011a 7A68     		ldr	r2, [r7, #4]
 955 011c D288     		ldrh	r2, [r2, #6]
 956 011e 4FEA0242 		lsl	r2, r2, #16
 578:../Dave/Generated/src/RTC001/RTC001.c ****       RTC->TIM1 = (uint32_t) (weekDay |\
 957              		.loc 1 578 0
 958 0122 0A43     		orrs	r2, r2, r1
 959 0124 5A62     		str	r2, [r3, #36]
 582:../Dave/Generated/src/RTC001/RTC001.c ****                                               (uint32_t)RTC_TIM1_YE_Msk));      
 583:../Dave/Generated/src/RTC001/RTC001.c ****       status = (uint32_t) DAVEApp_SUCCESS;
 960              		.loc 1 583 0
 961 0126 4FF00003 		mov	r3, #0
 962 012a 3B61     		str	r3, [r7, #16]
 963 012c 02E0     		b	.L36
 964              	.L32:
 584:../Dave/Generated/src/RTC001/RTC001.c ****     }  
 585:../Dave/Generated/src/RTC001/RTC001.c ****     else
 586:../Dave/Generated/src/RTC001/RTC001.c ****     {
 587:../Dave/Generated/src/RTC001/RTC001.c ****       status = (uint32_t) RTC001_INVALID_HANDLE;
 965              		.loc 1 587 0
 966 012e 4FF00103 		mov	r3, #1
 967 0132 3B61     		str	r3, [r7, #16]
 968              	.L36:
 588:../Dave/Generated/src/RTC001/RTC001.c ****       DBG002_ERROR(APP_GID,status, 0, NULL);
 589:../Dave/Generated/src/RTC001/RTC001.c ****     }
 590:../Dave/Generated/src/RTC001/RTC001.c ****   }while(0);
 591:../Dave/Generated/src/RTC001/RTC001.c **** 
 592:../Dave/Generated/src/RTC001/RTC001.c ****   DBG002_FUNCTION_EXIT(APP_GID,RTC001_FUNCTION_EXIT);
 593:../Dave/Generated/src/RTC001/RTC001.c ****   return status;
 969              		.loc 1 593 0
 970 0134 3B69     		ldr	r3, [r7, #16]
 594:../Dave/Generated/src/RTC001/RTC001.c **** }
 971              		.loc 1 594 0
 972 0136 1846     		mov	r0, r3
 973 0138 07F11807 		add	r7, r7, #24
 974 013c BD46     		mov	sp, r7
 975 013e 80BD     		pop	{r7, pc}
 976              		.cfi_endproc
 977              	.LFE121:
 979              		.section	.text.RTC001_Time,"ax",%progbits
 980              		.align	2
 981              		.global	RTC001_Time
 982              		.thumb
 983              		.thumb_func
 985              	RTC001_Time:
 986              	.LFB122:
 595:../Dave/Generated/src/RTC001/RTC001.c **** 
 596:../Dave/Generated/src/RTC001/RTC001.c **** 
 597:../Dave/Generated/src/RTC001/RTC001.c **** /*
 598:../Dave/Generated/src/RTC001/RTC001.c ****  *  This function is to get the time in seconds calculated from Epoch time (01/01/1970).
 599:../Dave/Generated/src/RTC001/RTC001.c ****  */
 600:../Dave/Generated/src/RTC001/RTC001.c **** 
 601:../Dave/Generated/src/RTC001/RTC001.c **** status_t RTC001_Time(time_t* time_value)
 602:../Dave/Generated/src/RTC001/RTC001.c **** {
 987              		.loc 1 602 0
 988              		.cfi_startproc
 989              		@ args = 0, pretend = 0, frame = 56
 990              		@ frame_needed = 1, uses_anonymous_args = 0
 991              		@ link register save eliminated.
 992 0000 80B4     		push	{r7}
 993              	.LCFI28:
 994              		.cfi_def_cfa_offset 4
 995              		.cfi_offset 7, -4
 996 0002 8FB0     		sub	sp, sp, #60
 997              	.LCFI29:
 998              		.cfi_def_cfa_offset 64
 999 0004 00AF     		add	r7, sp, #0
 1000              	.LCFI30:
 1001              		.cfi_def_cfa_register 7
 1002 0006 7860     		str	r0, [r7, #4]
 603:../Dave/Generated/src/RTC001/RTC001.c **** 
 604:../Dave/Generated/src/RTC001/RTC001.c ****   uint32_t CurrentYear = 0U, ElapsedYear = 0U;
 1003              		.loc 1 604 0
 1004 0008 4FF00003 		mov	r3, #0
 1005 000c 7B62     		str	r3, [r7, #36]
 1006 000e 4FF00003 		mov	r3, #0
 1007 0012 7B63     		str	r3, [r7, #52]
 605:../Dave/Generated/src/RTC001/RTC001.c ****   uint32_t CurrentMonth = 0U, ElapsedMonth = 0U;
 1008              		.loc 1 605 0
 1009 0014 4FF00003 		mov	r3, #0
 1010 0018 3B62     		str	r3, [r7, #32]
 1011 001a 4FF00003 		mov	r3, #0
 1012 001e 3B63     		str	r3, [r7, #48]
 606:../Dave/Generated/src/RTC001/RTC001.c ****   uint32_t CurrentDay = 0U, ElapsedDays = 0U;
 1013              		.loc 1 606 0
 1014 0020 4FF00003 		mov	r3, #0
 1015 0024 FB61     		str	r3, [r7, #28]
 1016 0026 4FF00003 		mov	r3, #0
 1017 002a FB62     		str	r3, [r7, #44]
 607:../Dave/Generated/src/RTC001/RTC001.c ****   uint32_t CurrentHour = 0U;
 1018              		.loc 1 607 0
 1019 002c 4FF00003 		mov	r3, #0
 1020 0030 BB61     		str	r3, [r7, #24]
 608:../Dave/Generated/src/RTC001/RTC001.c ****   uint32_t CurrentMin = 0U;
 1021              		.loc 1 608 0
 1022 0032 4FF00003 		mov	r3, #0
 1023 0036 7B61     		str	r3, [r7, #20]
 609:../Dave/Generated/src/RTC001/RTC001.c ****   uint32_t CurrentSec = 0U;
 1024              		.loc 1 609 0
 1025 0038 4FF00003 		mov	r3, #0
 1026 003c 3B61     		str	r3, [r7, #16]
 610:../Dave/Generated/src/RTC001/RTC001.c ****   uint32_t ElapsedSeconds = 0U;
 1027              		.loc 1 610 0
 1028 003e 4FF00003 		mov	r3, #0
 1029 0042 FB60     		str	r3, [r7, #12]
 611:../Dave/Generated/src/RTC001/RTC001.c ****   status_t Status = (uint32_t)RTC001_ERROR; 
 1030              		.loc 1 611 0
 1031 0044 4FF00203 		mov	r3, #2
 1032 0048 BB62     		str	r3, [r7, #40]
 612:../Dave/Generated/src/RTC001/RTC001.c ****   
 613:../Dave/Generated/src/RTC001/RTC001.c ****   DBG002_FUNCTION_ENTRY(APP_GID,RTC001_FUNCTION_ENTRY);
 614:../Dave/Generated/src/RTC001/RTC001.c ****    /* <<<DD_RTC001_API_15>>> */
 615:../Dave/Generated/src/RTC001/RTC001.c ****   
 616:../Dave/Generated/src/RTC001/RTC001.c ****   /*check if RTC module is enabled and no NULL pointer*/
 617:../Dave/Generated/src/RTC001/RTC001.c ****   if(((RTC->CTR & (RTC_CTR_ENB_Msk)) != 0U) && (time_value != NULL))
 1033              		.loc 1 617 0
 1034 004a 4FF49443 		mov	r3, #18944
 1035 004e C5F20003 		movt	r3, 20480
 1036 0052 5B68     		ldr	r3, [r3, #4]
 1037 0054 03F00103 		and	r3, r3, #1
 1038 0058 002B     		cmp	r3, #0
 1039 005a 00F0ED80 		beq	.L41
 1040              		.loc 1 617 0 is_stmt 0 discriminator 1
 1041 005e 7B68     		ldr	r3, [r7, #4]
 1042 0060 002B     		cmp	r3, #0
 1043 0062 00F0E980 		beq	.L41
 618:../Dave/Generated/src/RTC001/RTC001.c ****   {
 619:../Dave/Generated/src/RTC001/RTC001.c **** 
 620:../Dave/Generated/src/RTC001/RTC001.c ****     /*   Read values from TIM0 and TIM1 registers  */
 621:../Dave/Generated/src/RTC001/RTC001.c ****     CurrentYear = ((uint32_t)((RTC->TIM1 & RTC_TIM1_YE_Msk) >> 16U));
 1044              		.loc 1 621 0 is_stmt 1
 1045 0066 4FF49443 		mov	r3, #18944
 1046 006a C5F20003 		movt	r3, 20480
 1047 006e 5B6A     		ldr	r3, [r3, #36]
 1048 0070 4FEA1343 		lsr	r3, r3, #16
 1049 0074 7B62     		str	r3, [r7, #36]
 622:../Dave/Generated/src/RTC001/RTC001.c ****     CurrentMonth = 	((uint32_t)(((RTC->TIM1 & RTC_TIM1_MO_Msk) >> 8U) + 1U));
 1050              		.loc 1 622 0
 1051 0076 4FF49443 		mov	r3, #18944
 1052 007a C5F20003 		movt	r3, 20480
 1053 007e 5B6A     		ldr	r3, [r3, #36]
 1054 0080 03F47063 		and	r3, r3, #3840
 1055 0084 4FEA1323 		lsr	r3, r3, #8
 1056 0088 03F10103 		add	r3, r3, #1
 1057 008c 3B62     		str	r3, [r7, #32]
 623:../Dave/Generated/src/RTC001/RTC001.c ****     CurrentDay = ((uint32_t)(((RTC->TIM0 & RTC_TIM0_DA_Msk) >> 24U) + 1U));
 1058              		.loc 1 623 0
 1059 008e 4FF49443 		mov	r3, #18944
 1060 0092 C5F20003 		movt	r3, 20480
 1061 0096 1B6A     		ldr	r3, [r3, #32]
 1062 0098 03F0F853 		and	r3, r3, #520093696
 1063 009c 4FEA1363 		lsr	r3, r3, #24
 1064 00a0 03F10103 		add	r3, r3, #1
 1065 00a4 FB61     		str	r3, [r7, #28]
 624:../Dave/Generated/src/RTC001/RTC001.c ****     CurrentHour = ((uint32_t)(((RTC->TIM0 & RTC_TIM0_HO_Msk) >> 16U)));
 1066              		.loc 1 624 0
 1067 00a6 4FF49443 		mov	r3, #18944
 1068 00aa C5F20003 		movt	r3, 20480
 1069 00ae 1B6A     		ldr	r3, [r3, #32]
 1070 00b0 03F4F813 		and	r3, r3, #2031616
 1071 00b4 4FEA1343 		lsr	r3, r3, #16
 1072 00b8 BB61     		str	r3, [r7, #24]
 625:../Dave/Generated/src/RTC001/RTC001.c ****     CurrentMin = ((uint32_t)(((RTC->TIM0 & RTC_TIM0_MI_Msk) >> 8U)));
 1073              		.loc 1 625 0
 1074 00ba 4FF49443 		mov	r3, #18944
 1075 00be C5F20003 		movt	r3, 20480
 1076 00c2 1B6A     		ldr	r3, [r3, #32]
 1077 00c4 03F47C53 		and	r3, r3, #16128
 1078 00c8 4FEA1323 		lsr	r3, r3, #8
 1079 00cc 7B61     		str	r3, [r7, #20]
 626:../Dave/Generated/src/RTC001/RTC001.c ****     CurrentSec = ((uint32_t)((RTC->TIM0 & RTC_TIM0_SE_Msk)));
 1080              		.loc 1 626 0
 1081 00ce 4FF49443 		mov	r3, #18944
 1082 00d2 C5F20003 		movt	r3, 20480
 1083 00d6 1B6A     		ldr	r3, [r3, #32]
 1084 00d8 03F03F03 		and	r3, r3, #63
 1085 00dc 3B61     		str	r3, [r7, #16]
 627:../Dave/Generated/src/RTC001/RTC001.c ****     
 628:../Dave/Generated/src/RTC001/RTC001.c ****     /*Count number of Days for Elapsed Years since Epoch*/
 629:../Dave/Generated/src/RTC001/RTC001.c ****     ElapsedDays = (uint32_t)(CurrentYear - RTC001_EPOCH_YEAR) *\
 1086              		.loc 1 629 0
 1087 00de 7B6A     		ldr	r3, [r7, #36]
 1088 00e0 40F26D12 		movw	r2, #365
 1089 00e4 02FB03F3 		mul	r3, r2, r3
 1090 00e8 A3F52F23 		sub	r3, r3, #716800
 1091 00ec A3F6CA03 		subw	r3, r3, #2250
 1092 00f0 FB62     		str	r3, [r7, #44]
 630:../Dave/Generated/src/RTC001/RTC001.c ****                   (uint32_t) RTC001_DAYS_IN_AN_YEAR;
 631:../Dave/Generated/src/RTC001/RTC001.c **** 
 632:../Dave/Generated/src/RTC001/RTC001.c ****     /* Add the number of days to be adjusted for leap years, 
 633:../Dave/Generated/src/RTC001/RTC001.c ****     start from previous year and check backwords */
 634:../Dave/Generated/src/RTC001/RTC001.c ****     for (ElapsedYear=(CurrentYear-1U); ElapsedYear>= 1970U; ElapsedYear--)
 1093              		.loc 1 634 0
 1094 00f2 7B6A     		ldr	r3, [r7, #36]
 1095 00f4 03F1FF33 		add	r3, r3, #-1
 1096 00f8 7B63     		str	r3, [r7, #52]
 1097 00fa 2CE0     		b	.L42
 1098              	.L45:
 635:../Dave/Generated/src/RTC001/RTC001.c ****     {
 636:../Dave/Generated/src/RTC001/RTC001.c ****       if((((ElapsedYear) % 400U) == 0U) || \
 1099              		.loc 1 636 0
 1100 00fc 7A6B     		ldr	r2, [r7, #52]
 1101 00fe 48F21F53 		movw	r3, #34079
 1102 0102 C5F2EB13 		movt	r3, 20971
 1103 0106 A3FB0213 		umull	r1, r3, r3, r2
 1104 010a 4FEAD313 		lsr	r3, r3, #7
 1105 010e 4FF4C871 		mov	r1, #400
 1106 0112 01FB03F3 		mul	r3, r1, r3
 1107 0116 D31A     		subs	r3, r2, r3
 1108 0118 002B     		cmp	r3, #0
 1109 011a 14D0     		beq	.L43
 637:../Dave/Generated/src/RTC001/RTC001.c ****         ((((ElapsedYear) % 100U) != 0U) && (((ElapsedYear) %4U) == 0U)))
 1110              		.loc 1 637 0 discriminator 1
 1111 011c 7A6B     		ldr	r2, [r7, #52]
 1112 011e 48F21F53 		movw	r3, #34079
 1113 0122 C5F2EB13 		movt	r3, 20971
 1114 0126 A3FB0213 		umull	r1, r3, r3, r2
 1115 012a 4FEA5313 		lsr	r3, r3, #5
 1116 012e 4FF06401 		mov	r1, #100
 1117 0132 01FB03F3 		mul	r3, r1, r3
 1118 0136 D31A     		subs	r3, r2, r3
 636:../Dave/Generated/src/RTC001/RTC001.c ****       if((((ElapsedYear) % 400U) == 0U) || \
 1119              		.loc 1 636 0 discriminator 1
 1120 0138 002B     		cmp	r3, #0
 1121 013a 08D0     		beq	.L44
 1122              		.loc 1 637 0
 1123 013c 7B6B     		ldr	r3, [r7, #52]
 1124 013e 03F00303 		and	r3, r3, #3
 1125 0142 002B     		cmp	r3, #0
 1126 0144 03D1     		bne	.L44
 1127              	.L43:
 638:../Dave/Generated/src/RTC001/RTC001.c ****       {
 639:../Dave/Generated/src/RTC001/RTC001.c ****         ElapsedDays++;
 1128              		.loc 1 639 0
 1129 0146 FB6A     		ldr	r3, [r7, #44]
 1130 0148 03F10103 		add	r3, r3, #1
 1131 014c FB62     		str	r3, [r7, #44]
 1132              	.L44:
 634:../Dave/Generated/src/RTC001/RTC001.c ****     for (ElapsedYear=(CurrentYear-1U); ElapsedYear>= 1970U; ElapsedYear--)
 1133              		.loc 1 634 0
 1134 014e 7B6B     		ldr	r3, [r7, #52]
 1135 0150 03F1FF33 		add	r3, r3, #-1
 1136 0154 7B63     		str	r3, [r7, #52]
 1137              	.L42:
 634:../Dave/Generated/src/RTC001/RTC001.c ****     for (ElapsedYear=(CurrentYear-1U); ElapsedYear>= 1970U; ElapsedYear--)
 1138              		.loc 1 634 0 is_stmt 0 discriminator 1
 1139 0156 7A6B     		ldr	r2, [r7, #52]
 1140 0158 40F2B173 		movw	r3, #1969
 1141 015c 9A42     		cmp	r2, r3
 1142 015e CDD8     		bhi	.L45
 640:../Dave/Generated/src/RTC001/RTC001.c ****       }
 641:../Dave/Generated/src/RTC001/RTC001.c ****     }
 642:../Dave/Generated/src/RTC001/RTC001.c ****     /*if current year is leap year add 1 only if March or later*/
 643:../Dave/Generated/src/RTC001/RTC001.c ****     if((((CurrentYear) % 400U) == 0U) || \
 1143              		.loc 1 643 0 is_stmt 1
 1144 0160 7A6A     		ldr	r2, [r7, #36]
 1145 0162 48F21F53 		movw	r3, #34079
 1146 0166 C5F2EB13 		movt	r3, 20971
 1147 016a A3FB0213 		umull	r1, r3, r3, r2
 1148 016e 4FEAD313 		lsr	r3, r3, #7
 1149 0172 4FF4C871 		mov	r1, #400
 1150 0176 01FB03F3 		mul	r3, r1, r3
 1151 017a D31A     		subs	r3, r2, r3
 1152 017c 002B     		cmp	r3, #0
 1153 017e 14D0     		beq	.L46
 644:../Dave/Generated/src/RTC001/RTC001.c ****       ((((CurrentYear) % 100U) != 0U) && (((CurrentYear) %4U) == 0U)))
 1154              		.loc 1 644 0 discriminator 1
 1155 0180 7A6A     		ldr	r2, [r7, #36]
 1156 0182 48F21F53 		movw	r3, #34079
 1157 0186 C5F2EB13 		movt	r3, 20971
 1158 018a A3FB0213 		umull	r1, r3, r3, r2
 1159 018e 4FEA5313 		lsr	r3, r3, #5
 1160 0192 4FF06401 		mov	r1, #100
 1161 0196 01FB03F3 		mul	r3, r1, r3
 1162 019a D31A     		subs	r3, r2, r3
 643:../Dave/Generated/src/RTC001/RTC001.c ****     if((((CurrentYear) % 400U) == 0U) || \
 1163              		.loc 1 643 0 discriminator 1
 1164 019c 002B     		cmp	r3, #0
 1165 019e 0BD0     		beq	.L47
 1166              		.loc 1 644 0
 1167 01a0 7B6A     		ldr	r3, [r7, #36]
 1168 01a2 03F00303 		and	r3, r3, #3
 1169 01a6 002B     		cmp	r3, #0
 1170 01a8 06D1     		bne	.L47
 1171              	.L46:
 645:../Dave/Generated/src/RTC001/RTC001.c ****     {
 646:../Dave/Generated/src/RTC001/RTC001.c ****       if(CurrentMonth > 2U)
 1172              		.loc 1 646 0
 1173 01aa 3B6A     		ldr	r3, [r7, #32]
 1174 01ac 022B     		cmp	r3, #2
 1175 01ae 03D9     		bls	.L47
 647:../Dave/Generated/src/RTC001/RTC001.c ****       {
 648:../Dave/Generated/src/RTC001/RTC001.c ****         ElapsedDays++;
 1176              		.loc 1 648 0
 1177 01b0 FB6A     		ldr	r3, [r7, #44]
 1178 01b2 03F10103 		add	r3, r3, #1
 1179 01b6 FB62     		str	r3, [r7, #44]
 1180              	.L47:
 649:../Dave/Generated/src/RTC001/RTC001.c ****       }
 650:../Dave/Generated/src/RTC001/RTC001.c ****     }
 651:../Dave/Generated/src/RTC001/RTC001.c ****     
 652:../Dave/Generated/src/RTC001/RTC001.c ****     /*Add number of Days from Elapsed months from current year*/
 653:../Dave/Generated/src/RTC001/RTC001.c ****     for (ElapsedMonth = (CurrentMonth - 1U); ElapsedMonth != 0U; ElapsedMonth--)
 1181              		.loc 1 653 0
 1182 01b8 3B6A     		ldr	r3, [r7, #32]
 1183 01ba 03F1FF33 		add	r3, r3, #-1
 1184 01be 3B63     		str	r3, [r7, #48]
 1185 01c0 0DE0     		b	.L48
 1186              	.L49:
 654:../Dave/Generated/src/RTC001/RTC001.c ****     {
 655:../Dave/Generated/src/RTC001/RTC001.c ****       ElapsedDays += RTC001_DAYS_IN_MONTH[ElapsedMonth];  
 1187              		.loc 1 655 0 discriminator 2
 1188 01c2 40F20003 		movw	r3, #:lower16:RTC001_DAYS_IN_MONTH
 1189 01c6 C0F20003 		movt	r3, #:upper16:RTC001_DAYS_IN_MONTH
 1190 01ca 3A6B     		ldr	r2, [r7, #48]
 1191 01cc 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1192 01d0 FA6A     		ldr	r2, [r7, #44]
 1193 01d2 D318     		adds	r3, r2, r3
 1194 01d4 FB62     		str	r3, [r7, #44]
 653:../Dave/Generated/src/RTC001/RTC001.c ****     for (ElapsedMonth = (CurrentMonth - 1U); ElapsedMonth != 0U; ElapsedMonth--)
 1195              		.loc 1 653 0 discriminator 2
 1196 01d6 3B6B     		ldr	r3, [r7, #48]
 1197 01d8 03F1FF33 		add	r3, r3, #-1
 1198 01dc 3B63     		str	r3, [r7, #48]
 1199              	.L48:
 653:../Dave/Generated/src/RTC001/RTC001.c ****     for (ElapsedMonth = (CurrentMonth - 1U); ElapsedMonth != 0U; ElapsedMonth--)
 1200              		.loc 1 653 0 is_stmt 0 discriminator 1
 1201 01de 3B6B     		ldr	r3, [r7, #48]
 1202 01e0 002B     		cmp	r3, #0
 1203 01e2 EED1     		bne	.L49
 656:../Dave/Generated/src/RTC001/RTC001.c ****     } 
 657:../Dave/Generated/src/RTC001/RTC001.c ****     
 658:../Dave/Generated/src/RTC001/RTC001.c ****     /*add Elapsed days from current month*/
 659:../Dave/Generated/src/RTC001/RTC001.c ****     ElapsedDays += CurrentDay - 1U;
 1204              		.loc 1 659 0 is_stmt 1
 1205 01e4 FA69     		ldr	r2, [r7, #28]
 1206 01e6 FB6A     		ldr	r3, [r7, #44]
 1207 01e8 D318     		adds	r3, r2, r3
 1208 01ea 03F1FF33 		add	r3, r3, #-1
 1209 01ee FB62     		str	r3, [r7, #44]
 660:../Dave/Generated/src/RTC001/RTC001.c ****     
 661:../Dave/Generated/src/RTC001/RTC001.c ****     /*Accumulate the total seconds for ElapsedDays*/
 662:../Dave/Generated/src/RTC001/RTC001.c ****     ElapsedSeconds = (ElapsedDays * RTC001_SECONDS_IN_A_DAY);
 1210              		.loc 1 662 0
 1211 01f0 FA6A     		ldr	r2, [r7, #44]
 1212 01f2 4FF4A343 		mov	r3, #20864
 1213 01f6 C0F20103 		movt	r3, 1
 1214 01fa 03FB02F3 		mul	r3, r3, r2
 1215 01fe FB60     		str	r3, [r7, #12]
 663:../Dave/Generated/src/RTC001/RTC001.c **** 
 664:../Dave/Generated/src/RTC001/RTC001.c ****     /*Add seconds for current hour, minute and seconds*/
 665:../Dave/Generated/src/RTC001/RTC001.c ****     ElapsedSeconds += (CurrentHour * RTC001_SECONDS_IN_AN_HOUR);   
 1216              		.loc 1 665 0
 1217 0200 BB69     		ldr	r3, [r7, #24]
 1218 0202 4FF46162 		mov	r2, #3600
 1219 0206 02FB03F3 		mul	r3, r2, r3
 1220 020a FA68     		ldr	r2, [r7, #12]
 1221 020c D318     		adds	r3, r2, r3
 1222 020e FB60     		str	r3, [r7, #12]
 666:../Dave/Generated/src/RTC001/RTC001.c ****     ElapsedSeconds += (CurrentMin * RTC001_SECONDS_IN_A_MINUTE); 
 1223              		.loc 1 666 0
 1224 0210 7A69     		ldr	r2, [r7, #20]
 1225 0212 1346     		mov	r3, r2
 1226 0214 4FEA0313 		lsl	r3, r3, #4
 1227 0218 9B1A     		subs	r3, r3, r2
 1228 021a 4FEA8303 		lsl	r3, r3, #2
 1229 021e FA68     		ldr	r2, [r7, #12]
 1230 0220 D318     		adds	r3, r2, r3
 1231 0222 FB60     		str	r3, [r7, #12]
 667:../Dave/Generated/src/RTC001/RTC001.c ****     ElapsedSeconds += CurrentSec; 
 1232              		.loc 1 667 0
 1233 0224 FA68     		ldr	r2, [r7, #12]
 1234 0226 3B69     		ldr	r3, [r7, #16]
 1235 0228 D318     		adds	r3, r2, r3
 1236 022a FB60     		str	r3, [r7, #12]
 668:../Dave/Generated/src/RTC001/RTC001.c **** 
 669:../Dave/Generated/src/RTC001/RTC001.c ****     *time_value = (time_t) ElapsedSeconds;
 1237              		.loc 1 669 0
 1238 022c FA68     		ldr	r2, [r7, #12]
 1239 022e 7B68     		ldr	r3, [r7, #4]
 1240 0230 1A60     		str	r2, [r3, #0]
 670:../Dave/Generated/src/RTC001/RTC001.c ****     Status = (uint32_t) DAVEApp_SUCCESS;
 1241              		.loc 1 670 0
 1242 0232 4FF00003 		mov	r3, #0
 1243 0236 BB62     		str	r3, [r7, #40]
 1244              	.L41:
 671:../Dave/Generated/src/RTC001/RTC001.c ****     
 672:../Dave/Generated/src/RTC001/RTC001.c ****   }
 673:../Dave/Generated/src/RTC001/RTC001.c ****   DBG002_FUNCTION_EXIT(APP_GID,RTC001_FUNCTION_EXIT);
 674:../Dave/Generated/src/RTC001/RTC001.c ****   return Status;
 1245              		.loc 1 674 0
 1246 0238 BB6A     		ldr	r3, [r7, #40]
 675:../Dave/Generated/src/RTC001/RTC001.c **** }
 1247              		.loc 1 675 0
 1248 023a 1846     		mov	r0, r3
 1249 023c 07F13C07 		add	r7, r7, #60
 1250 0240 BD46     		mov	sp, r7
 1251 0242 80BC     		pop	{r7}
 1252 0244 7047     		bx	lr
 1253              		.cfi_endproc
 1254              	.LFE122:
 1256 0246 00BF     		.section	.text.RTC001_ldatevalid,"ax",%progbits
 1257              		.align	2
 1258              		.thumb
 1259              		.thumb_func
 1261              	RTC001_ldatevalid:
 1262              	.LFB123:
 676:../Dave/Generated/src/RTC001/RTC001.c **** /* return 1 if date is valid, 0 otherwise.	*/
 677:../Dave/Generated/src/RTC001/RTC001.c **** static uint32_t RTC001_ldatevalid(uint16_t m,uint16_t d,uint16_t y)
 678:../Dave/Generated/src/RTC001/RTC001.c **** {
 1263              		.loc 1 678 0
 1264              		.cfi_startproc
 1265              		@ args = 0, pretend = 0, frame = 16
 1266              		@ frame_needed = 1, uses_anonymous_args = 0
 1267              		@ link register save eliminated.
 1268 0000 80B4     		push	{r7}
 1269              	.LCFI31:
 1270              		.cfi_def_cfa_offset 4
 1271              		.cfi_offset 7, -4
 1272 0002 85B0     		sub	sp, sp, #20
 1273              	.LCFI32:
 1274              		.cfi_def_cfa_offset 24
 1275 0004 00AF     		add	r7, sp, #0
 1276              	.LCFI33:
 1277              		.cfi_def_cfa_register 7
 1278 0006 1346     		mov	r3, r2
 1279 0008 0246     		mov	r2, r0	@ movhi
 1280 000a FA80     		strh	r2, [r7, #6]	@ movhi
 1281 000c 0A46     		mov	r2, r1	@ movhi
 1282 000e BA80     		strh	r2, [r7, #4]	@ movhi
 1283 0010 7B80     		strh	r3, [r7, #2]	@ movhi
 679:../Dave/Generated/src/RTC001/RTC001.c ****   uint32_t valid = 0U;
 1284              		.loc 1 679 0
 1285 0012 4FF00003 		mov	r3, #0
 1286 0016 FB60     		str	r3, [r7, #12]
 680:../Dave/Generated/src/RTC001/RTC001.c **** 
 681:../Dave/Generated/src/RTC001/RTC001.c ****   if ((m == 0U) || (m > 12U) )
 1287              		.loc 1 681 0
 1288 0018 FB88     		ldrh	r3, [r7, #6]
 1289 001a 002B     		cmp	r3, #0
 1290 001c 02D0     		beq	.L52
 1291              		.loc 1 681 0 is_stmt 0 discriminator 1
 1292 001e FB88     		ldrh	r3, [r7, #6]
 1293 0020 0C2B     		cmp	r3, #12
 1294 0022 03D9     		bls	.L53
 1295              	.L52:
 682:../Dave/Generated/src/RTC001/RTC001.c ****   {
 683:../Dave/Generated/src/RTC001/RTC001.c ****     valid = 0U;
 1296              		.loc 1 683 0 is_stmt 1
 1297 0024 4FF00003 		mov	r3, #0
 1298 0028 FB60     		str	r3, [r7, #12]
 1299 002a 41E0     		b	.L54
 1300              	.L53:
 684:../Dave/Generated/src/RTC001/RTC001.c ****   }
 685:../Dave/Generated/src/RTC001/RTC001.c ****   else  if ((m != 2U) || (d < 29U))
 1301              		.loc 1 685 0
 1302 002c FB88     		ldrh	r3, [r7, #6]
 1303 002e 022B     		cmp	r3, #2
 1304 0030 02D1     		bne	.L55
 1305              		.loc 1 685 0 is_stmt 0 discriminator 1
 1306 0032 BB88     		ldrh	r3, [r7, #4]
 1307 0034 1C2B     		cmp	r3, #28
 1308 0036 0DD8     		bhi	.L56
 1309              	.L55:
 686:../Dave/Generated/src/RTC001/RTC001.c ****   {
 687:../Dave/Generated/src/RTC001/RTC001.c ****      if (d <= RTC001_DAYS_IN_MONTH[m])
 1310              		.loc 1 687 0 is_stmt 1
 1311 0038 BA88     		ldrh	r2, [r7, #4]
 1312 003a F988     		ldrh	r1, [r7, #6]
 1313 003c 40F20003 		movw	r3, #:lower16:RTC001_DAYS_IN_MONTH
 1314 0040 C0F20003 		movt	r3, #:upper16:RTC001_DAYS_IN_MONTH
 1315 0044 53F82130 		ldr	r3, [r3, r1, lsl #2]
 1316 0048 9A42     		cmp	r2, r3
 1317 004a 31D8     		bhi	.L54
 688:../Dave/Generated/src/RTC001/RTC001.c ****      {
 689:../Dave/Generated/src/RTC001/RTC001.c ****        valid = 1U;
 1318              		.loc 1 689 0
 1319 004c 4FF00103 		mov	r3, #1
 1320 0050 FB60     		str	r3, [r7, #12]
 687:../Dave/Generated/src/RTC001/RTC001.c ****      if (d <= RTC001_DAYS_IN_MONTH[m])
 1321              		.loc 1 687 0
 1322 0052 2DE0     		b	.L54
 1323              	.L56:
 690:../Dave/Generated/src/RTC001/RTC001.c ****      }
 691:../Dave/Generated/src/RTC001/RTC001.c ****   }
 692:../Dave/Generated/src/RTC001/RTC001.c ****   else /*reaches here only if m = February and day = 29*/
 693:../Dave/Generated/src/RTC001/RTC001.c ****   {
 694:../Dave/Generated/src/RTC001/RTC001.c ****     /*check if it is leap year*/
 695:../Dave/Generated/src/RTC001/RTC001.c ****     if ((((y) % 400U) == 0U) || ((((y) % 100U) != 0U) && (((y) %4U) == 0U)))
 1324              		.loc 1 695 0
 1325 0054 7A88     		ldrh	r2, [r7, #2]
 1326 0056 48F21F53 		movw	r3, #34079
 1327 005a C5F2EB13 		movt	r3, 20971
 1328 005e A3FB0213 		umull	r1, r3, r3, r2
 1329 0062 4FEAD313 		lsr	r3, r3, #7
 1330 0066 4FF4C871 		mov	r1, #400
 1331 006a 01FB03F3 		mul	r3, r1, r3
 1332 006e D31A     		subs	r3, r2, r3
 1333 0070 9BB2     		uxth	r3, r3
 1334 0072 002B     		cmp	r3, #0
 1335 0074 16D0     		beq	.L58
 1336              		.loc 1 695 0 is_stmt 0 discriminator 1
 1337 0076 7A88     		ldrh	r2, [r7, #2]
 1338 0078 48F21F53 		movw	r3, #34079
 1339 007c C5F2EB13 		movt	r3, 20971
 1340 0080 A3FB0213 		umull	r1, r3, r3, r2
 1341 0084 4FEA5313 		lsr	r3, r3, #5
 1342 0088 4FF06401 		mov	r1, #100
 1343 008c 01FB03F3 		mul	r3, r1, r3
 1344 0090 D31A     		subs	r3, r2, r3
 1345 0092 9BB2     		uxth	r3, r3
 1346 0094 002B     		cmp	r3, #0
 1347 0096 0BD0     		beq	.L54
 1348 0098 7B88     		ldrh	r3, [r7, #2]	@ movhi
 1349 009a 03F00303 		and	r3, r3, #3
 1350 009e 9BB2     		uxth	r3, r3
 1351 00a0 002B     		cmp	r3, #0
 1352 00a2 05D1     		bne	.L54
 1353              	.L58:
 696:../Dave/Generated/src/RTC001/RTC001.c ****     {
 697:../Dave/Generated/src/RTC001/RTC001.c ****       if (d == 29U)
 1354              		.loc 1 697 0 is_stmt 1
 1355 00a4 BB88     		ldrh	r3, [r7, #4]
 1356 00a6 1D2B     		cmp	r3, #29
 1357 00a8 02D1     		bne	.L54
 698:../Dave/Generated/src/RTC001/RTC001.c ****       { 
 699:../Dave/Generated/src/RTC001/RTC001.c ****         valid = 1U;
 1358              		.loc 1 699 0
 1359 00aa 4FF00103 		mov	r3, #1
 1360 00ae FB60     		str	r3, [r7, #12]
 1361              	.L54:
 700:../Dave/Generated/src/RTC001/RTC001.c ****       }
 701:../Dave/Generated/src/RTC001/RTC001.c ****     }
 702:../Dave/Generated/src/RTC001/RTC001.c ****   }
 703:../Dave/Generated/src/RTC001/RTC001.c ****   return valid;
 1362              		.loc 1 703 0
 1363 00b0 FB68     		ldr	r3, [r7, #12]
 704:../Dave/Generated/src/RTC001/RTC001.c **** }
 1364              		.loc 1 704 0
 1365 00b2 1846     		mov	r0, r3
 1366 00b4 07F11407 		add	r7, r7, #20
 1367 00b8 BD46     		mov	sp, r7
 1368 00ba 80BC     		pop	{r7}
 1369 00bc 7047     		bx	lr
 1370              		.cfi_endproc
 1371              	.LFE123:
 1373 00be 00BF     		.section	.rodata
 1374              		.align	2
 1375              	.LC0:
 1376 0034 00       		.byte	0
 1377 0035 14       		.byte	20
 1378 0036 00       		.byte	0
 1379 0037 10       		.byte	16
 1380 0038 18       		.byte	24
 1381 0039 14       		.byte	20
 1382 003a 00       		.byte	0
 1383 003b 18       		.byte	24
 1384 003c 04       		.byte	4
 1385 003d 0C       		.byte	12
 1386 003e 08       		.byte	8
 1387 003f 10       		.byte	16
 1388 0040 0C       		.byte	12
 1389 0041 000000   		.section	.text.RTC001_lweekday,"ax",%progbits
 1390              		.align	2
 1391              		.thumb
 1392              		.thumb_func
 1394              	RTC001_lweekday:
 1395              	.LFB124:
 705:../Dave/Generated/src/RTC001/RTC001.c **** 
 706:../Dave/Generated/src/RTC001/RTC001.c **** /* given month, day, year, returns day of week, eg. Monday = 0 etc.
 707:../Dave/Generated/src/RTC001/RTC001.c **** */ 
 708:../Dave/Generated/src/RTC001/RTC001.c **** 
 709:../Dave/Generated/src/RTC001/RTC001.c **** static uint32_t RTC001_lweekday(uint16_t m,uint16_t d,uint16_t y)
 710:../Dave/Generated/src/RTC001/RTC001.c **** {
 1396              		.loc 1 710 0
 1397              		.cfi_startproc
 1398              		@ args = 0, pretend = 0, frame = 32
 1399              		@ frame_needed = 1, uses_anonymous_args = 0
 1400              		@ link register save eliminated.
 1401 0000 90B4     		push	{r4, r7}
 1402              	.LCFI34:
 1403              		.cfi_def_cfa_offset 8
 1404              		.cfi_offset 4, -8
 1405              		.cfi_offset 7, -4
 1406 0002 88B0     		sub	sp, sp, #32
 1407              	.LCFI35:
 1408              		.cfi_def_cfa_offset 40
 1409 0004 00AF     		add	r7, sp, #0
 1410              	.LCFI36:
 1411              		.cfi_def_cfa_register 7
 1412 0006 1346     		mov	r3, r2
 1413 0008 0246     		mov	r2, r0	@ movhi
 1414 000a FA80     		strh	r2, [r7, #6]	@ movhi
 1415 000c 0A46     		mov	r2, r1	@ movhi
 1416 000e BA80     		strh	r2, [r7, #4]	@ movhi
 1417 0010 7B80     		strh	r3, [r7, #2]	@ movhi
 711:../Dave/Generated/src/RTC001/RTC001.c ****   uint16_t vx, tx, ix, feb;
 712:../Dave/Generated/src/RTC001/RTC001.c ****   const uint8_t vx_list[] = 
 1418              		.loc 1 712 0
 1419 0012 40F20002 		movw	r2, #:lower16:.LC0
 1420 0016 C0F20002 		movt	r2, #:upper16:.LC0
 1421 001a 07F10803 		add	r3, r7, #8
 1422 001e 1446     		mov	r4, r2
 1423 0020 2068     		ldr	r0, [r4, #0]	@ unaligned
 1424 0022 6168     		ldr	r1, [r4, #4]	@ unaligned
 1425 0024 A268     		ldr	r2, [r4, #8]	@ unaligned
 1426 0026 07C3     		stmia	r3!, {r0, r1, r2}
 1427 0028 227B     		ldrb	r2, [r4, #12]
 1428 002a 1A70     		strb	r2, [r3, #0]
 713:../Dave/Generated/src/RTC001/RTC001.c ****   {
 714:../Dave/Generated/src/RTC001/RTC001.c ****       0U, 20U, 0U, 16U, 24U, 20U, 0U, 24U, 4U, 12U, 8U, 16U, 12U
 715:../Dave/Generated/src/RTC001/RTC001.c ****   };
 716:../Dave/Generated/src/RTC001/RTC001.c **** 
 717:../Dave/Generated/src/RTC001/RTC001.c ****   vx = vx_list[m];
 1429              		.loc 1 717 0
 1430 002c FB88     		ldrh	r3, [r7, #6]
 1431 002e 07F12000 		add	r0, r7, #32
 1432 0032 C318     		adds	r3, r0, r3
 1433 0034 13F8183C 		ldrb	r3, [r3, #-24]	@ zero_extendqisi2
 1434 0038 FB83     		strh	r3, [r7, #30]	@ movhi
 718:../Dave/Generated/src/RTC001/RTC001.c ****   if(y > 1900U)
 1435              		.loc 1 718 0
 1436 003a 7A88     		ldrh	r2, [r7, #2]
 1437 003c 40F26C73 		movw	r3, #1900
 1438 0040 9A42     		cmp	r2, r3
 1439 0042 03D9     		bls	.L61
 719:../Dave/Generated/src/RTC001/RTC001.c ****   {
 720:../Dave/Generated/src/RTC001/RTC001.c ****     y = y - 1900U;
 1440              		.loc 1 720 0
 1441 0044 7B88     		ldrh	r3, [r7, #2]	@ movhi
 1442 0046 A3F26C73 		subw	r3, r3, #1900
 1443 004a 7B80     		strh	r3, [r7, #2]	@ movhi
 1444              	.L61:
 721:../Dave/Generated/src/RTC001/RTC001.c ****   }
 722:../Dave/Generated/src/RTC001/RTC001.c ****   feb = (m  > 2U)? 1U : 0U;
 1445              		.loc 1 722 0
 1446 004c FB88     		ldrh	r3, [r7, #6]
 1447 004e 022B     		cmp	r3, #2
 1448 0050 02D9     		bls	.L62
 1449              		.loc 1 722 0 is_stmt 0 discriminator 1
 1450 0052 4FF00103 		mov	r3, #1
 1451 0056 01E0     		b	.L63
 1452              	.L62:
 1453              		.loc 1 722 0 discriminator 2
 1454 0058 4FF00003 		mov	r3, #0
 1455              	.L63:
 1456              		.loc 1 722 0 discriminator 3
 1457 005c BB83     		strh	r3, [r7, #28]	@ movhi
 723:../Dave/Generated/src/RTC001/RTC001.c **** /* take care of February */
 724:../Dave/Generated/src/RTC001/RTC001.c ****   ix = ((y - 21U) % 28U) + vx + feb;
 1458              		.loc 1 724 0 is_stmt 1 discriminator 3
 1459 005e 7B88     		ldrh	r3, [r7, #2]
 1460 0060 A3F11502 		sub	r2, r3, #21
 1461 0064 4FEA9201 		lsr	r1, r2, #2
 1462 0068 44F62513 		movw	r3, #18725
 1463 006c C2F29243 		movt	r3, 9362
 1464 0070 A3FB0101 		umull	r0, r1, r3, r1
 1465 0074 0B46     		mov	r3, r1
 1466 0076 4FEAC303 		lsl	r3, r3, #3
 1467 007a 5B1A     		subs	r3, r3, r1
 1468 007c 4FEA8303 		lsl	r3, r3, #2
 1469 0080 D31A     		subs	r3, r2, r3
 1470 0082 9AB2     		uxth	r2, r3
 1471 0084 FB8B     		ldrh	r3, [r7, #30]	@ movhi
 1472 0086 D318     		adds	r3, r2, r3
 1473 0088 9AB2     		uxth	r2, r3
 1474 008a BB8B     		ldrh	r3, [r7, #28]	@ movhi
 1475 008c D318     		adds	r3, r2, r3
 1476 008e 7B83     		strh	r3, [r7, #26]	@ movhi
 725:../Dave/Generated/src/RTC001/RTC001.c **** /* take care of leap year */
 726:../Dave/Generated/src/RTC001/RTC001.c ****   tx = ((ix + (ix / 4U)) % 7U) + d;
 1477              		.loc 1 726 0 discriminator 3
 1478 0090 7A8B     		ldrh	r2, [r7, #26]
 1479 0092 7B8B     		ldrh	r3, [r7, #26]
 1480 0094 4FEA9303 		lsr	r3, r3, #2
 1481 0098 9BB2     		uxth	r3, r3
 1482 009a D118     		adds	r1, r2, r3
 1483 009c 44F62513 		movw	r3, #18725
 1484 00a0 C2F29243 		movt	r3, 9362
 1485 00a4 A3FB0123 		umull	r2, r3, r3, r1
 1486 00a8 CA1A     		subs	r2, r1, r3
 1487 00aa 4FEA5202 		lsr	r2, r2, #1
 1488 00ae 9B18     		adds	r3, r3, r2
 1489 00b0 4FEA9302 		lsr	r2, r3, #2
 1490 00b4 1346     		mov	r3, r2
 1491 00b6 4FEAC303 		lsl	r3, r3, #3
 1492 00ba 9B1A     		subs	r3, r3, r2
 1493 00bc CA1A     		subs	r2, r1, r3
 1494 00be 92B2     		uxth	r2, r2
 1495 00c0 BB88     		ldrh	r3, [r7, #4]	@ movhi
 1496 00c2 D318     		adds	r3, r2, r3
 1497 00c4 3B83     		strh	r3, [r7, #24]	@ movhi
 727:../Dave/Generated/src/RTC001/RTC001.c ****   tx = tx % 7U;
 1498              		.loc 1 727 0 discriminator 3
 1499 00c6 3A8B     		ldrh	r2, [r7, #24]
 1500 00c8 44F62513 		movw	r3, #18725
 1501 00cc C2F29243 		movt	r3, 9362
 1502 00d0 A3FB0203 		umull	r0, r3, r3, r2
 1503 00d4 D11A     		subs	r1, r2, r3
 1504 00d6 4FEA5101 		lsr	r1, r1, #1
 1505 00da 5B18     		adds	r3, r3, r1
 1506 00dc 4FEA9301 		lsr	r1, r3, #2
 1507 00e0 0B46     		mov	r3, r1
 1508 00e2 4FEAC303 		lsl	r3, r3, #3
 1509 00e6 5B1A     		subs	r3, r3, r1
 1510 00e8 D31A     		subs	r3, r2, r3
 1511 00ea 3B83     		strh	r3, [r7, #24]	@ movhi
 728:../Dave/Generated/src/RTC001/RTC001.c ****   return ((uint32_t)tx);
 1512              		.loc 1 728 0 discriminator 3
 1513 00ec 3B8B     		ldrh	r3, [r7, #24]
 729:../Dave/Generated/src/RTC001/RTC001.c **** }
 1514              		.loc 1 729 0 discriminator 3
 1515 00ee 1846     		mov	r0, r3
 1516 00f0 07F12007 		add	r7, r7, #32
 1517 00f4 BD46     		mov	sp, r7
 1518 00f6 90BC     		pop	{r4, r7}
 1519 00f8 7047     		bx	lr
 1520              		.cfi_endproc
 1521              	.LFE124:
 1523 00fa 00BF     		.text
 1524              	.Letext0:
 1525              		.file 2 "c:\\dave-3.1.10\\arm-gcc\\bin\\../lib/gcc/arm-none-eabi/4.7.4/../../../../arm-none-eabi/i
 1526              		.file 3 "C:\\DAVE-3.1.10\\eclipse\\/../CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 1527              		.file 4 "F:\\WORK\\SmartHome_checkout1\\XMC4500_RK_HTTPserver\\Dave\\Generated\\inc\\DAVESupport/.
 1528              		.file 5 "F:\\WORK\\SmartHome_checkout1\\XMC4500_RK_HTTPserver\\Dave\\Generated\\inc\\DAVESupport/.
 1529              		.file 6 "F:\\WORK\\SmartHome_checkout1\\XMC4500_RK_HTTPserver\\Dave\\Generated\\inc\\DAVESupport/.
 1530              		.file 7 "c:\\dave-3.1.10\\arm-gcc\\bin\\../lib/gcc/arm-none-eabi/4.7.4/../../../../arm-none-eabi/i
 1531              		.file 8 "F:\\WORK\\SmartHome_checkout1\\XMC4500_RK_HTTPserver\\Dave\\Generated\\inc\\DAVESupport/.
 1532              		.file 9 "C:\\DAVE-3.1.10\\eclipse\\/../CMSIS/Include/core_cm4.h"
 1533              		.file 10 "F:\\WORK\\SmartHome_checkout1\\XMC4500_RK_HTTPserver\\Dave\\Generated\\inc\\DAVESupport/
DEFINED SYMBOLS
                            *ABS*:00000000 RTC001.c
C:\Users\Mihai\AppData\Local\Temp\ccVvpNFV.s:24     .rodata:00000000 RTC001_DAYS_IN_MONTH
C:\Users\Mihai\AppData\Local\Temp\ccVvpNFV.s:21     .rodata:00000000 $d
C:\Users\Mihai\AppData\Local\Temp\ccVvpNFV.s:39     .text.RTC001_lInit:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccVvpNFV.s:43     .text.RTC001_lInit:00000000 RTC001_lInit
C:\Users\Mihai\AppData\Local\Temp\ccVvpNFV.s:304    .text.RTC001_Disable:00000000 RTC001_Disable
C:\Users\Mihai\AppData\Local\Temp\ccVvpNFV.s:799    .text.RTC001_Clock_SetTime:00000000 RTC001_Clock_SetTime
C:\Users\Mihai\AppData\Local\Temp\ccVvpNFV.s:172    .text.RTC001_Init:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccVvpNFV.s:177    .text.RTC001_Init:00000000 RTC001_Init
C:\Users\Mihai\AppData\Local\Temp\ccVvpNFV.s:201    .text.RTC001_DeInit:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccVvpNFV.s:206    .text.RTC001_DeInit:00000000 RTC001_DeInit
C:\Users\Mihai\AppData\Local\Temp\ccVvpNFV.s:228    .text.RTC001_Enable:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccVvpNFV.s:233    .text.RTC001_Enable:00000000 RTC001_Enable
C:\Users\Mihai\AppData\Local\Temp\ccVvpNFV.s:299    .text.RTC001_Disable:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccVvpNFV.s:430    .text.RTC001_GetFlagStatus:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccVvpNFV.s:435    .text.RTC001_GetFlagStatus:00000000 RTC001_GetFlagStatus
C:\Users\Mihai\AppData\Local\Temp\ccVvpNFV.s:487    .text.RTC001_ClearFlagStatus:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccVvpNFV.s:492    .text.RTC001_ClearFlagStatus:00000000 RTC001_ClearFlagStatus
C:\Users\Mihai\AppData\Local\Temp\ccVvpNFV.s:529    .text.RTC001_ConfigAlarm:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccVvpNFV.s:534    .text.RTC001_ConfigAlarm:00000000 RTC001_ConfigAlarm
C:\Users\Mihai\AppData\Local\Temp\ccVvpNFV.s:1261   .text.RTC001_ldatevalid:00000000 RTC001_ldatevalid
C:\Users\Mihai\AppData\Local\Temp\ccVvpNFV.s:689    .text.RTC001_Clock_GetTime:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccVvpNFV.s:694    .text.RTC001_Clock_GetTime:00000000 RTC001_Clock_GetTime
C:\Users\Mihai\AppData\Local\Temp\ccVvpNFV.s:794    .text.RTC001_Clock_SetTime:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccVvpNFV.s:1394   .text.RTC001_lweekday:00000000 RTC001_lweekday
C:\Users\Mihai\AppData\Local\Temp\ccVvpNFV.s:980    .text.RTC001_Time:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccVvpNFV.s:985    .text.RTC001_Time:00000000 RTC001_Time
C:\Users\Mihai\AppData\Local\Temp\ccVvpNFV.s:1257   .text.RTC001_ldatevalid:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccVvpNFV.s:1375   .rodata:00000034 .LC0
C:\Users\Mihai\AppData\Local\Temp\ccVvpNFV.s:1390   .text.RTC001_lweekday:00000000 $t
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.1791a5ae2e936ca1033c1c44be394cc7
                           .group:00000000 wm4.XMC4500.h.45.215f4b8c79f46c7645c15373868d08c0
                           .group:00000000 wm4.core_cm4.h.47.41af406cb4cda82c972f112a9cd0a024
                           .group:00000000 wm4.newlib.h.8.a9901dc52d1357e3e94003403d43f8b5
                           .group:00000000 wm4.features.h.22.b72b3baab2bb2eab3661375590100b6b
                           .group:00000000 wm4.config.h.193.5fb8ef056cdff92dec3dee9552839d8c
                           .group:00000000 wm4._ansi.h.23.7aefdac4826acebbfc9f3822a0aeb14c
                           .group:00000000 wm4.stdint.h.20.54ad762faa59e3c05491630641c8d8bf
                           .group:00000000 wm4.core_cmInstr.h.39.3d3d1b4a79aef37532666dc6ee87c6ac
                           .group:00000000 wm4.core_cm4_simd.h.43.b5d1d38735af6366227b4256d330cf13
                           .group:00000000 wm4.core_cm4.h.178.e5ef5ce66d198d7f00f9d0076e267c41
                           .group:00000000 wm4.system_XMC4500.h.29.827f68baa362c84f2abae4ab67dde7c9
                           .group:00000000 wm4.XMC4500.h.198.8e022f279ff353ed081df898dc7b9cf3
                           .group:00000000 wm4.stddef.h.40.50cf36416e06376af8a9dca28536f2e4
                           .group:00000000 wm4.types.h.55.0006b5fda1d606516f2dcaf4aca92b11
                           .group:00000000 wm4.MULTIPLEXER.h.43.4aa654be3ec80895f631b5281bbb9105
                           .group:00000000 wm4.CCU8PWMLIB.h.70.a5d6a5267902b8b4aea2a0224518259a
                           .group:00000000 wm4.DBG001.h.116.d6d9e7459a0faa3905c97c1d2edb339d
                           .group:00000000 wm4.SYSTM001.h.63.668098b2213d40a5bd0db5fbe813cf05
                           .group:00000000 wm4.ETH002_Conf.h.56.5bd2b085b66f43d51abd69396be7f35f
                           .group:00000000 wm4.EthernetPHY.h.54.7af1709186b21e62a5f1d4049da3988b
                           .group:00000000 wm4.ETH001_Conf.h.71.1e151af1ba54dd023e1f942bdf922819
                           .group:00000000 wm4.synopGMAC_plat.h.78.7a90e072b497857344aea4ba1e994097
                           .group:00000000 wm4.synopGMAC_stack_interface.h.73.6be6aaee0ac6637432f4d0589044479b
                           .group:00000000 wm4.SynopGMAC_Dev.h.72.7c89c07cf666d37f5c9b615720d5e111
                           .group:00000000 wm4.synopGMAC_network_interface.h.73.4dd08316a11bc43c8c4a9da15277fb0f
                           .group:00000000 wm4.stdlib.h.13.603ed7eb09a1561ab06840b7c0fcff58
                           .group:00000000 wm4.stddef.h.161.e50ff8a9d5d1abbc15641da28ac571bf
                           .group:00000000 wm4._default_types.h.6.5e12cd604db8ce00b62bb2f02708eaf3
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4.stddef.h.161.c6104a0666cf681b6269ddc9b4f516d4
                           .group:00000000 wm4.reent.h.16.9e42f0e588b85e70b2bf6572af57ce64
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.53.c69c7609933ff56d59c757cec2d13230
                           .group:00000000 wm4.string.h.8.ef946ad0bc9ad5c970c365dcd1fc4b0a
                           .group:00000000 wm4.string.h.86.d5c872ff52e2712c985b588a0ef39f3c
                           .group:00000000 wm4.ETH004_Conf.h.56.564c3f309c32b3c742fc91049cf66940
                           .group:00000000 wm4.lwipopts.h.73.a7a63bda1e8216abd1d90275eaaa0027
                           .group:00000000 wm4.arch.h.33.6fa4aa86d33d1490ae882caef7316405
                           .group:00000000 wm4.cpu.h.33.b213c7fd77614ebc3691cef18ad2ff22
                           .group:00000000 wm4.cc.h.66.ec134211c658dcc89de4610e4e7bab46
                           .group:00000000 wm4.arch.h.47.5153c52bfb94ee3b37299920afab6afd
                           .group:00000000 wm4.debug.h.43.557ecd6c90cc70b375bb8a29118be47b
                           .group:00000000 wm4.opt.h.94.d36882acafebb8726bce646fc8b2397b
                           .group:00000000 wm4.err.h.52.37c5d17538f8e8347a9c84196701e92d
                           .group:00000000 wm4.pbuf.h.43.e9a1ad12b97478787a109e22d5306820
                           .group:00000000 wm4.inet.h.46.b516065779826845d16d49f513869a2b
                           .group:00000000 wm4.ip_addr.h.79.9a0ce887ca8c88c22ad7686bcb5105df
                           .group:00000000 wm4.sys.h.65.4a0cd87b9e0d8bb4cd6b30e939b2ca7e
                           .group:00000000 wm4.mem.h.96.20770766e6c9e6c42af6bfa95ef5c63f
                           .group:00000000 wm4.def.h.33.049f911dab26023a266ed46ced0ce4bc
                           .group:00000000 wm4.netif.h.53.c13431a64f0e73a26710e71455725e84
                           .group:00000000 wm4.ip.h.48.ad46847692d4d729760949b27e48a442
                           .group:00000000 wm4.icmp.h.44.450dbf91f594cc26ad19d086cdc83713
                           .group:00000000 wm4.tcp.h.55.5c30b9432fa60afaa85cbdd225b0c683
                           .group:00000000 wm4.udp.h.48.1a8dde095cd0a13580afaba1443e5a3f
                           .group:00000000 wm4.SDMMC003_Conf.h.50.e707c07613fb4e6f2eaec982a892429d
                           .group:00000000 wm4.SDMMC003.h.85.b66055f6032a052f5173e3d123f9c61e
                           .group:00000000 wm4.SDMMC001.h.50.3e2fedc7e5ace33db4121d5cc027e8a4
                           .group:00000000 wm4.types.h.23.0d949686bbcadd1621462d4fa1f884f9
                           .group:00000000 wm4.types.h.2.e9cec8c90ab35f77d9f499e06ae02400
                           .group:00000000 wm4.types.h.80.1f2c84c0d57dd52dd9936095d9ac218e
                           .group:00000000 wm4.time.h.16.a4579e68956d2601c6113814b546764b
                           .group:00000000 wm4.diskio.h.7.93a3c8131d08770c060b04d2180fd09a
                           .group:00000000 wm4.diskio.h.42.a863614abe78d56d18ed7cb292d0028d
                           .group:00000000 wm4.ffconf.h.57.4ab321a2116d35ff7f28236ac31fad7c
                           .group:00000000 wm4.ff.h.82.8f05a37d35a49dba2681a7f047fee4ee
                           .group:00000000 wm4.lmm001_debuglog.h.40.8031299705ecf04ad726bd19baff976d
                           .group:00000000 wm4.LMM001.h.42.c21fe9cbedc336738c3dc89405cad216
                           .group:00000000 wm4.stdio.h.27.f2ac352bab34f31f9f478442827b2ba6
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.63.dfdea6580b080784d08faace69b6ed76
                           .group:00000000 wm4.time.h.2.9857e62ad6ac99431e29d58067232314
                           .group:00000000 wm4.time.h.24.c499d4c1915694df17abb795fd34b719
                           .group:00000000 wm4.time.h.124.10ced469f846269cafc58b59c853e1bb
                           .group:00000000 wm4.errno.h.2.ba016d646105af6cad23be83630b6a3f
                           .group:00000000 wm4.errno.h.9.65044c2b5d8494e43f5986ab0a1d770f
                           .group:00000000 wm4.unistd.h.2.6ce1b91c4223f6078c1b210c7538c1d2
                           .group:00000000 wm4.unistd.h.251.605bc560cdc6c3b07b599bb71ac4e425
                           .group:00000000 wm4.malloc.h.4.62bd13b8107d5245f60bd92bb5994838
                           .group:00000000 wm4.malloc.h.148.73b7de3bd065dafbd594b04197a9466e
                           .group:00000000 wm4.reent.h.91.faac4d0ac97c0fcf23d10d0786197642
                           .group:00000000 wm4.SLTHA003.h.100.69cb08672bc6ab3f052aa9d5bd6dc5ca
                           .group:00000000 wm4._default_fcntl.h.6.d036cf640d0f9a06bcff1be55acd66be
                           .group:00000000 wm4.stat.h.2.a761b02482a54847ff0d09dfcff24a5c
                           .group:00000000 wm4.fcntl.h.9.9336f33d7f5028f694c75e6e224e0cf7
                           .group:00000000 wm4.SLTHA001.h.97.d7e87c19a31e3244bdd5839e7cc42a61
                           .group:00000000 wm4.WEBSERVER001_Conf.h.54.cd6d29aaa96a848cbc5321bab5d6cd90
                           .group:00000000 wm4.ADCGROUP001.h.48.081c7f952eb4b6ea2df7d05180ee1663
                           .group:00000000 wm4.IO001.h.49.1da965fb490206cf7cde64a90f6912e1
                           .group:00000000 wm4.MOTORLIBS.h.59.b2e97de0df555dedfa51e24447b57ab8
                           .group:00000000 wm4.uc_id.h.35.a6c4837fad81477ba31967683332b8cc
                           .group:00000000 wm4.Usic.h.90.22743468abc46f16747d12430b219aaf
                           .group:00000000 wm4.UART001_Conf.h.53.c5c972f6f634bc5116c171852aaab668
                           .group:00000000 wm4.UART001.h.109.3e835815a7a59791d8bd39655f4d4cc9

UNDEFINED SYMBOLS
timeptr1
RTC001_Handle
NVIC_SCU001_RegisterCallback
