   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"ff.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.bss
  20              		.align	2
  21              	FatFs:
  22 0000 00000000 		.space	8
  22      00000000 
  23              		.align	1
  24              	Fsid:
  25 0008 0000     		.space	2
  26              	CurrVol:
  27 000a 00       		.space	1
  28 000b 00       		.section	.text.mem_cpy,"ax",%progbits
  29              		.align	2
  30              		.thumb
  31              		.thumb_func
  33              	mem_cpy:
  34              	.LFB0:
  35              		.file 1 "../Dave/Generated/src/FATFS002/Src/ff.c"
   1:../Dave/Generated/src/FATFS002/Src/ff.c **** /*----------------------------------------------------------------------------/
   2:../Dave/Generated/src/FATFS002/Src/ff.c **** /  FatFs - FAT file system module  R0.09                  (C)ChaN, 2011
   3:../Dave/Generated/src/FATFS002/Src/ff.c **** /-----------------------------------------------------------------------------/
   4:../Dave/Generated/src/FATFS002/Src/ff.c **** / FatFs module is a generic FAT file system module for small embedded systems.
   5:../Dave/Generated/src/FATFS002/Src/ff.c **** / This is a free software that opened for education, research and commercial
   6:../Dave/Generated/src/FATFS002/Src/ff.c **** / developments under license policy of following terms.
   7:../Dave/Generated/src/FATFS002/Src/ff.c **** /
   8:../Dave/Generated/src/FATFS002/Src/ff.c **** /  Copyright (C) 2011, ChaN, all right reserved.
   9:../Dave/Generated/src/FATFS002/Src/ff.c **** /
  10:../Dave/Generated/src/FATFS002/Src/ff.c **** / * The FatFs module is a free software and there is NO WARRANTY.
  11:../Dave/Generated/src/FATFS002/Src/ff.c **** / * No restriction on use. You can use, modify and redistribute it for
  12:../Dave/Generated/src/FATFS002/Src/ff.c **** /   personal, non-profit or commercial products UNDER YOUR RESPONSIBILITY.
  13:../Dave/Generated/src/FATFS002/Src/ff.c **** / * Redistributions of source code must retain the above copyright notice.
  14:../Dave/Generated/src/FATFS002/Src/ff.c **** /
  15:../Dave/Generated/src/FATFS002/Src/ff.c **** /-----------------------------------------------------------------------------/
  16:../Dave/Generated/src/FATFS002/Src/ff.c **** / Feb 26,'06 R0.00  Prototype.
  17:../Dave/Generated/src/FATFS002/Src/ff.c **** /
  18:../Dave/Generated/src/FATFS002/Src/ff.c **** / Apr 29,'06 R0.01  First stable version.
  19:../Dave/Generated/src/FATFS002/Src/ff.c **** /
  20:../Dave/Generated/src/FATFS002/Src/ff.c **** / Jun 01,'06 R0.02  Added FAT12 support.
  21:../Dave/Generated/src/FATFS002/Src/ff.c **** /                   Removed unbuffered mode.
  22:../Dave/Generated/src/FATFS002/Src/ff.c **** /                   Fixed a problem on small (<32M) partition.
  23:../Dave/Generated/src/FATFS002/Src/ff.c **** / Jun 10,'06 R0.02a Added a configuration option (_FS_MINIMUM).
  24:../Dave/Generated/src/FATFS002/Src/ff.c **** /
  25:../Dave/Generated/src/FATFS002/Src/ff.c **** / Sep 22,'06 R0.03  Added f_rename().
  26:../Dave/Generated/src/FATFS002/Src/ff.c **** /                   Changed option _FS_MINIMUM to _FS_MINIMIZE.
  27:../Dave/Generated/src/FATFS002/Src/ff.c **** / Dec 11,'06 R0.03a Improved cluster scan algorithm to write files fast.
  28:../Dave/Generated/src/FATFS002/Src/ff.c **** /                   Fixed f_mkdir() creates incorrect directory on FAT32.
  29:../Dave/Generated/src/FATFS002/Src/ff.c **** /
  30:../Dave/Generated/src/FATFS002/Src/ff.c **** / Feb 04,'07 R0.04  Supported multiple drive system.
  31:../Dave/Generated/src/FATFS002/Src/ff.c **** /                   Changed some interfaces for multiple drive system.
  32:../Dave/Generated/src/FATFS002/Src/ff.c **** /                   Changed f_mountdrv() to f_mount().
  33:../Dave/Generated/src/FATFS002/Src/ff.c **** /                   Added f_mkfs().
  34:../Dave/Generated/src/FATFS002/Src/ff.c **** / Apr 01,'07 R0.04a Supported multiple partitions on a physical drive.
  35:../Dave/Generated/src/FATFS002/Src/ff.c **** /                   Added a capability of extending file size to f_lseek().
  36:../Dave/Generated/src/FATFS002/Src/ff.c **** /                   Added minimization level 3.
  37:../Dave/Generated/src/FATFS002/Src/ff.c **** /                   Fixed an endian sensitive code in f_mkfs().
  38:../Dave/Generated/src/FATFS002/Src/ff.c **** / May 05,'07 R0.04b Added a configuration option _USE_NTFLAG.
  39:../Dave/Generated/src/FATFS002/Src/ff.c **** /                   Added FSInfo support.
  40:../Dave/Generated/src/FATFS002/Src/ff.c **** /                   Fixed DBCS name can result FR_INVALID_NAME.
  41:../Dave/Generated/src/FATFS002/Src/ff.c **** /                   Fixed short seek (<= csize) collapses the file object.
  42:../Dave/Generated/src/FATFS002/Src/ff.c **** /
  43:../Dave/Generated/src/FATFS002/Src/ff.c **** / Aug 25,'07 R0.05  Changed arguments of f_read(), f_write() and f_mkfs().
  44:../Dave/Generated/src/FATFS002/Src/ff.c **** /                   Fixed f_mkfs() on FAT32 creates incorrect FSInfo.
  45:../Dave/Generated/src/FATFS002/Src/ff.c **** /                   Fixed f_mkdir() on FAT32 creates incorrect directory.
  46:../Dave/Generated/src/FATFS002/Src/ff.c **** / Feb 03,'08 R0.05a Added f_truncate() and f_utime().
  47:../Dave/Generated/src/FATFS002/Src/ff.c **** /                   Fixed off by one error at FAT sub-type determination.
  48:../Dave/Generated/src/FATFS002/Src/ff.c **** /                   Fixed btr in f_read() can be mistruncated.
  49:../Dave/Generated/src/FATFS002/Src/ff.c **** /                   Fixed cached sector is not flushed when create and close without write.
  50:../Dave/Generated/src/FATFS002/Src/ff.c **** /
  51:../Dave/Generated/src/FATFS002/Src/ff.c **** / Apr 01,'08 R0.06  Added fputc(), fputs(), fprintf() and fgets().
  52:../Dave/Generated/src/FATFS002/Src/ff.c **** /                   Improved performance of f_lseek() on moving to the same or following cluster.
  53:../Dave/Generated/src/FATFS002/Src/ff.c **** /
  54:../Dave/Generated/src/FATFS002/Src/ff.c **** / Apr 01,'09 R0.07  Merged Tiny-FatFs as a configuration option. (_FS_TINY)
  55:../Dave/Generated/src/FATFS002/Src/ff.c **** /                   Added long file name feature.
  56:../Dave/Generated/src/FATFS002/Src/ff.c **** /                   Added multiple code page feature.
  57:../Dave/Generated/src/FATFS002/Src/ff.c **** /                   Added re-entrancy for multitask operation.
  58:../Dave/Generated/src/FATFS002/Src/ff.c **** /                   Added auto cluster size selection to f_mkfs().
  59:../Dave/Generated/src/FATFS002/Src/ff.c **** /                   Added rewind option to f_readdir().
  60:../Dave/Generated/src/FATFS002/Src/ff.c **** /                   Changed result code of critical errors.
  61:../Dave/Generated/src/FATFS002/Src/ff.c **** /                   Renamed string functions to avoid name collision.
  62:../Dave/Generated/src/FATFS002/Src/ff.c **** / Apr 14,'09 R0.07a Separated out OS dependent code on reentrant cfg.
  63:../Dave/Generated/src/FATFS002/Src/ff.c **** /                   Added multiple sector size feature.
  64:../Dave/Generated/src/FATFS002/Src/ff.c **** / Jun 21,'09 R0.07c Fixed f_unlink() can return FR_OK on error.
  65:../Dave/Generated/src/FATFS002/Src/ff.c **** /                   Fixed wrong cache control in f_lseek().
  66:../Dave/Generated/src/FATFS002/Src/ff.c **** /                   Added relative path feature.
  67:../Dave/Generated/src/FATFS002/Src/ff.c **** /                   Added f_chdir() and f_chdrive().
  68:../Dave/Generated/src/FATFS002/Src/ff.c **** /                   Added proper case conversion to extended char.
  69:../Dave/Generated/src/FATFS002/Src/ff.c **** / Nov 03,'09 R0.07e Separated out configuration options from ff.h to ffconf.h.
  70:../Dave/Generated/src/FATFS002/Src/ff.c **** /                   Fixed f_unlink() fails to remove a sub-dir on _FS_RPATH.
  71:../Dave/Generated/src/FATFS002/Src/ff.c **** /                   Fixed name matching error on the 13 char boundary.
  72:../Dave/Generated/src/FATFS002/Src/ff.c **** /                   Added a configuration option, _LFN_UNICODE.
  73:../Dave/Generated/src/FATFS002/Src/ff.c **** /                   Changed f_readdir() to return the SFN with always upper case on non-LFN cfg.
  74:../Dave/Generated/src/FATFS002/Src/ff.c **** /
  75:../Dave/Generated/src/FATFS002/Src/ff.c **** / May 15,'10 R0.08  Added a memory configuration option. (_USE_LFN = 3)
  76:../Dave/Generated/src/FATFS002/Src/ff.c **** /                   Added file lock feature. (_FS_SHARE)
  77:../Dave/Generated/src/FATFS002/Src/ff.c **** /                   Added fast seek feature. (_USE_FASTSEEK)
  78:../Dave/Generated/src/FATFS002/Src/ff.c **** /                   Changed some types on the API, XCHAR->TCHAR.
  79:../Dave/Generated/src/FATFS002/Src/ff.c **** /                   Changed fname member in the FILINFO structure on Unicode cfg.
  80:../Dave/Generated/src/FATFS002/Src/ff.c **** /                   String functions support UTF-8 encoding files on Unicode cfg.
  81:../Dave/Generated/src/FATFS002/Src/ff.c **** / Aug 16,'10 R0.08a Added f_getcwd(). (_FS_RPATH = 2)
  82:../Dave/Generated/src/FATFS002/Src/ff.c **** /                   Added sector erase feature. (_USE_ERASE)
  83:../Dave/Generated/src/FATFS002/Src/ff.c **** /                   Moved file lock semaphore table from fs object to the bss.
  84:../Dave/Generated/src/FATFS002/Src/ff.c **** /                   Fixed a wrong directory entry is created on non-LFN cfg when the given name con
  85:../Dave/Generated/src/FATFS002/Src/ff.c **** /                   Fixed f_mkfs() creates wrong FAT32 volume.
  86:../Dave/Generated/src/FATFS002/Src/ff.c **** / Jan 15,'11 R0.08b Fast seek feature is also applied to f_read() and f_write().
  87:../Dave/Generated/src/FATFS002/Src/ff.c **** /                   f_lseek() reports required table size on creating CLMP.
  88:../Dave/Generated/src/FATFS002/Src/ff.c **** /                   Extended format syntax of f_printf function.
  89:../Dave/Generated/src/FATFS002/Src/ff.c **** /                   Ignores duplicated directory separators in given path names.
  90:../Dave/Generated/src/FATFS002/Src/ff.c **** /
  91:../Dave/Generated/src/FATFS002/Src/ff.c **** / Sep 06,'11 R0.09  f_mkfs() supports multiple partition to finish the multiple partition feature.
  92:../Dave/Generated/src/FATFS002/Src/ff.c **** /                   Added f_fdisk(). (_MULTI_PARTITION = 2)
  93:../Dave/Generated/src/FATFS002/Src/ff.c **** /---------------------------------------------------------------------------*/
  94:../Dave/Generated/src/FATFS002/Src/ff.c **** /*******************************************************************************
  95:../Dave/Generated/src/FATFS002/Src/ff.c ****  Copyright (c) 2011, Infineon Technologies AG                                 **
  96:../Dave/Generated/src/FATFS002/Src/ff.c ****  All rights reserved.                                                         **
  97:../Dave/Generated/src/FATFS002/Src/ff.c ****                                                                               **
  98:../Dave/Generated/src/FATFS002/Src/ff.c ****  Redistribution and use in source and binary forms, with or without           **
  99:../Dave/Generated/src/FATFS002/Src/ff.c ****  modification,are permitted provided that the following conditions are met:   **
 100:../Dave/Generated/src/FATFS002/Src/ff.c ****                                                                               **
 101:../Dave/Generated/src/FATFS002/Src/ff.c ****  *Redistributions of source code must retain the above copyright notice,      **
 102:../Dave/Generated/src/FATFS002/Src/ff.c ****  this list of conditions and the following disclaimer.                        **
 103:../Dave/Generated/src/FATFS002/Src/ff.c ****  *Redistributions in binary form must reproduce the above copyright notice,   **
 104:../Dave/Generated/src/FATFS002/Src/ff.c ****  this list of conditions and the following disclaimer in the documentation    **
 105:../Dave/Generated/src/FATFS002/Src/ff.c ****  and/or other materials provided with the distribution.                       **
 106:../Dave/Generated/src/FATFS002/Src/ff.c ****  *Neither the name of the copyright holders nor the names of its contributors **
 107:../Dave/Generated/src/FATFS002/Src/ff.c ****  may be used to endorse or promote products derived from this software without**
 108:../Dave/Generated/src/FATFS002/Src/ff.c ****  specific prior written permission.                                           **
 109:../Dave/Generated/src/FATFS002/Src/ff.c ****                                                                               **
 110:../Dave/Generated/src/FATFS002/Src/ff.c ****  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"  **
 111:../Dave/Generated/src/FATFS002/Src/ff.c ****  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE    **
 112:../Dave/Generated/src/FATFS002/Src/ff.c ****  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE   **
 113:../Dave/Generated/src/FATFS002/Src/ff.c ****  ARE  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE   **
 114:../Dave/Generated/src/FATFS002/Src/ff.c ****  LIABLE  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR         **
 115:../Dave/Generated/src/FATFS002/Src/ff.c ****  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF         **
 116:../Dave/Generated/src/FATFS002/Src/ff.c ****  SUBSTITUTE GOODS OR  SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS    **
 117:../Dave/Generated/src/FATFS002/Src/ff.c ****  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN      **
 118:../Dave/Generated/src/FATFS002/Src/ff.c ****  CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)       **
 119:../Dave/Generated/src/FATFS002/Src/ff.c ****  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE   **
 120:../Dave/Generated/src/FATFS002/Src/ff.c ****  POSSIBILITY OF SUCH DAMAGE.                                                  **
 121:../Dave/Generated/src/FATFS002/Src/ff.c ****                                                                               **
 122:../Dave/Generated/src/FATFS002/Src/ff.c ****  To improve the quality of the software, users are encouraged to share        **
 123:../Dave/Generated/src/FATFS002/Src/ff.c ****  modifications, enhancements or bug fixes with Infineon Technologies AG       **
 124:../Dave/Generated/src/FATFS002/Src/ff.c ****  dave@infineon.com).                                                          **
 125:../Dave/Generated/src/FATFS002/Src/ff.c ****                                                                               **
 126:../Dave/Generated/src/FATFS002/Src/ff.c **** ********************************************************************************
 127:../Dave/Generated/src/FATFS002/Src/ff.c **** **                                                                            **
 128:../Dave/Generated/src/FATFS002/Src/ff.c **** **                                                                            **
 129:../Dave/Generated/src/FATFS002/Src/ff.c **** ** PLATFORM : Infineon XMC4000 Series                                         **
 130:../Dave/Generated/src/FATFS002/Src/ff.c **** **                                                                            **
 131:../Dave/Generated/src/FATFS002/Src/ff.c **** ** COMPILER : Compiler Independent                                            **
 132:../Dave/Generated/src/FATFS002/Src/ff.c **** **                                                                            **
 133:../Dave/Generated/src/FATFS002/Src/ff.c **** ** AUTHOR : App Developer                                                     **
 134:../Dave/Generated/src/FATFS002/Src/ff.c **** **                                                                            **
 135:../Dave/Generated/src/FATFS002/Src/ff.c **** ** MAY BE CHANGED BY USER [yes/no]: Yes                                       **
 136:../Dave/Generated/src/FATFS002/Src/ff.c **** **                                                                            **
 137:../Dave/Generated/src/FATFS002/Src/ff.c **** ** MODIFICATION DATE : July 31, 2012                                           **
 138:../Dave/Generated/src/FATFS002/Src/ff.c **** **                                                                            **
 139:../Dave/Generated/src/FATFS002/Src/ff.c **** *******************************************************************************/
 140:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 141:../Dave/Generated/src/FATFS002/Src/ff.c **** /*******************************************************************************
 142:../Dave/Generated/src/FATFS002/Src/ff.c **** **                       Author(s) Identity                                   **
 143:../Dave/Generated/src/FATFS002/Src/ff.c **** ********************************************************************************
 144:../Dave/Generated/src/FATFS002/Src/ff.c **** **                                                                            **
 145:../Dave/Generated/src/FATFS002/Src/ff.c **** ** Initials    Name                                                           **
 146:../Dave/Generated/src/FATFS002/Src/ff.c **** ** ---------------------------------------------------------------------------**
 147:../Dave/Generated/src/FATFS002/Src/ff.c **** ** SK          App Developer                                                  **
 148:../Dave/Generated/src/FATFS002/Src/ff.c **** *******************************************************************************/
 149:../Dave/Generated/src/FATFS002/Src/ff.c **** #include "ff.h"			/* FatFs configurations and declarations */
 150:../Dave/Generated/src/FATFS002/Src/ff.c **** #include "../../../inc/FATFS004/diskio.h"			/* Declarations of low level disk I/O functions */
 151:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 152:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 153:../Dave/Generated/src/FATFS002/Src/ff.c **** /*--------------------------------------------------------------------------
 154:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 155:../Dave/Generated/src/FATFS002/Src/ff.c ****    Module Private Definitions
 156:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 157:../Dave/Generated/src/FATFS002/Src/ff.c **** ---------------------------------------------------------------------------*/
 158:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 159:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _FATFS != 6502	/* Revision ID */
 160:../Dave/Generated/src/FATFS002/Src/ff.c **** #error Wrong include file (ff.h).
 161:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
 162:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 163:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 164:../Dave/Generated/src/FATFS002/Src/ff.c **** /* Definitions on sector size */
 165:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _MAX_SS != 512 && _MAX_SS != 1024 && _MAX_SS != 2048 && _MAX_SS != 4096
 166:../Dave/Generated/src/FATFS002/Src/ff.c **** #error Wrong sector size.
 167:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
 168:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _MAX_SS != 512
 169:../Dave/Generated/src/FATFS002/Src/ff.c **** #define	SS(fs)	((fs)->ssize)	/* Variable sector size */
 170:../Dave/Generated/src/FATFS002/Src/ff.c **** #else
 171:../Dave/Generated/src/FATFS002/Src/ff.c **** #define	SS(fs)	512U			/* Fixed sector size */
 172:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
 173:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 174:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 175:../Dave/Generated/src/FATFS002/Src/ff.c **** /* Reentrancy related */
 176:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _FS_REENTRANT
 177:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _USE_LFN == 1
 178:../Dave/Generated/src/FATFS002/Src/ff.c **** #error Static LFN work area must not be used in re-entrant configuration.
 179:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
 180:../Dave/Generated/src/FATFS002/Src/ff.c **** #define	ENTER_FF(fs)		{ if (!lock_fs(fs)) return FR_TIMEOUT; }
 181:../Dave/Generated/src/FATFS002/Src/ff.c **** #define	LEAVE_FF(fs, res)	{ unlock_fs(fs, res); return res; }
 182:../Dave/Generated/src/FATFS002/Src/ff.c **** #else
 183:../Dave/Generated/src/FATFS002/Src/ff.c **** #define	ENTER_FF(fs)
 184:../Dave/Generated/src/FATFS002/Src/ff.c **** #define LEAVE_FF(fs, res)	return res
 185:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
 186:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 187:../Dave/Generated/src/FATFS002/Src/ff.c **** #define	ABORT(fs, res)		{ fp->flag |= FA__ERROR; LEAVE_FF(fs, res); }
 188:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 189:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 190:../Dave/Generated/src/FATFS002/Src/ff.c **** /* File shareing feature */
 191:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _FS_SHARE
 192:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _FS_READONLY
 193:../Dave/Generated/src/FATFS002/Src/ff.c **** #error _FS_SHARE must be 0 on read-only cfg.
 194:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
 195:../Dave/Generated/src/FATFS002/Src/ff.c **** typedef struct {
 196:../Dave/Generated/src/FATFS002/Src/ff.c **** 	FATFS *fs;				/* File ID 1, volume (NULL:blank entry) */
 197:../Dave/Generated/src/FATFS002/Src/ff.c **** 	DWORD clu;				/* File ID 2, directory */
 198:../Dave/Generated/src/FATFS002/Src/ff.c **** 	WORD idx;				/* File ID 3, directory index */
 199:../Dave/Generated/src/FATFS002/Src/ff.c **** 	WORD ctr;				/* File open counter, 0:none, 0x01..0xFF:read open count, 0x100:write mode */
 200:../Dave/Generated/src/FATFS002/Src/ff.c **** } FILESEM;
 201:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
 202:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 203:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 204:../Dave/Generated/src/FATFS002/Src/ff.c **** /* Misc definitions */
 205:../Dave/Generated/src/FATFS002/Src/ff.c **** #define LD_CLUST(dir)	(((DWORD)LD_WORD(dir+DIR_FstClusHI)<<16) | LD_WORD(dir+DIR_FstClusLO))
 206:../Dave/Generated/src/FATFS002/Src/ff.c **** #define ST_CLUST(dir,cl) {ST_WORD(dir+DIR_FstClusLO, cl); ST_WORD(dir+DIR_FstClusHI, (DWORD)cl>>16)
 207:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 208:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 209:../Dave/Generated/src/FATFS002/Src/ff.c **** /* DBCS code ranges and SBCS extend char conversion table */
 210:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 211:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _CODE_PAGE == 932	/* Japanese Shift-JIS */
 212:../Dave/Generated/src/FATFS002/Src/ff.c **** #define _DF1S	0x81	/* DBC 1st byte range 1 start */
 213:../Dave/Generated/src/FATFS002/Src/ff.c **** #define _DF1E	0x9F	/* DBC 1st byte range 1 end */
 214:../Dave/Generated/src/FATFS002/Src/ff.c **** #define _DF2S	0xE0	/* DBC 1st byte range 2 start */
 215:../Dave/Generated/src/FATFS002/Src/ff.c **** #define _DF2E	0xFC	/* DBC 1st byte range 2 end */
 216:../Dave/Generated/src/FATFS002/Src/ff.c **** #define _DS1S	0x40	/* DBC 2nd byte range 1 start */
 217:../Dave/Generated/src/FATFS002/Src/ff.c **** #define _DS1E	0x7E	/* DBC 2nd byte range 1 end */
 218:../Dave/Generated/src/FATFS002/Src/ff.c **** #define _DS2S	0x80	/* DBC 2nd byte range 2 start */
 219:../Dave/Generated/src/FATFS002/Src/ff.c **** #define _DS2E	0xFC	/* DBC 2nd byte range 2 end */
 220:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 221:../Dave/Generated/src/FATFS002/Src/ff.c **** #elif _CODE_PAGE == 936	/* Simplified Chinese GBK */
 222:../Dave/Generated/src/FATFS002/Src/ff.c **** #define _DF1S	0x81
 223:../Dave/Generated/src/FATFS002/Src/ff.c **** #define _DF1E	0xFE
 224:../Dave/Generated/src/FATFS002/Src/ff.c **** #define _DS1S	0x40
 225:../Dave/Generated/src/FATFS002/Src/ff.c **** #define _DS1E	0x7E
 226:../Dave/Generated/src/FATFS002/Src/ff.c **** #define _DS2S	0x80
 227:../Dave/Generated/src/FATFS002/Src/ff.c **** #define _DS2E	0xFE
 228:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 229:../Dave/Generated/src/FATFS002/Src/ff.c **** #elif _CODE_PAGE == 949	/* Korean */
 230:../Dave/Generated/src/FATFS002/Src/ff.c **** #define _DF1S	0x81
 231:../Dave/Generated/src/FATFS002/Src/ff.c **** #define _DF1E	0xFE
 232:../Dave/Generated/src/FATFS002/Src/ff.c **** #define _DS1S	0x41
 233:../Dave/Generated/src/FATFS002/Src/ff.c **** #define _DS1E	0x5A
 234:../Dave/Generated/src/FATFS002/Src/ff.c **** #define _DS2S	0x61
 235:../Dave/Generated/src/FATFS002/Src/ff.c **** #define _DS2E	0x7A
 236:../Dave/Generated/src/FATFS002/Src/ff.c **** #define _DS3S	0x81
 237:../Dave/Generated/src/FATFS002/Src/ff.c **** #define _DS3E	0xFE
 238:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 239:../Dave/Generated/src/FATFS002/Src/ff.c **** #elif _CODE_PAGE == 950	/* Traditional Chinese Big5 */
 240:../Dave/Generated/src/FATFS002/Src/ff.c **** #define _DF1S	0x81
 241:../Dave/Generated/src/FATFS002/Src/ff.c **** #define _DF1E	0xFE
 242:../Dave/Generated/src/FATFS002/Src/ff.c **** #define _DS1S	0x40
 243:../Dave/Generated/src/FATFS002/Src/ff.c **** #define _DS1E	0x7E
 244:../Dave/Generated/src/FATFS002/Src/ff.c **** #define _DS2S	0xA1
 245:../Dave/Generated/src/FATFS002/Src/ff.c **** #define _DS2E	0xFE
 246:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 247:../Dave/Generated/src/FATFS002/Src/ff.c **** #elif _CODE_PAGE == 437	/* U.S. (OEM) */
 248:../Dave/Generated/src/FATFS002/Src/ff.c **** #define _DF1S	0
 249:../Dave/Generated/src/FATFS002/Src/ff.c **** #define _EXCVT {0x80,0x9A,0x90,0x41,0x8E,0x41,0x8F,0x80,0x45,0x45,0x45,0x49,0x49,0x49,0x8E,0x8F,0x9
 250:../Dave/Generated/src/FATFS002/Src/ff.c **** 				0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0x21,0xAE,0xAF,0xB0,0xB1,0xB2,
 251:../Dave/Generated/src/FATFS002/Src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 252:../Dave/Generated/src/FATFS002/Src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,
 253:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 254:../Dave/Generated/src/FATFS002/Src/ff.c **** #elif _CODE_PAGE == 720	/* Arabic (OEM) */
 255:../Dave/Generated/src/FATFS002/Src/ff.c **** #define _DF1S	0
 256:../Dave/Generated/src/FATFS002/Src/ff.c **** #define _EXCVT {0x80,0x81,0x45,0x41,0x84,0x41,0x86,0x43,0x45,0x45,0x45,0x49,0x49,0x8D,0x8E,0x8F,0x9
 257:../Dave/Generated/src/FATFS002/Src/ff.c **** 				0xA0,0xA1,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 258:../Dave/Generated/src/FATFS002/Src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 259:../Dave/Generated/src/FATFS002/Src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,
 260:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 261:../Dave/Generated/src/FATFS002/Src/ff.c **** #elif _CODE_PAGE == 737	/* Greek (OEM) */
 262:../Dave/Generated/src/FATFS002/Src/ff.c **** #define _DF1S	0
 263:../Dave/Generated/src/FATFS002/Src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 264:../Dave/Generated/src/FATFS002/Src/ff.c **** 				0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x90,0x91,0xAA,0x92,0x93,0x94,0x95,0x96,0xB0,0xB1,0xB2,
 265:../Dave/Generated/src/FATFS002/Src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 266:../Dave/Generated/src/FATFS002/Src/ff.c **** 				0x97,0xEA,0xEB,0xEC,0xE4,0xED,0xEE,0xE7,0xE8,0xF1,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,
 267:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 268:../Dave/Generated/src/FATFS002/Src/ff.c **** #elif _CODE_PAGE == 775	/* Baltic (OEM) */
 269:../Dave/Generated/src/FATFS002/Src/ff.c **** #define _DF1S	0
 270:../Dave/Generated/src/FATFS002/Src/ff.c **** #define _EXCVT {0x80,0x9A,0x91,0xA0,0x8E,0x95,0x8F,0x80,0xAD,0xED,0x8A,0x8A,0xA1,0x8D,0x8E,0x8F,0x9
 271:../Dave/Generated/src/FATFS002/Src/ff.c **** 				0xA0,0xA1,0xE0,0xA3,0xA3,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 272:../Dave/Generated/src/FATFS002/Src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xB5,0xB6,0xB7,
 273:../Dave/Generated/src/FATFS002/Src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE5,0xE5,0xE6,0xE3,0xE8,0xE8,0xEA,0xEA,0xEE,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,
 274:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 275:../Dave/Generated/src/FATFS002/Src/ff.c **** #elif _CODE_PAGE == 850	/* Multilingual Latin 1 (OEM) */
 276:../Dave/Generated/src/FATFS002/Src/ff.c **** #define _DF1S	0
 277:../Dave/Generated/src/FATFS002/Src/ff.c **** #define _EXCVT {0x80,0x9A,0x90,0xB6,0x8E,0xB7,0x8F,0x80,0xD2,0xD3,0xD4,0xD8,0xD7,0xDE,0x8E,0x8F,0x9
 278:../Dave/Generated/src/FATFS002/Src/ff.c **** 				0xB5,0xD6,0xE0,0xE9,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0x21,0xAE,0xAF,0xB0,0xB1,0xB2,
 279:../Dave/Generated/src/FATFS002/Src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC7,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 280:../Dave/Generated/src/FATFS002/Src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE5,0xE5,0xE6,0xE7,0xE7,0xE9,0xEA,0xEB,0xED,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,
 281:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 282:../Dave/Generated/src/FATFS002/Src/ff.c **** #elif _CODE_PAGE == 852	/* Latin 2 (OEM) */
 283:../Dave/Generated/src/FATFS002/Src/ff.c **** #define _DF1S	0
 284:../Dave/Generated/src/FATFS002/Src/ff.c **** #define _EXCVT {0x80,0x9A,0x90,0xB6,0x8E,0xDE,0x8F,0x80,0x9D,0xD3,0x8A,0x8A,0xD7,0x8D,0x8E,0x8F,0x9
 285:../Dave/Generated/src/FATFS002/Src/ff.c **** 				0xB5,0xD6,0xE0,0xE9,0xA4,0xA4,0xA6,0xA6,0xA8,0xA8,0xAA,0x8D,0xAC,0xB8,0xAE,0xAF,0xB0,0xB1,0xB2,
 286:../Dave/Generated/src/FATFS002/Src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC6,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD1,0xD1,0xD2,
 287:../Dave/Generated/src/FATFS002/Src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE3,0xD5,0xE6,0xE6,0xE8,0xE9,0xE8,0xEB,0xED,0xED,0xDD,0xEF,0xF0,0xF1,0xF2,
 288:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 289:../Dave/Generated/src/FATFS002/Src/ff.c **** #elif _CODE_PAGE == 855	/* Cyrillic (OEM) */
 290:../Dave/Generated/src/FATFS002/Src/ff.c **** #define _DF1S	0
 291:../Dave/Generated/src/FATFS002/Src/ff.c **** #define _EXCVT {0x81,0x81,0x83,0x83,0x85,0x85,0x87,0x87,0x89,0x89,0x8B,0x8B,0x8D,0x8D,0x8F,0x8F,0x9
 292:../Dave/Generated/src/FATFS002/Src/ff.c **** 				0xA1,0xA1,0xA3,0xA3,0xA5,0xA5,0xA7,0xA7,0xA9,0xA9,0xAB,0xAB,0xAD,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 293:../Dave/Generated/src/FATFS002/Src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC7,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD1,0xD1,0xD3,
 294:../Dave/Generated/src/FATFS002/Src/ff.c **** 				0xE0,0xE2,0xE2,0xE4,0xE4,0xE6,0xE6,0xE8,0xE8,0xEA,0xEA,0xEC,0xEC,0xEE,0xEE,0xEF,0xF0,0xF2,0xF2,
 295:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 296:../Dave/Generated/src/FATFS002/Src/ff.c **** #elif _CODE_PAGE == 857	/* Turkish (OEM) */
 297:../Dave/Generated/src/FATFS002/Src/ff.c **** #define _DF1S	0
 298:../Dave/Generated/src/FATFS002/Src/ff.c **** #define _EXCVT {0x80,0x9A,0x90,0xB6,0x8E,0xB7,0x8F,0x80,0xD2,0xD3,0xD4,0xD8,0xD7,0x98,0x8E,0x8F,0x9
 299:../Dave/Generated/src/FATFS002/Src/ff.c **** 				0xB5,0xD6,0xE0,0xE9,0xA5,0xA5,0xA6,0xA6,0xA8,0xA9,0xAA,0xAB,0xAC,0x21,0xAE,0xAF,0xB0,0xB1,0xB2,
 300:../Dave/Generated/src/FATFS002/Src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC7,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 301:../Dave/Generated/src/FATFS002/Src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE5,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xDE,0x59,0xEE,0xEF,0xF0,0xF1,0xF2,
 302:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 303:../Dave/Generated/src/FATFS002/Src/ff.c **** #elif _CODE_PAGE == 858	/* Multilingual Latin 1 + Euro (OEM) */
 304:../Dave/Generated/src/FATFS002/Src/ff.c **** #define _DF1S	0
 305:../Dave/Generated/src/FATFS002/Src/ff.c **** #define _EXCVT {0x80,0x9A,0x90,0xB6,0x8E,0xB7,0x8F,0x80,0xD2,0xD3,0xD4,0xD8,0xD7,0xDE,0x8E,0x8F,0x9
 306:../Dave/Generated/src/FATFS002/Src/ff.c **** 				0xB5,0xD6,0xE0,0xE9,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0x21,0xAE,0xAF,0xB0,0xB1,0xB2,
 307:../Dave/Generated/src/FATFS002/Src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC7,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD1,0xD1,0xD2,
 308:../Dave/Generated/src/FATFS002/Src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE5,0xE5,0xE6,0xE7,0xE7,0xE9,0xEA,0xEB,0xED,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,
 309:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 310:../Dave/Generated/src/FATFS002/Src/ff.c **** #elif _CODE_PAGE == 862	/* Hebrew (OEM) */
 311:../Dave/Generated/src/FATFS002/Src/ff.c **** #define _DF1S	0
 312:../Dave/Generated/src/FATFS002/Src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 313:../Dave/Generated/src/FATFS002/Src/ff.c **** 				0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0x21,0xAE,0xAF,0xB0,0xB1,0xB2,
 314:../Dave/Generated/src/FATFS002/Src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 315:../Dave/Generated/src/FATFS002/Src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,
 316:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 317:../Dave/Generated/src/FATFS002/Src/ff.c **** #elif _CODE_PAGE == 866	/* Russian (OEM) */
 318:../Dave/Generated/src/FATFS002/Src/ff.c **** #define _DF1S	0
 319:../Dave/Generated/src/FATFS002/Src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 320:../Dave/Generated/src/FATFS002/Src/ff.c **** 				0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0xB0,0xB1,0xB2,
 321:../Dave/Generated/src/FATFS002/Src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 322:../Dave/Generated/src/FATFS002/Src/ff.c **** 				0x90,0x91,0x92,0x93,0x9d,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F,0xF0,0xF0,0xF2,
 323:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 324:../Dave/Generated/src/FATFS002/Src/ff.c **** #elif _CODE_PAGE == 874	/* Thai (OEM, Windows) */
 325:../Dave/Generated/src/FATFS002/Src/ff.c **** #define _DF1S	0
 326:../Dave/Generated/src/FATFS002/Src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 327:../Dave/Generated/src/FATFS002/Src/ff.c **** 				0xA0,0xA1,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 328:../Dave/Generated/src/FATFS002/Src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 329:../Dave/Generated/src/FATFS002/Src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,
 330:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 331:../Dave/Generated/src/FATFS002/Src/ff.c **** #elif _CODE_PAGE == 1250 /* Central Europe (Windows) */
 332:../Dave/Generated/src/FATFS002/Src/ff.c **** #define _DF1S	0
 333:../Dave/Generated/src/FATFS002/Src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 334:../Dave/Generated/src/FATFS002/Src/ff.c **** 				0xA0,0xA1,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 335:../Dave/Generated/src/FATFS002/Src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 336:../Dave/Generated/src/FATFS002/Src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 337:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 338:../Dave/Generated/src/FATFS002/Src/ff.c **** #elif _CODE_PAGE == 1251 /* Cyrillic (Windows) */
 339:../Dave/Generated/src/FATFS002/Src/ff.c **** #define _DF1S	0
 340:../Dave/Generated/src/FATFS002/Src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x82,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x8
 341:../Dave/Generated/src/FATFS002/Src/ff.c **** 				0xA0,0xA2,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 342:../Dave/Generated/src/FATFS002/Src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 343:../Dave/Generated/src/FATFS002/Src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 344:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 345:../Dave/Generated/src/FATFS002/Src/ff.c **** #elif _CODE_PAGE == 1252 /* Latin 1 (Windows) */
 346:../Dave/Generated/src/FATFS002/Src/ff.c **** #define _DF1S	0
 347:../Dave/Generated/src/FATFS002/Src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 348:../Dave/Generated/src/FATFS002/Src/ff.c **** 				0xA0,0x21,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 349:../Dave/Generated/src/FATFS002/Src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 350:../Dave/Generated/src/FATFS002/Src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 351:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 352:../Dave/Generated/src/FATFS002/Src/ff.c **** #elif _CODE_PAGE == 1253 /* Greek (Windows) */
 353:../Dave/Generated/src/FATFS002/Src/ff.c **** #define _DF1S	0
 354:../Dave/Generated/src/FATFS002/Src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 355:../Dave/Generated/src/FATFS002/Src/ff.c **** 				0xA0,0xA1,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 356:../Dave/Generated/src/FATFS002/Src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 357:../Dave/Generated/src/FATFS002/Src/ff.c **** 				0xE0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xF2,
 358:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 359:../Dave/Generated/src/FATFS002/Src/ff.c **** #elif _CODE_PAGE == 1254 /* Turkish (Windows) */
 360:../Dave/Generated/src/FATFS002/Src/ff.c **** #define _DF1S	0
 361:../Dave/Generated/src/FATFS002/Src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 362:../Dave/Generated/src/FATFS002/Src/ff.c **** 				0xA0,0x21,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 363:../Dave/Generated/src/FATFS002/Src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 364:../Dave/Generated/src/FATFS002/Src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 365:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 366:../Dave/Generated/src/FATFS002/Src/ff.c **** #elif _CODE_PAGE == 1255 /* Hebrew (Windows) */
 367:../Dave/Generated/src/FATFS002/Src/ff.c **** #define _DF1S	0
 368:../Dave/Generated/src/FATFS002/Src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 369:../Dave/Generated/src/FATFS002/Src/ff.c **** 				0xA0,0x21,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 370:../Dave/Generated/src/FATFS002/Src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 371:../Dave/Generated/src/FATFS002/Src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,
 372:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 373:../Dave/Generated/src/FATFS002/Src/ff.c **** #elif _CODE_PAGE == 1256 /* Arabic (Windows) */
 374:../Dave/Generated/src/FATFS002/Src/ff.c **** #define _DF1S	0
 375:../Dave/Generated/src/FATFS002/Src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 376:../Dave/Generated/src/FATFS002/Src/ff.c **** 				0xA0,0xA1,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 377:../Dave/Generated/src/FATFS002/Src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 378:../Dave/Generated/src/FATFS002/Src/ff.c **** 				0x41,0xE1,0x41,0xE3,0xE4,0xE5,0xE6,0x43,0x45,0x45,0x45,0x45,0xEC,0xED,0x49,0x49,0xF0,0xF1,0xF2,
 379:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 380:../Dave/Generated/src/FATFS002/Src/ff.c **** #elif _CODE_PAGE == 1257 /* Baltic (Windows) */
 381:../Dave/Generated/src/FATFS002/Src/ff.c **** #define _DF1S	0
 382:../Dave/Generated/src/FATFS002/Src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 383:../Dave/Generated/src/FATFS002/Src/ff.c **** 				0xA0,0xA1,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 384:../Dave/Generated/src/FATFS002/Src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 385:../Dave/Generated/src/FATFS002/Src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 386:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 387:../Dave/Generated/src/FATFS002/Src/ff.c **** #elif _CODE_PAGE == 1258 /* Vietnam (OEM, Windows) */
 388:../Dave/Generated/src/FATFS002/Src/ff.c **** #define _DF1S	0
 389:../Dave/Generated/src/FATFS002/Src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 390:../Dave/Generated/src/FATFS002/Src/ff.c **** 				0xA0,0x21,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 391:../Dave/Generated/src/FATFS002/Src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 392:../Dave/Generated/src/FATFS002/Src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xEC,0xCD,0xCE,0xCF,0xD0,0xD1,0xF2,
 393:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 394:../Dave/Generated/src/FATFS002/Src/ff.c **** #elif _CODE_PAGE == 1	/* ASCII (for only non-LFN cfg) */
 395:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _USE_LFN
 396:../Dave/Generated/src/FATFS002/Src/ff.c **** #error Cannot use LFN feature without valid code page.
 397:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
 398:../Dave/Generated/src/FATFS002/Src/ff.c **** #define _DF1S	0
 399:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 400:../Dave/Generated/src/FATFS002/Src/ff.c **** #else
 401:../Dave/Generated/src/FATFS002/Src/ff.c **** #error Unknown code page
 402:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 403:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
 404:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 405:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 406:../Dave/Generated/src/FATFS002/Src/ff.c **** /* Character code support macros */
 407:../Dave/Generated/src/FATFS002/Src/ff.c **** #define IsUpper(c)	(((c)>='A')&&((c)<='Z'))
 408:../Dave/Generated/src/FATFS002/Src/ff.c **** #define IsLower(c)	(((c)>='a')&&((c)<='z'))
 409:../Dave/Generated/src/FATFS002/Src/ff.c **** #define IsDigit(c)	(((c)>='0')&&((c)<='9'))
 410:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 411:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _DF1S		/* Code page is DBCS */
 412:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 413:../Dave/Generated/src/FATFS002/Src/ff.c **** #ifdef _DF2S	/* Two 1st byte areas */
 414:../Dave/Generated/src/FATFS002/Src/ff.c **** #define IsDBCS1(c)	(((BYTE)(c) >= _DF1S && (BYTE)(c) <= _DF1E) || ((BYTE)(c) >= _DF2S && (BYTE)(c) 
 415:../Dave/Generated/src/FATFS002/Src/ff.c **** #else			/* One 1st byte area */
 416:../Dave/Generated/src/FATFS002/Src/ff.c **** #define IsDBCS1(c)	((BYTE)(c) >= _DF1S && (BYTE)(c) <= _DF1E)
 417:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
 418:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 419:../Dave/Generated/src/FATFS002/Src/ff.c **** #ifdef _DS3S	/* Three 2nd byte areas */
 420:../Dave/Generated/src/FATFS002/Src/ff.c **** #define IsDBCS2(c)	(((BYTE)(c) >= _DS1S && (BYTE)(c) <= _DS1E) || ((BYTE)(c) >= _DS2S && (BYTE)(c) 
 421:../Dave/Generated/src/FATFS002/Src/ff.c **** #else			/* Two 2nd byte areas */
 422:../Dave/Generated/src/FATFS002/Src/ff.c **** #define IsDBCS2(c)	(((BYTE)(c) >= _DS1S && (BYTE)(c) <= _DS1E) || ((BYTE)(c) >= _DS2S && (BYTE)(c) 
 423:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
 424:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 425:../Dave/Generated/src/FATFS002/Src/ff.c **** #else			/* Code page is SBCS */
 426:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 427:../Dave/Generated/src/FATFS002/Src/ff.c **** #define IsDBCS1(c)	0
 428:../Dave/Generated/src/FATFS002/Src/ff.c **** #define IsDBCS2(c)	0
 429:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 430:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif /* _DF1S */
 431:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 432:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 433:../Dave/Generated/src/FATFS002/Src/ff.c **** /* Name status flags */
 434:../Dave/Generated/src/FATFS002/Src/ff.c **** #define NS			11		/* Index of name status byte in fn[] */
 435:../Dave/Generated/src/FATFS002/Src/ff.c **** #define NS_LOSS		0x01	/* Out of 8.3 format */
 436:../Dave/Generated/src/FATFS002/Src/ff.c **** #define NS_LFN		0x02	/* Force to create LFN entry */
 437:../Dave/Generated/src/FATFS002/Src/ff.c **** #define NS_LAST		0x04	/* Last segment */
 438:../Dave/Generated/src/FATFS002/Src/ff.c **** #define NS_BODY		0x08	/* Lower case flag (body) */
 439:../Dave/Generated/src/FATFS002/Src/ff.c **** #define NS_EXT		0x10	/* Lower case flag (ext) */
 440:../Dave/Generated/src/FATFS002/Src/ff.c **** #define NS_DOT		0x20	/* Dot entry */
 441:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 442:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 443:../Dave/Generated/src/FATFS002/Src/ff.c **** /* FAT sub-type boundaries */
 444:../Dave/Generated/src/FATFS002/Src/ff.c **** /* Note that the FAT spec by Microsoft says 4085 but Windows works with 4087! */
 445:../Dave/Generated/src/FATFS002/Src/ff.c **** #define MIN_FAT16	4086	/* Minimum number of clusters for FAT16 */
 446:../Dave/Generated/src/FATFS002/Src/ff.c **** #define	MIN_FAT32	65526	/* Minimum number of clusters for FAT32 */
 447:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 448:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 449:../Dave/Generated/src/FATFS002/Src/ff.c **** /* FatFs refers the members in the FAT structures as byte array instead of
 450:../Dave/Generated/src/FATFS002/Src/ff.c **** / structure member because the structure is not binary compatible between
 451:../Dave/Generated/src/FATFS002/Src/ff.c **** / different platforms */
 452:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 453:../Dave/Generated/src/FATFS002/Src/ff.c **** #define BS_jmpBoot			0	/* Jump instruction (3) */
 454:../Dave/Generated/src/FATFS002/Src/ff.c **** #define BS_OEMName			3	/* OEM name (8) */
 455:../Dave/Generated/src/FATFS002/Src/ff.c **** #define BPB_BytsPerSec		11	/* Sector size [byte] (2) */
 456:../Dave/Generated/src/FATFS002/Src/ff.c **** #define BPB_SecPerClus		13	/* Cluster size [sector] (1) */
 457:../Dave/Generated/src/FATFS002/Src/ff.c **** #define BPB_RsvdSecCnt		14	/* Size of reserved area [sector] (2) */
 458:../Dave/Generated/src/FATFS002/Src/ff.c **** #define BPB_NumFATs			16	/* Number of FAT copies (1) */
 459:../Dave/Generated/src/FATFS002/Src/ff.c **** #define BPB_RootEntCnt		17	/* Number of root dir entries for FAT12/16 (2) */
 460:../Dave/Generated/src/FATFS002/Src/ff.c **** #define BPB_TotSec16		19	/* Volume size [sector] (2) */
 461:../Dave/Generated/src/FATFS002/Src/ff.c **** #define BPB_Media			21	/* Media descriptor (1) */
 462:../Dave/Generated/src/FATFS002/Src/ff.c **** #define BPB_FATSz16			22	/* FAT size [sector] (2) */
 463:../Dave/Generated/src/FATFS002/Src/ff.c **** #define BPB_SecPerTrk		24	/* Track size [sector] (2) */
 464:../Dave/Generated/src/FATFS002/Src/ff.c **** #define BPB_NumHeads		26	/* Number of heads (2) */
 465:../Dave/Generated/src/FATFS002/Src/ff.c **** #define BPB_HiddSec			28	/* Number of special hidden sectors (4) */
 466:../Dave/Generated/src/FATFS002/Src/ff.c **** #define BPB_TotSec32		32	/* Volume size [sector] (4) */
 467:../Dave/Generated/src/FATFS002/Src/ff.c **** #define BS_DrvNum			36	/* Physical drive number (2) */
 468:../Dave/Generated/src/FATFS002/Src/ff.c **** #define BS_BootSig			38	/* Extended boot signature (1) */
 469:../Dave/Generated/src/FATFS002/Src/ff.c **** #define BS_VolID			39	/* Volume serial number (4) */
 470:../Dave/Generated/src/FATFS002/Src/ff.c **** #define BS_VolLab			43	/* Volume label (8) */
 471:../Dave/Generated/src/FATFS002/Src/ff.c **** #define BS_FilSysType		54	/* File system type (1) */
 472:../Dave/Generated/src/FATFS002/Src/ff.c **** #define BPB_FATSz32			36	/* FAT size [sector] (4) */
 473:../Dave/Generated/src/FATFS002/Src/ff.c **** #define BPB_ExtFlags		40	/* Extended flags (2) */
 474:../Dave/Generated/src/FATFS002/Src/ff.c **** #define BPB_FSVer			42	/* File system version (2) */
 475:../Dave/Generated/src/FATFS002/Src/ff.c **** #define BPB_RootClus		44	/* Root dir first cluster (4) */
 476:../Dave/Generated/src/FATFS002/Src/ff.c **** #define BPB_FSInfo			48	/* Offset of FSInfo sector (2) */
 477:../Dave/Generated/src/FATFS002/Src/ff.c **** #define BPB_BkBootSec		50	/* Offset of backup boot sectot (2) */
 478:../Dave/Generated/src/FATFS002/Src/ff.c **** #define BS_DrvNum32			64	/* Physical drive number (2) */
 479:../Dave/Generated/src/FATFS002/Src/ff.c **** #define BS_BootSig32		66	/* Extended boot signature (1) */
 480:../Dave/Generated/src/FATFS002/Src/ff.c **** #define BS_VolID32			67	/* Volume serial number (4) */
 481:../Dave/Generated/src/FATFS002/Src/ff.c **** #define BS_VolLab32			71	/* Volume label (8) */
 482:../Dave/Generated/src/FATFS002/Src/ff.c **** #define BS_FilSysType32		82	/* File system type (1) */
 483:../Dave/Generated/src/FATFS002/Src/ff.c **** #define	FSI_LeadSig			0	/* FSI: Leading signature (4) */
 484:../Dave/Generated/src/FATFS002/Src/ff.c **** #define	FSI_StrucSig		484	/* FSI: Structure signature (4) */
 485:../Dave/Generated/src/FATFS002/Src/ff.c **** #define	FSI_Free_Count		488	/* FSI: Number of free clusters (4) */
 486:../Dave/Generated/src/FATFS002/Src/ff.c **** #define	FSI_Nxt_Free		492	/* FSI: Last allocated cluster (4) */
 487:../Dave/Generated/src/FATFS002/Src/ff.c **** #define MBR_Table			446	/* MBR: Partition table offset (2) */
 488:../Dave/Generated/src/FATFS002/Src/ff.c **** #define	SZ_PTE				16	/* MBR: Size of a partition table entry */
 489:../Dave/Generated/src/FATFS002/Src/ff.c **** #define BS_55AA				510	/* Boot sector signature (2) */
 490:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 491:../Dave/Generated/src/FATFS002/Src/ff.c **** #define	DIR_Name			0	/* Short file name (11) */
 492:../Dave/Generated/src/FATFS002/Src/ff.c **** #define	DIR_Attr			11	/* Attribute (1) */
 493:../Dave/Generated/src/FATFS002/Src/ff.c **** #define	DIR_NTres			12	/* NT flag (1) */
 494:../Dave/Generated/src/FATFS002/Src/ff.c **** #define	DIR_CrtTime			14	/* Created time (2) */
 495:../Dave/Generated/src/FATFS002/Src/ff.c **** #define	DIR_CrtDate			16	/* Created date (2) */
 496:../Dave/Generated/src/FATFS002/Src/ff.c **** #define	DIR_FstClusHI		20	/* Higher 16-bit of first cluster (2) */
 497:../Dave/Generated/src/FATFS002/Src/ff.c **** #define	DIR_WrtTime			22	/* Modified time (2) */
 498:../Dave/Generated/src/FATFS002/Src/ff.c **** #define	DIR_WrtDate			24	/* Modified date (2) */
 499:../Dave/Generated/src/FATFS002/Src/ff.c **** #define	DIR_FstClusLO		26	/* Lower 16-bit of first cluster (2) */
 500:../Dave/Generated/src/FATFS002/Src/ff.c **** #define	DIR_FileSize		28	/* File size (4) */
 501:../Dave/Generated/src/FATFS002/Src/ff.c **** #define	LDIR_Ord			0	/* LFN entry order and LLE flag (1) */
 502:../Dave/Generated/src/FATFS002/Src/ff.c **** #define	LDIR_Attr			11	/* LFN attribute (1) */
 503:../Dave/Generated/src/FATFS002/Src/ff.c **** #define	LDIR_Type			12	/* LFN type (1) */
 504:../Dave/Generated/src/FATFS002/Src/ff.c **** #define	LDIR_Chksum			13	/* Sum of corresponding SFN entry */
 505:../Dave/Generated/src/FATFS002/Src/ff.c **** #define	LDIR_FstClusLO		26	/* Filled by zero (0) */
 506:../Dave/Generated/src/FATFS002/Src/ff.c **** #define	SZ_DIR				32		/* Size of a directory entry */
 507:../Dave/Generated/src/FATFS002/Src/ff.c **** #define	LLE					0x40	/* Last long entry flag in LDIR_Ord */
 508:../Dave/Generated/src/FATFS002/Src/ff.c **** #define	DDE					0xE5	/* Deleted directory enrty mark in DIR_Name[0] */
 509:../Dave/Generated/src/FATFS002/Src/ff.c **** #define	NDDE				0x05	/* Replacement of a character collides with DDE */
 510:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 511:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 512:../Dave/Generated/src/FATFS002/Src/ff.c **** /*------------------------------------------------------------*/
 513:../Dave/Generated/src/FATFS002/Src/ff.c **** /* Module private work area                                   */
 514:../Dave/Generated/src/FATFS002/Src/ff.c **** /*------------------------------------------------------------*/
 515:../Dave/Generated/src/FATFS002/Src/ff.c **** /* Note that uninitialized variables with static duration are
 516:../Dave/Generated/src/FATFS002/Src/ff.c **** /  zeroed/nulled at start-up. If not, the compiler or start-up
 517:../Dave/Generated/src/FATFS002/Src/ff.c **** /  routine is out of ANSI-C standard.
 518:../Dave/Generated/src/FATFS002/Src/ff.c **** */
 519:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 520:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _VOLUMES
 521:../Dave/Generated/src/FATFS002/Src/ff.c **** static
 522:../Dave/Generated/src/FATFS002/Src/ff.c **** FATFS *FatFs[_VOLUMES];	/* Pointer to the file system objects (logical drives) */
 523:../Dave/Generated/src/FATFS002/Src/ff.c **** #else
 524:../Dave/Generated/src/FATFS002/Src/ff.c **** #error Number of volumes must not be 0.
 525:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
 526:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 527:../Dave/Generated/src/FATFS002/Src/ff.c **** static
 528:../Dave/Generated/src/FATFS002/Src/ff.c **** WORD Fsid;				/* File system mount ID */
 529:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 530:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _FS_RPATH
 531:../Dave/Generated/src/FATFS002/Src/ff.c **** static
 532:../Dave/Generated/src/FATFS002/Src/ff.c **** BYTE CurrVol;			/* Current drive */
 533:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
 534:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 535:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _FS_SHARE
 536:../Dave/Generated/src/FATFS002/Src/ff.c **** static
 537:../Dave/Generated/src/FATFS002/Src/ff.c **** FILESEM	Files[_FS_SHARE];	/* File lock semaphores */
 538:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
 539:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 540:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _USE_LFN == 0			/* No LFN feature */
 541:../Dave/Generated/src/FATFS002/Src/ff.c **** #define	DEF_NAMEBUF			BYTE sfn[12]
 542:../Dave/Generated/src/FATFS002/Src/ff.c **** #define INIT_BUF(dobj)		(dobj).fn = sfn
 543:../Dave/Generated/src/FATFS002/Src/ff.c **** #define	FREE_BUF()
 544:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 545:../Dave/Generated/src/FATFS002/Src/ff.c **** #elif _USE_LFN == 1			/* LFN feature with static working buffer */
 546:../Dave/Generated/src/FATFS002/Src/ff.c **** static WCHAR LfnBuf[_MAX_LFN+1];
 547:../Dave/Generated/src/FATFS002/Src/ff.c **** #define	DEF_NAMEBUF			BYTE sfn[12]
 548:../Dave/Generated/src/FATFS002/Src/ff.c **** #define INIT_BUF(dobj)		{ (dobj).fn = sfn; (dobj).lfn = LfnBuf; }
 549:../Dave/Generated/src/FATFS002/Src/ff.c **** #define	FREE_BUF()
 550:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 551:../Dave/Generated/src/FATFS002/Src/ff.c **** #elif _USE_LFN == 2 		/* LFN feature with dynamic working buffer on the stack */
 552:../Dave/Generated/src/FATFS002/Src/ff.c **** #define	DEF_NAMEBUF			BYTE sfn[12]; WCHAR lbuf[_MAX_LFN+1]
 553:../Dave/Generated/src/FATFS002/Src/ff.c **** #define INIT_BUF(dobj)		{ (dobj).fn = sfn; (dobj).lfn = lbuf; }
 554:../Dave/Generated/src/FATFS002/Src/ff.c **** #define	FREE_BUF()
 555:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 556:../Dave/Generated/src/FATFS002/Src/ff.c **** #elif _USE_LFN == 3 		/* LFN feature with dynamic working buffer on the heap */
 557:../Dave/Generated/src/FATFS002/Src/ff.c **** #define	DEF_NAMEBUF			BYTE sfn[12]; WCHAR *lfn
 558:../Dave/Generated/src/FATFS002/Src/ff.c **** #define INIT_BUF(dobj)		{ lfn = ff_memalloc((_MAX_LFN + 1) * 2); \
 559:../Dave/Generated/src/FATFS002/Src/ff.c **** 							  if (!lfn) LEAVE_FF((dobj).fs, FR_NOT_ENOUGH_CORE); \
 560:../Dave/Generated/src/FATFS002/Src/ff.c **** 							  (dobj).lfn = lfn;	(dobj).fn = sfn; }
 561:../Dave/Generated/src/FATFS002/Src/ff.c **** #define	FREE_BUF()			ff_memfree(lfn)
 562:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 563:../Dave/Generated/src/FATFS002/Src/ff.c **** #else
 564:../Dave/Generated/src/FATFS002/Src/ff.c **** #error Wrong LFN configuration.
 565:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
 566:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 567:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 568:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 569:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 570:../Dave/Generated/src/FATFS002/Src/ff.c **** /*--------------------------------------------------------------------------
 571:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 572:../Dave/Generated/src/FATFS002/Src/ff.c ****    Module Private Functions
 573:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 574:../Dave/Generated/src/FATFS002/Src/ff.c **** ---------------------------------------------------------------------------*/
 575:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 576:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 577:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
 578:../Dave/Generated/src/FATFS002/Src/ff.c **** /* String functions                                                      */
 579:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
 580:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 581:../Dave/Generated/src/FATFS002/Src/ff.c **** /* Copy memory to memory */
 582:../Dave/Generated/src/FATFS002/Src/ff.c **** static
 583:../Dave/Generated/src/FATFS002/Src/ff.c **** void mem_cpy (void* dst, const void* src, UINT cnt) {
  36              		.loc 1 583 0
  37              		.cfi_startproc
  38              		@ args = 0, pretend = 0, frame = 24
  39              		@ frame_needed = 1, uses_anonymous_args = 0
  40              		@ link register save eliminated.
  41 0000 80B4     		push	{r7}
  42              	.LCFI0:
  43              		.cfi_def_cfa_offset 4
  44              		.cfi_offset 7, -4
  45 0002 87B0     		sub	sp, sp, #28
  46              	.LCFI1:
  47              		.cfi_def_cfa_offset 32
  48 0004 00AF     		add	r7, sp, #0
  49              	.LCFI2:
  50              		.cfi_def_cfa_register 7
  51 0006 F860     		str	r0, [r7, #12]
  52 0008 B960     		str	r1, [r7, #8]
  53 000a 7A60     		str	r2, [r7, #4]
 584:../Dave/Generated/src/FATFS002/Src/ff.c **** 	BYTE *d = (BYTE*)dst;
  54              		.loc 1 584 0
  55 000c FB68     		ldr	r3, [r7, #12]
  56 000e 7B61     		str	r3, [r7, #20]
 585:../Dave/Generated/src/FATFS002/Src/ff.c **** 	const BYTE *s = (const BYTE*)src;
  57              		.loc 1 585 0
  58 0010 BB68     		ldr	r3, [r7, #8]
  59 0012 3B61     		str	r3, [r7, #16]
 586:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 587:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _WORD_ACCESS == 1
 588:../Dave/Generated/src/FATFS002/Src/ff.c **** 	while (cnt >= sizeof(int)) {
 589:../Dave/Generated/src/FATFS002/Src/ff.c **** 		*(int*)d = *(int*)s;
 590:../Dave/Generated/src/FATFS002/Src/ff.c **** 		d += sizeof(int); s += sizeof(int);
 591:../Dave/Generated/src/FATFS002/Src/ff.c **** 		cnt -= sizeof(int);
 592:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
 593:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
 594:../Dave/Generated/src/FATFS002/Src/ff.c **** 	while (cnt--)
  60              		.loc 1 594 0
  61 0014 0BE0     		b	.L2
  62              	.L3:
 595:../Dave/Generated/src/FATFS002/Src/ff.c **** 		*d++ = *s++;
  63              		.loc 1 595 0
  64 0016 3B69     		ldr	r3, [r7, #16]
  65 0018 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
  66 001a 7B69     		ldr	r3, [r7, #20]
  67 001c 1A70     		strb	r2, [r3, #0]
  68 001e 7B69     		ldr	r3, [r7, #20]
  69 0020 03F10103 		add	r3, r3, #1
  70 0024 7B61     		str	r3, [r7, #20]
  71 0026 3B69     		ldr	r3, [r7, #16]
  72 0028 03F10103 		add	r3, r3, #1
  73 002c 3B61     		str	r3, [r7, #16]
  74              	.L2:
 594:../Dave/Generated/src/FATFS002/Src/ff.c **** 	while (cnt--)
  75              		.loc 1 594 0 discriminator 1
  76 002e 7B68     		ldr	r3, [r7, #4]
  77 0030 002B     		cmp	r3, #0
  78 0032 0CBF     		ite	eq
  79 0034 0023     		moveq	r3, #0
  80 0036 0123     		movne	r3, #1
  81 0038 DBB2     		uxtb	r3, r3
  82 003a 7A68     		ldr	r2, [r7, #4]
  83 003c 02F1FF32 		add	r2, r2, #-1
  84 0040 7A60     		str	r2, [r7, #4]
  85 0042 002B     		cmp	r3, #0
  86 0044 E7D1     		bne	.L3
 596:../Dave/Generated/src/FATFS002/Src/ff.c **** }
  87              		.loc 1 596 0
  88 0046 07F11C07 		add	r7, r7, #28
  89 004a BD46     		mov	sp, r7
  90 004c 80BC     		pop	{r7}
  91 004e 7047     		bx	lr
  92              		.cfi_endproc
  93              	.LFE0:
  95              		.section	.text.mem_set,"ax",%progbits
  96              		.align	2
  97              		.thumb
  98              		.thumb_func
 100              	mem_set:
 101              	.LFB1:
 597:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 598:../Dave/Generated/src/FATFS002/Src/ff.c **** /* Fill memory */
 599:../Dave/Generated/src/FATFS002/Src/ff.c **** static
 600:../Dave/Generated/src/FATFS002/Src/ff.c **** void mem_set (void* dst, int val, UINT cnt) {
 102              		.loc 1 600 0
 103              		.cfi_startproc
 104              		@ args = 0, pretend = 0, frame = 24
 105              		@ frame_needed = 1, uses_anonymous_args = 0
 106              		@ link register save eliminated.
 107 0000 80B4     		push	{r7}
 108              	.LCFI3:
 109              		.cfi_def_cfa_offset 4
 110              		.cfi_offset 7, -4
 111 0002 87B0     		sub	sp, sp, #28
 112              	.LCFI4:
 113              		.cfi_def_cfa_offset 32
 114 0004 00AF     		add	r7, sp, #0
 115              	.LCFI5:
 116              		.cfi_def_cfa_register 7
 117 0006 F860     		str	r0, [r7, #12]
 118 0008 B960     		str	r1, [r7, #8]
 119 000a 7A60     		str	r2, [r7, #4]
 601:../Dave/Generated/src/FATFS002/Src/ff.c **** 	BYTE *d = (BYTE*)dst;
 120              		.loc 1 601 0
 121 000c FB68     		ldr	r3, [r7, #12]
 122 000e 7B61     		str	r3, [r7, #20]
 602:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 603:../Dave/Generated/src/FATFS002/Src/ff.c **** 	while (cnt--)
 123              		.loc 1 603 0
 124 0010 07E0     		b	.L5
 125              	.L6:
 604:../Dave/Generated/src/FATFS002/Src/ff.c **** 		*d++ = (BYTE)val;
 126              		.loc 1 604 0
 127 0012 BB68     		ldr	r3, [r7, #8]
 128 0014 DAB2     		uxtb	r2, r3
 129 0016 7B69     		ldr	r3, [r7, #20]
 130 0018 1A70     		strb	r2, [r3, #0]
 131 001a 7B69     		ldr	r3, [r7, #20]
 132 001c 03F10103 		add	r3, r3, #1
 133 0020 7B61     		str	r3, [r7, #20]
 134              	.L5:
 603:../Dave/Generated/src/FATFS002/Src/ff.c **** 	while (cnt--)
 135              		.loc 1 603 0 discriminator 1
 136 0022 7B68     		ldr	r3, [r7, #4]
 137 0024 002B     		cmp	r3, #0
 138 0026 0CBF     		ite	eq
 139 0028 0023     		moveq	r3, #0
 140 002a 0123     		movne	r3, #1
 141 002c DBB2     		uxtb	r3, r3
 142 002e 7A68     		ldr	r2, [r7, #4]
 143 0030 02F1FF32 		add	r2, r2, #-1
 144 0034 7A60     		str	r2, [r7, #4]
 145 0036 002B     		cmp	r3, #0
 146 0038 EBD1     		bne	.L6
 605:../Dave/Generated/src/FATFS002/Src/ff.c **** }
 147              		.loc 1 605 0
 148 003a 07F11C07 		add	r7, r7, #28
 149 003e BD46     		mov	sp, r7
 150 0040 80BC     		pop	{r7}
 151 0042 7047     		bx	lr
 152              		.cfi_endproc
 153              	.LFE1:
 155              		.section	.text.mem_cmp,"ax",%progbits
 156              		.align	2
 157              		.thumb
 158              		.thumb_func
 160              	mem_cmp:
 161              	.LFB2:
 606:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 607:../Dave/Generated/src/FATFS002/Src/ff.c **** /* Compare memory to memory */
 608:../Dave/Generated/src/FATFS002/Src/ff.c **** static
 609:../Dave/Generated/src/FATFS002/Src/ff.c **** int mem_cmp (const void* dst, const void* src, UINT cnt) {
 162              		.loc 1 609 0
 163              		.cfi_startproc
 164              		@ args = 0, pretend = 0, frame = 32
 165              		@ frame_needed = 1, uses_anonymous_args = 0
 166              		@ link register save eliminated.
 167 0000 80B4     		push	{r7}
 168              	.LCFI6:
 169              		.cfi_def_cfa_offset 4
 170              		.cfi_offset 7, -4
 171 0002 89B0     		sub	sp, sp, #36
 172              	.LCFI7:
 173              		.cfi_def_cfa_offset 40
 174 0004 00AF     		add	r7, sp, #0
 175              	.LCFI8:
 176              		.cfi_def_cfa_register 7
 177 0006 F860     		str	r0, [r7, #12]
 178 0008 B960     		str	r1, [r7, #8]
 179 000a 7A60     		str	r2, [r7, #4]
 610:../Dave/Generated/src/FATFS002/Src/ff.c **** 	const BYTE *d = (const BYTE *)dst, *s = (const BYTE *)src;
 180              		.loc 1 610 0
 181 000c FB68     		ldr	r3, [r7, #12]
 182 000e FB61     		str	r3, [r7, #28]
 183 0010 BB68     		ldr	r3, [r7, #8]
 184 0012 BB61     		str	r3, [r7, #24]
 611:../Dave/Generated/src/FATFS002/Src/ff.c **** 	int r = 0;
 185              		.loc 1 611 0
 186 0014 4FF00003 		mov	r3, #0
 187 0018 7B61     		str	r3, [r7, #20]
 612:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 613:../Dave/Generated/src/FATFS002/Src/ff.c **** 	while (cnt-- && (r = *d++ - *s++) == 0) ;
 188              		.loc 1 613 0
 189 001a 00BF     		nop
 190              	.L9:
 191              		.loc 1 613 0 is_stmt 0 discriminator 1
 192 001c 7B68     		ldr	r3, [r7, #4]
 193 001e 002B     		cmp	r3, #0
 194 0020 0CBF     		ite	eq
 195 0022 0023     		moveq	r3, #0
 196 0024 0123     		movne	r3, #1
 197 0026 DBB2     		uxtb	r3, r3
 198 0028 7A68     		ldr	r2, [r7, #4]
 199 002a 02F1FF32 		add	r2, r2, #-1
 200 002e 7A60     		str	r2, [r7, #4]
 201 0030 002B     		cmp	r3, #0
 202 0032 16D0     		beq	.L8
 203              		.loc 1 613 0 discriminator 2
 204 0034 FB69     		ldr	r3, [r7, #28]
 205 0036 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 206 0038 1A46     		mov	r2, r3
 207 003a BB69     		ldr	r3, [r7, #24]
 208 003c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 209 003e D31A     		subs	r3, r2, r3
 210 0040 7B61     		str	r3, [r7, #20]
 211 0042 7B69     		ldr	r3, [r7, #20]
 212 0044 002B     		cmp	r3, #0
 213 0046 14BF     		ite	ne
 214 0048 0023     		movne	r3, #0
 215 004a 0123     		moveq	r3, #1
 216 004c DBB2     		uxtb	r3, r3
 217 004e FA69     		ldr	r2, [r7, #28]
 218 0050 02F10102 		add	r2, r2, #1
 219 0054 FA61     		str	r2, [r7, #28]
 220 0056 BA69     		ldr	r2, [r7, #24]
 221 0058 02F10102 		add	r2, r2, #1
 222 005c BA61     		str	r2, [r7, #24]
 223 005e 002B     		cmp	r3, #0
 224 0060 DCD1     		bne	.L9
 225              	.L8:
 614:../Dave/Generated/src/FATFS002/Src/ff.c **** 	return r;
 226              		.loc 1 614 0 is_stmt 1
 227 0062 7B69     		ldr	r3, [r7, #20]
 615:../Dave/Generated/src/FATFS002/Src/ff.c **** }
 228              		.loc 1 615 0
 229 0064 1846     		mov	r0, r3
 230 0066 07F12407 		add	r7, r7, #36
 231 006a BD46     		mov	sp, r7
 232 006c 80BC     		pop	{r7}
 233 006e 7047     		bx	lr
 234              		.cfi_endproc
 235              	.LFE2:
 237              		.section	.text.chk_chr,"ax",%progbits
 238              		.align	2
 239              		.thumb
 240              		.thumb_func
 242              	chk_chr:
 243              	.LFB3:
 616:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 617:../Dave/Generated/src/FATFS002/Src/ff.c **** /* Check if chr is contained in the string */
 618:../Dave/Generated/src/FATFS002/Src/ff.c **** static
 619:../Dave/Generated/src/FATFS002/Src/ff.c **** int chk_chr (const char* str, int chr) {
 244              		.loc 1 619 0
 245              		.cfi_startproc
 246              		@ args = 0, pretend = 0, frame = 8
 247              		@ frame_needed = 1, uses_anonymous_args = 0
 248              		@ link register save eliminated.
 249 0000 80B4     		push	{r7}
 250              	.LCFI9:
 251              		.cfi_def_cfa_offset 4
 252              		.cfi_offset 7, -4
 253 0002 83B0     		sub	sp, sp, #12
 254              	.LCFI10:
 255              		.cfi_def_cfa_offset 16
 256 0004 00AF     		add	r7, sp, #0
 257              	.LCFI11:
 258              		.cfi_def_cfa_register 7
 259 0006 7860     		str	r0, [r7, #4]
 260 0008 3960     		str	r1, [r7, #0]
 620:../Dave/Generated/src/FATFS002/Src/ff.c **** 	while (*str && *str != chr) str++;
 261              		.loc 1 620 0
 262 000a 03E0     		b	.L12
 263              	.L14:
 264              		.loc 1 620 0 is_stmt 0 discriminator 1
 265 000c 7B68     		ldr	r3, [r7, #4]
 266 000e 03F10103 		add	r3, r3, #1
 267 0012 7B60     		str	r3, [r7, #4]
 268              	.L12:
 269 0014 7B68     		ldr	r3, [r7, #4]
 270 0016 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 271 0018 002B     		cmp	r3, #0
 272 001a 05D0     		beq	.L13
 273              		.loc 1 620 0 discriminator 2
 274 001c 7B68     		ldr	r3, [r7, #4]
 275 001e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 276 0020 1A46     		mov	r2, r3
 277 0022 3B68     		ldr	r3, [r7, #0]
 278 0024 9A42     		cmp	r2, r3
 279 0026 F1D1     		bne	.L14
 280              	.L13:
 621:../Dave/Generated/src/FATFS002/Src/ff.c **** 	return *str;
 281              		.loc 1 621 0 is_stmt 1
 282 0028 7B68     		ldr	r3, [r7, #4]
 283 002a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 622:../Dave/Generated/src/FATFS002/Src/ff.c **** }
 284              		.loc 1 622 0
 285 002c 1846     		mov	r0, r3
 286 002e 07F10C07 		add	r7, r7, #12
 287 0032 BD46     		mov	sp, r7
 288 0034 80BC     		pop	{r7}
 289 0036 7047     		bx	lr
 290              		.cfi_endproc
 291              	.LFE3:
 293              		.section	.text.move_window,"ax",%progbits
 294              		.align	2
 295              		.thumb
 296              		.thumb_func
 298              	move_window:
 299              	.LFB4:
 623:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 624:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 625:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 626:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
 627:../Dave/Generated/src/FATFS002/Src/ff.c **** /* Request/Release grant to access the volume                            */
 628:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
 629:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _FS_REENTRANT
 630:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 631:../Dave/Generated/src/FATFS002/Src/ff.c **** static
 632:../Dave/Generated/src/FATFS002/Src/ff.c **** int lock_fs (
 633:../Dave/Generated/src/FATFS002/Src/ff.c **** 	FATFS *fs		/* File system object */
 634:../Dave/Generated/src/FATFS002/Src/ff.c **** )
 635:../Dave/Generated/src/FATFS002/Src/ff.c **** {
 636:../Dave/Generated/src/FATFS002/Src/ff.c **** 	return ff_req_grant(fs->sobj);
 637:../Dave/Generated/src/FATFS002/Src/ff.c **** }
 638:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 639:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 640:../Dave/Generated/src/FATFS002/Src/ff.c **** static
 641:../Dave/Generated/src/FATFS002/Src/ff.c **** void unlock_fs (
 642:../Dave/Generated/src/FATFS002/Src/ff.c **** 	FATFS *fs,		/* File system object */
 643:../Dave/Generated/src/FATFS002/Src/ff.c **** 	FRESULT res		/* Result code to be returned */
 644:../Dave/Generated/src/FATFS002/Src/ff.c **** )
 645:../Dave/Generated/src/FATFS002/Src/ff.c **** {
 646:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (res != FR_NOT_ENABLED &&
 647:../Dave/Generated/src/FATFS002/Src/ff.c **** 		res != FR_INVALID_DRIVE &&
 648:../Dave/Generated/src/FATFS002/Src/ff.c **** 		res != FR_INVALID_OBJECT &&
 649:../Dave/Generated/src/FATFS002/Src/ff.c **** 		res != FR_TIMEOUT) {
 650:../Dave/Generated/src/FATFS002/Src/ff.c **** 		ff_rel_grant(fs->sobj);
 651:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
 652:../Dave/Generated/src/FATFS002/Src/ff.c **** }
 653:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
 654:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 655:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 656:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 657:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
 658:../Dave/Generated/src/FATFS002/Src/ff.c **** /* File shareing control functions                                       */
 659:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
 660:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _FS_SHARE
 661:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 662:../Dave/Generated/src/FATFS002/Src/ff.c **** static
 663:../Dave/Generated/src/FATFS002/Src/ff.c **** FRESULT chk_lock (	/* Check if the file can be accessed */
 664:../Dave/Generated/src/FATFS002/Src/ff.c **** 	DIR* dj,		/* Directory object pointing the file to be checked */
 665:../Dave/Generated/src/FATFS002/Src/ff.c **** 	int acc			/* Desired access (0:Read, 1:Write, 2:Delete/Rename) */
 666:../Dave/Generated/src/FATFS002/Src/ff.c **** )
 667:../Dave/Generated/src/FATFS002/Src/ff.c **** {
 668:../Dave/Generated/src/FATFS002/Src/ff.c **** 	UINT i, be;
 669:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 670:../Dave/Generated/src/FATFS002/Src/ff.c **** 	/* Search file semaphore table */
 671:../Dave/Generated/src/FATFS002/Src/ff.c **** 	for (i = be = 0; i < _FS_SHARE; i++) {
 672:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (Files[i].fs) {	/* Existing entry */
 673:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (Files[i].fs == dj->fs &&	 	/* Check if the file matched with an open file */
 674:../Dave/Generated/src/FATFS002/Src/ff.c **** 				Files[i].clu == dj->sclust &&
 675:../Dave/Generated/src/FATFS002/Src/ff.c **** 				Files[i].idx == dj->index) break;
 676:../Dave/Generated/src/FATFS002/Src/ff.c **** 		} else {			/* Blank entry */
 677:../Dave/Generated/src/FATFS002/Src/ff.c **** 			be++;
 678:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
 679:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
 680:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (i == _FS_SHARE)	/* The file is not opened */
 681:../Dave/Generated/src/FATFS002/Src/ff.c **** 		return (be || acc == 2) ? FR_OK : FR_TOO_MANY_OPEN_FILES;	/* Is there a blank entry for new file?
 682:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 683:../Dave/Generated/src/FATFS002/Src/ff.c **** 	/* The file has been opened. Reject any open against writing file and all write mode open */
 684:../Dave/Generated/src/FATFS002/Src/ff.c **** 	return (acc || Files[i].ctr == 0x100) ? FR_LOCKED : FR_OK;
 685:../Dave/Generated/src/FATFS002/Src/ff.c **** }
 686:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 687:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 688:../Dave/Generated/src/FATFS002/Src/ff.c **** static
 689:../Dave/Generated/src/FATFS002/Src/ff.c **** int enq_lock (void)	/* Check if an entry is available for a new file */
 690:../Dave/Generated/src/FATFS002/Src/ff.c **** {
 691:../Dave/Generated/src/FATFS002/Src/ff.c **** 	UINT i;
 692:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 693:../Dave/Generated/src/FATFS002/Src/ff.c **** 	for (i = 0; i < _FS_SHARE && Files[i].fs; i++) ;
 694:../Dave/Generated/src/FATFS002/Src/ff.c **** 	return (i == _FS_SHARE) ? 0 : 1;
 695:../Dave/Generated/src/FATFS002/Src/ff.c **** }
 696:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 697:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 698:../Dave/Generated/src/FATFS002/Src/ff.c **** static
 699:../Dave/Generated/src/FATFS002/Src/ff.c **** UINT inc_lock (	/* Increment file open counter and returns its index (0:int error) */
 700:../Dave/Generated/src/FATFS002/Src/ff.c **** 	DIR* dj,	/* Directory object pointing the file to register or increment */
 701:../Dave/Generated/src/FATFS002/Src/ff.c **** 	int acc		/* Desired access mode (0:Read, !0:Write) */
 702:../Dave/Generated/src/FATFS002/Src/ff.c **** )
 703:../Dave/Generated/src/FATFS002/Src/ff.c **** {
 704:../Dave/Generated/src/FATFS002/Src/ff.c **** 	UINT i;
 705:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 706:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 707:../Dave/Generated/src/FATFS002/Src/ff.c **** 	for (i = 0; i < _FS_SHARE; i++) {	/* Find the file */
 708:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (Files[i].fs == dj->fs &&
 709:../Dave/Generated/src/FATFS002/Src/ff.c **** 			Files[i].clu == dj->sclust &&
 710:../Dave/Generated/src/FATFS002/Src/ff.c **** 			Files[i].idx == dj->index) break;
 711:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
 712:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 713:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (i == _FS_SHARE) {				/* Not opened. Register it as new. */
 714:../Dave/Generated/src/FATFS002/Src/ff.c **** 		for (i = 0; i < _FS_SHARE && Files[i].fs; i++) ;
 715:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (i == _FS_SHARE) return 0;	/* No space to register (int err) */
 716:../Dave/Generated/src/FATFS002/Src/ff.c **** 		Files[i].fs = dj->fs;
 717:../Dave/Generated/src/FATFS002/Src/ff.c **** 		Files[i].clu = dj->sclust;
 718:../Dave/Generated/src/FATFS002/Src/ff.c **** 		Files[i].idx = dj->index;
 719:../Dave/Generated/src/FATFS002/Src/ff.c **** 		Files[i].ctr = 0;
 720:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
 721:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 722:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (acc && Files[i].ctr) return 0;	/* Access violation (int err) */
 723:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 724:../Dave/Generated/src/FATFS002/Src/ff.c **** 	Files[i].ctr = acc ? 0x100 : Files[i].ctr + 1;	/* Set semaphore value */
 725:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 726:../Dave/Generated/src/FATFS002/Src/ff.c **** 	return i + 1;
 727:../Dave/Generated/src/FATFS002/Src/ff.c **** }
 728:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 729:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 730:../Dave/Generated/src/FATFS002/Src/ff.c **** static
 731:../Dave/Generated/src/FATFS002/Src/ff.c **** FRESULT dec_lock (	/* Decrement file open counter */
 732:../Dave/Generated/src/FATFS002/Src/ff.c **** 	UINT i			/* Semaphore index */
 733:../Dave/Generated/src/FATFS002/Src/ff.c **** )
 734:../Dave/Generated/src/FATFS002/Src/ff.c **** {
 735:../Dave/Generated/src/FATFS002/Src/ff.c **** 	WORD n;
 736:../Dave/Generated/src/FATFS002/Src/ff.c **** 	FRESULT res;
 737:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 738:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 739:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (--i < _FS_SHARE) {
 740:../Dave/Generated/src/FATFS002/Src/ff.c **** 		n = Files[i].ctr;
 741:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (n == 0x100) n = 0;
 742:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (n) n--;
 743:../Dave/Generated/src/FATFS002/Src/ff.c **** 		Files[i].ctr = n;
 744:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (!n) Files[i].fs = 0;
 745:../Dave/Generated/src/FATFS002/Src/ff.c **** 		res = FR_OK;
 746:../Dave/Generated/src/FATFS002/Src/ff.c **** 	} else {
 747:../Dave/Generated/src/FATFS002/Src/ff.c **** 		res = FR_INT_ERR;
 748:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
 749:../Dave/Generated/src/FATFS002/Src/ff.c **** 	return res;
 750:../Dave/Generated/src/FATFS002/Src/ff.c **** }
 751:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 752:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 753:../Dave/Generated/src/FATFS002/Src/ff.c **** static
 754:../Dave/Generated/src/FATFS002/Src/ff.c **** void clear_lock (	/* Clear lock entries of the volume */
 755:../Dave/Generated/src/FATFS002/Src/ff.c **** 	FATFS *fs
 756:../Dave/Generated/src/FATFS002/Src/ff.c **** )
 757:../Dave/Generated/src/FATFS002/Src/ff.c **** {
 758:../Dave/Generated/src/FATFS002/Src/ff.c **** 	UINT i;
 759:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 760:../Dave/Generated/src/FATFS002/Src/ff.c **** 	for (i = 0; i < _FS_SHARE; i++) {
 761:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 762:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
 763:../Dave/Generated/src/FATFS002/Src/ff.c **** }
 764:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
 765:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 766:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 767:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 768:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
 769:../Dave/Generated/src/FATFS002/Src/ff.c **** /* Change window offset                                                  */
 770:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
 771:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 772:../Dave/Generated/src/FATFS002/Src/ff.c **** static
 773:../Dave/Generated/src/FATFS002/Src/ff.c **** FRESULT move_window (
 774:../Dave/Generated/src/FATFS002/Src/ff.c **** 	FATFS *fs,		/* File system object */
 775:../Dave/Generated/src/FATFS002/Src/ff.c **** 	DWORD sector	/* Sector number to make appearance in the fs->win[] */
 776:../Dave/Generated/src/FATFS002/Src/ff.c **** )					/* Move to zero only writes back dirty window */
 777:../Dave/Generated/src/FATFS002/Src/ff.c **** {
 300              		.loc 1 777 0
 301              		.cfi_startproc
 302              		@ args = 0, pretend = 0, frame = 16
 303              		@ frame_needed = 1, uses_anonymous_args = 0
 304 0000 80B5     		push	{r7, lr}
 305              	.LCFI12:
 306              		.cfi_def_cfa_offset 8
 307              		.cfi_offset 7, -8
 308              		.cfi_offset 14, -4
 309 0002 84B0     		sub	sp, sp, #16
 310              	.LCFI13:
 311              		.cfi_def_cfa_offset 24
 312 0004 00AF     		add	r7, sp, #0
 313              	.LCFI14:
 314              		.cfi_def_cfa_register 7
 315 0006 7860     		str	r0, [r7, #4]
 316 0008 3960     		str	r1, [r7, #0]
 778:../Dave/Generated/src/FATFS002/Src/ff.c **** 	DWORD wsect;
 779:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 780:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 781:../Dave/Generated/src/FATFS002/Src/ff.c **** 	wsect = fs->winsect;
 317              		.loc 1 781 0
 318 000a 7B68     		ldr	r3, [r7, #4]
 319 000c 1B6B     		ldr	r3, [r3, #48]
 320 000e FB60     		str	r3, [r7, #12]
 782:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (wsect != sector) {	/* Changed current window */
 321              		.loc 1 782 0
 322 0010 FA68     		ldr	r2, [r7, #12]
 323 0012 3B68     		ldr	r3, [r7, #0]
 324 0014 9A42     		cmp	r2, r3
 325 0016 55D0     		beq	.L17
 783:../Dave/Generated/src/FATFS002/Src/ff.c **** #if !_FS_READONLY
 784:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (fs->wflag) {	/* Write back dirty window if needed */
 326              		.loc 1 784 0
 327 0018 7B68     		ldr	r3, [r7, #4]
 328 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 329 001c 002B     		cmp	r3, #0
 330 001e 39D0     		beq	.L18
 785:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (disk_write(fs->drv, fs->win, wsect, 1) != RES_OK)
 331              		.loc 1 785 0
 332 0020 7B68     		ldr	r3, [r7, #4]
 333 0022 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 334 0024 7B68     		ldr	r3, [r7, #4]
 335 0026 03F13403 		add	r3, r3, #52
 336 002a 1046     		mov	r0, r2
 337 002c 1946     		mov	r1, r3
 338 002e FA68     		ldr	r2, [r7, #12]
 339 0030 4FF00103 		mov	r3, #1
 340 0034 FFF7FEFF 		bl	disk_write
 341 0038 0346     		mov	r3, r0
 342 003a 002B     		cmp	r3, #0
 343 003c 02D0     		beq	.L19
 786:../Dave/Generated/src/FATFS002/Src/ff.c **** 				return FR_DISK_ERR;
 344              		.loc 1 786 0
 345 003e 4FF00103 		mov	r3, #1
 346 0042 41E0     		b	.L20
 347              	.L19:
 787:../Dave/Generated/src/FATFS002/Src/ff.c **** 			fs->wflag = 0;
 348              		.loc 1 787 0
 349 0044 7B68     		ldr	r3, [r7, #4]
 350 0046 4FF00002 		mov	r2, #0
 351 004a 1A71     		strb	r2, [r3, #4]
 788:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (wsect < (fs->fatbase + fs->fsize)) {	/* In FAT area */
 352              		.loc 1 788 0
 353 004c 7B68     		ldr	r3, [r7, #4]
 354 004e 5A6A     		ldr	r2, [r3, #36]
 355 0050 7B68     		ldr	r3, [r7, #4]
 356 0052 1B6A     		ldr	r3, [r3, #32]
 357 0054 D218     		adds	r2, r2, r3
 358 0056 FB68     		ldr	r3, [r7, #12]
 359 0058 9A42     		cmp	r2, r3
 360 005a 1BD9     		bls	.L18
 361              	.LBB2:
 789:../Dave/Generated/src/FATFS002/Src/ff.c **** 				BYTE nf;
 790:../Dave/Generated/src/FATFS002/Src/ff.c **** 				for (nf = fs->n_fats; nf > 1; nf--) {	/* Reflect the change to all FAT copies */
 362              		.loc 1 790 0
 363 005c 7B68     		ldr	r3, [r7, #4]
 364 005e DB78     		ldrb	r3, [r3, #3]
 365 0060 FB72     		strb	r3, [r7, #11]
 366 0062 14E0     		b	.L21
 367              	.L22:
 791:../Dave/Generated/src/FATFS002/Src/ff.c **** 					wsect += fs->fsize;
 368              		.loc 1 791 0 discriminator 2
 369 0064 7B68     		ldr	r3, [r7, #4]
 370 0066 1B6A     		ldr	r3, [r3, #32]
 371 0068 FA68     		ldr	r2, [r7, #12]
 372 006a D318     		adds	r3, r2, r3
 373 006c FB60     		str	r3, [r7, #12]
 792:../Dave/Generated/src/FATFS002/Src/ff.c **** 					disk_write(fs->drv, fs->win, wsect, 1);
 374              		.loc 1 792 0 discriminator 2
 375 006e 7B68     		ldr	r3, [r7, #4]
 376 0070 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 377 0072 7B68     		ldr	r3, [r7, #4]
 378 0074 03F13403 		add	r3, r3, #52
 379 0078 1046     		mov	r0, r2
 380 007a 1946     		mov	r1, r3
 381 007c FA68     		ldr	r2, [r7, #12]
 382 007e 4FF00103 		mov	r3, #1
 383 0082 FFF7FEFF 		bl	disk_write
 790:../Dave/Generated/src/FATFS002/Src/ff.c **** 				for (nf = fs->n_fats; nf > 1; nf--) {	/* Reflect the change to all FAT copies */
 384              		.loc 1 790 0 discriminator 2
 385 0086 FB7A     		ldrb	r3, [r7, #11]
 386 0088 03F1FF33 		add	r3, r3, #-1
 387 008c FB72     		strb	r3, [r7, #11]
 388              	.L21:
 790:../Dave/Generated/src/FATFS002/Src/ff.c **** 				for (nf = fs->n_fats; nf > 1; nf--) {	/* Reflect the change to all FAT copies */
 389              		.loc 1 790 0 is_stmt 0 discriminator 1
 390 008e FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 391 0090 012B     		cmp	r3, #1
 392 0092 E7D8     		bhi	.L22
 393              	.L18:
 394              	.LBE2:
 793:../Dave/Generated/src/FATFS002/Src/ff.c **** 				}
 794:../Dave/Generated/src/FATFS002/Src/ff.c **** 			}
 795:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
 796:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
 797:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (sector) {
 395              		.loc 1 797 0 is_stmt 1
 396 0094 3B68     		ldr	r3, [r7, #0]
 397 0096 002B     		cmp	r3, #0
 398 0098 14D0     		beq	.L17
 798:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (disk_read(fs->drv, fs->win, sector, 1) != RES_OK)
 399              		.loc 1 798 0
 400 009a 7B68     		ldr	r3, [r7, #4]
 401 009c 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 402 009e 7B68     		ldr	r3, [r7, #4]
 403 00a0 03F13403 		add	r3, r3, #52
 404 00a4 1046     		mov	r0, r2
 405 00a6 1946     		mov	r1, r3
 406 00a8 3A68     		ldr	r2, [r7, #0]
 407 00aa 4FF00103 		mov	r3, #1
 408 00ae FFF7FEFF 		bl	disk_read
 409 00b2 0346     		mov	r3, r0
 410 00b4 002B     		cmp	r3, #0
 411 00b6 02D0     		beq	.L23
 799:../Dave/Generated/src/FATFS002/Src/ff.c **** 				return FR_DISK_ERR;
 412              		.loc 1 799 0
 413 00b8 4FF00103 		mov	r3, #1
 414 00bc 04E0     		b	.L20
 415              	.L23:
 800:../Dave/Generated/src/FATFS002/Src/ff.c **** 			fs->winsect = sector;
 416              		.loc 1 800 0
 417 00be 7B68     		ldr	r3, [r7, #4]
 418 00c0 3A68     		ldr	r2, [r7, #0]
 419 00c2 1A63     		str	r2, [r3, #48]
 420              	.L17:
 801:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
 802:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
 803:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 804:../Dave/Generated/src/FATFS002/Src/ff.c **** 	return FR_OK;
 421              		.loc 1 804 0
 422 00c4 4FF00003 		mov	r3, #0
 423              	.L20:
 805:../Dave/Generated/src/FATFS002/Src/ff.c **** }
 424              		.loc 1 805 0
 425 00c8 1846     		mov	r0, r3
 426 00ca 07F11007 		add	r7, r7, #16
 427 00ce BD46     		mov	sp, r7
 428 00d0 80BD     		pop	{r7, pc}
 429              		.cfi_endproc
 430              	.LFE4:
 432 00d2 00BF     		.section	.text.sync,"ax",%progbits
 433              		.align	2
 434              		.thumb
 435              		.thumb_func
 437              	sync:
 438              	.LFB5:
 806:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 807:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 808:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 809:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 810:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
 811:../Dave/Generated/src/FATFS002/Src/ff.c **** /* Clean-up cached data                                                  */
 812:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
 813:../Dave/Generated/src/FATFS002/Src/ff.c **** #if !_FS_READONLY
 814:../Dave/Generated/src/FATFS002/Src/ff.c **** static
 815:../Dave/Generated/src/FATFS002/Src/ff.c **** FRESULT sync (	/* FR_OK: successful, FR_DISK_ERR: failed */
 816:../Dave/Generated/src/FATFS002/Src/ff.c **** 	FATFS *fs	/* File system object */
 817:../Dave/Generated/src/FATFS002/Src/ff.c **** )
 818:../Dave/Generated/src/FATFS002/Src/ff.c **** {
 439              		.loc 1 818 0
 440              		.cfi_startproc
 441              		@ args = 0, pretend = 0, frame = 16
 442              		@ frame_needed = 1, uses_anonymous_args = 0
 443 0000 80B5     		push	{r7, lr}
 444              	.LCFI15:
 445              		.cfi_def_cfa_offset 8
 446              		.cfi_offset 7, -8
 447              		.cfi_offset 14, -4
 448 0002 84B0     		sub	sp, sp, #16
 449              	.LCFI16:
 450              		.cfi_def_cfa_offset 24
 451 0004 00AF     		add	r7, sp, #0
 452              	.LCFI17:
 453              		.cfi_def_cfa_register 7
 454 0006 7860     		str	r0, [r7, #4]
 819:../Dave/Generated/src/FATFS002/Src/ff.c **** 	FRESULT res;
 820:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 821:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 822:../Dave/Generated/src/FATFS002/Src/ff.c **** 	res = move_window(fs, 0);
 455              		.loc 1 822 0
 456 0008 7868     		ldr	r0, [r7, #4]
 457 000a 4FF00001 		mov	r1, #0
 458 000e FFF7FEFF 		bl	move_window
 459 0012 0346     		mov	r3, r0
 460 0014 FB73     		strb	r3, [r7, #15]
 823:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (res == FR_OK) {
 461              		.loc 1 823 0
 462 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 463 0018 002B     		cmp	r3, #0
 464 001a 40F0AB80 		bne	.L25
 824:../Dave/Generated/src/FATFS002/Src/ff.c **** 		/* Update FSInfo sector if needed */
 825:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (fs->fs_type == FS_FAT32 && fs->fsi_flag) {
 465              		.loc 1 825 0
 466 001e 7B68     		ldr	r3, [r7, #4]
 467 0020 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 468 0022 032B     		cmp	r3, #3
 469 0024 40F09780 		bne	.L26
 470              		.loc 1 825 0 is_stmt 0 discriminator 1
 471 0028 7B68     		ldr	r3, [r7, #4]
 472 002a 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 473 002c 002B     		cmp	r3, #0
 474 002e 00F09280 		beq	.L26
 826:../Dave/Generated/src/FATFS002/Src/ff.c **** 			fs->winsect = 0;
 475              		.loc 1 826 0 is_stmt 1
 476 0032 7B68     		ldr	r3, [r7, #4]
 477 0034 4FF00002 		mov	r2, #0
 478 0038 1A63     		str	r2, [r3, #48]
 827:../Dave/Generated/src/FATFS002/Src/ff.c **** 			/* Create FSInfo structure */
 828:../Dave/Generated/src/FATFS002/Src/ff.c **** 			mem_set(fs->win, 0, 512);
 479              		.loc 1 828 0
 480 003a 7B68     		ldr	r3, [r7, #4]
 481 003c 03F13403 		add	r3, r3, #52
 482 0040 1846     		mov	r0, r3
 483 0042 4FF00001 		mov	r1, #0
 484 0046 4FF40072 		mov	r2, #512
 485 004a FFF7FEFF 		bl	mem_set
 829:../Dave/Generated/src/FATFS002/Src/ff.c **** 			ST_WORD(fs->win+BS_55AA, 0xAA55);
 486              		.loc 1 829 0
 487 004e 7B68     		ldr	r3, [r7, #4]
 488 0050 4FF05502 		mov	r2, #85
 489 0054 83F83222 		strb	r2, [r3, #562]
 490 0058 7B68     		ldr	r3, [r7, #4]
 491 005a 4FF0AA02 		mov	r2, #170
 492 005e 83F83322 		strb	r2, [r3, #563]
 830:../Dave/Generated/src/FATFS002/Src/ff.c **** 			ST_DWORD(fs->win+FSI_LeadSig, 0x41615252);
 493              		.loc 1 830 0
 494 0062 7B68     		ldr	r3, [r7, #4]
 495 0064 4FF05202 		mov	r2, #82
 496 0068 83F83420 		strb	r2, [r3, #52]
 497 006c 7B68     		ldr	r3, [r7, #4]
 498 006e 4FF05202 		mov	r2, #82
 499 0072 83F83520 		strb	r2, [r3, #53]
 500 0076 7B68     		ldr	r3, [r7, #4]
 501 0078 4FF06102 		mov	r2, #97
 502 007c 83F83620 		strb	r2, [r3, #54]
 503 0080 7B68     		ldr	r3, [r7, #4]
 504 0082 4FF04102 		mov	r2, #65
 505 0086 83F83720 		strb	r2, [r3, #55]
 831:../Dave/Generated/src/FATFS002/Src/ff.c **** 			ST_DWORD(fs->win+FSI_StrucSig, 0x61417272);
 506              		.loc 1 831 0
 507 008a 7B68     		ldr	r3, [r7, #4]
 508 008c 4FF07202 		mov	r2, #114
 509 0090 83F81822 		strb	r2, [r3, #536]
 510 0094 7B68     		ldr	r3, [r7, #4]
 511 0096 4FF07202 		mov	r2, #114
 512 009a 83F81922 		strb	r2, [r3, #537]
 513 009e 7B68     		ldr	r3, [r7, #4]
 514 00a0 4FF04102 		mov	r2, #65
 515 00a4 83F81A22 		strb	r2, [r3, #538]
 516 00a8 7B68     		ldr	r3, [r7, #4]
 517 00aa 4FF06102 		mov	r2, #97
 518 00ae 83F81B22 		strb	r2, [r3, #539]
 832:../Dave/Generated/src/FATFS002/Src/ff.c **** 			ST_DWORD(fs->win+FSI_Free_Count, fs->free_clust);
 519              		.loc 1 832 0
 520 00b2 7B68     		ldr	r3, [r7, #4]
 521 00b4 1B69     		ldr	r3, [r3, #16]
 522 00b6 DAB2     		uxtb	r2, r3
 523 00b8 7B68     		ldr	r3, [r7, #4]
 524 00ba 83F81C22 		strb	r2, [r3, #540]
 525 00be 7B68     		ldr	r3, [r7, #4]
 526 00c0 1B69     		ldr	r3, [r3, #16]
 527 00c2 9BB2     		uxth	r3, r3
 528 00c4 4FEA1323 		lsr	r3, r3, #8
 529 00c8 9BB2     		uxth	r3, r3
 530 00ca DAB2     		uxtb	r2, r3
 531 00cc 7B68     		ldr	r3, [r7, #4]
 532 00ce 83F81D22 		strb	r2, [r3, #541]
 533 00d2 7B68     		ldr	r3, [r7, #4]
 534 00d4 1B69     		ldr	r3, [r3, #16]
 535 00d6 4FEA1343 		lsr	r3, r3, #16
 536 00da DAB2     		uxtb	r2, r3
 537 00dc 7B68     		ldr	r3, [r7, #4]
 538 00de 83F81E22 		strb	r2, [r3, #542]
 539 00e2 7B68     		ldr	r3, [r7, #4]
 540 00e4 1B69     		ldr	r3, [r3, #16]
 541 00e6 4FEA1363 		lsr	r3, r3, #24
 542 00ea DAB2     		uxtb	r2, r3
 543 00ec 7B68     		ldr	r3, [r7, #4]
 544 00ee 83F81F22 		strb	r2, [r3, #543]
 833:../Dave/Generated/src/FATFS002/Src/ff.c **** 			ST_DWORD(fs->win+FSI_Nxt_Free, fs->last_clust);
 545              		.loc 1 833 0
 546 00f2 7B68     		ldr	r3, [r7, #4]
 547 00f4 DB68     		ldr	r3, [r3, #12]
 548 00f6 DAB2     		uxtb	r2, r3
 549 00f8 7B68     		ldr	r3, [r7, #4]
 550 00fa 83F82022 		strb	r2, [r3, #544]
 551 00fe 7B68     		ldr	r3, [r7, #4]
 552 0100 DB68     		ldr	r3, [r3, #12]
 553 0102 9BB2     		uxth	r3, r3
 554 0104 4FEA1323 		lsr	r3, r3, #8
 555 0108 9BB2     		uxth	r3, r3
 556 010a DAB2     		uxtb	r2, r3
 557 010c 7B68     		ldr	r3, [r7, #4]
 558 010e 83F82122 		strb	r2, [r3, #545]
 559 0112 7B68     		ldr	r3, [r7, #4]
 560 0114 DB68     		ldr	r3, [r3, #12]
 561 0116 4FEA1343 		lsr	r3, r3, #16
 562 011a DAB2     		uxtb	r2, r3
 563 011c 7B68     		ldr	r3, [r7, #4]
 564 011e 83F82222 		strb	r2, [r3, #546]
 565 0122 7B68     		ldr	r3, [r7, #4]
 566 0124 DB68     		ldr	r3, [r3, #12]
 567 0126 4FEA1363 		lsr	r3, r3, #24
 568 012a DAB2     		uxtb	r2, r3
 569 012c 7B68     		ldr	r3, [r7, #4]
 570 012e 83F82322 		strb	r2, [r3, #547]
 834:../Dave/Generated/src/FATFS002/Src/ff.c **** 			/* Write it into the FSInfo sector */
 835:../Dave/Generated/src/FATFS002/Src/ff.c **** 			disk_write(fs->drv, fs->win, fs->fsi_sector, 1);
 571              		.loc 1 835 0
 572 0132 7B68     		ldr	r3, [r7, #4]
 573 0134 5978     		ldrb	r1, [r3, #1]	@ zero_extendqisi2
 574 0136 7B68     		ldr	r3, [r7, #4]
 575 0138 03F13402 		add	r2, r3, #52
 576 013c 7B68     		ldr	r3, [r7, #4]
 577 013e 5B69     		ldr	r3, [r3, #20]
 578 0140 0846     		mov	r0, r1
 579 0142 1146     		mov	r1, r2
 580 0144 1A46     		mov	r2, r3
 581 0146 4FF00103 		mov	r3, #1
 582 014a FFF7FEFF 		bl	disk_write
 836:../Dave/Generated/src/FATFS002/Src/ff.c **** 			fs->fsi_flag = 0;
 583              		.loc 1 836 0
 584 014e 7B68     		ldr	r3, [r7, #4]
 585 0150 4FF00002 		mov	r2, #0
 586 0154 5A71     		strb	r2, [r3, #5]
 587              	.L26:
 837:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
 838:../Dave/Generated/src/FATFS002/Src/ff.c **** 		/* Make sure that no pending write process in the physical drive */
 839:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (disk_ioctl(fs->drv, CTRL_SYNC, 0) != RES_OK)
 588              		.loc 1 839 0
 589 0156 7B68     		ldr	r3, [r7, #4]
 590 0158 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 591 015a 1846     		mov	r0, r3
 592 015c 4FF00001 		mov	r1, #0
 593 0160 4FF00002 		mov	r2, #0
 594 0164 FFF7FEFF 		bl	disk_ioctl
 595 0168 0346     		mov	r3, r0
 596 016a 002B     		cmp	r3, #0
 597 016c 02D0     		beq	.L25
 840:../Dave/Generated/src/FATFS002/Src/ff.c **** 			res = FR_DISK_ERR;
 598              		.loc 1 840 0
 599 016e 4FF00103 		mov	r3, #1
 600 0172 FB73     		strb	r3, [r7, #15]
 601              	.L25:
 841:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
 842:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 843:../Dave/Generated/src/FATFS002/Src/ff.c **** 	return res;
 602              		.loc 1 843 0
 603 0174 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 844:../Dave/Generated/src/FATFS002/Src/ff.c **** }
 604              		.loc 1 844 0
 605 0176 1846     		mov	r0, r3
 606 0178 07F11007 		add	r7, r7, #16
 607 017c BD46     		mov	sp, r7
 608 017e 80BD     		pop	{r7, pc}
 609              		.cfi_endproc
 610              	.LFE5:
 612              		.section	.text.clust2sect,"ax",%progbits
 613              		.align	2
 614              		.global	clust2sect
 615              		.thumb
 616              		.thumb_func
 618              	clust2sect:
 619              	.LFB6:
 845:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
 846:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 847:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 848:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 849:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 850:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
 851:../Dave/Generated/src/FATFS002/Src/ff.c **** /* Get sector# from cluster#                                             */
 852:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
 853:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 854:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 855:../Dave/Generated/src/FATFS002/Src/ff.c **** DWORD clust2sect (	/* !=0: Sector number, 0: Failed - invalid cluster# */
 856:../Dave/Generated/src/FATFS002/Src/ff.c **** 	FATFS *fs,		/* File system object */
 857:../Dave/Generated/src/FATFS002/Src/ff.c **** 	DWORD clst		/* Cluster# to be converted */
 858:../Dave/Generated/src/FATFS002/Src/ff.c **** )
 859:../Dave/Generated/src/FATFS002/Src/ff.c **** {
 620              		.loc 1 859 0
 621              		.cfi_startproc
 622              		@ args = 0, pretend = 0, frame = 8
 623              		@ frame_needed = 1, uses_anonymous_args = 0
 624              		@ link register save eliminated.
 625 0000 80B4     		push	{r7}
 626              	.LCFI18:
 627              		.cfi_def_cfa_offset 4
 628              		.cfi_offset 7, -4
 629 0002 83B0     		sub	sp, sp, #12
 630              	.LCFI19:
 631              		.cfi_def_cfa_offset 16
 632 0004 00AF     		add	r7, sp, #0
 633              	.LCFI20:
 634              		.cfi_def_cfa_register 7
 635 0006 7860     		str	r0, [r7, #4]
 636 0008 3960     		str	r1, [r7, #0]
 860:../Dave/Generated/src/FATFS002/Src/ff.c **** 	clst -= 2;
 637              		.loc 1 860 0
 638 000a 3B68     		ldr	r3, [r7, #0]
 639 000c A3F10203 		sub	r3, r3, #2
 640 0010 3B60     		str	r3, [r7, #0]
 861:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (clst >= (fs->n_fatent - 2)) return 0;		/* Invalid cluster# */
 641              		.loc 1 861 0
 642 0012 7B68     		ldr	r3, [r7, #4]
 643 0014 DB69     		ldr	r3, [r3, #28]
 644 0016 A3F10202 		sub	r2, r3, #2
 645 001a 3B68     		ldr	r3, [r7, #0]
 646 001c 9A42     		cmp	r2, r3
 647 001e 02D8     		bhi	.L29
 648              		.loc 1 861 0 is_stmt 0 discriminator 1
 649 0020 4FF00003 		mov	r3, #0
 650 0024 07E0     		b	.L30
 651              	.L29:
 862:../Dave/Generated/src/FATFS002/Src/ff.c **** 	return clst * fs->csize + fs->database;
 652              		.loc 1 862 0 is_stmt 1
 653 0026 7B68     		ldr	r3, [r7, #4]
 654 0028 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 655 002a 3A68     		ldr	r2, [r7, #0]
 656 002c 02FB03F2 		mul	r2, r2, r3
 657 0030 7B68     		ldr	r3, [r7, #4]
 658 0032 DB6A     		ldr	r3, [r3, #44]
 659 0034 D318     		adds	r3, r2, r3
 660              	.L30:
 863:../Dave/Generated/src/FATFS002/Src/ff.c **** }
 661              		.loc 1 863 0
 662 0036 1846     		mov	r0, r3
 663 0038 07F10C07 		add	r7, r7, #12
 664 003c BD46     		mov	sp, r7
 665 003e 80BC     		pop	{r7}
 666 0040 7047     		bx	lr
 667              		.cfi_endproc
 668              	.LFE6:
 670 0042 00BF     		.section	.text.get_fat,"ax",%progbits
 671              		.align	2
 672              		.global	get_fat
 673              		.thumb
 674              		.thumb_func
 676              	get_fat:
 677              	.LFB7:
 864:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 865:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 866:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 867:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 868:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
 869:../Dave/Generated/src/FATFS002/Src/ff.c **** /* FAT access - Read value of a FAT entry                                */
 870:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
 871:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 872:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 873:../Dave/Generated/src/FATFS002/Src/ff.c **** DWORD get_fat (	/* 0xFFFFFFFF:Disk error, 1:Internal error, Else:Cluster status */
 874:../Dave/Generated/src/FATFS002/Src/ff.c **** 	FATFS *fs,	/* File system object */
 875:../Dave/Generated/src/FATFS002/Src/ff.c **** 	DWORD clst	/* Cluster# to get the link information */
 876:../Dave/Generated/src/FATFS002/Src/ff.c **** )
 877:../Dave/Generated/src/FATFS002/Src/ff.c **** {
 678              		.loc 1 877 0
 679              		.cfi_startproc
 680              		@ args = 0, pretend = 0, frame = 24
 681              		@ frame_needed = 1, uses_anonymous_args = 0
 682 0000 80B5     		push	{r7, lr}
 683              	.LCFI21:
 684              		.cfi_def_cfa_offset 8
 685              		.cfi_offset 7, -8
 686              		.cfi_offset 14, -4
 687 0002 86B0     		sub	sp, sp, #24
 688              	.LCFI22:
 689              		.cfi_def_cfa_offset 32
 690 0004 00AF     		add	r7, sp, #0
 691              	.LCFI23:
 692              		.cfi_def_cfa_register 7
 693 0006 7860     		str	r0, [r7, #4]
 694 0008 3960     		str	r1, [r7, #0]
 878:../Dave/Generated/src/FATFS002/Src/ff.c **** 	UINT wc, bc;
 879:../Dave/Generated/src/FATFS002/Src/ff.c **** 	BYTE *p;
 880:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 881:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 882:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (clst < 2 || clst >= fs->n_fatent)	/* Chack range */
 695              		.loc 1 882 0
 696 000a 3B68     		ldr	r3, [r7, #0]
 697 000c 012B     		cmp	r3, #1
 698 000e 04D9     		bls	.L32
 699              		.loc 1 882 0 is_stmt 0 discriminator 1
 700 0010 7B68     		ldr	r3, [r7, #4]
 701 0012 DA69     		ldr	r2, [r3, #28]
 702 0014 3B68     		ldr	r3, [r7, #0]
 703 0016 9A42     		cmp	r2, r3
 704 0018 02D8     		bhi	.L33
 705              	.L32:
 883:../Dave/Generated/src/FATFS002/Src/ff.c **** 		return 1;
 706              		.loc 1 883 0 is_stmt 1
 707 001a 4FF00103 		mov	r3, #1
 708 001e BCE0     		b	.L34
 709              	.L33:
 884:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 885:../Dave/Generated/src/FATFS002/Src/ff.c **** 	switch (fs->fs_type) {
 710              		.loc 1 885 0
 711 0020 7B68     		ldr	r3, [r7, #4]
 712 0022 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 713 0024 022B     		cmp	r3, #2
 714 0026 52D0     		beq	.L37
 715 0028 032B     		cmp	r3, #3
 716 002a 78D0     		beq	.L38
 717 002c 012B     		cmp	r3, #1
 718 002e 40F0B280 		bne	.L35
 719              	.L36:
 886:../Dave/Generated/src/FATFS002/Src/ff.c **** 	case FS_FAT12 :
 887:../Dave/Generated/src/FATFS002/Src/ff.c **** 		bc = (UINT)clst; bc += bc / 2;
 720              		.loc 1 887 0
 721 0032 3B68     		ldr	r3, [r7, #0]
 722 0034 7B61     		str	r3, [r7, #20]
 723 0036 7B69     		ldr	r3, [r7, #20]
 724 0038 4FEA5303 		lsr	r3, r3, #1
 725 003c 7A69     		ldr	r2, [r7, #20]
 726 003e D318     		adds	r3, r2, r3
 727 0040 7B61     		str	r3, [r7, #20]
 888:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (move_window(fs, fs->fatbase + (bc / SS(fs)))) break;
 728              		.loc 1 888 0
 729 0042 7B68     		ldr	r3, [r7, #4]
 730 0044 5A6A     		ldr	r2, [r3, #36]
 731 0046 7B69     		ldr	r3, [r7, #20]
 732 0048 4FEA5323 		lsr	r3, r3, #9
 733 004c D318     		adds	r3, r2, r3
 734 004e 7868     		ldr	r0, [r7, #4]
 735 0050 1946     		mov	r1, r3
 736 0052 FFF7FEFF 		bl	move_window
 737 0056 0346     		mov	r3, r0
 738 0058 002B     		cmp	r3, #0
 739 005a 40F09580 		bne	.L45
 740              	.L39:
 889:../Dave/Generated/src/FATFS002/Src/ff.c **** 		wc = fs->win[bc % SS(fs)]; bc++;
 741              		.loc 1 889 0
 742 005e 7B69     		ldr	r3, [r7, #20]
 743 0060 4FEAC353 		lsl	r3, r3, #23
 744 0064 4FEAD353 		lsr	r3, r3, #23
 745 0068 7A68     		ldr	r2, [r7, #4]
 746 006a D318     		adds	r3, r2, r3
 747 006c 93F83430 		ldrb	r3, [r3, #52]	@ zero_extendqisi2
 748 0070 3B61     		str	r3, [r7, #16]
 749 0072 7B69     		ldr	r3, [r7, #20]
 750 0074 03F10103 		add	r3, r3, #1
 751 0078 7B61     		str	r3, [r7, #20]
 890:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (move_window(fs, fs->fatbase + (bc / SS(fs)))) break;
 752              		.loc 1 890 0
 753 007a 7B68     		ldr	r3, [r7, #4]
 754 007c 5A6A     		ldr	r2, [r3, #36]
 755 007e 7B69     		ldr	r3, [r7, #20]
 756 0080 4FEA5323 		lsr	r3, r3, #9
 757 0084 D318     		adds	r3, r2, r3
 758 0086 7868     		ldr	r0, [r7, #4]
 759 0088 1946     		mov	r1, r3
 760 008a FFF7FEFF 		bl	move_window
 761 008e 0346     		mov	r3, r0
 762 0090 002B     		cmp	r3, #0
 763 0092 7BD1     		bne	.L46
 764              	.L40:
 891:../Dave/Generated/src/FATFS002/Src/ff.c **** 		wc |= fs->win[bc % SS(fs)] << 8;
 765              		.loc 1 891 0
 766 0094 7B69     		ldr	r3, [r7, #20]
 767 0096 4FEAC353 		lsl	r3, r3, #23
 768 009a 4FEAD353 		lsr	r3, r3, #23
 769 009e 7A68     		ldr	r2, [r7, #4]
 770 00a0 D318     		adds	r3, r2, r3
 771 00a2 93F83430 		ldrb	r3, [r3, #52]	@ zero_extendqisi2
 772 00a6 4FEA0323 		lsl	r3, r3, #8
 773 00aa 3A69     		ldr	r2, [r7, #16]
 774 00ac 1343     		orrs	r3, r3, r2
 775 00ae 3B61     		str	r3, [r7, #16]
 892:../Dave/Generated/src/FATFS002/Src/ff.c **** 		return (clst & 1) ? (wc >> 4) : (wc & 0xFFF);
 776              		.loc 1 892 0
 777 00b0 3B68     		ldr	r3, [r7, #0]
 778 00b2 03F00103 		and	r3, r3, #1
 779 00b6 002B     		cmp	r3, #0
 780 00b8 03D0     		beq	.L41
 781              		.loc 1 892 0 is_stmt 0 discriminator 1
 782 00ba 3B69     		ldr	r3, [r7, #16]
 783 00bc 4FEA1313 		lsr	r3, r3, #4
 784 00c0 04E0     		b	.L42
 785              	.L41:
 786              		.loc 1 892 0 discriminator 2
 787 00c2 3B69     		ldr	r3, [r7, #16]
 788 00c4 4FEA0353 		lsl	r3, r3, #20
 789 00c8 4FEA1353 		lsr	r3, r3, #20
 790              	.L42:
 791              		.loc 1 892 0 discriminator 3
 792 00cc 65E0     		b	.L34
 793              	.L37:
 893:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 894:../Dave/Generated/src/FATFS002/Src/ff.c **** 	case FS_FAT16 :
 895:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 2)))) break;
 794              		.loc 1 895 0 is_stmt 1
 795 00ce 7B68     		ldr	r3, [r7, #4]
 796 00d0 5A6A     		ldr	r2, [r3, #36]
 797 00d2 3B68     		ldr	r3, [r7, #0]
 798 00d4 4FEA1323 		lsr	r3, r3, #8
 799 00d8 D318     		adds	r3, r2, r3
 800 00da 7868     		ldr	r0, [r7, #4]
 801 00dc 1946     		mov	r1, r3
 802 00de FFF7FEFF 		bl	move_window
 803 00e2 0346     		mov	r3, r0
 804 00e4 002B     		cmp	r3, #0
 805 00e6 53D1     		bne	.L47
 806              	.L43:
 896:../Dave/Generated/src/FATFS002/Src/ff.c **** 		p = &fs->win[clst * 2 % SS(fs)];
 807              		.loc 1 896 0
 808 00e8 3B68     		ldr	r3, [r7, #0]
 809 00ea 4FEA4303 		lsl	r3, r3, #1
 810 00ee 4FEAC353 		lsl	r3, r3, #23
 811 00f2 4FEAD353 		lsr	r3, r3, #23
 812 00f6 03F13003 		add	r3, r3, #48
 813 00fa 7A68     		ldr	r2, [r7, #4]
 814 00fc D318     		adds	r3, r2, r3
 815 00fe 03F10403 		add	r3, r3, #4
 816 0102 FB60     		str	r3, [r7, #12]
 897:../Dave/Generated/src/FATFS002/Src/ff.c **** 		return LD_WORD(p);
 817              		.loc 1 897 0
 818 0104 FB68     		ldr	r3, [r7, #12]
 819 0106 03F10103 		add	r3, r3, #1
 820 010a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 821 010c 4FEA0323 		lsl	r3, r3, #8
 822 0110 9AB2     		uxth	r2, r3
 823 0112 FB68     		ldr	r3, [r7, #12]
 824 0114 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 825 0116 1343     		orrs	r3, r3, r2
 826 0118 9BB2     		uxth	r3, r3
 827 011a 9BB2     		uxth	r3, r3
 828 011c 3DE0     		b	.L34
 829              	.L38:
 898:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 899:../Dave/Generated/src/FATFS002/Src/ff.c **** 	case FS_FAT32 :
 900:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 4)))) break;
 830              		.loc 1 900 0
 831 011e 7B68     		ldr	r3, [r7, #4]
 832 0120 5A6A     		ldr	r2, [r3, #36]
 833 0122 3B68     		ldr	r3, [r7, #0]
 834 0124 4FEAD313 		lsr	r3, r3, #7
 835 0128 D318     		adds	r3, r2, r3
 836 012a 7868     		ldr	r0, [r7, #4]
 837 012c 1946     		mov	r1, r3
 838 012e FFF7FEFF 		bl	move_window
 839 0132 0346     		mov	r3, r0
 840 0134 002B     		cmp	r3, #0
 841 0136 2DD1     		bne	.L48
 842              	.L44:
 901:../Dave/Generated/src/FATFS002/Src/ff.c **** 		p = &fs->win[clst * 4 % SS(fs)];
 843              		.loc 1 901 0
 844 0138 3B68     		ldr	r3, [r7, #0]
 845 013a 4FEA8303 		lsl	r3, r3, #2
 846 013e 4FEAC353 		lsl	r3, r3, #23
 847 0142 4FEAD353 		lsr	r3, r3, #23
 848 0146 03F13003 		add	r3, r3, #48
 849 014a 7A68     		ldr	r2, [r7, #4]
 850 014c D318     		adds	r3, r2, r3
 851 014e 03F10403 		add	r3, r3, #4
 852 0152 FB60     		str	r3, [r7, #12]
 902:../Dave/Generated/src/FATFS002/Src/ff.c **** 		return LD_DWORD(p) & 0x0FFFFFFF;
 853              		.loc 1 902 0
 854 0154 FB68     		ldr	r3, [r7, #12]
 855 0156 03F10303 		add	r3, r3, #3
 856 015a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 857 015c 4FEA0362 		lsl	r2, r3, #24
 858 0160 FB68     		ldr	r3, [r7, #12]
 859 0162 03F10203 		add	r3, r3, #2
 860 0166 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 861 0168 4FEA0343 		lsl	r3, r3, #16
 862 016c 1A43     		orrs	r2, r2, r3
 863 016e FB68     		ldr	r3, [r7, #12]
 864 0170 03F10103 		add	r3, r3, #1
 865 0174 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 866 0176 4FEA0323 		lsl	r3, r3, #8
 867 017a 1A43     		orrs	r2, r2, r3
 868 017c FB68     		ldr	r3, [r7, #12]
 869 017e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 870 0180 1343     		orrs	r3, r3, r2
 871 0182 23F07043 		bic	r3, r3, #-268435456
 872 0186 08E0     		b	.L34
 873              	.L45:
 888:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (move_window(fs, fs->fatbase + (bc / SS(fs)))) break;
 874              		.loc 1 888 0
 875 0188 00BF     		nop
 876 018a 04E0     		b	.L35
 877              	.L46:
 890:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (move_window(fs, fs->fatbase + (bc / SS(fs)))) break;
 878              		.loc 1 890 0
 879 018c 00BF     		nop
 880 018e 02E0     		b	.L35
 881              	.L47:
 895:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 2)))) break;
 882              		.loc 1 895 0
 883 0190 00BF     		nop
 884 0192 00E0     		b	.L35
 885              	.L48:
 900:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 4)))) break;
 886              		.loc 1 900 0
 887 0194 00BF     		nop
 888              	.L35:
 903:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
 904:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 905:../Dave/Generated/src/FATFS002/Src/ff.c **** 	return 0xFFFFFFFF;	/* An error occurred at the disk I/O layer */
 889              		.loc 1 905 0
 890 0196 4FF0FF33 		mov	r3, #-1
 891              	.L34:
 906:../Dave/Generated/src/FATFS002/Src/ff.c **** }
 892              		.loc 1 906 0
 893 019a 1846     		mov	r0, r3
 894 019c 07F11807 		add	r7, r7, #24
 895 01a0 BD46     		mov	sp, r7
 896 01a2 80BD     		pop	{r7, pc}
 897              		.cfi_endproc
 898              	.LFE7:
 900              		.section	.text.put_fat,"ax",%progbits
 901              		.align	2
 902              		.global	put_fat
 903              		.thumb
 904              		.thumb_func
 906              	put_fat:
 907              	.LFB8:
 907:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 908:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 909:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 910:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 911:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
 912:../Dave/Generated/src/FATFS002/Src/ff.c **** /* FAT access - Change value of a FAT entry                              */
 913:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
 914:../Dave/Generated/src/FATFS002/Src/ff.c **** #if !_FS_READONLY
 915:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 916:../Dave/Generated/src/FATFS002/Src/ff.c **** FRESULT put_fat (
 917:../Dave/Generated/src/FATFS002/Src/ff.c **** 	FATFS *fs,	/* File system object */
 918:../Dave/Generated/src/FATFS002/Src/ff.c **** 	DWORD clst,	/* Cluster# to be changed in range of 2 to fs->n_fatent - 1 */
 919:../Dave/Generated/src/FATFS002/Src/ff.c **** 	DWORD val	/* New value to mark the cluster */
 920:../Dave/Generated/src/FATFS002/Src/ff.c **** )
 921:../Dave/Generated/src/FATFS002/Src/ff.c **** {
 908              		.loc 1 921 0
 909              		.cfi_startproc
 910              		@ args = 0, pretend = 0, frame = 32
 911              		@ frame_needed = 1, uses_anonymous_args = 0
 912 0000 80B5     		push	{r7, lr}
 913              	.LCFI24:
 914              		.cfi_def_cfa_offset 8
 915              		.cfi_offset 7, -8
 916              		.cfi_offset 14, -4
 917 0002 88B0     		sub	sp, sp, #32
 918              	.LCFI25:
 919              		.cfi_def_cfa_offset 40
 920 0004 00AF     		add	r7, sp, #0
 921              	.LCFI26:
 922              		.cfi_def_cfa_register 7
 923 0006 F860     		str	r0, [r7, #12]
 924 0008 B960     		str	r1, [r7, #8]
 925 000a 7A60     		str	r2, [r7, #4]
 922:../Dave/Generated/src/FATFS002/Src/ff.c **** 	UINT bc;
 923:../Dave/Generated/src/FATFS002/Src/ff.c **** 	BYTE *p;
 924:../Dave/Generated/src/FATFS002/Src/ff.c **** 	FRESULT res;
 925:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 926:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 927:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (clst < 2 || clst >= fs->n_fatent) {	/* Check range */
 926              		.loc 1 927 0
 927 000c BB68     		ldr	r3, [r7, #8]
 928 000e 012B     		cmp	r3, #1
 929 0010 04D9     		bls	.L50
 930              		.loc 1 927 0 is_stmt 0 discriminator 1
 931 0012 FB68     		ldr	r3, [r7, #12]
 932 0014 DA69     		ldr	r2, [r3, #28]
 933 0016 BB68     		ldr	r3, [r7, #8]
 934 0018 9A42     		cmp	r2, r3
 935 001a 03D8     		bhi	.L51
 936              	.L50:
 928:../Dave/Generated/src/FATFS002/Src/ff.c **** 		res = FR_INT_ERR;
 937              		.loc 1 928 0 is_stmt 1
 938 001c 4FF00203 		mov	r3, #2
 939 0020 FB77     		strb	r3, [r7, #31]
 940 0022 1AE1     		b	.L52
 941              	.L51:
 929:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 930:../Dave/Generated/src/FATFS002/Src/ff.c **** 	} else {
 931:../Dave/Generated/src/FATFS002/Src/ff.c **** 		switch (fs->fs_type) {
 942              		.loc 1 931 0
 943 0024 FB68     		ldr	r3, [r7, #12]
 944 0026 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 945 0028 022B     		cmp	r3, #2
 946 002a 00F08380 		beq	.L55
 947 002e 032B     		cmp	r3, #3
 948 0030 00F0AC80 		beq	.L56
 949 0034 012B     		cmp	r3, #1
 950 0036 40F00181 		bne	.L67
 951              	.L54:
 932:../Dave/Generated/src/FATFS002/Src/ff.c **** 		case FS_FAT12 :
 933:../Dave/Generated/src/FATFS002/Src/ff.c **** 			bc = clst; bc += bc / 2;
 952              		.loc 1 933 0
 953 003a BB68     		ldr	r3, [r7, #8]
 954 003c BB61     		str	r3, [r7, #24]
 955 003e BB69     		ldr	r3, [r7, #24]
 956 0040 4FEA5303 		lsr	r3, r3, #1
 957 0044 BA69     		ldr	r2, [r7, #24]
 958 0046 D318     		adds	r3, r2, r3
 959 0048 BB61     		str	r3, [r7, #24]
 934:../Dave/Generated/src/FATFS002/Src/ff.c **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
 960              		.loc 1 934 0
 961 004a FB68     		ldr	r3, [r7, #12]
 962 004c 5A6A     		ldr	r2, [r3, #36]
 963 004e BB69     		ldr	r3, [r7, #24]
 964 0050 4FEA5323 		lsr	r3, r3, #9
 965 0054 D318     		adds	r3, r2, r3
 966 0056 F868     		ldr	r0, [r7, #12]
 967 0058 1946     		mov	r1, r3
 968 005a FFF7FEFF 		bl	move_window
 969 005e 0346     		mov	r3, r0
 970 0060 FB77     		strb	r3, [r7, #31]
 935:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (res != FR_OK) break;
 971              		.loc 1 935 0
 972 0062 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 973 0064 002B     		cmp	r3, #0
 974 0066 40F0ED80 		bne	.L68
 975              	.L57:
 936:../Dave/Generated/src/FATFS002/Src/ff.c **** 			p = &fs->win[bc % SS(fs)];
 976              		.loc 1 936 0
 977 006a BB69     		ldr	r3, [r7, #24]
 978 006c 4FEAC353 		lsl	r3, r3, #23
 979 0070 4FEAD353 		lsr	r3, r3, #23
 980 0074 03F13003 		add	r3, r3, #48
 981 0078 FA68     		ldr	r2, [r7, #12]
 982 007a D318     		adds	r3, r2, r3
 983 007c 03F10403 		add	r3, r3, #4
 984 0080 7B61     		str	r3, [r7, #20]
 937:../Dave/Generated/src/FATFS002/Src/ff.c **** 			*p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;
 985              		.loc 1 937 0
 986 0082 BB68     		ldr	r3, [r7, #8]
 987 0084 03F00103 		and	r3, r3, #1
 988 0088 002B     		cmp	r3, #0
 989 008a 0ED0     		beq	.L59
 990              		.loc 1 937 0 is_stmt 0 discriminator 1
 991 008c 7B69     		ldr	r3, [r7, #20]
 992 008e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 993 0090 DBB2     		uxtb	r3, r3
 994 0092 03F00F03 		and	r3, r3, #15
 995 0096 DAB2     		uxtb	r2, r3
 996 0098 7B68     		ldr	r3, [r7, #4]
 997 009a DBB2     		uxtb	r3, r3
 998 009c 4FEA0313 		lsl	r3, r3, #4
 999 00a0 DBB2     		uxtb	r3, r3
 1000 00a2 1343     		orrs	r3, r3, r2
 1001 00a4 DBB2     		uxtb	r3, r3
 1002 00a6 DBB2     		uxtb	r3, r3
 1003 00a8 01E0     		b	.L60
 1004              	.L59:
 1005              		.loc 1 937 0 discriminator 2
 1006 00aa 7B68     		ldr	r3, [r7, #4]
 1007 00ac DBB2     		uxtb	r3, r3
 1008              	.L60:
 1009              		.loc 1 937 0 discriminator 3
 1010 00ae 7A69     		ldr	r2, [r7, #20]
 1011 00b0 1370     		strb	r3, [r2, #0]
 938:../Dave/Generated/src/FATFS002/Src/ff.c **** 			bc++;
 1012              		.loc 1 938 0 is_stmt 1 discriminator 3
 1013 00b2 BB69     		ldr	r3, [r7, #24]
 1014 00b4 03F10103 		add	r3, r3, #1
 1015 00b8 BB61     		str	r3, [r7, #24]
 939:../Dave/Generated/src/FATFS002/Src/ff.c **** 			fs->wflag = 1;
 1016              		.loc 1 939 0 discriminator 3
 1017 00ba FB68     		ldr	r3, [r7, #12]
 1018 00bc 4FF00102 		mov	r2, #1
 1019 00c0 1A71     		strb	r2, [r3, #4]
 940:../Dave/Generated/src/FATFS002/Src/ff.c **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
 1020              		.loc 1 940 0 discriminator 3
 1021 00c2 FB68     		ldr	r3, [r7, #12]
 1022 00c4 5A6A     		ldr	r2, [r3, #36]
 1023 00c6 BB69     		ldr	r3, [r7, #24]
 1024 00c8 4FEA5323 		lsr	r3, r3, #9
 1025 00cc D318     		adds	r3, r2, r3
 1026 00ce F868     		ldr	r0, [r7, #12]
 1027 00d0 1946     		mov	r1, r3
 1028 00d2 FFF7FEFF 		bl	move_window
 1029 00d6 0346     		mov	r3, r0
 1030 00d8 FB77     		strb	r3, [r7, #31]
 941:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (res != FR_OK) break;
 1031              		.loc 1 941 0 discriminator 3
 1032 00da FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1033 00dc 002B     		cmp	r3, #0
 1034 00de 40F0B380 		bne	.L69
 1035              	.L61:
 942:../Dave/Generated/src/FATFS002/Src/ff.c **** 			p = &fs->win[bc % SS(fs)];
 1036              		.loc 1 942 0
 1037 00e2 BB69     		ldr	r3, [r7, #24]
 1038 00e4 4FEAC353 		lsl	r3, r3, #23
 1039 00e8 4FEAD353 		lsr	r3, r3, #23
 1040 00ec 03F13003 		add	r3, r3, #48
 1041 00f0 FA68     		ldr	r2, [r7, #12]
 1042 00f2 D318     		adds	r3, r2, r3
 1043 00f4 03F10403 		add	r3, r3, #4
 1044 00f8 7B61     		str	r3, [r7, #20]
 943:../Dave/Generated/src/FATFS002/Src/ff.c **** 			*p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));
 1045              		.loc 1 943 0
 1046 00fa BB68     		ldr	r3, [r7, #8]
 1047 00fc 03F00103 		and	r3, r3, #1
 1048 0100 002B     		cmp	r3, #0
 1049 0102 04D0     		beq	.L62
 1050              		.loc 1 943 0 is_stmt 0 discriminator 1
 1051 0104 7B68     		ldr	r3, [r7, #4]
 1052 0106 4FEA1313 		lsr	r3, r3, #4
 1053 010a DBB2     		uxtb	r3, r3
 1054 010c 0FE0     		b	.L63
 1055              	.L62:
 1056              		.loc 1 943 0 discriminator 2
 1057 010e 7B69     		ldr	r3, [r7, #20]
 1058 0110 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1059 0112 DBB2     		uxtb	r3, r3
 1060 0114 23F00F03 		bic	r3, r3, #15
 1061 0118 DAB2     		uxtb	r2, r3
 1062 011a 7B68     		ldr	r3, [r7, #4]
 1063 011c 4FEA1323 		lsr	r3, r3, #8
 1064 0120 DBB2     		uxtb	r3, r3
 1065 0122 03F00F03 		and	r3, r3, #15
 1066 0126 DBB2     		uxtb	r3, r3
 1067 0128 1343     		orrs	r3, r3, r2
 1068 012a DBB2     		uxtb	r3, r3
 1069 012c DBB2     		uxtb	r3, r3
 1070              	.L63:
 1071              		.loc 1 943 0 discriminator 3
 1072 012e 7A69     		ldr	r2, [r7, #20]
 1073 0130 1370     		strb	r3, [r2, #0]
 944:../Dave/Generated/src/FATFS002/Src/ff.c **** 			break;
 1074              		.loc 1 944 0 is_stmt 1 discriminator 3
 1075 0132 8EE0     		b	.L58
 1076              	.L55:
 945:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 946:../Dave/Generated/src/FATFS002/Src/ff.c **** 		case FS_FAT16 :
 947:../Dave/Generated/src/FATFS002/Src/ff.c **** 			res = move_window(fs, fs->fatbase + (clst / (SS(fs) / 2)));
 1077              		.loc 1 947 0
 1078 0134 FB68     		ldr	r3, [r7, #12]
 1079 0136 5A6A     		ldr	r2, [r3, #36]
 1080 0138 BB68     		ldr	r3, [r7, #8]
 1081 013a 4FEA1323 		lsr	r3, r3, #8
 1082 013e D318     		adds	r3, r2, r3
 1083 0140 F868     		ldr	r0, [r7, #12]
 1084 0142 1946     		mov	r1, r3
 1085 0144 FFF7FEFF 		bl	move_window
 1086 0148 0346     		mov	r3, r0
 1087 014a FB77     		strb	r3, [r7, #31]
 948:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (res != FR_OK) break;
 1088              		.loc 1 948 0
 1089 014c FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1090 014e 002B     		cmp	r3, #0
 1091 0150 7CD1     		bne	.L70
 1092              	.L64:
 949:../Dave/Generated/src/FATFS002/Src/ff.c **** 			p = &fs->win[clst * 2 % SS(fs)];
 1093              		.loc 1 949 0
 1094 0152 BB68     		ldr	r3, [r7, #8]
 1095 0154 4FEA4303 		lsl	r3, r3, #1
 1096 0158 4FEAC353 		lsl	r3, r3, #23
 1097 015c 4FEAD353 		lsr	r3, r3, #23
 1098 0160 03F13003 		add	r3, r3, #48
 1099 0164 FA68     		ldr	r2, [r7, #12]
 1100 0166 D318     		adds	r3, r2, r3
 1101 0168 03F10403 		add	r3, r3, #4
 1102 016c 7B61     		str	r3, [r7, #20]
 950:../Dave/Generated/src/FATFS002/Src/ff.c **** 			ST_WORD(p, (WORD)val);
 1103              		.loc 1 950 0
 1104 016e 7B68     		ldr	r3, [r7, #4]
 1105 0170 DAB2     		uxtb	r2, r3
 1106 0172 7B69     		ldr	r3, [r7, #20]
 1107 0174 1A70     		strb	r2, [r3, #0]
 1108 0176 7B69     		ldr	r3, [r7, #20]
 1109 0178 03F10103 		add	r3, r3, #1
 1110 017c 7A68     		ldr	r2, [r7, #4]
 1111 017e 92B2     		uxth	r2, r2
 1112 0180 4FEA1222 		lsr	r2, r2, #8
 1113 0184 92B2     		uxth	r2, r2
 1114 0186 D2B2     		uxtb	r2, r2
 1115 0188 1A70     		strb	r2, [r3, #0]
 951:../Dave/Generated/src/FATFS002/Src/ff.c **** 			break;
 1116              		.loc 1 951 0
 1117 018a 62E0     		b	.L58
 1118              	.L56:
 952:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 953:../Dave/Generated/src/FATFS002/Src/ff.c **** 		case FS_FAT32 :
 954:../Dave/Generated/src/FATFS002/Src/ff.c **** 			res = move_window(fs, fs->fatbase + (clst / (SS(fs) / 4)));
 1119              		.loc 1 954 0
 1120 018c FB68     		ldr	r3, [r7, #12]
 1121 018e 5A6A     		ldr	r2, [r3, #36]
 1122 0190 BB68     		ldr	r3, [r7, #8]
 1123 0192 4FEAD313 		lsr	r3, r3, #7
 1124 0196 D318     		adds	r3, r2, r3
 1125 0198 F868     		ldr	r0, [r7, #12]
 1126 019a 1946     		mov	r1, r3
 1127 019c FFF7FEFF 		bl	move_window
 1128 01a0 0346     		mov	r3, r0
 1129 01a2 FB77     		strb	r3, [r7, #31]
 955:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (res != FR_OK) break;
 1130              		.loc 1 955 0
 1131 01a4 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1132 01a6 002B     		cmp	r3, #0
 1133 01a8 52D1     		bne	.L71
 1134              	.L65:
 956:../Dave/Generated/src/FATFS002/Src/ff.c **** 			p = &fs->win[clst * 4 % SS(fs)];
 1135              		.loc 1 956 0
 1136 01aa BB68     		ldr	r3, [r7, #8]
 1137 01ac 4FEA8303 		lsl	r3, r3, #2
 1138 01b0 4FEAC353 		lsl	r3, r3, #23
 1139 01b4 4FEAD353 		lsr	r3, r3, #23
 1140 01b8 03F13003 		add	r3, r3, #48
 1141 01bc FA68     		ldr	r2, [r7, #12]
 1142 01be D318     		adds	r3, r2, r3
 1143 01c0 03F10403 		add	r3, r3, #4
 1144 01c4 7B61     		str	r3, [r7, #20]
 957:../Dave/Generated/src/FATFS002/Src/ff.c **** 			val |= LD_DWORD(p) & 0xF0000000;
 1145              		.loc 1 957 0
 1146 01c6 7B69     		ldr	r3, [r7, #20]
 1147 01c8 03F10303 		add	r3, r3, #3
 1148 01cc 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1149 01ce 4FEA0362 		lsl	r2, r3, #24
 1150 01d2 7B69     		ldr	r3, [r7, #20]
 1151 01d4 03F10203 		add	r3, r3, #2
 1152 01d8 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1153 01da 4FEA0343 		lsl	r3, r3, #16
 1154 01de 1A43     		orrs	r2, r2, r3
 1155 01e0 7B69     		ldr	r3, [r7, #20]
 1156 01e2 03F10103 		add	r3, r3, #1
 1157 01e6 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1158 01e8 4FEA0323 		lsl	r3, r3, #8
 1159 01ec 1A43     		orrs	r2, r2, r3
 1160 01ee 7B69     		ldr	r3, [r7, #20]
 1161 01f0 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1162 01f2 1343     		orrs	r3, r3, r2
 1163 01f4 03F07043 		and	r3, r3, #-268435456
 1164 01f8 7A68     		ldr	r2, [r7, #4]
 1165 01fa 1343     		orrs	r3, r3, r2
 1166 01fc 7B60     		str	r3, [r7, #4]
 958:../Dave/Generated/src/FATFS002/Src/ff.c **** 			ST_DWORD(p, val);
 1167              		.loc 1 958 0
 1168 01fe 7B68     		ldr	r3, [r7, #4]
 1169 0200 DAB2     		uxtb	r2, r3
 1170 0202 7B69     		ldr	r3, [r7, #20]
 1171 0204 1A70     		strb	r2, [r3, #0]
 1172 0206 7B69     		ldr	r3, [r7, #20]
 1173 0208 03F10103 		add	r3, r3, #1
 1174 020c 7A68     		ldr	r2, [r7, #4]
 1175 020e 92B2     		uxth	r2, r2
 1176 0210 4FEA1222 		lsr	r2, r2, #8
 1177 0214 92B2     		uxth	r2, r2
 1178 0216 D2B2     		uxtb	r2, r2
 1179 0218 1A70     		strb	r2, [r3, #0]
 1180 021a 7B69     		ldr	r3, [r7, #20]
 1181 021c 03F10203 		add	r3, r3, #2
 1182 0220 7A68     		ldr	r2, [r7, #4]
 1183 0222 4FEA1242 		lsr	r2, r2, #16
 1184 0226 D2B2     		uxtb	r2, r2
 1185 0228 1A70     		strb	r2, [r3, #0]
 1186 022a 7B69     		ldr	r3, [r7, #20]
 1187 022c 03F10303 		add	r3, r3, #3
 1188 0230 7A68     		ldr	r2, [r7, #4]
 1189 0232 4FEA1262 		lsr	r2, r2, #24
 1190 0236 D2B2     		uxtb	r2, r2
 1191 0238 1A70     		strb	r2, [r3, #0]
 959:../Dave/Generated/src/FATFS002/Src/ff.c **** 			break;
 1192              		.loc 1 959 0
 1193 023a 0AE0     		b	.L58
 1194              	.L67:
 960:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 961:../Dave/Generated/src/FATFS002/Src/ff.c **** 		default :
 962:../Dave/Generated/src/FATFS002/Src/ff.c **** 			res = FR_INT_ERR;
 1195              		.loc 1 962 0
 1196 023c 4FF00203 		mov	r3, #2
 1197 0240 FB77     		strb	r3, [r7, #31]
 1198 0242 06E0     		b	.L58
 1199              	.L68:
 935:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (res != FR_OK) break;
 1200              		.loc 1 935 0
 1201 0244 00BF     		nop
 1202 0246 04E0     		b	.L58
 1203              	.L69:
 941:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (res != FR_OK) break;
 1204              		.loc 1 941 0
 1205 0248 00BF     		nop
 1206 024a 02E0     		b	.L58
 1207              	.L70:
 948:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (res != FR_OK) break;
 1208              		.loc 1 948 0
 1209 024c 00BF     		nop
 1210 024e 00E0     		b	.L58
 1211              	.L71:
 955:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (res != FR_OK) break;
 1212              		.loc 1 955 0
 1213 0250 00BF     		nop
 1214              	.L58:
 963:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
 964:../Dave/Generated/src/FATFS002/Src/ff.c **** 		fs->wflag = 1;
 1215              		.loc 1 964 0
 1216 0252 FB68     		ldr	r3, [r7, #12]
 1217 0254 4FF00102 		mov	r2, #1
 1218 0258 1A71     		strb	r2, [r3, #4]
 1219              	.L52:
 965:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
 966:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 967:../Dave/Generated/src/FATFS002/Src/ff.c **** 	return res;
 1220              		.loc 1 967 0
 1221 025a FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 968:../Dave/Generated/src/FATFS002/Src/ff.c **** }
 1222              		.loc 1 968 0
 1223 025c 1846     		mov	r0, r3
 1224 025e 07F12007 		add	r7, r7, #32
 1225 0262 BD46     		mov	sp, r7
 1226 0264 80BD     		pop	{r7, pc}
 1227              		.cfi_endproc
 1228              	.LFE8:
 1230 0266 00BF     		.section	.text.remove_chain,"ax",%progbits
 1231              		.align	2
 1232              		.thumb
 1233              		.thumb_func
 1235              	remove_chain:
 1236              	.LFB9:
 969:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif /* !_FS_READONLY */
 970:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 971:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 972:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 973:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 974:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
 975:../Dave/Generated/src/FATFS002/Src/ff.c **** /* FAT handling - Remove a cluster chain                                 */
 976:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
 977:../Dave/Generated/src/FATFS002/Src/ff.c **** #if !_FS_READONLY
 978:../Dave/Generated/src/FATFS002/Src/ff.c **** static
 979:../Dave/Generated/src/FATFS002/Src/ff.c **** FRESULT remove_chain (
 980:../Dave/Generated/src/FATFS002/Src/ff.c **** 	FATFS *fs,			/* File system object */
 981:../Dave/Generated/src/FATFS002/Src/ff.c **** 	DWORD clst			/* Cluster# to remove a chain from */
 982:../Dave/Generated/src/FATFS002/Src/ff.c **** )
 983:../Dave/Generated/src/FATFS002/Src/ff.c **** {
 1237              		.loc 1 983 0
 1238              		.cfi_startproc
 1239              		@ args = 0, pretend = 0, frame = 32
 1240              		@ frame_needed = 1, uses_anonymous_args = 0
 1241 0000 80B5     		push	{r7, lr}
 1242              	.LCFI27:
 1243              		.cfi_def_cfa_offset 8
 1244              		.cfi_offset 7, -8
 1245              		.cfi_offset 14, -4
 1246 0002 88B0     		sub	sp, sp, #32
 1247              	.LCFI28:
 1248              		.cfi_def_cfa_offset 40
 1249 0004 00AF     		add	r7, sp, #0
 1250              	.LCFI29:
 1251              		.cfi_def_cfa_register 7
 1252 0006 7860     		str	r0, [r7, #4]
 1253 0008 3960     		str	r1, [r7, #0]
 984:../Dave/Generated/src/FATFS002/Src/ff.c **** 	FRESULT res;
 985:../Dave/Generated/src/FATFS002/Src/ff.c **** 	DWORD nxt;
 986:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _USE_ERASE
 987:../Dave/Generated/src/FATFS002/Src/ff.c **** 	DWORD scl = clst, ecl = clst, resion[2];
 1254              		.loc 1 987 0
 1255 000a 3B68     		ldr	r3, [r7, #0]
 1256 000c BB61     		str	r3, [r7, #24]
 1257 000e 3B68     		ldr	r3, [r7, #0]
 1258 0010 7B61     		str	r3, [r7, #20]
 988:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
 989:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 990:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (clst < 2 || clst >= fs->n_fatent) {	/* Check range */
 1259              		.loc 1 990 0
 1260 0012 3B68     		ldr	r3, [r7, #0]
 1261 0014 012B     		cmp	r3, #1
 1262 0016 04D9     		bls	.L73
 1263              		.loc 1 990 0 is_stmt 0 discriminator 1
 1264 0018 7B68     		ldr	r3, [r7, #4]
 1265 001a DA69     		ldr	r2, [r3, #28]
 1266 001c 3B68     		ldr	r3, [r7, #0]
 1267 001e 9A42     		cmp	r2, r3
 1268 0020 03D8     		bhi	.L74
 1269              	.L73:
 991:../Dave/Generated/src/FATFS002/Src/ff.c **** 		res = FR_INT_ERR;
 1270              		.loc 1 991 0 is_stmt 1
 1271 0022 4FF00203 		mov	r3, #2
 1272 0026 FB77     		strb	r3, [r7, #31]
 1273 0028 67E0     		b	.L75
 1274              	.L74:
 992:../Dave/Generated/src/FATFS002/Src/ff.c **** 
 993:../Dave/Generated/src/FATFS002/Src/ff.c **** 	} else {
 994:../Dave/Generated/src/FATFS002/Src/ff.c **** 		res = FR_OK;
 1275              		.loc 1 994 0
 1276 002a 4FF00003 		mov	r3, #0
 1277 002e FB77     		strb	r3, [r7, #31]
 995:../Dave/Generated/src/FATFS002/Src/ff.c **** 		while (clst < fs->n_fatent) {			/* Not a last link? */
 1278              		.loc 1 995 0
 1279 0030 5AE0     		b	.L76
 1280              	.L84:
 996:../Dave/Generated/src/FATFS002/Src/ff.c **** 			nxt = get_fat(fs, clst);			/* Get cluster status */
 1281              		.loc 1 996 0
 1282 0032 7868     		ldr	r0, [r7, #4]
 1283 0034 3968     		ldr	r1, [r7, #0]
 1284 0036 FFF7FEFF 		bl	get_fat
 1285 003a 3861     		str	r0, [r7, #16]
 997:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (nxt == 0) break;				/* Empty cluster? */
 1286              		.loc 1 997 0
 1287 003c 3B69     		ldr	r3, [r7, #16]
 1288 003e 002B     		cmp	r3, #0
 1289 0040 58D0     		beq	.L86
 1290              	.L77:
 998:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (nxt == 1) { res = FR_INT_ERR; break; }	/* Internal error? */
 1291              		.loc 1 998 0
 1292 0042 3B69     		ldr	r3, [r7, #16]
 1293 0044 012B     		cmp	r3, #1
 1294 0046 03D1     		bne	.L78
 1295              		.loc 1 998 0 is_stmt 0 discriminator 1
 1296 0048 4FF00203 		mov	r3, #2
 1297 004c FB77     		strb	r3, [r7, #31]
 1298 004e 54E0     		b	.L75
 1299              	.L78:
 999:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (nxt == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }	/* Disk error? */
 1300              		.loc 1 999 0 is_stmt 1
 1301 0050 3B69     		ldr	r3, [r7, #16]
 1302 0052 B3F1FF3F 		cmp	r3, #-1
 1303 0056 03D1     		bne	.L79
 1304              		.loc 1 999 0 is_stmt 0 discriminator 1
 1305 0058 4FF00103 		mov	r3, #1
 1306 005c FB77     		strb	r3, [r7, #31]
 1307 005e 4CE0     		b	.L75
 1308              	.L79:
1000:../Dave/Generated/src/FATFS002/Src/ff.c **** 			res = put_fat(fs, clst, 0);			/* Mark the cluster "empty" */
 1309              		.loc 1 1000 0 is_stmt 1
 1310 0060 7868     		ldr	r0, [r7, #4]
 1311 0062 3968     		ldr	r1, [r7, #0]
 1312 0064 4FF00002 		mov	r2, #0
 1313 0068 FFF7FEFF 		bl	put_fat
 1314 006c 0346     		mov	r3, r0
 1315 006e FB77     		strb	r3, [r7, #31]
1001:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (res != FR_OK) break;
 1316              		.loc 1 1001 0
 1317 0070 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1318 0072 002B     		cmp	r3, #0
 1319 0074 40D1     		bne	.L87
 1320              	.L80:
1002:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (fs->free_clust != 0xFFFFFFFF) {	/* Update FSInfo */
 1321              		.loc 1 1002 0
 1322 0076 7B68     		ldr	r3, [r7, #4]
 1323 0078 1B69     		ldr	r3, [r3, #16]
 1324 007a B3F1FF3F 		cmp	r3, #-1
 1325 007e 09D0     		beq	.L81
1003:../Dave/Generated/src/FATFS002/Src/ff.c **** 				fs->free_clust++;
 1326              		.loc 1 1003 0
 1327 0080 7B68     		ldr	r3, [r7, #4]
 1328 0082 1B69     		ldr	r3, [r3, #16]
 1329 0084 03F10102 		add	r2, r3, #1
 1330 0088 7B68     		ldr	r3, [r7, #4]
 1331 008a 1A61     		str	r2, [r3, #16]
1004:../Dave/Generated/src/FATFS002/Src/ff.c **** 				fs->fsi_flag = 1;
 1332              		.loc 1 1004 0
 1333 008c 7B68     		ldr	r3, [r7, #4]
 1334 008e 4FF00102 		mov	r2, #1
 1335 0092 5A71     		strb	r2, [r3, #5]
 1336              	.L81:
1005:../Dave/Generated/src/FATFS002/Src/ff.c **** 			}
1006:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _USE_ERASE
1007:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (ecl + 1 == nxt) {	/* Next cluster is contiguous */
 1337              		.loc 1 1007 0
 1338 0094 7B69     		ldr	r3, [r7, #20]
 1339 0096 03F10102 		add	r2, r3, #1
 1340 009a 3B69     		ldr	r3, [r7, #16]
 1341 009c 9A42     		cmp	r2, r3
 1342 009e 02D1     		bne	.L82
1008:../Dave/Generated/src/FATFS002/Src/ff.c **** 				ecl = nxt;
 1343              		.loc 1 1008 0
 1344 00a0 3B69     		ldr	r3, [r7, #16]
 1345 00a2 7B61     		str	r3, [r7, #20]
 1346 00a4 1EE0     		b	.L83
 1347              	.L82:
1009:../Dave/Generated/src/FATFS002/Src/ff.c **** 			} else {				/* End of contiguous clusters */ 
1010:../Dave/Generated/src/FATFS002/Src/ff.c **** 				resion[0] = clust2sect(fs, scl);					/* Start sector */
 1348              		.loc 1 1010 0
 1349 00a6 7868     		ldr	r0, [r7, #4]
 1350 00a8 B969     		ldr	r1, [r7, #24]
 1351 00aa FFF7FEFF 		bl	clust2sect
 1352 00ae 0346     		mov	r3, r0
 1353 00b0 BB60     		str	r3, [r7, #8]
1011:../Dave/Generated/src/FATFS002/Src/ff.c **** 				resion[1] = clust2sect(fs, ecl) + fs->csize - 1;	/* End sector */
 1354              		.loc 1 1011 0
 1355 00b2 7868     		ldr	r0, [r7, #4]
 1356 00b4 7969     		ldr	r1, [r7, #20]
 1357 00b6 FFF7FEFF 		bl	clust2sect
 1358 00ba 0246     		mov	r2, r0
 1359 00bc 7B68     		ldr	r3, [r7, #4]
 1360 00be 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1361 00c0 D318     		adds	r3, r2, r3
 1362 00c2 03F1FF33 		add	r3, r3, #-1
 1363 00c6 FB60     		str	r3, [r7, #12]
1012:../Dave/Generated/src/FATFS002/Src/ff.c **** 				disk_ioctl(fs->drv, CTRL_ERASE_SECTOR, resion);		/* Erase the block */
 1364              		.loc 1 1012 0
 1365 00c8 7B68     		ldr	r3, [r7, #4]
 1366 00ca 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 1367 00cc 07F10803 		add	r3, r7, #8
 1368 00d0 1046     		mov	r0, r2
 1369 00d2 4FF00401 		mov	r1, #4
 1370 00d6 1A46     		mov	r2, r3
 1371 00d8 FFF7FEFF 		bl	disk_ioctl
1013:../Dave/Generated/src/FATFS002/Src/ff.c **** 				scl = ecl = nxt;
 1372              		.loc 1 1013 0
 1373 00dc 3B69     		ldr	r3, [r7, #16]
 1374 00de 7B61     		str	r3, [r7, #20]
 1375 00e0 7B69     		ldr	r3, [r7, #20]
 1376 00e2 BB61     		str	r3, [r7, #24]
 1377              	.L83:
1014:../Dave/Generated/src/FATFS002/Src/ff.c **** 			}
1015:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
1016:../Dave/Generated/src/FATFS002/Src/ff.c **** 			clst = nxt;	/* Next cluster */
 1378              		.loc 1 1016 0
 1379 00e4 3B69     		ldr	r3, [r7, #16]
 1380 00e6 3B60     		str	r3, [r7, #0]
 1381              	.L76:
 995:../Dave/Generated/src/FATFS002/Src/ff.c **** 		while (clst < fs->n_fatent) {			/* Not a last link? */
 1382              		.loc 1 995 0 discriminator 1
 1383 00e8 7B68     		ldr	r3, [r7, #4]
 1384 00ea DA69     		ldr	r2, [r3, #28]
 1385 00ec 3B68     		ldr	r3, [r7, #0]
 1386 00ee 9A42     		cmp	r2, r3
 1387 00f0 9FD8     		bhi	.L84
 1388 00f2 02E0     		b	.L75
 1389              	.L86:
 997:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (nxt == 0) break;				/* Empty cluster? */
 1390              		.loc 1 997 0
 1391 00f4 00BF     		nop
 1392 00f6 00E0     		b	.L75
 1393              	.L87:
1001:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (res != FR_OK) break;
 1394              		.loc 1 1001 0
 1395 00f8 00BF     		nop
 1396              	.L75:
1017:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
1018:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
1019:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1020:../Dave/Generated/src/FATFS002/Src/ff.c **** 	return res;
 1397              		.loc 1 1020 0
 1398 00fa FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
1021:../Dave/Generated/src/FATFS002/Src/ff.c **** }
 1399              		.loc 1 1021 0
 1400 00fc 1846     		mov	r0, r3
 1401 00fe 07F12007 		add	r7, r7, #32
 1402 0102 BD46     		mov	sp, r7
 1403 0104 80BD     		pop	{r7, pc}
 1404              		.cfi_endproc
 1405              	.LFE9:
 1407 0106 00BF     		.section	.text.create_chain,"ax",%progbits
 1408              		.align	2
 1409              		.thumb
 1410              		.thumb_func
 1412              	create_chain:
 1413              	.LFB10:
1022:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
1023:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1024:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1025:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1026:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1027:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
1028:../Dave/Generated/src/FATFS002/Src/ff.c **** /* FAT handling - Stretch or Create a cluster chain                      */
1029:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
1030:../Dave/Generated/src/FATFS002/Src/ff.c **** #if !_FS_READONLY
1031:../Dave/Generated/src/FATFS002/Src/ff.c **** static
1032:../Dave/Generated/src/FATFS002/Src/ff.c **** DWORD create_chain (	/* 0:No free cluster, 1:Internal error, 0xFFFFFFFF:Disk error, >=2:New cluster
1033:../Dave/Generated/src/FATFS002/Src/ff.c **** 	FATFS *fs,			/* File system object */
1034:../Dave/Generated/src/FATFS002/Src/ff.c **** 	DWORD clst			/* Cluster# to stretch. 0 means create a new chain. */
1035:../Dave/Generated/src/FATFS002/Src/ff.c **** )
1036:../Dave/Generated/src/FATFS002/Src/ff.c **** {
 1414              		.loc 1 1036 0
 1415              		.cfi_startproc
 1416              		@ args = 0, pretend = 0, frame = 24
 1417              		@ frame_needed = 1, uses_anonymous_args = 0
 1418 0000 80B5     		push	{r7, lr}
 1419              	.LCFI30:
 1420              		.cfi_def_cfa_offset 8
 1421              		.cfi_offset 7, -8
 1422              		.cfi_offset 14, -4
 1423 0002 86B0     		sub	sp, sp, #24
 1424              	.LCFI31:
 1425              		.cfi_def_cfa_offset 32
 1426 0004 00AF     		add	r7, sp, #0
 1427              	.LCFI32:
 1428              		.cfi_def_cfa_register 7
 1429 0006 7860     		str	r0, [r7, #4]
 1430 0008 3960     		str	r1, [r7, #0]
1037:../Dave/Generated/src/FATFS002/Src/ff.c **** 	DWORD cs, ncl, scl;
1038:../Dave/Generated/src/FATFS002/Src/ff.c **** 	FRESULT res;
1039:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1040:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1041:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (clst == 0) {		/* Create a new chain */
 1431              		.loc 1 1041 0
 1432 000a 3B68     		ldr	r3, [r7, #0]
 1433 000c 002B     		cmp	r3, #0
 1434 000e 0ED1     		bne	.L89
1042:../Dave/Generated/src/FATFS002/Src/ff.c **** 		scl = fs->last_clust;			/* Get suggested start point */
 1435              		.loc 1 1042 0
 1436 0010 7B68     		ldr	r3, [r7, #4]
 1437 0012 DB68     		ldr	r3, [r3, #12]
 1438 0014 3B61     		str	r3, [r7, #16]
1043:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (!scl || scl >= fs->n_fatent) scl = 1;
 1439              		.loc 1 1043 0
 1440 0016 3B69     		ldr	r3, [r7, #16]
 1441 0018 002B     		cmp	r3, #0
 1442 001a 04D0     		beq	.L90
 1443              		.loc 1 1043 0 is_stmt 0 discriminator 2
 1444 001c 7B68     		ldr	r3, [r7, #4]
 1445 001e DA69     		ldr	r2, [r3, #28]
 1446 0020 3B69     		ldr	r3, [r7, #16]
 1447 0022 9A42     		cmp	r2, r3
 1448 0024 17D8     		bhi	.L91
 1449              	.L90:
 1450              		.loc 1 1043 0 discriminator 1
 1451 0026 4FF00103 		mov	r3, #1
 1452 002a 3B61     		str	r3, [r7, #16]
 1453 002c 13E0     		b	.L91
 1454              	.L89:
1044:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
1045:../Dave/Generated/src/FATFS002/Src/ff.c **** 	else {					/* Stretch the current chain */
1046:../Dave/Generated/src/FATFS002/Src/ff.c **** 		cs = get_fat(fs, clst);			/* Check the cluster status */
 1455              		.loc 1 1046 0 is_stmt 1
 1456 002e 7868     		ldr	r0, [r7, #4]
 1457 0030 3968     		ldr	r1, [r7, #0]
 1458 0032 FFF7FEFF 		bl	get_fat
 1459 0036 B860     		str	r0, [r7, #8]
1047:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (cs < 2) return 1;			/* It is an invalid cluster */
 1460              		.loc 1 1047 0
 1461 0038 BB68     		ldr	r3, [r7, #8]
 1462 003a 012B     		cmp	r3, #1
 1463 003c 02D8     		bhi	.L92
 1464              		.loc 1 1047 0 is_stmt 0 discriminator 1
 1465 003e 4FF00103 		mov	r3, #1
 1466 0042 6DE0     		b	.L93
 1467              	.L92:
1048:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (cs < fs->n_fatent) return cs;	/* It is already followed by next cluster */
 1468              		.loc 1 1048 0 is_stmt 1
 1469 0044 7B68     		ldr	r3, [r7, #4]
 1470 0046 DA69     		ldr	r2, [r3, #28]
 1471 0048 BB68     		ldr	r3, [r7, #8]
 1472 004a 9A42     		cmp	r2, r3
 1473 004c 01D9     		bls	.L94
 1474              		.loc 1 1048 0 is_stmt 0 discriminator 1
 1475 004e BB68     		ldr	r3, [r7, #8]
 1476 0050 66E0     		b	.L93
 1477              	.L94:
1049:../Dave/Generated/src/FATFS002/Src/ff.c **** 		scl = clst;
 1478              		.loc 1 1049 0 is_stmt 1
 1479 0052 3B68     		ldr	r3, [r7, #0]
 1480 0054 3B61     		str	r3, [r7, #16]
 1481              	.L91:
1050:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
1051:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1052:../Dave/Generated/src/FATFS002/Src/ff.c **** 	ncl = scl;				/* Start cluster */
 1482              		.loc 1 1052 0
 1483 0056 3B69     		ldr	r3, [r7, #16]
 1484 0058 7B61     		str	r3, [r7, #20]
 1485 005a 00E0     		b	.L101
 1486              	.L109:
1053:../Dave/Generated/src/FATFS002/Src/ff.c **** 	for (;;) {
1054:../Dave/Generated/src/FATFS002/Src/ff.c **** 		ncl++;							/* Next cluster */
1055:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (ncl >= fs->n_fatent) {		/* Wrap around */
1056:../Dave/Generated/src/FATFS002/Src/ff.c **** 			ncl = 2;
1057:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (ncl > scl) return 0;	/* No free cluster */
1058:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
1059:../Dave/Generated/src/FATFS002/Src/ff.c **** 		cs = get_fat(fs, ncl);			/* Get the cluster status */
1060:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (cs == 0) break;				/* Found a free cluster */
1061:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (cs == 0xFFFFFFFF || cs == 1)/* An error occurred */
1062:../Dave/Generated/src/FATFS002/Src/ff.c **** 			return cs;
1063:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (ncl == scl) return 0;		/* No free cluster */
1064:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
 1487              		.loc 1 1064 0
 1488 005c 00BF     		nop
 1489              	.L101:
1054:../Dave/Generated/src/FATFS002/Src/ff.c **** 		ncl++;							/* Next cluster */
 1490              		.loc 1 1054 0
 1491 005e 7B69     		ldr	r3, [r7, #20]
 1492 0060 03F10103 		add	r3, r3, #1
 1493 0064 7B61     		str	r3, [r7, #20]
1055:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (ncl >= fs->n_fatent) {		/* Wrap around */
 1494              		.loc 1 1055 0
 1495 0066 7B68     		ldr	r3, [r7, #4]
 1496 0068 DA69     		ldr	r2, [r3, #28]
 1497 006a 7B69     		ldr	r3, [r7, #20]
 1498 006c 9A42     		cmp	r2, r3
 1499 006e 09D8     		bhi	.L95
1056:../Dave/Generated/src/FATFS002/Src/ff.c **** 			ncl = 2;
 1500              		.loc 1 1056 0
 1501 0070 4FF00203 		mov	r3, #2
 1502 0074 7B61     		str	r3, [r7, #20]
1057:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (ncl > scl) return 0;	/* No free cluster */
 1503              		.loc 1 1057 0
 1504 0076 7A69     		ldr	r2, [r7, #20]
 1505 0078 3B69     		ldr	r3, [r7, #16]
 1506 007a 9A42     		cmp	r2, r3
 1507 007c 02D9     		bls	.L95
1057:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (ncl > scl) return 0;	/* No free cluster */
 1508              		.loc 1 1057 0 is_stmt 0 discriminator 1
 1509 007e 4FF00003 		mov	r3, #0
 1510 0082 4DE0     		b	.L93
 1511              	.L95:
1059:../Dave/Generated/src/FATFS002/Src/ff.c **** 		cs = get_fat(fs, ncl);			/* Get the cluster status */
 1512              		.loc 1 1059 0 is_stmt 1
 1513 0084 7868     		ldr	r0, [r7, #4]
 1514 0086 7969     		ldr	r1, [r7, #20]
 1515 0088 FFF7FEFF 		bl	get_fat
 1516 008c B860     		str	r0, [r7, #8]
1060:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (cs == 0) break;				/* Found a free cluster */
 1517              		.loc 1 1060 0
 1518 008e BB68     		ldr	r3, [r7, #8]
 1519 0090 002B     		cmp	r3, #0
 1520 0092 0FD0     		beq	.L108
 1521              	.L96:
1061:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (cs == 0xFFFFFFFF || cs == 1)/* An error occurred */
 1522              		.loc 1 1061 0
 1523 0094 BB68     		ldr	r3, [r7, #8]
 1524 0096 B3F1FF3F 		cmp	r3, #-1
 1525 009a 02D0     		beq	.L98
1061:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (cs == 0xFFFFFFFF || cs == 1)/* An error occurred */
 1526              		.loc 1 1061 0 is_stmt 0 discriminator 1
 1527 009c BB68     		ldr	r3, [r7, #8]
 1528 009e 012B     		cmp	r3, #1
 1529 00a0 01D1     		bne	.L99
 1530              	.L98:
1062:../Dave/Generated/src/FATFS002/Src/ff.c **** 			return cs;
 1531              		.loc 1 1062 0 is_stmt 1
 1532 00a2 BB68     		ldr	r3, [r7, #8]
 1533 00a4 3CE0     		b	.L93
 1534              	.L99:
1063:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (ncl == scl) return 0;		/* No free cluster */
 1535              		.loc 1 1063 0
 1536 00a6 7A69     		ldr	r2, [r7, #20]
 1537 00a8 3B69     		ldr	r3, [r7, #16]
 1538 00aa 9A42     		cmp	r2, r3
 1539 00ac D6D1     		bne	.L109
1063:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (ncl == scl) return 0;		/* No free cluster */
 1540              		.loc 1 1063 0 is_stmt 0 discriminator 1
 1541 00ae 4FF00003 		mov	r3, #0
 1542 00b2 35E0     		b	.L93
 1543              	.L108:
1060:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (cs == 0) break;				/* Found a free cluster */
 1544              		.loc 1 1060 0 is_stmt 1
 1545 00b4 00BF     		nop
 1546              	.L107:
1065:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1066:../Dave/Generated/src/FATFS002/Src/ff.c **** 	res = put_fat(fs, ncl, 0x0FFFFFFF);	/* Mark the new cluster "last link" */
 1547              		.loc 1 1066 0
 1548 00b6 7868     		ldr	r0, [r7, #4]
 1549 00b8 7969     		ldr	r1, [r7, #20]
 1550 00ba 6FF07042 		mvn	r2, #-268435456
 1551 00be FFF7FEFF 		bl	put_fat
 1552 00c2 0346     		mov	r3, r0
 1553 00c4 FB73     		strb	r3, [r7, #15]
1067:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (res == FR_OK && clst != 0) {
 1554              		.loc 1 1067 0
 1555 00c6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1556 00c8 002B     		cmp	r3, #0
 1557 00ca 09D1     		bne	.L102
 1558              		.loc 1 1067 0 is_stmt 0 discriminator 1
 1559 00cc 3B68     		ldr	r3, [r7, #0]
 1560 00ce 002B     		cmp	r3, #0
 1561 00d0 06D0     		beq	.L102
1068:../Dave/Generated/src/FATFS002/Src/ff.c **** 		res = put_fat(fs, clst, ncl);	/* Link it to the previous one if needed */
 1562              		.loc 1 1068 0 is_stmt 1
 1563 00d2 7868     		ldr	r0, [r7, #4]
 1564 00d4 3968     		ldr	r1, [r7, #0]
 1565 00d6 7A69     		ldr	r2, [r7, #20]
 1566 00d8 FFF7FEFF 		bl	put_fat
 1567 00dc 0346     		mov	r3, r0
 1568 00de FB73     		strb	r3, [r7, #15]
 1569              	.L102:
1069:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
1070:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (res == FR_OK) {
 1570              		.loc 1 1070 0
 1571 00e0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1572 00e2 002B     		cmp	r3, #0
 1573 00e4 12D1     		bne	.L103
1071:../Dave/Generated/src/FATFS002/Src/ff.c **** 		fs->last_clust = ncl;			/* Update FSINFO */
 1574              		.loc 1 1071 0
 1575 00e6 7B68     		ldr	r3, [r7, #4]
 1576 00e8 7A69     		ldr	r2, [r7, #20]
 1577 00ea DA60     		str	r2, [r3, #12]
1072:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (fs->free_clust != 0xFFFFFFFF) {
 1578              		.loc 1 1072 0
 1579 00ec 7B68     		ldr	r3, [r7, #4]
 1580 00ee 1B69     		ldr	r3, [r3, #16]
 1581 00f0 B3F1FF3F 		cmp	r3, #-1
 1582 00f4 13D0     		beq	.L104
1073:../Dave/Generated/src/FATFS002/Src/ff.c **** 			fs->free_clust--;
 1583              		.loc 1 1073 0
 1584 00f6 7B68     		ldr	r3, [r7, #4]
 1585 00f8 1B69     		ldr	r3, [r3, #16]
 1586 00fa 03F1FF32 		add	r2, r3, #-1
 1587 00fe 7B68     		ldr	r3, [r7, #4]
 1588 0100 1A61     		str	r2, [r3, #16]
1074:../Dave/Generated/src/FATFS002/Src/ff.c **** 			fs->fsi_flag = 1;
 1589              		.loc 1 1074 0
 1590 0102 7B68     		ldr	r3, [r7, #4]
 1591 0104 4FF00102 		mov	r2, #1
 1592 0108 5A71     		strb	r2, [r3, #5]
 1593 010a 08E0     		b	.L104
 1594              	.L103:
1075:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
1076:../Dave/Generated/src/FATFS002/Src/ff.c **** 	} else {
1077:../Dave/Generated/src/FATFS002/Src/ff.c **** 		ncl = (res == FR_DISK_ERR) ? 0xFFFFFFFF : 1;
 1595              		.loc 1 1077 0
 1596 010c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1597 010e 012B     		cmp	r3, #1
 1598 0110 02D1     		bne	.L105
 1599              		.loc 1 1077 0 is_stmt 0 discriminator 1
 1600 0112 4FF0FF33 		mov	r3, #-1
 1601 0116 01E0     		b	.L106
 1602              	.L105:
 1603              		.loc 1 1077 0 discriminator 2
 1604 0118 4FF00103 		mov	r3, #1
 1605              	.L106:
 1606              		.loc 1 1077 0 discriminator 3
 1607 011c 7B61     		str	r3, [r7, #20]
 1608              	.L104:
1078:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
1079:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1080:../Dave/Generated/src/FATFS002/Src/ff.c **** 	return ncl;		/* Return new cluster number or error code */
 1609              		.loc 1 1080 0 is_stmt 1
 1610 011e 7B69     		ldr	r3, [r7, #20]
 1611              	.L93:
1081:../Dave/Generated/src/FATFS002/Src/ff.c **** }
 1612              		.loc 1 1081 0
 1613 0120 1846     		mov	r0, r3
 1614 0122 07F11807 		add	r7, r7, #24
 1615 0126 BD46     		mov	sp, r7
 1616 0128 80BD     		pop	{r7, pc}
 1617              		.cfi_endproc
 1618              	.LFE10:
 1620 012a 00BF     		.section	.text.dir_sdi,"ax",%progbits
 1621              		.align	2
 1622              		.thumb
 1623              		.thumb_func
 1625              	dir_sdi:
 1626              	.LFB11:
1082:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif /* !_FS_READONLY */
1083:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1084:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1085:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1086:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
1087:../Dave/Generated/src/FATFS002/Src/ff.c **** /* FAT handling - Convert offset into cluster with link map table        */
1088:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
1089:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1090:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _USE_FASTSEEK
1091:../Dave/Generated/src/FATFS002/Src/ff.c **** static
1092:../Dave/Generated/src/FATFS002/Src/ff.c **** DWORD clmt_clust (	/* <2:Error, >=2:Cluster number */
1093:../Dave/Generated/src/FATFS002/Src/ff.c **** 	FIL* fp,		/* Pointer to the file object */
1094:../Dave/Generated/src/FATFS002/Src/ff.c **** 	DWORD ofs		/* File offset to be converted to cluster# */
1095:../Dave/Generated/src/FATFS002/Src/ff.c **** )
1096:../Dave/Generated/src/FATFS002/Src/ff.c **** {
1097:../Dave/Generated/src/FATFS002/Src/ff.c **** 	DWORD cl, ncl, *tbl;
1098:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1099:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1100:../Dave/Generated/src/FATFS002/Src/ff.c **** 	tbl = fp->cltbl + 1;	/* Top of CLMT */
1101:../Dave/Generated/src/FATFS002/Src/ff.c **** 	cl = ofs / SS(fp->fs) / fp->fs->csize;	/* Cluster order from top of the file */
1102:../Dave/Generated/src/FATFS002/Src/ff.c **** 	for (;;) {
1103:../Dave/Generated/src/FATFS002/Src/ff.c **** 		ncl = *tbl++;			/* Number of cluters in the fragment */
1104:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (!ncl) return 0;		/* End of table? (error) */
1105:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (cl < ncl) break;	/* In this fragment? */
1106:../Dave/Generated/src/FATFS002/Src/ff.c **** 		cl -= ncl; tbl++;		/* Next fragment */
1107:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
1108:../Dave/Generated/src/FATFS002/Src/ff.c **** 	return cl + *tbl;	/* Return the cluster number */
1109:../Dave/Generated/src/FATFS002/Src/ff.c **** }
1110:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif	/* _USE_FASTSEEK */
1111:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1112:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1113:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1114:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
1115:../Dave/Generated/src/FATFS002/Src/ff.c **** /* Directory handling - Set directory index                              */
1116:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
1117:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1118:../Dave/Generated/src/FATFS002/Src/ff.c **** static
1119:../Dave/Generated/src/FATFS002/Src/ff.c **** FRESULT dir_sdi (
1120:../Dave/Generated/src/FATFS002/Src/ff.c **** 	DIR *dj,		/* Pointer to directory object */
1121:../Dave/Generated/src/FATFS002/Src/ff.c **** 	WORD idx		/* Directory index number */
1122:../Dave/Generated/src/FATFS002/Src/ff.c **** )
1123:../Dave/Generated/src/FATFS002/Src/ff.c **** {
 1627              		.loc 1 1123 0
 1628              		.cfi_startproc
 1629              		@ args = 0, pretend = 0, frame = 16
 1630              		@ frame_needed = 1, uses_anonymous_args = 0
 1631 0000 80B5     		push	{r7, lr}
 1632              	.LCFI33:
 1633              		.cfi_def_cfa_offset 8
 1634              		.cfi_offset 7, -8
 1635              		.cfi_offset 14, -4
 1636 0002 84B0     		sub	sp, sp, #16
 1637              	.LCFI34:
 1638              		.cfi_def_cfa_offset 24
 1639 0004 00AF     		add	r7, sp, #0
 1640              	.LCFI35:
 1641              		.cfi_def_cfa_register 7
 1642 0006 7860     		str	r0, [r7, #4]
 1643 0008 0B46     		mov	r3, r1
 1644 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1124:../Dave/Generated/src/FATFS002/Src/ff.c **** 	DWORD clst;
1125:../Dave/Generated/src/FATFS002/Src/ff.c **** 	WORD ic;
1126:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1127:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1128:../Dave/Generated/src/FATFS002/Src/ff.c **** 	dj->index = idx;
 1645              		.loc 1 1128 0
 1646 000c 7B68     		ldr	r3, [r7, #4]
 1647 000e 7A88     		ldrh	r2, [r7, #2]	@ movhi
 1648 0010 DA80     		strh	r2, [r3, #6]	@ movhi
1129:../Dave/Generated/src/FATFS002/Src/ff.c **** 	clst = dj->sclust;
 1649              		.loc 1 1129 0
 1650 0012 7B68     		ldr	r3, [r7, #4]
 1651 0014 9B68     		ldr	r3, [r3, #8]
 1652 0016 FB60     		str	r3, [r7, #12]
1130:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (clst == 1 || clst >= dj->fs->n_fatent)	/* Check start cluster range */
 1653              		.loc 1 1130 0
 1654 0018 FB68     		ldr	r3, [r7, #12]
 1655 001a 012B     		cmp	r3, #1
 1656 001c 05D0     		beq	.L111
 1657              		.loc 1 1130 0 is_stmt 0 discriminator 1
 1658 001e 7B68     		ldr	r3, [r7, #4]
 1659 0020 1B68     		ldr	r3, [r3, #0]
 1660 0022 DA69     		ldr	r2, [r3, #28]
 1661 0024 FB68     		ldr	r3, [r7, #12]
 1662 0026 9A42     		cmp	r2, r3
 1663 0028 02D8     		bhi	.L112
 1664              	.L111:
1131:../Dave/Generated/src/FATFS002/Src/ff.c **** 		return FR_INT_ERR;
 1665              		.loc 1 1131 0 is_stmt 1
 1666 002a 4FF00203 		mov	r3, #2
 1667 002e 6FE0     		b	.L113
 1668              	.L112:
1132:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (!clst && dj->fs->fs_type == FS_FAT32)	/* Replace cluster# 0 with root cluster# if in FAT32 */
 1669              		.loc 1 1132 0
 1670 0030 FB68     		ldr	r3, [r7, #12]
 1671 0032 002B     		cmp	r3, #0
 1672 0034 08D1     		bne	.L114
 1673              		.loc 1 1132 0 is_stmt 0 discriminator 1
 1674 0036 7B68     		ldr	r3, [r7, #4]
 1675 0038 1B68     		ldr	r3, [r3, #0]
 1676 003a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1677 003c 032B     		cmp	r3, #3
 1678 003e 03D1     		bne	.L114
1133:../Dave/Generated/src/FATFS002/Src/ff.c **** 		clst = dj->fs->dirbase;
 1679              		.loc 1 1133 0 is_stmt 1
 1680 0040 7B68     		ldr	r3, [r7, #4]
 1681 0042 1B68     		ldr	r3, [r3, #0]
 1682 0044 9B6A     		ldr	r3, [r3, #40]
 1683 0046 FB60     		str	r3, [r7, #12]
 1684              	.L114:
1134:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1135:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (clst == 0) {	/* Static table (root-dir in FAT12/16) */
 1685              		.loc 1 1135 0
 1686 0048 FB68     		ldr	r3, [r7, #12]
 1687 004a 002B     		cmp	r3, #0
 1688 004c 16D1     		bne	.L115
1136:../Dave/Generated/src/FATFS002/Src/ff.c **** 		dj->clust = clst;
 1689              		.loc 1 1136 0
 1690 004e 7B68     		ldr	r3, [r7, #4]
 1691 0050 FA68     		ldr	r2, [r7, #12]
 1692 0052 DA60     		str	r2, [r3, #12]
1137:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (idx >= dj->fs->n_rootdir)		/* Index is out of range */
 1693              		.loc 1 1137 0
 1694 0054 7B68     		ldr	r3, [r7, #4]
 1695 0056 1B68     		ldr	r3, [r3, #0]
 1696 0058 1B89     		ldrh	r3, [r3, #8]
 1697 005a 7A88     		ldrh	r2, [r7, #2]
 1698 005c 9A42     		cmp	r2, r3
 1699 005e 02D3     		bcc	.L116
1138:../Dave/Generated/src/FATFS002/Src/ff.c **** 			return FR_INT_ERR;
 1700              		.loc 1 1138 0
 1701 0060 4FF00203 		mov	r3, #2
 1702 0064 54E0     		b	.L113
 1703              	.L116:
1139:../Dave/Generated/src/FATFS002/Src/ff.c **** 		dj->sect = dj->fs->dirbase + idx / (SS(dj->fs) / SZ_DIR);	/* Sector# */
 1704              		.loc 1 1139 0
 1705 0066 7B68     		ldr	r3, [r7, #4]
 1706 0068 1B68     		ldr	r3, [r3, #0]
 1707 006a 9A6A     		ldr	r2, [r3, #40]
 1708 006c 7B88     		ldrh	r3, [r7, #2]
 1709 006e 4FEA1313 		lsr	r3, r3, #4
 1710 0072 9BB2     		uxth	r3, r3
 1711 0074 D218     		adds	r2, r2, r3
 1712 0076 7B68     		ldr	r3, [r7, #4]
 1713 0078 1A61     		str	r2, [r3, #16]
 1714 007a 39E0     		b	.L117
 1715              	.L115:
1140:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
1141:../Dave/Generated/src/FATFS002/Src/ff.c **** 	else {				/* Dynamic table (sub-dirs or root-dir in FAT32) */
1142:../Dave/Generated/src/FATFS002/Src/ff.c **** 		ic = SS(dj->fs) / SZ_DIR * dj->fs->csize;	/* Entries per cluster */
 1716              		.loc 1 1142 0
 1717 007c 7B68     		ldr	r3, [r7, #4]
 1718 007e 1B68     		ldr	r3, [r3, #0]
 1719 0080 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1720 0082 4FEA0313 		lsl	r3, r3, #4
 1721 0086 7B81     		strh	r3, [r7, #10]	@ movhi
1143:../Dave/Generated/src/FATFS002/Src/ff.c **** 		while (idx >= ic) {	/* Follow cluster chain */
 1722              		.loc 1 1143 0
 1723 0088 1DE0     		b	.L118
 1724              	.L122:
1144:../Dave/Generated/src/FATFS002/Src/ff.c **** 			clst = get_fat(dj->fs, clst);				/* Get next cluster */
 1725              		.loc 1 1144 0
 1726 008a 7B68     		ldr	r3, [r7, #4]
 1727 008c 1B68     		ldr	r3, [r3, #0]
 1728 008e 1846     		mov	r0, r3
 1729 0090 F968     		ldr	r1, [r7, #12]
 1730 0092 FFF7FEFF 		bl	get_fat
 1731 0096 F860     		str	r0, [r7, #12]
1145:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
 1732              		.loc 1 1145 0
 1733 0098 FB68     		ldr	r3, [r7, #12]
 1734 009a B3F1FF3F 		cmp	r3, #-1
 1735 009e 02D1     		bne	.L119
 1736              		.loc 1 1145 0 is_stmt 0 discriminator 1
 1737 00a0 4FF00103 		mov	r3, #1
 1738 00a4 34E0     		b	.L113
 1739              	.L119:
1146:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (clst < 2 || clst >= dj->fs->n_fatent)	/* Reached to end of table or int error */
 1740              		.loc 1 1146 0 is_stmt 1
 1741 00a6 FB68     		ldr	r3, [r7, #12]
 1742 00a8 012B     		cmp	r3, #1
 1743 00aa 05D9     		bls	.L120
 1744              		.loc 1 1146 0 is_stmt 0 discriminator 1
 1745 00ac 7B68     		ldr	r3, [r7, #4]
 1746 00ae 1B68     		ldr	r3, [r3, #0]
 1747 00b0 DA69     		ldr	r2, [r3, #28]
 1748 00b2 FB68     		ldr	r3, [r7, #12]
 1749 00b4 9A42     		cmp	r2, r3
 1750 00b6 02D8     		bhi	.L121
 1751              	.L120:
1147:../Dave/Generated/src/FATFS002/Src/ff.c **** 				return FR_INT_ERR;
 1752              		.loc 1 1147 0 is_stmt 1
 1753 00b8 4FF00203 		mov	r3, #2
 1754 00bc 28E0     		b	.L113
 1755              	.L121:
1148:../Dave/Generated/src/FATFS002/Src/ff.c **** 			idx -= ic;
 1756              		.loc 1 1148 0
 1757 00be 7A88     		ldrh	r2, [r7, #2]	@ movhi
 1758 00c0 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1759 00c2 D31A     		subs	r3, r2, r3
 1760 00c4 7B80     		strh	r3, [r7, #2]	@ movhi
 1761              	.L118:
1143:../Dave/Generated/src/FATFS002/Src/ff.c **** 		while (idx >= ic) {	/* Follow cluster chain */
 1762              		.loc 1 1143 0 discriminator 1
 1763 00c6 7A88     		ldrh	r2, [r7, #2]
 1764 00c8 7B89     		ldrh	r3, [r7, #10]
 1765 00ca 9A42     		cmp	r2, r3
 1766 00cc DDD2     		bcs	.L122
1149:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
1150:../Dave/Generated/src/FATFS002/Src/ff.c **** 		dj->clust = clst;
 1767              		.loc 1 1150 0
 1768 00ce 7B68     		ldr	r3, [r7, #4]
 1769 00d0 FA68     		ldr	r2, [r7, #12]
 1770 00d2 DA60     		str	r2, [r3, #12]
1151:../Dave/Generated/src/FATFS002/Src/ff.c **** 		dj->sect = clust2sect(dj->fs, clst) + idx / (SS(dj->fs) / SZ_DIR);	/* Sector# */
 1771              		.loc 1 1151 0
 1772 00d4 7B68     		ldr	r3, [r7, #4]
 1773 00d6 1B68     		ldr	r3, [r3, #0]
 1774 00d8 1846     		mov	r0, r3
 1775 00da F968     		ldr	r1, [r7, #12]
 1776 00dc FFF7FEFF 		bl	clust2sect
 1777 00e0 0246     		mov	r2, r0
 1778 00e2 7B88     		ldrh	r3, [r7, #2]
 1779 00e4 4FEA1313 		lsr	r3, r3, #4
 1780 00e8 9BB2     		uxth	r3, r3
 1781 00ea D218     		adds	r2, r2, r3
 1782 00ec 7B68     		ldr	r3, [r7, #4]
 1783 00ee 1A61     		str	r2, [r3, #16]
 1784              	.L117:
1152:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
1153:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1154:../Dave/Generated/src/FATFS002/Src/ff.c **** 	dj->dir = dj->fs->win + (idx % (SS(dj->fs) / SZ_DIR)) * SZ_DIR;	/* Ptr to the entry in the sector 
 1785              		.loc 1 1154 0
 1786 00f0 7B68     		ldr	r3, [r7, #4]
 1787 00f2 1A68     		ldr	r2, [r3, #0]
 1788 00f4 7B88     		ldrh	r3, [r7, #2]
 1789 00f6 03F00F03 		and	r3, r3, #15
 1790 00fa 4FEA4313 		lsl	r3, r3, #5
 1791 00fe 03F13003 		add	r3, r3, #48
 1792 0102 D318     		adds	r3, r2, r3
 1793 0104 03F10402 		add	r2, r3, #4
 1794 0108 7B68     		ldr	r3, [r7, #4]
 1795 010a 5A61     		str	r2, [r3, #20]
1155:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1156:../Dave/Generated/src/FATFS002/Src/ff.c **** 	return FR_OK;	/* Seek succeeded */
 1796              		.loc 1 1156 0
 1797 010c 4FF00003 		mov	r3, #0
 1798              	.L113:
1157:../Dave/Generated/src/FATFS002/Src/ff.c **** }
 1799              		.loc 1 1157 0
 1800 0110 1846     		mov	r0, r3
 1801 0112 07F11007 		add	r7, r7, #16
 1802 0116 BD46     		mov	sp, r7
 1803 0118 80BD     		pop	{r7, pc}
 1804              		.cfi_endproc
 1805              	.LFE11:
 1807              		.section	.text.dir_next,"ax",%progbits
 1808              		.align	2
 1809              		.thumb
 1810              		.thumb_func
 1812              	dir_next:
 1813              	.LFB12:
1158:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1159:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1160:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1161:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1162:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
1163:../Dave/Generated/src/FATFS002/Src/ff.c **** /* Directory handling - Move directory index next                        */
1164:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
1165:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1166:../Dave/Generated/src/FATFS002/Src/ff.c **** static
1167:../Dave/Generated/src/FATFS002/Src/ff.c **** FRESULT dir_next (	/* FR_OK:Succeeded, FR_NO_FILE:End of table, FR_DENIED:EOT and could not stretch
1168:../Dave/Generated/src/FATFS002/Src/ff.c **** 	DIR *dj,		/* Pointer to directory object */
1169:../Dave/Generated/src/FATFS002/Src/ff.c **** 	int stretch		/* 0: Do not stretch table, 1: Stretch table if needed */
1170:../Dave/Generated/src/FATFS002/Src/ff.c **** )
1171:../Dave/Generated/src/FATFS002/Src/ff.c **** {
 1814              		.loc 1 1171 0
 1815              		.cfi_startproc
 1816              		@ args = 0, pretend = 0, frame = 16
 1817              		@ frame_needed = 1, uses_anonymous_args = 0
 1818 0000 90B5     		push	{r4, r7, lr}
 1819              	.LCFI36:
 1820              		.cfi_def_cfa_offset 12
 1821              		.cfi_offset 4, -12
 1822              		.cfi_offset 7, -8
 1823              		.cfi_offset 14, -4
 1824 0002 85B0     		sub	sp, sp, #20
 1825              	.LCFI37:
 1826              		.cfi_def_cfa_offset 32
 1827 0004 00AF     		add	r7, sp, #0
 1828              	.LCFI38:
 1829              		.cfi_def_cfa_register 7
 1830 0006 7860     		str	r0, [r7, #4]
 1831 0008 3960     		str	r1, [r7, #0]
1172:../Dave/Generated/src/FATFS002/Src/ff.c **** 	DWORD clst;
1173:../Dave/Generated/src/FATFS002/Src/ff.c **** 	WORD i;
1174:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1175:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1176:../Dave/Generated/src/FATFS002/Src/ff.c **** 	stretch = stretch;		/* To suppress warning on read-only cfg. */
1177:../Dave/Generated/src/FATFS002/Src/ff.c **** 	i = dj->index + 1;
 1832              		.loc 1 1177 0
 1833 000a 7B68     		ldr	r3, [r7, #4]
 1834 000c DB88     		ldrh	r3, [r3, #6]
 1835 000e 03F10103 		add	r3, r3, #1
 1836 0012 3B81     		strh	r3, [r7, #8]	@ movhi
1178:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (!i || !dj->sect)	/* Report EOT when index has reached 65535 */
 1837              		.loc 1 1178 0
 1838 0014 3B89     		ldrh	r3, [r7, #8]
 1839 0016 002B     		cmp	r3, #0
 1840 0018 03D0     		beq	.L124
 1841              		.loc 1 1178 0 is_stmt 0 discriminator 1
 1842 001a 7B68     		ldr	r3, [r7, #4]
 1843 001c 1B69     		ldr	r3, [r3, #16]
 1844 001e 002B     		cmp	r3, #0
 1845 0020 02D1     		bne	.L125
 1846              	.L124:
1179:../Dave/Generated/src/FATFS002/Src/ff.c **** 		return FR_NO_FILE;
 1847              		.loc 1 1179 0 is_stmt 1
 1848 0022 4FF00403 		mov	r3, #4
 1849 0026 D5E0     		b	.L126
 1850              	.L125:
1180:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1181:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (!(i % (SS(dj->fs) / SZ_DIR))) {	/* Sector changed? */
 1851              		.loc 1 1181 0
 1852 0028 3B89     		ldrh	r3, [r7, #8]	@ movhi
 1853 002a 03F00F03 		and	r3, r3, #15
 1854 002e 9BB2     		uxth	r3, r3
 1855 0030 002B     		cmp	r3, #0
 1856 0032 40F0BC80 		bne	.L127
1182:../Dave/Generated/src/FATFS002/Src/ff.c **** 		dj->sect++;					/* Next sector */
 1857              		.loc 1 1182 0
 1858 0036 7B68     		ldr	r3, [r7, #4]
 1859 0038 1B69     		ldr	r3, [r3, #16]
 1860 003a 03F10102 		add	r2, r3, #1
 1861 003e 7B68     		ldr	r3, [r7, #4]
 1862 0040 1A61     		str	r2, [r3, #16]
1183:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1184:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (dj->clust == 0) {	/* Static table */
 1863              		.loc 1 1184 0
 1864 0042 7B68     		ldr	r3, [r7, #4]
 1865 0044 DB68     		ldr	r3, [r3, #12]
 1866 0046 002B     		cmp	r3, #0
 1867 0048 09D1     		bne	.L128
1185:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (i >= dj->fs->n_rootdir)	/* Report EOT when end of table */
 1868              		.loc 1 1185 0
 1869 004a 7B68     		ldr	r3, [r7, #4]
 1870 004c 1B68     		ldr	r3, [r3, #0]
 1871 004e 1B89     		ldrh	r3, [r3, #8]
 1872 0050 3A89     		ldrh	r2, [r7, #8]
 1873 0052 9A42     		cmp	r2, r3
 1874 0054 C0F0AB80 		bcc	.L127
1186:../Dave/Generated/src/FATFS002/Src/ff.c **** 				return FR_NO_FILE;
 1875              		.loc 1 1186 0
 1876 0058 4FF00403 		mov	r3, #4
 1877 005c BAE0     		b	.L126
 1878              	.L128:
1187:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
1188:../Dave/Generated/src/FATFS002/Src/ff.c **** 		else {					/* Dynamic table */
1189:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (((i / (SS(dj->fs) / SZ_DIR)) & (dj->fs->csize - 1)) == 0) {	/* Cluster changed? */
 1879              		.loc 1 1189 0
 1880 005e 3B89     		ldrh	r3, [r7, #8]
 1881 0060 4FEA1313 		lsr	r3, r3, #4
 1882 0064 9BB2     		uxth	r3, r3
 1883 0066 1A46     		mov	r2, r3
 1884 0068 7B68     		ldr	r3, [r7, #4]
 1885 006a 1B68     		ldr	r3, [r3, #0]
 1886 006c 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1887 006e 03F1FF33 		add	r3, r3, #-1
 1888 0072 1340     		ands	r3, r3, r2
 1889 0074 002B     		cmp	r3, #0
 1890 0076 40F09A80 		bne	.L127
1190:../Dave/Generated/src/FATFS002/Src/ff.c **** 				clst = get_fat(dj->fs, dj->clust);				/* Get next cluster */
 1891              		.loc 1 1190 0
 1892 007a 7B68     		ldr	r3, [r7, #4]
 1893 007c 1A68     		ldr	r2, [r3, #0]
 1894 007e 7B68     		ldr	r3, [r7, #4]
 1895 0080 DB68     		ldr	r3, [r3, #12]
 1896 0082 1046     		mov	r0, r2
 1897 0084 1946     		mov	r1, r3
 1898 0086 FFF7FEFF 		bl	get_fat
 1899 008a F860     		str	r0, [r7, #12]
1191:../Dave/Generated/src/FATFS002/Src/ff.c **** 				if (clst <= 1) return FR_INT_ERR;
 1900              		.loc 1 1191 0
 1901 008c FB68     		ldr	r3, [r7, #12]
 1902 008e 012B     		cmp	r3, #1
 1903 0090 02D8     		bhi	.L129
 1904              		.loc 1 1191 0 is_stmt 0 discriminator 1
 1905 0092 4FF00203 		mov	r3, #2
 1906 0096 9DE0     		b	.L126
 1907              	.L129:
1192:../Dave/Generated/src/FATFS002/Src/ff.c **** 				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
 1908              		.loc 1 1192 0 is_stmt 1
 1909 0098 FB68     		ldr	r3, [r7, #12]
 1910 009a B3F1FF3F 		cmp	r3, #-1
 1911 009e 02D1     		bne	.L130
 1912              		.loc 1 1192 0 is_stmt 0 discriminator 1
 1913 00a0 4FF00103 		mov	r3, #1
 1914 00a4 96E0     		b	.L126
 1915              	.L130:
1193:../Dave/Generated/src/FATFS002/Src/ff.c **** 				if (clst >= dj->fs->n_fatent) {					/* When it reached end of dynamic table */
 1916              		.loc 1 1193 0 is_stmt 1
 1917 00a6 7B68     		ldr	r3, [r7, #4]
 1918 00a8 1B68     		ldr	r3, [r3, #0]
 1919 00aa DA69     		ldr	r2, [r3, #28]
 1920 00ac FB68     		ldr	r3, [r7, #12]
 1921 00ae 9A42     		cmp	r2, r3
 1922 00b0 71D8     		bhi	.L131
 1923              	.LBB3:
1194:../Dave/Generated/src/FATFS002/Src/ff.c **** #if !_FS_READONLY
1195:../Dave/Generated/src/FATFS002/Src/ff.c **** 					BYTE c;
1196:../Dave/Generated/src/FATFS002/Src/ff.c **** 					if (!stretch) return FR_NO_FILE;			/* When do not stretch, report EOT */
 1924              		.loc 1 1196 0
 1925 00b2 3B68     		ldr	r3, [r7, #0]
 1926 00b4 002B     		cmp	r3, #0
 1927 00b6 02D1     		bne	.L132
 1928              		.loc 1 1196 0 is_stmt 0 discriminator 1
 1929 00b8 4FF00403 		mov	r3, #4
 1930 00bc 8AE0     		b	.L126
 1931              	.L132:
1197:../Dave/Generated/src/FATFS002/Src/ff.c **** 					clst = create_chain(dj->fs, dj->clust);		/* Stretch cluster chain */
 1932              		.loc 1 1197 0 is_stmt 1
 1933 00be 7B68     		ldr	r3, [r7, #4]
 1934 00c0 1A68     		ldr	r2, [r3, #0]
 1935 00c2 7B68     		ldr	r3, [r7, #4]
 1936 00c4 DB68     		ldr	r3, [r3, #12]
 1937 00c6 1046     		mov	r0, r2
 1938 00c8 1946     		mov	r1, r3
 1939 00ca FFF7FEFF 		bl	create_chain
 1940 00ce F860     		str	r0, [r7, #12]
1198:../Dave/Generated/src/FATFS002/Src/ff.c **** 					if (clst == 0) return FR_DENIED;			/* No free cluster */
 1941              		.loc 1 1198 0
 1942 00d0 FB68     		ldr	r3, [r7, #12]
 1943 00d2 002B     		cmp	r3, #0
 1944 00d4 02D1     		bne	.L133
 1945              		.loc 1 1198 0 is_stmt 0 discriminator 1
 1946 00d6 4FF00703 		mov	r3, #7
 1947 00da 7BE0     		b	.L126
 1948              	.L133:
1199:../Dave/Generated/src/FATFS002/Src/ff.c **** 					if (clst == 1) return FR_INT_ERR;
 1949              		.loc 1 1199 0 is_stmt 1
 1950 00dc FB68     		ldr	r3, [r7, #12]
 1951 00de 012B     		cmp	r3, #1
 1952 00e0 02D1     		bne	.L134
 1953              		.loc 1 1199 0 is_stmt 0 discriminator 1
 1954 00e2 4FF00203 		mov	r3, #2
 1955 00e6 75E0     		b	.L126
 1956              	.L134:
1200:../Dave/Generated/src/FATFS002/Src/ff.c **** 					if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
 1957              		.loc 1 1200 0 is_stmt 1
 1958 00e8 FB68     		ldr	r3, [r7, #12]
 1959 00ea B3F1FF3F 		cmp	r3, #-1
 1960 00ee 02D1     		bne	.L135
 1961              		.loc 1 1200 0 is_stmt 0 discriminator 1
 1962 00f0 4FF00103 		mov	r3, #1
 1963 00f4 6EE0     		b	.L126
 1964              	.L135:
1201:../Dave/Generated/src/FATFS002/Src/ff.c **** 					/* Clean-up stretched table */
1202:../Dave/Generated/src/FATFS002/Src/ff.c **** 					if (move_window(dj->fs, 0)) return FR_DISK_ERR;	/* Flush active window */
 1965              		.loc 1 1202 0 is_stmt 1
 1966 00f6 7B68     		ldr	r3, [r7, #4]
 1967 00f8 1B68     		ldr	r3, [r3, #0]
 1968 00fa 1846     		mov	r0, r3
 1969 00fc 4FF00001 		mov	r1, #0
 1970 0100 FFF7FEFF 		bl	move_window
 1971 0104 0346     		mov	r3, r0
 1972 0106 002B     		cmp	r3, #0
 1973 0108 02D0     		beq	.L136
 1974              		.loc 1 1202 0 is_stmt 0 discriminator 1
 1975 010a 4FF00103 		mov	r3, #1
 1976 010e 61E0     		b	.L126
 1977              	.L136:
1203:../Dave/Generated/src/FATFS002/Src/ff.c **** 					mem_set(dj->fs->win, 0, SS(dj->fs));			/* Clear window buffer */
 1978              		.loc 1 1203 0 is_stmt 1
 1979 0110 7B68     		ldr	r3, [r7, #4]
 1980 0112 1B68     		ldr	r3, [r3, #0]
 1981 0114 03F13403 		add	r3, r3, #52
 1982 0118 1846     		mov	r0, r3
 1983 011a 4FF00001 		mov	r1, #0
 1984 011e 4FF40072 		mov	r2, #512
 1985 0122 FFF7FEFF 		bl	mem_set
1204:../Dave/Generated/src/FATFS002/Src/ff.c **** 					dj->fs->winsect = clust2sect(dj->fs, clst);	/* Cluster start sector */
 1986              		.loc 1 1204 0
 1987 0126 7B68     		ldr	r3, [r7, #4]
 1988 0128 1C68     		ldr	r4, [r3, #0]
 1989 012a 7B68     		ldr	r3, [r7, #4]
 1990 012c 1B68     		ldr	r3, [r3, #0]
 1991 012e 1846     		mov	r0, r3
 1992 0130 F968     		ldr	r1, [r7, #12]
 1993 0132 FFF7FEFF 		bl	clust2sect
 1994 0136 0346     		mov	r3, r0
 1995 0138 2363     		str	r3, [r4, #48]
1205:../Dave/Generated/src/FATFS002/Src/ff.c **** 					for (c = 0; c < dj->fs->csize; c++) {		/* Fill the new cluster with 0 */
 1996              		.loc 1 1205 0
 1997 013a 4FF00003 		mov	r3, #0
 1998 013e FB72     		strb	r3, [r7, #11]
 1999 0140 1BE0     		b	.L137
 2000              	.L139:
1206:../Dave/Generated/src/FATFS002/Src/ff.c **** 						dj->fs->wflag = 1;
 2001              		.loc 1 1206 0
 2002 0142 7B68     		ldr	r3, [r7, #4]
 2003 0144 1B68     		ldr	r3, [r3, #0]
 2004 0146 4FF00102 		mov	r2, #1
 2005 014a 1A71     		strb	r2, [r3, #4]
1207:../Dave/Generated/src/FATFS002/Src/ff.c **** 						if (move_window(dj->fs, 0)) return FR_DISK_ERR;
 2006              		.loc 1 1207 0
 2007 014c 7B68     		ldr	r3, [r7, #4]
 2008 014e 1B68     		ldr	r3, [r3, #0]
 2009 0150 1846     		mov	r0, r3
 2010 0152 4FF00001 		mov	r1, #0
 2011 0156 FFF7FEFF 		bl	move_window
 2012 015a 0346     		mov	r3, r0
 2013 015c 002B     		cmp	r3, #0
 2014 015e 02D0     		beq	.L138
 2015              		.loc 1 1207 0 is_stmt 0 discriminator 1
 2016 0160 4FF00103 		mov	r3, #1
 2017 0164 36E0     		b	.L126
 2018              	.L138:
1208:../Dave/Generated/src/FATFS002/Src/ff.c **** 						dj->fs->winsect++;
 2019              		.loc 1 1208 0 is_stmt 1
 2020 0166 7B68     		ldr	r3, [r7, #4]
 2021 0168 1B68     		ldr	r3, [r3, #0]
 2022 016a 1A6B     		ldr	r2, [r3, #48]
 2023 016c 02F10102 		add	r2, r2, #1
 2024 0170 1A63     		str	r2, [r3, #48]
1205:../Dave/Generated/src/FATFS002/Src/ff.c **** 					for (c = 0; c < dj->fs->csize; c++) {		/* Fill the new cluster with 0 */
 2025              		.loc 1 1205 0
 2026 0172 FB7A     		ldrb	r3, [r7, #11]
 2027 0174 03F10103 		add	r3, r3, #1
 2028 0178 FB72     		strb	r3, [r7, #11]
 2029              	.L137:
1205:../Dave/Generated/src/FATFS002/Src/ff.c **** 					for (c = 0; c < dj->fs->csize; c++) {		/* Fill the new cluster with 0 */
 2030              		.loc 1 1205 0 is_stmt 0 discriminator 1
 2031 017a 7B68     		ldr	r3, [r7, #4]
 2032 017c 1B68     		ldr	r3, [r3, #0]
 2033 017e 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 2034 0180 FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
 2035 0182 9A42     		cmp	r2, r3
 2036 0184 DDD3     		bcc	.L139
1209:../Dave/Generated/src/FATFS002/Src/ff.c **** 					}
1210:../Dave/Generated/src/FATFS002/Src/ff.c **** 					dj->fs->winsect -= c;						/* Rewind window address */
 2037              		.loc 1 1210 0 is_stmt 1
 2038 0186 7B68     		ldr	r3, [r7, #4]
 2039 0188 1B68     		ldr	r3, [r3, #0]
 2040 018a 7A68     		ldr	r2, [r7, #4]
 2041 018c 1268     		ldr	r2, [r2, #0]
 2042 018e 116B     		ldr	r1, [r2, #48]
 2043 0190 FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
 2044 0192 8A1A     		subs	r2, r1, r2
 2045 0194 1A63     		str	r2, [r3, #48]
 2046              	.L131:
 2047              	.LBE3:
1211:../Dave/Generated/src/FATFS002/Src/ff.c **** #else
1212:../Dave/Generated/src/FATFS002/Src/ff.c **** 					return FR_NO_FILE;			/* Report EOT */
1213:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
1214:../Dave/Generated/src/FATFS002/Src/ff.c **** 				}
1215:../Dave/Generated/src/FATFS002/Src/ff.c **** 				dj->clust = clst;				/* Initialize data for new cluster */
 2048              		.loc 1 1215 0
 2049 0196 7B68     		ldr	r3, [r7, #4]
 2050 0198 FA68     		ldr	r2, [r7, #12]
 2051 019a DA60     		str	r2, [r3, #12]
1216:../Dave/Generated/src/FATFS002/Src/ff.c **** 				dj->sect = clust2sect(dj->fs, clst);
 2052              		.loc 1 1216 0
 2053 019c 7B68     		ldr	r3, [r7, #4]
 2054 019e 1B68     		ldr	r3, [r3, #0]
 2055 01a0 1846     		mov	r0, r3
 2056 01a2 F968     		ldr	r1, [r7, #12]
 2057 01a4 FFF7FEFF 		bl	clust2sect
 2058 01a8 0246     		mov	r2, r0
 2059 01aa 7B68     		ldr	r3, [r7, #4]
 2060 01ac 1A61     		str	r2, [r3, #16]
 2061              	.L127:
1217:../Dave/Generated/src/FATFS002/Src/ff.c **** 			}
1218:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
1219:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
1220:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1221:../Dave/Generated/src/FATFS002/Src/ff.c **** 	dj->index = i;
 2062              		.loc 1 1221 0
 2063 01ae 7B68     		ldr	r3, [r7, #4]
 2064 01b0 3A89     		ldrh	r2, [r7, #8]	@ movhi
 2065 01b2 DA80     		strh	r2, [r3, #6]	@ movhi
1222:../Dave/Generated/src/FATFS002/Src/ff.c **** 	dj->dir = dj->fs->win + (i % (SS(dj->fs) / SZ_DIR)) * SZ_DIR;
 2066              		.loc 1 1222 0
 2067 01b4 7B68     		ldr	r3, [r7, #4]
 2068 01b6 1A68     		ldr	r2, [r3, #0]
 2069 01b8 3B89     		ldrh	r3, [r7, #8]
 2070 01ba 03F00F03 		and	r3, r3, #15
 2071 01be 4FEA4313 		lsl	r3, r3, #5
 2072 01c2 03F13003 		add	r3, r3, #48
 2073 01c6 D318     		adds	r3, r2, r3
 2074 01c8 03F10402 		add	r2, r3, #4
 2075 01cc 7B68     		ldr	r3, [r7, #4]
 2076 01ce 5A61     		str	r2, [r3, #20]
1223:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1224:../Dave/Generated/src/FATFS002/Src/ff.c **** 	return FR_OK;
 2077              		.loc 1 1224 0
 2078 01d0 4FF00003 		mov	r3, #0
 2079              	.L126:
1225:../Dave/Generated/src/FATFS002/Src/ff.c **** }
 2080              		.loc 1 1225 0
 2081 01d4 1846     		mov	r0, r3
 2082 01d6 07F11407 		add	r7, r7, #20
 2083 01da BD46     		mov	sp, r7
 2084 01dc 90BD     		pop	{r4, r7, pc}
 2085              		.cfi_endproc
 2086              	.LFE12:
 2088 01de 00BF     		.section	.text.dir_find,"ax",%progbits
 2089              		.align	2
 2090              		.thumb
 2091              		.thumb_func
 2093              	dir_find:
 2094              	.LFB13:
1226:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1227:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1228:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1229:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1230:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
1231:../Dave/Generated/src/FATFS002/Src/ff.c **** /* LFN handling - Test/Pick/Fit an LFN segment from/to directory entry   */
1232:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
1233:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _USE_LFN
1234:../Dave/Generated/src/FATFS002/Src/ff.c **** static
1235:../Dave/Generated/src/FATFS002/Src/ff.c **** const BYTE LfnOfs[] = {1,3,5,7,9,14,16,18,20,22,24,28,30};	/* Offset of LFN chars in the directory 
1236:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1237:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1238:../Dave/Generated/src/FATFS002/Src/ff.c **** static
1239:../Dave/Generated/src/FATFS002/Src/ff.c **** int cmp_lfn (			/* 1:Matched, 0:Not matched */
1240:../Dave/Generated/src/FATFS002/Src/ff.c **** 	WCHAR *lfnbuf,		/* Pointer to the LFN to be compared */
1241:../Dave/Generated/src/FATFS002/Src/ff.c **** 	BYTE *dir			/* Pointer to the directory entry containing a part of LFN */
1242:../Dave/Generated/src/FATFS002/Src/ff.c **** )
1243:../Dave/Generated/src/FATFS002/Src/ff.c **** {
1244:../Dave/Generated/src/FATFS002/Src/ff.c **** 	UINT i, s;
1245:../Dave/Generated/src/FATFS002/Src/ff.c **** 	WCHAR wc, uc;
1246:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1247:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1248:../Dave/Generated/src/FATFS002/Src/ff.c **** 	i = ((dir[LDIR_Ord] & ~LLE) - 1) * 13;	/* Get offset in the LFN buffer */
1249:../Dave/Generated/src/FATFS002/Src/ff.c **** 	s = 0; wc = 1;
1250:../Dave/Generated/src/FATFS002/Src/ff.c **** 	do {
1251:../Dave/Generated/src/FATFS002/Src/ff.c **** 		uc = LD_WORD(dir+LfnOfs[s]);	/* Pick an LFN character from the entry */
1252:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (wc) {	/* Last char has not been processed */
1253:../Dave/Generated/src/FATFS002/Src/ff.c **** 			wc = ff_wtoupper(uc);		/* Convert it to upper case */
1254:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (i >= _MAX_LFN || wc != ff_wtoupper(lfnbuf[i++]))	/* Compare it */
1255:../Dave/Generated/src/FATFS002/Src/ff.c **** 				return 0;				/* Not matched */
1256:../Dave/Generated/src/FATFS002/Src/ff.c **** 		} else {
1257:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (uc != 0xFFFF) return 0;	/* Check filler */
1258:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
1259:../Dave/Generated/src/FATFS002/Src/ff.c **** 	} while (++s < 13);				/* Repeat until all chars in the entry are checked */
1260:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1261:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if ((dir[LDIR_Ord] & LLE) && wc && lfnbuf[i])	/* Last segment matched but different length */
1262:../Dave/Generated/src/FATFS002/Src/ff.c **** 		return 0;
1263:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1264:../Dave/Generated/src/FATFS002/Src/ff.c **** 	return 1;						/* The part of LFN matched */
1265:../Dave/Generated/src/FATFS002/Src/ff.c **** }
1266:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1267:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1268:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1269:../Dave/Generated/src/FATFS002/Src/ff.c **** static
1270:../Dave/Generated/src/FATFS002/Src/ff.c **** int pick_lfn (			/* 1:Succeeded, 0:Buffer overflow */
1271:../Dave/Generated/src/FATFS002/Src/ff.c **** 	WCHAR *lfnbuf,		/* Pointer to the Unicode-LFN buffer */
1272:../Dave/Generated/src/FATFS002/Src/ff.c **** 	BYTE *dir			/* Pointer to the directory entry */
1273:../Dave/Generated/src/FATFS002/Src/ff.c **** )
1274:../Dave/Generated/src/FATFS002/Src/ff.c **** {
1275:../Dave/Generated/src/FATFS002/Src/ff.c **** 	UINT i, s;
1276:../Dave/Generated/src/FATFS002/Src/ff.c **** 	WCHAR wc, uc;
1277:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1278:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1279:../Dave/Generated/src/FATFS002/Src/ff.c **** 	i = ((dir[LDIR_Ord] & 0x3F) - 1) * 13;	/* Offset in the LFN buffer */
1280:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1281:../Dave/Generated/src/FATFS002/Src/ff.c **** 	s = 0; wc = 1;
1282:../Dave/Generated/src/FATFS002/Src/ff.c **** 	do {
1283:../Dave/Generated/src/FATFS002/Src/ff.c **** 		uc = LD_WORD(dir+LfnOfs[s]);		/* Pick an LFN character from the entry */
1284:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (wc) {	/* Last char has not been processed */
1285:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (i >= _MAX_LFN) return 0;	/* Buffer overflow? */
1286:../Dave/Generated/src/FATFS002/Src/ff.c **** 			lfnbuf[i++] = wc = uc;			/* Store it */
1287:../Dave/Generated/src/FATFS002/Src/ff.c **** 		} else {
1288:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (uc != 0xFFFF) return 0;		/* Check filler */
1289:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
1290:../Dave/Generated/src/FATFS002/Src/ff.c **** 	} while (++s < 13);						/* Read all character in the entry */
1291:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1292:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (dir[LDIR_Ord] & LLE) {				/* Put terminator if it is the last LFN part */
1293:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (i >= _MAX_LFN) return 0;		/* Buffer overflow? */
1294:../Dave/Generated/src/FATFS002/Src/ff.c **** 		lfnbuf[i] = 0;
1295:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
1296:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1297:../Dave/Generated/src/FATFS002/Src/ff.c **** 	return 1;
1298:../Dave/Generated/src/FATFS002/Src/ff.c **** }
1299:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1300:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1301:../Dave/Generated/src/FATFS002/Src/ff.c **** #if !_FS_READONLY
1302:../Dave/Generated/src/FATFS002/Src/ff.c **** static
1303:../Dave/Generated/src/FATFS002/Src/ff.c **** void fit_lfn (
1304:../Dave/Generated/src/FATFS002/Src/ff.c **** 	const WCHAR *lfnbuf,	/* Pointer to the LFN buffer */
1305:../Dave/Generated/src/FATFS002/Src/ff.c **** 	BYTE *dir,				/* Pointer to the directory entry */
1306:../Dave/Generated/src/FATFS002/Src/ff.c **** 	BYTE ord,				/* LFN order (1-20) */
1307:../Dave/Generated/src/FATFS002/Src/ff.c **** 	BYTE sum				/* SFN sum */
1308:../Dave/Generated/src/FATFS002/Src/ff.c **** )
1309:../Dave/Generated/src/FATFS002/Src/ff.c **** {
1310:../Dave/Generated/src/FATFS002/Src/ff.c **** 	UINT i, s;
1311:../Dave/Generated/src/FATFS002/Src/ff.c **** 	WCHAR wc;
1312:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1313:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1314:../Dave/Generated/src/FATFS002/Src/ff.c **** 	dir[LDIR_Chksum] = sum;			/* Set check sum */
1315:../Dave/Generated/src/FATFS002/Src/ff.c **** 	dir[LDIR_Attr] = AM_LFN;		/* Set attribute. LFN entry */
1316:../Dave/Generated/src/FATFS002/Src/ff.c **** 	dir[LDIR_Type] = 0;
1317:../Dave/Generated/src/FATFS002/Src/ff.c **** 	ST_WORD(dir+LDIR_FstClusLO, 0);
1318:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1319:../Dave/Generated/src/FATFS002/Src/ff.c **** 	i = (ord - 1) * 13;				/* Get offset in the LFN buffer */
1320:../Dave/Generated/src/FATFS002/Src/ff.c **** 	s = wc = 0;
1321:../Dave/Generated/src/FATFS002/Src/ff.c **** 	do {
1322:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (wc != 0xFFFF) wc = lfnbuf[i++];	/* Get an effective char */
1323:../Dave/Generated/src/FATFS002/Src/ff.c **** 		ST_WORD(dir+LfnOfs[s], wc);	/* Put it */
1324:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (!wc) wc = 0xFFFF;		/* Padding chars following last char */
1325:../Dave/Generated/src/FATFS002/Src/ff.c **** 	} while (++s < 13);
1326:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (wc == 0xFFFF || !lfnbuf[i]) ord |= LLE;	/* Bottom LFN part is the start of LFN sequence */
1327:../Dave/Generated/src/FATFS002/Src/ff.c **** 	dir[LDIR_Ord] = ord;			/* Set the LFN order */
1328:../Dave/Generated/src/FATFS002/Src/ff.c **** }
1329:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1330:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
1331:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
1332:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1333:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1334:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1335:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
1336:../Dave/Generated/src/FATFS002/Src/ff.c **** /* Create numbered name                                                  */
1337:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
1338:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _USE_LFN
1339:../Dave/Generated/src/FATFS002/Src/ff.c **** void gen_numname (
1340:../Dave/Generated/src/FATFS002/Src/ff.c **** 	BYTE *dst,			/* Pointer to generated SFN */
1341:../Dave/Generated/src/FATFS002/Src/ff.c **** 	const BYTE *src,	/* Pointer to source SFN to be modified */
1342:../Dave/Generated/src/FATFS002/Src/ff.c **** 	const WCHAR *lfn,	/* Pointer to LFN */
1343:../Dave/Generated/src/FATFS002/Src/ff.c **** 	WORD seq			/* Sequence number */
1344:../Dave/Generated/src/FATFS002/Src/ff.c **** )
1345:../Dave/Generated/src/FATFS002/Src/ff.c **** {
1346:../Dave/Generated/src/FATFS002/Src/ff.c **** 	BYTE ns[8], c;
1347:../Dave/Generated/src/FATFS002/Src/ff.c **** 	UINT i, j;
1348:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1349:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1350:../Dave/Generated/src/FATFS002/Src/ff.c **** 	mem_cpy(dst, src, 11);
1351:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1352:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (seq > 5) {	/* On many collisions, generate a hash number instead of sequential number */
1353:../Dave/Generated/src/FATFS002/Src/ff.c **** 		do seq = (seq >> 1) + (seq << 15) + (WORD)*lfn++; while (*lfn);
1354:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
1355:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1356:../Dave/Generated/src/FATFS002/Src/ff.c **** 	/* itoa (hexdecimal) */
1357:../Dave/Generated/src/FATFS002/Src/ff.c **** 	i = 7;
1358:../Dave/Generated/src/FATFS002/Src/ff.c **** 	do {
1359:../Dave/Generated/src/FATFS002/Src/ff.c **** 		c = (seq % 16) + '0';
1360:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (c > '9') c += 7;
1361:../Dave/Generated/src/FATFS002/Src/ff.c **** 		ns[i--] = c;
1362:../Dave/Generated/src/FATFS002/Src/ff.c **** 		seq /= 16;
1363:../Dave/Generated/src/FATFS002/Src/ff.c **** 	} while (seq);
1364:../Dave/Generated/src/FATFS002/Src/ff.c **** 	ns[i] = '~';
1365:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1366:../Dave/Generated/src/FATFS002/Src/ff.c **** 	/* Append the number */
1367:../Dave/Generated/src/FATFS002/Src/ff.c **** 	for (j = 0; j < i && dst[j] != ' '; j++) {
1368:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (IsDBCS1(dst[j])) {
1369:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (j == i - 1) break;
1370:../Dave/Generated/src/FATFS002/Src/ff.c **** 			j++;
1371:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
1372:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
1373:../Dave/Generated/src/FATFS002/Src/ff.c **** 	do {
1374:../Dave/Generated/src/FATFS002/Src/ff.c **** 		dst[j++] = (i < 8) ? ns[i++] : ' ';
1375:../Dave/Generated/src/FATFS002/Src/ff.c **** 	} while (j < 8);
1376:../Dave/Generated/src/FATFS002/Src/ff.c **** }
1377:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
1378:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1379:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1380:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1381:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1382:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
1383:../Dave/Generated/src/FATFS002/Src/ff.c **** /* Calculate sum of an SFN                                               */
1384:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
1385:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _USE_LFN
1386:../Dave/Generated/src/FATFS002/Src/ff.c **** static
1387:../Dave/Generated/src/FATFS002/Src/ff.c **** BYTE sum_sfn (
1388:../Dave/Generated/src/FATFS002/Src/ff.c **** 	const BYTE *dir		/* Ptr to directory entry */
1389:../Dave/Generated/src/FATFS002/Src/ff.c **** )
1390:../Dave/Generated/src/FATFS002/Src/ff.c **** {
1391:../Dave/Generated/src/FATFS002/Src/ff.c **** 	BYTE sum = 0;
1392:../Dave/Generated/src/FATFS002/Src/ff.c **** 	UINT n = 11;
1393:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1394:../Dave/Generated/src/FATFS002/Src/ff.c **** 	do sum = (sum >> 1) + (sum << 7) + *dir++; while (--n);
1395:../Dave/Generated/src/FATFS002/Src/ff.c **** 	return sum;
1396:../Dave/Generated/src/FATFS002/Src/ff.c **** }
1397:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
1398:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1399:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1400:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1401:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1402:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
1403:../Dave/Generated/src/FATFS002/Src/ff.c **** /* Directory handling - Find an object in the directory                  */
1404:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
1405:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1406:../Dave/Generated/src/FATFS002/Src/ff.c **** static
1407:../Dave/Generated/src/FATFS002/Src/ff.c **** FRESULT dir_find (
1408:../Dave/Generated/src/FATFS002/Src/ff.c **** 	DIR *dj			/* Pointer to the directory object linked to the file name */
1409:../Dave/Generated/src/FATFS002/Src/ff.c **** )
1410:../Dave/Generated/src/FATFS002/Src/ff.c **** {
 2095              		.loc 1 1410 0
 2096              		.cfi_startproc
 2097              		@ args = 0, pretend = 0, frame = 24
 2098              		@ frame_needed = 1, uses_anonymous_args = 0
 2099 0000 80B5     		push	{r7, lr}
 2100              	.LCFI39:
 2101              		.cfi_def_cfa_offset 8
 2102              		.cfi_offset 7, -8
 2103              		.cfi_offset 14, -4
 2104 0002 86B0     		sub	sp, sp, #24
 2105              	.LCFI40:
 2106              		.cfi_def_cfa_offset 32
 2107 0004 00AF     		add	r7, sp, #0
 2108              	.LCFI41:
 2109              		.cfi_def_cfa_register 7
 2110 0006 7860     		str	r0, [r7, #4]
1411:../Dave/Generated/src/FATFS002/Src/ff.c **** 	FRESULT res;
1412:../Dave/Generated/src/FATFS002/Src/ff.c **** 	BYTE c, *dir;
1413:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _USE_LFN
1414:../Dave/Generated/src/FATFS002/Src/ff.c **** 	BYTE a, ord, sum;
1415:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
1416:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1417:../Dave/Generated/src/FATFS002/Src/ff.c **** 	res = dir_sdi(dj, 0);			/* Rewind directory object */
 2111              		.loc 1 1417 0
 2112 0008 7868     		ldr	r0, [r7, #4]
 2113 000a 4FF00001 		mov	r1, #0
 2114 000e FFF7FEFF 		bl	dir_sdi
 2115 0012 0346     		mov	r3, r0
 2116 0014 FB75     		strb	r3, [r7, #23]
1418:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (res != FR_OK) return res;
 2117              		.loc 1 1418 0
 2118 0016 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2119 0018 002B     		cmp	r3, #0
 2120 001a 01D0     		beq	.L141
 2121              		.loc 1 1418 0 is_stmt 0 discriminator 1
 2122 001c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2123 001e 3BE0     		b	.L142
 2124              	.L141:
1419:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1420:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _USE_LFN
1421:../Dave/Generated/src/FATFS002/Src/ff.c **** 	ord = sum = 0xFF;
1422:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
1423:../Dave/Generated/src/FATFS002/Src/ff.c **** 	do {
1424:../Dave/Generated/src/FATFS002/Src/ff.c **** 		res = move_window(dj->fs, dj->sect);
 2125              		.loc 1 1424 0 is_stmt 1
 2126 0020 7B68     		ldr	r3, [r7, #4]
 2127 0022 1A68     		ldr	r2, [r3, #0]
 2128 0024 7B68     		ldr	r3, [r7, #4]
 2129 0026 1B69     		ldr	r3, [r3, #16]
 2130 0028 1046     		mov	r0, r2
 2131 002a 1946     		mov	r1, r3
 2132 002c FFF7FEFF 		bl	move_window
 2133 0030 0346     		mov	r3, r0
 2134 0032 FB75     		strb	r3, [r7, #23]
1425:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (res != FR_OK) break;
 2135              		.loc 1 1425 0
 2136 0034 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2137 0036 002B     		cmp	r3, #0
 2138 0038 2AD1     		bne	.L147
 2139              	.L143:
1426:../Dave/Generated/src/FATFS002/Src/ff.c **** 		dir = dj->dir;					/* Ptr to the directory entry of current index */
 2140              		.loc 1 1426 0
 2141 003a 7B68     		ldr	r3, [r7, #4]
 2142 003c 5B69     		ldr	r3, [r3, #20]
 2143 003e 3B61     		str	r3, [r7, #16]
1427:../Dave/Generated/src/FATFS002/Src/ff.c **** 		c = dir[DIR_Name];
 2144              		.loc 1 1427 0
 2145 0040 3B69     		ldr	r3, [r7, #16]
 2146 0042 1B78     		ldrb	r3, [r3, #0]
 2147 0044 FB73     		strb	r3, [r7, #15]
1428:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
 2148              		.loc 1 1428 0
 2149 0046 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2150 0048 002B     		cmp	r3, #0
 2151 004a 03D1     		bne	.L145
 2152              		.loc 1 1428 0 is_stmt 0 discriminator 1
 2153 004c 4FF00403 		mov	r3, #4
 2154 0050 FB75     		strb	r3, [r7, #23]
 2155 0052 20E0     		b	.L144
 2156              	.L145:
1429:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _USE_LFN	/* LFN configuration */
1430:../Dave/Generated/src/FATFS002/Src/ff.c **** 		a = dir[DIR_Attr] & AM_MASK;
1431:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (c == DDE || ((a & AM_VOL) && a != AM_LFN)) {	/* An entry without valid data */
1432:../Dave/Generated/src/FATFS002/Src/ff.c **** 			ord = 0xFF;
1433:../Dave/Generated/src/FATFS002/Src/ff.c **** 		} else {
1434:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (a == AM_LFN) {			/* An LFN entry is found */
1435:../Dave/Generated/src/FATFS002/Src/ff.c **** 				if (dj->lfn) {
1436:../Dave/Generated/src/FATFS002/Src/ff.c **** 					if (c & LLE) {		/* Is it start of LFN sequence? */
1437:../Dave/Generated/src/FATFS002/Src/ff.c **** 						sum = dir[LDIR_Chksum];
1438:../Dave/Generated/src/FATFS002/Src/ff.c **** 						c &= ~LLE; ord = c;	/* LFN start order */
1439:../Dave/Generated/src/FATFS002/Src/ff.c **** 						dj->lfn_idx = dj->index;
1440:../Dave/Generated/src/FATFS002/Src/ff.c **** 					}
1441:../Dave/Generated/src/FATFS002/Src/ff.c **** 					/* Check validity of the LFN entry and compare it with given name */
1442:../Dave/Generated/src/FATFS002/Src/ff.c **** 					ord = (c == ord && sum == dir[LDIR_Chksum] && cmp_lfn(dj->lfn, dir)) ? ord - 1 : 0xFF;
1443:../Dave/Generated/src/FATFS002/Src/ff.c **** 				}
1444:../Dave/Generated/src/FATFS002/Src/ff.c **** 			} else {					/* An SFN entry is found */
1445:../Dave/Generated/src/FATFS002/Src/ff.c **** 				if (!ord && sum == sum_sfn(dir)) break;	/* LFN matched? */
1446:../Dave/Generated/src/FATFS002/Src/ff.c **** 				ord = 0xFF; dj->lfn_idx = 0xFFFF;	/* Reset LFN sequence */
1447:../Dave/Generated/src/FATFS002/Src/ff.c **** 				if (!(dj->fn[NS] & NS_LOSS) && !mem_cmp(dir, dj->fn, 11)) break;	/* SFN matched? */
1448:../Dave/Generated/src/FATFS002/Src/ff.c **** 			}
1449:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
1450:../Dave/Generated/src/FATFS002/Src/ff.c **** #else		/* Non LFN configuration */
1451:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (!(dir[DIR_Attr] & AM_VOL) && !mem_cmp(dir, dj->fn, 11)) /* Is it a valid entry? */
 2157              		.loc 1 1451 0 is_stmt 1
 2158 0054 3B69     		ldr	r3, [r7, #16]
 2159 0056 03F10B03 		add	r3, r3, #11
 2160 005a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2161 005c 03F00803 		and	r3, r3, #8
 2162 0060 002B     		cmp	r3, #0
 2163 0062 0AD1     		bne	.L146
 2164              		.loc 1 1451 0 is_stmt 0 discriminator 1
 2165 0064 7B68     		ldr	r3, [r7, #4]
 2166 0066 9B69     		ldr	r3, [r3, #24]
 2167 0068 3869     		ldr	r0, [r7, #16]
 2168 006a 1946     		mov	r1, r3
 2169 006c 4FF00B02 		mov	r2, #11
 2170 0070 FFF7FEFF 		bl	mem_cmp
 2171 0074 0346     		mov	r3, r0
 2172 0076 002B     		cmp	r3, #0
 2173 0078 0CD0     		beq	.L148
 2174              	.L146:
1452:../Dave/Generated/src/FATFS002/Src/ff.c **** 			break;
1453:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
1454:../Dave/Generated/src/FATFS002/Src/ff.c **** 		res = dir_next(dj, 0);		/* Next entry */
 2175              		.loc 1 1454 0 is_stmt 1
 2176 007a 7868     		ldr	r0, [r7, #4]
 2177 007c 4FF00001 		mov	r1, #0
 2178 0080 FFF7FEFF 		bl	dir_next
 2179 0084 0346     		mov	r3, r0
 2180 0086 FB75     		strb	r3, [r7, #23]
1455:../Dave/Generated/src/FATFS002/Src/ff.c **** 	} while (res == FR_OK);
 2181              		.loc 1 1455 0
 2182 0088 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2183 008a 002B     		cmp	r3, #0
 2184 008c C8D0     		beq	.L141
 2185 008e 02E0     		b	.L144
 2186              	.L147:
1425:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (res != FR_OK) break;
 2187              		.loc 1 1425 0
 2188 0090 00BF     		nop
 2189 0092 00E0     		b	.L144
 2190              	.L148:
1452:../Dave/Generated/src/FATFS002/Src/ff.c **** 			break;
 2191              		.loc 1 1452 0
 2192 0094 00BF     		nop
 2193              	.L144:
1456:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1457:../Dave/Generated/src/FATFS002/Src/ff.c **** 	return res;
 2194              		.loc 1 1457 0
 2195 0096 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2196              	.L142:
1458:../Dave/Generated/src/FATFS002/Src/ff.c **** }
 2197              		.loc 1 1458 0
 2198 0098 1846     		mov	r0, r3
 2199 009a 07F11807 		add	r7, r7, #24
 2200 009e BD46     		mov	sp, r7
 2201 00a0 80BD     		pop	{r7, pc}
 2202              		.cfi_endproc
 2203              	.LFE13:
 2205 00a2 00BF     		.section	.text.dir_read,"ax",%progbits
 2206              		.align	2
 2207              		.thumb
 2208              		.thumb_func
 2210              	dir_read:
 2211              	.LFB14:
1459:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1460:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1461:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1462:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1463:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
1464:../Dave/Generated/src/FATFS002/Src/ff.c **** /* Read an object from the directory                                     */
1465:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
1466:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _FS_MINIMIZE <= 1
1467:../Dave/Generated/src/FATFS002/Src/ff.c **** static
1468:../Dave/Generated/src/FATFS002/Src/ff.c **** FRESULT dir_read (
1469:../Dave/Generated/src/FATFS002/Src/ff.c **** 	DIR *dj			/* Pointer to the directory object that pointing the entry to be read */
1470:../Dave/Generated/src/FATFS002/Src/ff.c **** )
1471:../Dave/Generated/src/FATFS002/Src/ff.c **** {
 2212              		.loc 1 1471 0
 2213              		.cfi_startproc
 2214              		@ args = 0, pretend = 0, frame = 24
 2215              		@ frame_needed = 1, uses_anonymous_args = 0
 2216 0000 80B5     		push	{r7, lr}
 2217              	.LCFI42:
 2218              		.cfi_def_cfa_offset 8
 2219              		.cfi_offset 7, -8
 2220              		.cfi_offset 14, -4
 2221 0002 86B0     		sub	sp, sp, #24
 2222              	.LCFI43:
 2223              		.cfi_def_cfa_offset 32
 2224 0004 00AF     		add	r7, sp, #0
 2225              	.LCFI44:
 2226              		.cfi_def_cfa_register 7
 2227 0006 7860     		str	r0, [r7, #4]
1472:../Dave/Generated/src/FATFS002/Src/ff.c **** 	FRESULT res;
1473:../Dave/Generated/src/FATFS002/Src/ff.c **** 	BYTE c, *dir;
1474:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _USE_LFN
1475:../Dave/Generated/src/FATFS002/Src/ff.c **** 	BYTE a, ord = 0xFF, sum = 0xFF;
1476:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
1477:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1478:../Dave/Generated/src/FATFS002/Src/ff.c **** 	res = FR_NO_FILE;
 2228              		.loc 1 1478 0
 2229 0008 4FF00403 		mov	r3, #4
 2230 000c FB75     		strb	r3, [r7, #23]
1479:../Dave/Generated/src/FATFS002/Src/ff.c **** 	while (dj->sect) {
 2231              		.loc 1 1479 0
 2232 000e 2EE0     		b	.L150
 2233              	.L155:
1480:../Dave/Generated/src/FATFS002/Src/ff.c **** 		res = move_window(dj->fs, dj->sect);
 2234              		.loc 1 1480 0
 2235 0010 7B68     		ldr	r3, [r7, #4]
 2236 0012 1A68     		ldr	r2, [r3, #0]
 2237 0014 7B68     		ldr	r3, [r7, #4]
 2238 0016 1B69     		ldr	r3, [r3, #16]
 2239 0018 1046     		mov	r0, r2
 2240 001a 1946     		mov	r1, r3
 2241 001c FFF7FEFF 		bl	move_window
 2242 0020 0346     		mov	r3, r0
 2243 0022 FB75     		strb	r3, [r7, #23]
1481:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (res != FR_OK) break;
 2244              		.loc 1 1481 0
 2245 0024 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2246 0026 002B     		cmp	r3, #0
 2247 0028 26D1     		bne	.L158
 2248              	.L151:
1482:../Dave/Generated/src/FATFS002/Src/ff.c **** 		dir = dj->dir;					/* Ptr to the directory entry of current index */
 2249              		.loc 1 1482 0
 2250 002a 7B68     		ldr	r3, [r7, #4]
 2251 002c 5B69     		ldr	r3, [r3, #20]
 2252 002e 3B61     		str	r3, [r7, #16]
1483:../Dave/Generated/src/FATFS002/Src/ff.c **** 		c = dir[DIR_Name];
 2253              		.loc 1 1483 0
 2254 0030 3B69     		ldr	r3, [r7, #16]
 2255 0032 1B78     		ldrb	r3, [r3, #0]
 2256 0034 FB73     		strb	r3, [r7, #15]
1484:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
 2257              		.loc 1 1484 0
 2258 0036 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2259 0038 002B     		cmp	r3, #0
 2260 003a 03D1     		bne	.L153
 2261              		.loc 1 1484 0 is_stmt 0 discriminator 1
 2262 003c 4FF00403 		mov	r3, #4
 2263 0040 FB75     		strb	r3, [r7, #23]
 2264 0042 1EE0     		b	.L152
 2265              	.L153:
1485:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _USE_LFN	/* LFN configuration */
1486:../Dave/Generated/src/FATFS002/Src/ff.c **** 		a = dir[DIR_Attr] & AM_MASK;
1487:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (c == DDE || (!_FS_RPATH && c == '.') || ((a & AM_VOL) && a != AM_LFN)) {	/* An entry without 
1488:../Dave/Generated/src/FATFS002/Src/ff.c **** 			ord = 0xFF;
1489:../Dave/Generated/src/FATFS002/Src/ff.c **** 		} else {
1490:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (a == AM_LFN) {			/* An LFN entry is found */
1491:../Dave/Generated/src/FATFS002/Src/ff.c **** 				if (c & LLE) {			/* Is it start of LFN sequence? */
1492:../Dave/Generated/src/FATFS002/Src/ff.c **** 					sum = dir[LDIR_Chksum];
1493:../Dave/Generated/src/FATFS002/Src/ff.c **** 					c &= ~LLE; ord = c;
1494:../Dave/Generated/src/FATFS002/Src/ff.c **** 					dj->lfn_idx = dj->index;
1495:../Dave/Generated/src/FATFS002/Src/ff.c **** 				}
1496:../Dave/Generated/src/FATFS002/Src/ff.c **** 				/* Check LFN validity and capture it */
1497:../Dave/Generated/src/FATFS002/Src/ff.c **** 				ord = (c == ord && sum == dir[LDIR_Chksum] && pick_lfn(dj->lfn, dir)) ? ord - 1 : 0xFF;
1498:../Dave/Generated/src/FATFS002/Src/ff.c **** 			} else {					/* An SFN entry is found */
1499:../Dave/Generated/src/FATFS002/Src/ff.c **** 				if (ord || sum != sum_sfn(dir))	/* Is there a valid LFN? */
1500:../Dave/Generated/src/FATFS002/Src/ff.c **** 					dj->lfn_idx = 0xFFFF;		/* It has no LFN. */
1501:../Dave/Generated/src/FATFS002/Src/ff.c **** 				break;
1502:../Dave/Generated/src/FATFS002/Src/ff.c **** 			}
1503:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
1504:../Dave/Generated/src/FATFS002/Src/ff.c **** #else		/* Non LFN configuration */
1505:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (c != DDE && (_FS_RPATH || c != '.') && !(dir[DIR_Attr] & AM_VOL))	/* Is it a valid entry? */
 2266              		.loc 1 1505 0 is_stmt 1
 2267 0044 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2268 0046 E52B     		cmp	r3, #229
 2269 0048 07D0     		beq	.L154
 2270              		.loc 1 1505 0 is_stmt 0 discriminator 1
 2271 004a 3B69     		ldr	r3, [r7, #16]
 2272 004c 03F10B03 		add	r3, r3, #11
 2273 0050 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2274 0052 03F00803 		and	r3, r3, #8
 2275 0056 002B     		cmp	r3, #0
 2276 0058 10D0     		beq	.L159
 2277              	.L154:
1506:../Dave/Generated/src/FATFS002/Src/ff.c **** 			break;
1507:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
1508:../Dave/Generated/src/FATFS002/Src/ff.c **** 		res = dir_next(dj, 0);				/* Next entry */
 2278              		.loc 1 1508 0 is_stmt 1
 2279 005a 7868     		ldr	r0, [r7, #4]
 2280 005c 4FF00001 		mov	r1, #0
 2281 0060 FFF7FEFF 		bl	dir_next
 2282 0064 0346     		mov	r3, r0
 2283 0066 FB75     		strb	r3, [r7, #23]
1509:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (res != FR_OK) break;
 2284              		.loc 1 1509 0
 2285 0068 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2286 006a 002B     		cmp	r3, #0
 2287 006c 08D1     		bne	.L160
 2288              	.L150:
1479:../Dave/Generated/src/FATFS002/Src/ff.c **** 	while (dj->sect) {
 2289              		.loc 1 1479 0 discriminator 1
 2290 006e 7B68     		ldr	r3, [r7, #4]
 2291 0070 1B69     		ldr	r3, [r3, #16]
 2292 0072 002B     		cmp	r3, #0
 2293 0074 CCD1     		bne	.L155
 2294 0076 04E0     		b	.L152
 2295              	.L158:
1481:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (res != FR_OK) break;
 2296              		.loc 1 1481 0
 2297 0078 00BF     		nop
 2298 007a 02E0     		b	.L152
 2299              	.L159:
1506:../Dave/Generated/src/FATFS002/Src/ff.c **** 			break;
 2300              		.loc 1 1506 0
 2301 007c 00BF     		nop
 2302 007e 00E0     		b	.L152
 2303              	.L160:
 2304              		.loc 1 1509 0
 2305 0080 00BF     		nop
 2306              	.L152:
1510:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
1511:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1512:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (res != FR_OK) dj->sect = 0;
 2307              		.loc 1 1512 0
 2308 0082 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2309 0084 002B     		cmp	r3, #0
 2310 0086 03D0     		beq	.L156
 2311              		.loc 1 1512 0 is_stmt 0 discriminator 1
 2312 0088 7B68     		ldr	r3, [r7, #4]
 2313 008a 4FF00002 		mov	r2, #0
 2314 008e 1A61     		str	r2, [r3, #16]
 2315              	.L156:
1513:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1514:../Dave/Generated/src/FATFS002/Src/ff.c **** 	return res;
 2316              		.loc 1 1514 0 is_stmt 1
 2317 0090 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
1515:../Dave/Generated/src/FATFS002/Src/ff.c **** }
 2318              		.loc 1 1515 0
 2319 0092 1846     		mov	r0, r3
 2320 0094 07F11807 		add	r7, r7, #24
 2321 0098 BD46     		mov	sp, r7
 2322 009a 80BD     		pop	{r7, pc}
 2323              		.cfi_endproc
 2324              	.LFE14:
 2326              		.section	.text.dir_register,"ax",%progbits
 2327              		.align	2
 2328              		.thumb
 2329              		.thumb_func
 2331              	dir_register:
 2332              	.LFB15:
1516:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
1517:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1518:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1519:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1520:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
1521:../Dave/Generated/src/FATFS002/Src/ff.c **** /* Register an object to the directory                                   */
1522:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
1523:../Dave/Generated/src/FATFS002/Src/ff.c **** #if !_FS_READONLY
1524:../Dave/Generated/src/FATFS002/Src/ff.c **** static
1525:../Dave/Generated/src/FATFS002/Src/ff.c **** FRESULT dir_register (	/* FR_OK:Successful, FR_DENIED:No free entry or too many SFN collision, FR_D
1526:../Dave/Generated/src/FATFS002/Src/ff.c **** 	DIR *dj				/* Target directory with object name to be created */
1527:../Dave/Generated/src/FATFS002/Src/ff.c **** )
1528:../Dave/Generated/src/FATFS002/Src/ff.c **** {
 2333              		.loc 1 1528 0
 2334              		.cfi_startproc
 2335              		@ args = 0, pretend = 0, frame = 16
 2336              		@ frame_needed = 1, uses_anonymous_args = 0
 2337 0000 80B5     		push	{r7, lr}
 2338              	.LCFI45:
 2339              		.cfi_def_cfa_offset 8
 2340              		.cfi_offset 7, -8
 2341              		.cfi_offset 14, -4
 2342 0002 84B0     		sub	sp, sp, #16
 2343              	.LCFI46:
 2344              		.cfi_def_cfa_offset 24
 2345 0004 00AF     		add	r7, sp, #0
 2346              	.LCFI47:
 2347              		.cfi_def_cfa_register 7
 2348 0006 7860     		str	r0, [r7, #4]
1529:../Dave/Generated/src/FATFS002/Src/ff.c **** 	FRESULT res;
1530:../Dave/Generated/src/FATFS002/Src/ff.c **** 	BYTE c, *dir;
1531:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _USE_LFN	/* LFN configuration */
1532:../Dave/Generated/src/FATFS002/Src/ff.c **** 	WORD n, ne, is;
1533:../Dave/Generated/src/FATFS002/Src/ff.c **** 	BYTE sn[12], *fn, sum;
1534:../Dave/Generated/src/FATFS002/Src/ff.c **** 	WCHAR *lfn;
1535:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1536:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1537:../Dave/Generated/src/FATFS002/Src/ff.c **** 	fn = dj->fn; lfn = dj->lfn;
1538:../Dave/Generated/src/FATFS002/Src/ff.c **** 	mem_cpy(sn, fn, 12);
1539:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1540:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (_FS_RPATH && (sn[NS] & NS_DOT))		/* Cannot create dot entry */
1541:../Dave/Generated/src/FATFS002/Src/ff.c **** 		return FR_INVALID_NAME;
1542:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1543:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (sn[NS] & NS_LOSS) {			/* When LFN is out of 8.3 format, generate a numbered name */
1544:../Dave/Generated/src/FATFS002/Src/ff.c **** 		fn[NS] = 0; dj->lfn = 0;			/* Find only SFN */
1545:../Dave/Generated/src/FATFS002/Src/ff.c **** 		for (n = 1; n < 100; n++) {
1546:../Dave/Generated/src/FATFS002/Src/ff.c **** 			gen_numname(fn, sn, lfn, n);	/* Generate a numbered name */
1547:../Dave/Generated/src/FATFS002/Src/ff.c **** 			res = dir_find(dj);				/* Check if the name collides with existing SFN */
1548:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (res != FR_OK) break;
1549:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
1550:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (n == 100) return FR_DENIED;		/* Abort if too many collisions */
1551:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (res != FR_NO_FILE) return res;	/* Abort if the result is other than 'not collided' */
1552:../Dave/Generated/src/FATFS002/Src/ff.c **** 		fn[NS] = sn[NS]; dj->lfn = lfn;
1553:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
1554:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1555:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (sn[NS] & NS_LFN) {			/* When LFN is to be created, reserve an SFN + LFN entries. */
1556:../Dave/Generated/src/FATFS002/Src/ff.c **** 		for (ne = 0; lfn[ne]; ne++) ;
1557:../Dave/Generated/src/FATFS002/Src/ff.c **** 		ne = (ne + 25) / 13;
1558:../Dave/Generated/src/FATFS002/Src/ff.c **** 	} else {						/* Otherwise reserve only an SFN entry. */
1559:../Dave/Generated/src/FATFS002/Src/ff.c **** 		ne = 1;
1560:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
1561:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1562:../Dave/Generated/src/FATFS002/Src/ff.c **** 	/* Reserve contiguous entries */
1563:../Dave/Generated/src/FATFS002/Src/ff.c **** 	res = dir_sdi(dj, 0);
1564:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (res != FR_OK) return res;
1565:../Dave/Generated/src/FATFS002/Src/ff.c **** 	n = is = 0;
1566:../Dave/Generated/src/FATFS002/Src/ff.c **** 	do {
1567:../Dave/Generated/src/FATFS002/Src/ff.c **** 		res = move_window(dj->fs, dj->sect);
1568:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (res != FR_OK) break;
1569:../Dave/Generated/src/FATFS002/Src/ff.c **** 		c = *dj->dir;				/* Check the entry status */
1570:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (c == DDE || c == 0) {	/* Is it a blank entry? */
1571:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (n == 0) is = dj->index;	/* First index of the contiguous entry */
1572:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (++n == ne) break;	/* A contiguous entry that required count is found */
1573:../Dave/Generated/src/FATFS002/Src/ff.c **** 		} else {
1574:../Dave/Generated/src/FATFS002/Src/ff.c **** 			n = 0;					/* Not a blank entry. Restart to search */
1575:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
1576:../Dave/Generated/src/FATFS002/Src/ff.c **** 		res = dir_next(dj, 1);		/* Next entry with table stretch */
1577:../Dave/Generated/src/FATFS002/Src/ff.c **** 	} while (res == FR_OK);
1578:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1579:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (res == FR_OK && ne > 1) {	/* Initialize LFN entry if needed */
1580:../Dave/Generated/src/FATFS002/Src/ff.c **** 		res = dir_sdi(dj, is);
1581:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (res == FR_OK) {
1582:../Dave/Generated/src/FATFS002/Src/ff.c **** 			sum = sum_sfn(dj->fn);	/* Sum of the SFN tied to the LFN */
1583:../Dave/Generated/src/FATFS002/Src/ff.c **** 			ne--;
1584:../Dave/Generated/src/FATFS002/Src/ff.c **** 			do {					/* Store LFN entries in bottom first */
1585:../Dave/Generated/src/FATFS002/Src/ff.c **** 				res = move_window(dj->fs, dj->sect);
1586:../Dave/Generated/src/FATFS002/Src/ff.c **** 				if (res != FR_OK) break;
1587:../Dave/Generated/src/FATFS002/Src/ff.c **** 				fit_lfn(dj->lfn, dj->dir, (BYTE)ne, sum);
1588:../Dave/Generated/src/FATFS002/Src/ff.c **** 				dj->fs->wflag = 1;
1589:../Dave/Generated/src/FATFS002/Src/ff.c **** 				res = dir_next(dj, 0);	/* Next entry */
1590:../Dave/Generated/src/FATFS002/Src/ff.c **** 			} while (res == FR_OK && --ne);
1591:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
1592:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
1593:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1594:../Dave/Generated/src/FATFS002/Src/ff.c **** #else	/* Non LFN configuration */
1595:../Dave/Generated/src/FATFS002/Src/ff.c **** 	res = dir_sdi(dj, 0);
 2349              		.loc 1 1595 0
 2350 0008 7868     		ldr	r0, [r7, #4]
 2351 000a 4FF00001 		mov	r1, #0
 2352 000e FFF7FEFF 		bl	dir_sdi
 2353 0012 0346     		mov	r3, r0
 2354 0014 FB73     		strb	r3, [r7, #15]
1596:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (res == FR_OK) {
 2355              		.loc 1 1596 0
 2356 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2357 0018 002B     		cmp	r3, #0
 2358 001a 22D1     		bne	.L162
 2359              	.L164:
1597:../Dave/Generated/src/FATFS002/Src/ff.c **** 		do {	/* Find a blank entry for the SFN */
1598:../Dave/Generated/src/FATFS002/Src/ff.c **** 			res = move_window(dj->fs, dj->sect);
 2360              		.loc 1 1598 0
 2361 001c 7B68     		ldr	r3, [r7, #4]
 2362 001e 1A68     		ldr	r2, [r3, #0]
 2363 0020 7B68     		ldr	r3, [r7, #4]
 2364 0022 1B69     		ldr	r3, [r3, #16]
 2365 0024 1046     		mov	r0, r2
 2366 0026 1946     		mov	r1, r3
 2367 0028 FFF7FEFF 		bl	move_window
 2368 002c 0346     		mov	r3, r0
 2369 002e FB73     		strb	r3, [r7, #15]
1599:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (res != FR_OK) break;
 2370              		.loc 1 1599 0
 2371 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2372 0032 002B     		cmp	r3, #0
 2373 0034 14D1     		bne	.L167
 2374              	.L163:
1600:../Dave/Generated/src/FATFS002/Src/ff.c **** 			c = *dj->dir;
 2375              		.loc 1 1600 0
 2376 0036 7B68     		ldr	r3, [r7, #4]
 2377 0038 5B69     		ldr	r3, [r3, #20]
 2378 003a 1B78     		ldrb	r3, [r3, #0]
 2379 003c BB73     		strb	r3, [r7, #14]
1601:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (c == DDE || c == 0) break;	/* Is it a blank entry? */
 2380              		.loc 1 1601 0
 2381 003e BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 2382 0040 E52B     		cmp	r3, #229
 2383 0042 0ED0     		beq	.L162
 2384              		.loc 1 1601 0 is_stmt 0 discriminator 1
 2385 0044 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 2386 0046 002B     		cmp	r3, #0
 2387 0048 0BD0     		beq	.L162
1602:../Dave/Generated/src/FATFS002/Src/ff.c **** 			res = dir_next(dj, 1);			/* Next entry with table stretch */
 2388              		.loc 1 1602 0 is_stmt 1
 2389 004a 7868     		ldr	r0, [r7, #4]
 2390 004c 4FF00101 		mov	r1, #1
 2391 0050 FFF7FEFF 		bl	dir_next
 2392 0054 0346     		mov	r3, r0
 2393 0056 FB73     		strb	r3, [r7, #15]
1603:../Dave/Generated/src/FATFS002/Src/ff.c **** 		} while (res == FR_OK);
 2394              		.loc 1 1603 0
 2395 0058 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2396 005a 002B     		cmp	r3, #0
 2397 005c DED0     		beq	.L164
 2398 005e 00E0     		b	.L162
 2399              	.L167:
1599:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (res != FR_OK) break;
 2400              		.loc 1 1599 0
 2401 0060 00BF     		nop
 2402              	.L162:
1604:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
1605:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
1606:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1607:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (res == FR_OK) {		/* Initialize the SFN entry */
 2403              		.loc 1 1607 0
 2404 0062 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2405 0064 002B     		cmp	r3, #0
 2406 0066 23D1     		bne	.L165
1608:../Dave/Generated/src/FATFS002/Src/ff.c **** 		res = move_window(dj->fs, dj->sect);
 2407              		.loc 1 1608 0
 2408 0068 7B68     		ldr	r3, [r7, #4]
 2409 006a 1A68     		ldr	r2, [r3, #0]
 2410 006c 7B68     		ldr	r3, [r7, #4]
 2411 006e 1B69     		ldr	r3, [r3, #16]
 2412 0070 1046     		mov	r0, r2
 2413 0072 1946     		mov	r1, r3
 2414 0074 FFF7FEFF 		bl	move_window
 2415 0078 0346     		mov	r3, r0
 2416 007a FB73     		strb	r3, [r7, #15]
1609:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (res == FR_OK) {
 2417              		.loc 1 1609 0
 2418 007c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2419 007e 002B     		cmp	r3, #0
 2420 0080 16D1     		bne	.L165
1610:../Dave/Generated/src/FATFS002/Src/ff.c **** 			dir = dj->dir;
 2421              		.loc 1 1610 0
 2422 0082 7B68     		ldr	r3, [r7, #4]
 2423 0084 5B69     		ldr	r3, [r3, #20]
 2424 0086 BB60     		str	r3, [r7, #8]
1611:../Dave/Generated/src/FATFS002/Src/ff.c **** 			mem_set(dir, 0, SZ_DIR);	/* Clean the entry */
 2425              		.loc 1 1611 0
 2426 0088 B868     		ldr	r0, [r7, #8]
 2427 008a 4FF00001 		mov	r1, #0
 2428 008e 4FF02002 		mov	r2, #32
 2429 0092 FFF7FEFF 		bl	mem_set
1612:../Dave/Generated/src/FATFS002/Src/ff.c **** 			mem_cpy(dir, dj->fn, 11);	/* Put SFN */
 2430              		.loc 1 1612 0
 2431 0096 7B68     		ldr	r3, [r7, #4]
 2432 0098 9B69     		ldr	r3, [r3, #24]
 2433 009a B868     		ldr	r0, [r7, #8]
 2434 009c 1946     		mov	r1, r3
 2435 009e 4FF00B02 		mov	r2, #11
 2436 00a2 FFF7FEFF 		bl	mem_cpy
1613:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _USE_LFN
1614:../Dave/Generated/src/FATFS002/Src/ff.c **** 			dir[DIR_NTres] = *(dj->fn+NS) & (NS_BODY | NS_EXT);	/* Put NT flag */
1615:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
1616:../Dave/Generated/src/FATFS002/Src/ff.c **** 			dj->fs->wflag = 1;
 2437              		.loc 1 1616 0
 2438 00a6 7B68     		ldr	r3, [r7, #4]
 2439 00a8 1B68     		ldr	r3, [r3, #0]
 2440 00aa 4FF00102 		mov	r2, #1
 2441 00ae 1A71     		strb	r2, [r3, #4]
 2442              	.L165:
1617:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
1618:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
1619:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1620:../Dave/Generated/src/FATFS002/Src/ff.c **** 	return res;
 2443              		.loc 1 1620 0
 2444 00b0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1621:../Dave/Generated/src/FATFS002/Src/ff.c **** }
 2445              		.loc 1 1621 0
 2446 00b2 1846     		mov	r0, r3
 2447 00b4 07F11007 		add	r7, r7, #16
 2448 00b8 BD46     		mov	sp, r7
 2449 00ba 80BD     		pop	{r7, pc}
 2450              		.cfi_endproc
 2451              	.LFE15:
 2453              		.section	.text.dir_remove,"ax",%progbits
 2454              		.align	2
 2455              		.thumb
 2456              		.thumb_func
 2458              	dir_remove:
 2459              	.LFB16:
1622:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif /* !_FS_READONLY */
1623:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1624:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1625:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1626:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1627:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
1628:../Dave/Generated/src/FATFS002/Src/ff.c **** /* Remove an object from the directory                                   */
1629:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
1630:../Dave/Generated/src/FATFS002/Src/ff.c **** #if !_FS_READONLY && !_FS_MINIMIZE
1631:../Dave/Generated/src/FATFS002/Src/ff.c **** static
1632:../Dave/Generated/src/FATFS002/Src/ff.c **** FRESULT dir_remove (	/* FR_OK: Successful, FR_DISK_ERR: A disk error */
1633:../Dave/Generated/src/FATFS002/Src/ff.c **** 	DIR *dj				/* Directory object pointing the entry to be removed */
1634:../Dave/Generated/src/FATFS002/Src/ff.c **** )
1635:../Dave/Generated/src/FATFS002/Src/ff.c **** {
 2460              		.loc 1 1635 0
 2461              		.cfi_startproc
 2462              		@ args = 0, pretend = 0, frame = 16
 2463              		@ frame_needed = 1, uses_anonymous_args = 0
 2464 0000 80B5     		push	{r7, lr}
 2465              	.LCFI48:
 2466              		.cfi_def_cfa_offset 8
 2467              		.cfi_offset 7, -8
 2468              		.cfi_offset 14, -4
 2469 0002 84B0     		sub	sp, sp, #16
 2470              	.LCFI49:
 2471              		.cfi_def_cfa_offset 24
 2472 0004 00AF     		add	r7, sp, #0
 2473              	.LCFI50:
 2474              		.cfi_def_cfa_register 7
 2475 0006 7860     		str	r0, [r7, #4]
1636:../Dave/Generated/src/FATFS002/Src/ff.c **** 	FRESULT res;
1637:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _USE_LFN	/* LFN configuration */
1638:../Dave/Generated/src/FATFS002/Src/ff.c **** 	WORD i;
1639:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1640:../Dave/Generated/src/FATFS002/Src/ff.c **** 	i = dj->index;	/* SFN index */
1641:../Dave/Generated/src/FATFS002/Src/ff.c **** 	res = dir_sdi(dj, (WORD)((dj->lfn_idx == 0xFFFF) ? i : dj->lfn_idx));	/* Goto the SFN or top of th
1642:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (res == FR_OK) {
1643:../Dave/Generated/src/FATFS002/Src/ff.c **** 		do {
1644:../Dave/Generated/src/FATFS002/Src/ff.c **** 			res = move_window(dj->fs, dj->sect);
1645:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (res != FR_OK) break;
1646:../Dave/Generated/src/FATFS002/Src/ff.c **** 			*dj->dir = DDE;			/* Mark the entry "deleted" */
1647:../Dave/Generated/src/FATFS002/Src/ff.c **** 			dj->fs->wflag = 1;
1648:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (dj->index >= i) break;	/* When reached SFN, all entries of the object has been deleted. */
1649:../Dave/Generated/src/FATFS002/Src/ff.c **** 			res = dir_next(dj, 0);		/* Next entry */
1650:../Dave/Generated/src/FATFS002/Src/ff.c **** 		} while (res == FR_OK);
1651:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (res == FR_NO_FILE) res = FR_INT_ERR;
1652:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
1653:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1654:../Dave/Generated/src/FATFS002/Src/ff.c **** #else			/* Non LFN configuration */
1655:../Dave/Generated/src/FATFS002/Src/ff.c **** 	res = dir_sdi(dj, dj->index);
 2476              		.loc 1 1655 0
 2477 0008 7B68     		ldr	r3, [r7, #4]
 2478 000a DB88     		ldrh	r3, [r3, #6]
 2479 000c 7868     		ldr	r0, [r7, #4]
 2480 000e 1946     		mov	r1, r3
 2481 0010 FFF7FEFF 		bl	dir_sdi
 2482 0014 0346     		mov	r3, r0
 2483 0016 FB73     		strb	r3, [r7, #15]
1656:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (res == FR_OK) {
 2484              		.loc 1 1656 0
 2485 0018 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2486 001a 002B     		cmp	r3, #0
 2487 001c 16D1     		bne	.L169
1657:../Dave/Generated/src/FATFS002/Src/ff.c **** 		res = move_window(dj->fs, dj->sect);
 2488              		.loc 1 1657 0
 2489 001e 7B68     		ldr	r3, [r7, #4]
 2490 0020 1A68     		ldr	r2, [r3, #0]
 2491 0022 7B68     		ldr	r3, [r7, #4]
 2492 0024 1B69     		ldr	r3, [r3, #16]
 2493 0026 1046     		mov	r0, r2
 2494 0028 1946     		mov	r1, r3
 2495 002a FFF7FEFF 		bl	move_window
 2496 002e 0346     		mov	r3, r0
 2497 0030 FB73     		strb	r3, [r7, #15]
1658:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (res == FR_OK) {
 2498              		.loc 1 1658 0
 2499 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2500 0034 002B     		cmp	r3, #0
 2501 0036 09D1     		bne	.L169
1659:../Dave/Generated/src/FATFS002/Src/ff.c **** 			*dj->dir = DDE;			/* Mark the entry "deleted" */
 2502              		.loc 1 1659 0
 2503 0038 7B68     		ldr	r3, [r7, #4]
 2504 003a 5B69     		ldr	r3, [r3, #20]
 2505 003c 4FF0E502 		mov	r2, #229
 2506 0040 1A70     		strb	r2, [r3, #0]
1660:../Dave/Generated/src/FATFS002/Src/ff.c **** 			dj->fs->wflag = 1;
 2507              		.loc 1 1660 0
 2508 0042 7B68     		ldr	r3, [r7, #4]
 2509 0044 1B68     		ldr	r3, [r3, #0]
 2510 0046 4FF00102 		mov	r2, #1
 2511 004a 1A71     		strb	r2, [r3, #4]
 2512              	.L169:
1661:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
1662:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
1663:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
1664:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1665:../Dave/Generated/src/FATFS002/Src/ff.c **** 	return res;
 2513              		.loc 1 1665 0
 2514 004c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1666:../Dave/Generated/src/FATFS002/Src/ff.c **** }
 2515              		.loc 1 1666 0
 2516 004e 1846     		mov	r0, r3
 2517 0050 07F11007 		add	r7, r7, #16
 2518 0054 BD46     		mov	sp, r7
 2519 0056 80BD     		pop	{r7, pc}
 2520              		.cfi_endproc
 2521              	.LFE16:
 2523              		.section	.rodata
 2524              		.align	2
 2525              	.LC0:
 2526 0000 222A2B2C 		.ascii	"\"*+,:;<=>?[]|\177\000"
 2526      3A3B3C3D 
 2526      3E3F5B5D 
 2526      7C7F00
 2527              		.section	.text.create_name,"ax",%progbits
 2528              		.align	2
 2529              		.thumb
 2530              		.thumb_func
 2532              	create_name:
 2533              	.LFB17:
1667:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif /* !_FS_READONLY */
1668:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1669:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1670:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1671:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1672:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
1673:../Dave/Generated/src/FATFS002/Src/ff.c **** /* Pick a segment and create the object name in directory form           */
1674:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
1675:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1676:../Dave/Generated/src/FATFS002/Src/ff.c **** static
1677:../Dave/Generated/src/FATFS002/Src/ff.c **** FRESULT create_name (
1678:../Dave/Generated/src/FATFS002/Src/ff.c **** 	DIR *dj,			/* Pointer to the directory object */
1679:../Dave/Generated/src/FATFS002/Src/ff.c **** 	const TCHAR **path	/* Pointer to pointer to the segment in the path string */
1680:../Dave/Generated/src/FATFS002/Src/ff.c **** )
1681:../Dave/Generated/src/FATFS002/Src/ff.c **** {
 2534              		.loc 1 1681 0
 2535              		.cfi_startproc
 2536              		@ args = 0, pretend = 0, frame = 32
 2537              		@ frame_needed = 1, uses_anonymous_args = 0
 2538 0000 80B5     		push	{r7, lr}
 2539              	.LCFI51:
 2540              		.cfi_def_cfa_offset 8
 2541              		.cfi_offset 7, -8
 2542              		.cfi_offset 14, -4
 2543 0002 88B0     		sub	sp, sp, #32
 2544              	.LCFI52:
 2545              		.cfi_def_cfa_offset 40
 2546 0004 00AF     		add	r7, sp, #0
 2547              	.LCFI53:
 2548              		.cfi_def_cfa_register 7
 2549 0006 7860     		str	r0, [r7, #4]
 2550 0008 3960     		str	r1, [r7, #0]
1682:../Dave/Generated/src/FATFS002/Src/ff.c **** #ifdef _EXCVT
1683:../Dave/Generated/src/FATFS002/Src/ff.c **** 	static const BYTE excvt[] = _EXCVT;	/* Upper conversion table for extended chars */
1684:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
1685:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1686:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _USE_LFN	/* LFN configuration */
1687:../Dave/Generated/src/FATFS002/Src/ff.c **** 	BYTE b, cf;
1688:../Dave/Generated/src/FATFS002/Src/ff.c **** 	WCHAR w, *lfn;
1689:../Dave/Generated/src/FATFS002/Src/ff.c **** 	UINT i, ni, si, di;
1690:../Dave/Generated/src/FATFS002/Src/ff.c **** 	const TCHAR *p;
1691:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1692:../Dave/Generated/src/FATFS002/Src/ff.c **** 	/* Create LFN in Unicode */
1693:../Dave/Generated/src/FATFS002/Src/ff.c **** 	for (p = *path; *p == '/' || *p == '\\'; p++) ;	/* Strip duplicated separator */
1694:../Dave/Generated/src/FATFS002/Src/ff.c **** 	lfn = dj->lfn;
1695:../Dave/Generated/src/FATFS002/Src/ff.c **** 	si = di = 0;
1696:../Dave/Generated/src/FATFS002/Src/ff.c **** 	for (;;) {
1697:../Dave/Generated/src/FATFS002/Src/ff.c **** 		w = p[si++];					/* Get a character */
1698:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (w < ' ' || w == '/' || w == '\\') break;	/* Break on end of segment */
1699:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (di >= _MAX_LFN)				/* Reject too long name */
1700:../Dave/Generated/src/FATFS002/Src/ff.c **** 			return FR_INVALID_NAME;
1701:../Dave/Generated/src/FATFS002/Src/ff.c **** #if !_LFN_UNICODE
1702:../Dave/Generated/src/FATFS002/Src/ff.c **** 		w &= 0xFF;
1703:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (IsDBCS1(w)) {				/* Check if it is a DBC 1st byte (always false on SBCS cfg) */
1704:../Dave/Generated/src/FATFS002/Src/ff.c **** 			b = (BYTE)p[si++];			/* Get 2nd byte */
1705:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (!IsDBCS2(b))
1706:../Dave/Generated/src/FATFS002/Src/ff.c **** 				return FR_INVALID_NAME;	/* Reject invalid sequence */
1707:../Dave/Generated/src/FATFS002/Src/ff.c **** 			w = (w << 8) + b;			/* Create a DBC */
1708:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
1709:../Dave/Generated/src/FATFS002/Src/ff.c **** 		w = ff_convert(w, 1);			/* Convert ANSI/OEM to Unicode */
1710:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (!w) return FR_INVALID_NAME;	/* Reject invalid code */
1711:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
1712:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (w < 0x80 && chk_chr("\"*:<>\?|\x7F", w)) /* Reject illegal chars for LFN */
1713:../Dave/Generated/src/FATFS002/Src/ff.c **** 			return FR_INVALID_NAME;
1714:../Dave/Generated/src/FATFS002/Src/ff.c **** 		lfn[di++] = w;					/* Store the Unicode char */
1715:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
1716:../Dave/Generated/src/FATFS002/Src/ff.c **** 	*path = &p[si];						/* Return pointer to the next segment */
1717:../Dave/Generated/src/FATFS002/Src/ff.c **** 	cf = (w < ' ') ? NS_LAST : 0;		/* Set last segment flag if end of path */
1718:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _FS_RPATH
1719:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if ((di == 1 && lfn[di-1] == '.') || /* Is this a dot entry? */
1720:../Dave/Generated/src/FATFS002/Src/ff.c **** 		(di == 2 && lfn[di-1] == '.' && lfn[di-2] == '.')) {
1721:../Dave/Generated/src/FATFS002/Src/ff.c **** 		lfn[di] = 0;
1722:../Dave/Generated/src/FATFS002/Src/ff.c **** 		for (i = 0; i < 11; i++)
1723:../Dave/Generated/src/FATFS002/Src/ff.c **** 			dj->fn[i] = (i < di) ? '.' : ' ';
1724:../Dave/Generated/src/FATFS002/Src/ff.c **** 		dj->fn[i] = cf | NS_DOT;		/* This is a dot entry */
1725:../Dave/Generated/src/FATFS002/Src/ff.c **** 		return FR_OK;
1726:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
1727:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
1728:../Dave/Generated/src/FATFS002/Src/ff.c **** 	while (di) {						/* Strip trailing spaces and dots */
1729:../Dave/Generated/src/FATFS002/Src/ff.c **** 		w = lfn[di-1];
1730:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (w != ' ' && w != '.') break;
1731:../Dave/Generated/src/FATFS002/Src/ff.c **** 		di--;
1732:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
1733:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (!di) return FR_INVALID_NAME;	/* Reject nul string */
1734:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1735:../Dave/Generated/src/FATFS002/Src/ff.c **** 	lfn[di] = 0;						/* LFN is created */
1736:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1737:../Dave/Generated/src/FATFS002/Src/ff.c **** 	/* Create SFN in directory form */
1738:../Dave/Generated/src/FATFS002/Src/ff.c **** 	mem_set(dj->fn, ' ', 11);
1739:../Dave/Generated/src/FATFS002/Src/ff.c **** 	for (si = 0; lfn[si] == ' ' || lfn[si] == '.'; si++) ;	/* Strip leading spaces and dots */
1740:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (si) cf |= NS_LOSS | NS_LFN;
1741:../Dave/Generated/src/FATFS002/Src/ff.c **** 	while (di && lfn[di - 1] != '.') di--;	/* Find extension (di<=si: no extension) */
1742:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1743:../Dave/Generated/src/FATFS002/Src/ff.c **** 	b = i = 0; ni = 8;
1744:../Dave/Generated/src/FATFS002/Src/ff.c **** 	for (;;) {
1745:../Dave/Generated/src/FATFS002/Src/ff.c **** 		w = lfn[si++];					/* Get an LFN char */
1746:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (!w) break;					/* Break on end of the LFN */
1747:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (w == ' ' || (w == '.' && si != di)) {	/* Remove spaces and dots */
1748:../Dave/Generated/src/FATFS002/Src/ff.c **** 			cf |= NS_LOSS | NS_LFN; continue;
1749:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
1750:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1751:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (i >= ni || si == di) {		/* Extension or end of SFN */
1752:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (ni == 11) {				/* Long extension */
1753:../Dave/Generated/src/FATFS002/Src/ff.c **** 				cf |= NS_LOSS | NS_LFN; break;
1754:../Dave/Generated/src/FATFS002/Src/ff.c **** 			}
1755:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (si != di) cf |= NS_LOSS | NS_LFN;	/* Out of 8.3 format */
1756:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (si > di) break;			/* No extension */
1757:../Dave/Generated/src/FATFS002/Src/ff.c **** 			si = di; i = 8; ni = 11;	/* Enter extension section */
1758:../Dave/Generated/src/FATFS002/Src/ff.c **** 			b <<= 2; continue;
1759:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
1760:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1761:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (w >= 0x80) {				/* Non ASCII char */
1762:../Dave/Generated/src/FATFS002/Src/ff.c **** #ifdef _EXCVT
1763:../Dave/Generated/src/FATFS002/Src/ff.c **** 			w = ff_convert(w, 0);		/* Unicode -> OEM code */
1764:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (w) w = excvt[w - 0x80];	/* Convert extended char to upper (SBCS) */
1765:../Dave/Generated/src/FATFS002/Src/ff.c **** #else
1766:../Dave/Generated/src/FATFS002/Src/ff.c **** 			w = ff_convert(ff_wtoupper(w), 0);	/* Upper converted Unicode -> OEM code */
1767:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
1768:../Dave/Generated/src/FATFS002/Src/ff.c **** 			cf |= NS_LFN;				/* Force create LFN entry */
1769:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
1770:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1771:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (_DF1S && w >= 0x100) {		/* Double byte char (always false on SBCS cfg) */
1772:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (i >= ni - 1) {
1773:../Dave/Generated/src/FATFS002/Src/ff.c **** 				cf |= NS_LOSS | NS_LFN; i = ni; continue;
1774:../Dave/Generated/src/FATFS002/Src/ff.c **** 			}
1775:../Dave/Generated/src/FATFS002/Src/ff.c **** 			dj->fn[i++] = (BYTE)(w >> 8);
1776:../Dave/Generated/src/FATFS002/Src/ff.c **** 		} else {						/* Single byte char */
1777:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (!w || chk_chr("+,;=[]", w)) {	/* Replace illegal chars for SFN */
1778:../Dave/Generated/src/FATFS002/Src/ff.c **** 				w = '_'; cf |= NS_LOSS | NS_LFN;/* Lossy conversion */
1779:../Dave/Generated/src/FATFS002/Src/ff.c **** 			} else {
1780:../Dave/Generated/src/FATFS002/Src/ff.c **** 				if (IsUpper(w)) {		/* ASCII large capital */
1781:../Dave/Generated/src/FATFS002/Src/ff.c **** 					b |= 2;
1782:../Dave/Generated/src/FATFS002/Src/ff.c **** 				} else {
1783:../Dave/Generated/src/FATFS002/Src/ff.c **** 					if (IsLower(w)) {	/* ASCII small capital */
1784:../Dave/Generated/src/FATFS002/Src/ff.c **** 						b |= 1; w -= 0x20;
1785:../Dave/Generated/src/FATFS002/Src/ff.c **** 					}
1786:../Dave/Generated/src/FATFS002/Src/ff.c **** 				}
1787:../Dave/Generated/src/FATFS002/Src/ff.c **** 			}
1788:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
1789:../Dave/Generated/src/FATFS002/Src/ff.c **** 		dj->fn[i++] = (BYTE)w;
1790:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
1791:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1792:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (dj->fn[0] == DDE) dj->fn[0] = NDDE;	/* If the first char collides with deleted mark, replace i
1793:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1794:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (ni == 8) b <<= 2;
1795:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if ((b & 0x0C) == 0x0C || (b & 0x03) == 0x03)	/* Create LFN entry when there are composite capital
1796:../Dave/Generated/src/FATFS002/Src/ff.c **** 		cf |= NS_LFN;
1797:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (!(cf & NS_LFN)) {						/* When LFN is in 8.3 format without extended char, NT flags are create
1798:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if ((b & 0x03) == 0x01) cf |= NS_EXT;	/* NT flag (Extension has only small capital) */
1799:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if ((b & 0x0C) == 0x04) cf |= NS_BODY;	/* NT flag (Filename has only small capital) */
1800:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
1801:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1802:../Dave/Generated/src/FATFS002/Src/ff.c **** 	dj->fn[NS] = cf;	/* SFN is created */
1803:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1804:../Dave/Generated/src/FATFS002/Src/ff.c **** 	return FR_OK;
1805:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1806:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1807:../Dave/Generated/src/FATFS002/Src/ff.c **** #else	/* Non-LFN configuration */
1808:../Dave/Generated/src/FATFS002/Src/ff.c **** 	BYTE b, c, d, *sfn;
1809:../Dave/Generated/src/FATFS002/Src/ff.c **** 	UINT ni, si, i;
1810:../Dave/Generated/src/FATFS002/Src/ff.c **** 	const char *p;
1811:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1812:../Dave/Generated/src/FATFS002/Src/ff.c **** 	/* Create file name in directory form */
1813:../Dave/Generated/src/FATFS002/Src/ff.c **** 	for (p = *path; *p == '/' || *p == '\\'; p++) ;	/* Strip duplicated separator */
 2551              		.loc 1 1813 0
 2552 000a 3B68     		ldr	r3, [r7, #0]
 2553 000c 1B68     		ldr	r3, [r3, #0]
 2554 000e FB60     		str	r3, [r7, #12]
 2555 0010 03E0     		b	.L172
 2556              	.L173:
 2557              		.loc 1 1813 0 is_stmt 0 discriminator 2
 2558 0012 FB68     		ldr	r3, [r7, #12]
 2559 0014 03F10103 		add	r3, r3, #1
 2560 0018 FB60     		str	r3, [r7, #12]
 2561              	.L172:
 2562              		.loc 1 1813 0 discriminator 1
 2563 001a FB68     		ldr	r3, [r7, #12]
 2564 001c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2565 001e 2F2B     		cmp	r3, #47
 2566 0020 F7D0     		beq	.L173
 2567              		.loc 1 1813 0 discriminator 3
 2568 0022 FB68     		ldr	r3, [r7, #12]
 2569 0024 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2570 0026 5C2B     		cmp	r3, #92
 2571 0028 F3D0     		beq	.L173
1814:../Dave/Generated/src/FATFS002/Src/ff.c **** 	sfn = dj->fn;
 2572              		.loc 1 1814 0 is_stmt 1
 2573 002a 7B68     		ldr	r3, [r7, #4]
 2574 002c 9B69     		ldr	r3, [r3, #24]
 2575 002e BB60     		str	r3, [r7, #8]
1815:../Dave/Generated/src/FATFS002/Src/ff.c **** 	mem_set(sfn, ' ', 11);
 2576              		.loc 1 1815 0
 2577 0030 B868     		ldr	r0, [r7, #8]
 2578 0032 4FF02001 		mov	r1, #32
 2579 0036 4FF00B02 		mov	r2, #11
 2580 003a FFF7FEFF 		bl	mem_set
1816:../Dave/Generated/src/FATFS002/Src/ff.c **** 	si = i = b = 0; ni = 8;
 2581              		.loc 1 1816 0
 2582 003e 4FF00003 		mov	r3, #0
 2583 0042 FB77     		strb	r3, [r7, #31]
 2584 0044 4FF00003 		mov	r3, #0
 2585 0048 3B61     		str	r3, [r7, #16]
 2586 004a 3B69     		ldr	r3, [r7, #16]
 2587 004c 7B61     		str	r3, [r7, #20]
 2588 004e 4FF00803 		mov	r3, #8
 2589 0052 BB61     		str	r3, [r7, #24]
1817:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _FS_RPATH
1818:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (p[si] == '.') { /* Is this a dot entry? */
 2590              		.loc 1 1818 0
 2591 0054 FA68     		ldr	r2, [r7, #12]
 2592 0056 7B69     		ldr	r3, [r7, #20]
 2593 0058 D318     		adds	r3, r2, r3
 2594 005a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2595 005c 2E2B     		cmp	r3, #46
 2596 005e 38D1     		bne	.L174
 2597              	.L176:
1819:../Dave/Generated/src/FATFS002/Src/ff.c **** 		for (;;) {
1820:../Dave/Generated/src/FATFS002/Src/ff.c **** 			c = (BYTE)p[si++];
 2598              		.loc 1 1820 0
 2599 0060 FA68     		ldr	r2, [r7, #12]
 2600 0062 7B69     		ldr	r3, [r7, #20]
 2601 0064 D318     		adds	r3, r2, r3
 2602 0066 1B78     		ldrb	r3, [r3, #0]
 2603 0068 BB77     		strb	r3, [r7, #30]
 2604 006a 7B69     		ldr	r3, [r7, #20]
 2605 006c 03F10103 		add	r3, r3, #1
 2606 0070 7B61     		str	r3, [r7, #20]
1821:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (c != '.' || si >= 3) break;
 2607              		.loc 1 1821 0
 2608 0072 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2609 0074 2E2B     		cmp	r3, #46
 2610 0076 0CD1     		bne	.L175
 2611              		.loc 1 1821 0 is_stmt 0 discriminator 1
 2612 0078 7B69     		ldr	r3, [r7, #20]
 2613 007a 022B     		cmp	r3, #2
 2614 007c 09D8     		bhi	.L175
1822:../Dave/Generated/src/FATFS002/Src/ff.c **** 			sfn[i++] = c;
 2615              		.loc 1 1822 0 is_stmt 1
 2616 007e BA68     		ldr	r2, [r7, #8]
 2617 0080 3B69     		ldr	r3, [r7, #16]
 2618 0082 D318     		adds	r3, r2, r3
 2619 0084 BA7F     		ldrb	r2, [r7, #30]
 2620 0086 1A70     		strb	r2, [r3, #0]
 2621 0088 3B69     		ldr	r3, [r7, #16]
 2622 008a 03F10103 		add	r3, r3, #1
 2623 008e 3B61     		str	r3, [r7, #16]
1823:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
 2624              		.loc 1 1823 0
 2625 0090 E6E7     		b	.L176
 2626              	.L175:
1824:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (c != '/' && c != '\\' && c > ' ') return FR_INVALID_NAME;
 2627              		.loc 1 1824 0
 2628 0092 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2629 0094 2F2B     		cmp	r3, #47
 2630 0096 08D0     		beq	.L177
 2631              		.loc 1 1824 0 is_stmt 0 discriminator 1
 2632 0098 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2633 009a 5C2B     		cmp	r3, #92
 2634 009c 05D0     		beq	.L177
 2635 009e BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2636 00a0 202B     		cmp	r3, #32
 2637 00a2 02D9     		bls	.L177
 2638 00a4 4FF00603 		mov	r3, #6
 2639 00a8 BFE0     		b	.L178
 2640              	.L177:
1825:../Dave/Generated/src/FATFS002/Src/ff.c **** 		*path = &p[si];									/* Return pointer to the next segment */
 2641              		.loc 1 1825 0 is_stmt 1
 2642 00aa FA68     		ldr	r2, [r7, #12]
 2643 00ac 7B69     		ldr	r3, [r7, #20]
 2644 00ae D218     		adds	r2, r2, r3
 2645 00b0 3B68     		ldr	r3, [r7, #0]
 2646 00b2 1A60     		str	r2, [r3, #0]
1826:../Dave/Generated/src/FATFS002/Src/ff.c **** 		sfn[NS] = (c <= ' ') ? NS_LAST | NS_DOT : NS_DOT;	/* Set last segment flag if end of path */
 2647              		.loc 1 1826 0
 2648 00b4 BB68     		ldr	r3, [r7, #8]
 2649 00b6 03F10B02 		add	r2, r3, #11
 2650 00ba BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2651 00bc 202B     		cmp	r3, #32
 2652 00be 02D8     		bhi	.L179
 2653              		.loc 1 1826 0 is_stmt 0 discriminator 1
 2654 00c0 4FF02403 		mov	r3, #36
 2655 00c4 01E0     		b	.L180
 2656              	.L179:
 2657              		.loc 1 1826 0 discriminator 2
 2658 00c6 4FF02003 		mov	r3, #32
 2659              	.L180:
 2660              		.loc 1 1826 0 discriminator 3
 2661 00ca 1370     		strb	r3, [r2, #0]
1827:../Dave/Generated/src/FATFS002/Src/ff.c **** 		return FR_OK;
 2662              		.loc 1 1827 0 is_stmt 1 discriminator 3
 2663 00cc 4FF00003 		mov	r3, #0
 2664 00d0 ABE0     		b	.L178
 2665              	.L174:
1828:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
1829:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
1830:../Dave/Generated/src/FATFS002/Src/ff.c **** 	for (;;) {
1831:../Dave/Generated/src/FATFS002/Src/ff.c **** 		c = (BYTE)p[si++];
 2666              		.loc 1 1831 0
 2667 00d2 FA68     		ldr	r2, [r7, #12]
 2668 00d4 7B69     		ldr	r3, [r7, #20]
 2669 00d6 D318     		adds	r3, r2, r3
 2670 00d8 1B78     		ldrb	r3, [r3, #0]
 2671 00da BB77     		strb	r3, [r7, #30]
 2672 00dc 7B69     		ldr	r3, [r7, #20]
 2673 00de 03F10103 		add	r3, r3, #1
 2674 00e2 7B61     		str	r3, [r7, #20]
1832:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (c <= ' ' || c == '/' || c == '\\') break;	/* Break on end of segment */
 2675              		.loc 1 1832 0
 2676 00e4 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2677 00e6 202B     		cmp	r3, #32
 2678 00e8 63D9     		bls	.L181
 2679              		.loc 1 1832 0 is_stmt 0 discriminator 1
 2680 00ea BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2681 00ec 2F2B     		cmp	r3, #47
 2682 00ee 60D0     		beq	.L181
 2683 00f0 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2684 00f2 5C2B     		cmp	r3, #92
 2685 00f4 5DD0     		beq	.L181
1833:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (c == '.' || i >= ni) {
 2686              		.loc 1 1833 0 is_stmt 1
 2687 00f6 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2688 00f8 2E2B     		cmp	r3, #46
 2689 00fa 03D0     		beq	.L182
 2690              		.loc 1 1833 0 is_stmt 0 discriminator 1
 2691 00fc 3A69     		ldr	r2, [r7, #16]
 2692 00fe BB69     		ldr	r3, [r7, #24]
 2693 0100 9A42     		cmp	r2, r3
 2694 0102 14D3     		bcc	.L183
 2695              	.L182:
1834:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (ni != 8 || c != '.') return FR_INVALID_NAME;
 2696              		.loc 1 1834 0 is_stmt 1
 2697 0104 BB69     		ldr	r3, [r7, #24]
 2698 0106 082B     		cmp	r3, #8
 2699 0108 02D1     		bne	.L184
 2700              		.loc 1 1834 0 is_stmt 0 discriminator 2
 2701 010a BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2702 010c 2E2B     		cmp	r3, #46
 2703 010e 02D0     		beq	.L185
 2704              	.L184:
 2705              		.loc 1 1834 0 discriminator 1
 2706 0110 4FF00603 		mov	r3, #6
 2707 0114 89E0     		b	.L178
 2708              	.L185:
1835:../Dave/Generated/src/FATFS002/Src/ff.c **** 			i = 8; ni = 11;
 2709              		.loc 1 1835 0 is_stmt 1
 2710 0116 4FF00803 		mov	r3, #8
 2711 011a 3B61     		str	r3, [r7, #16]
 2712 011c 4FF00B03 		mov	r3, #11
 2713 0120 BB61     		str	r3, [r7, #24]
1836:../Dave/Generated/src/FATFS002/Src/ff.c **** 			b <<= 2; continue;
 2714              		.loc 1 1836 0
 2715 0122 FB7F     		ldrb	r3, [r7, #31]
 2716 0124 4FEA8303 		lsl	r3, r3, #2
 2717 0128 FB77     		strb	r3, [r7, #31]
 2718 012a 00BF     		nop
1837:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
1838:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (c >= 0x80) {				/* Extended char? */
1839:../Dave/Generated/src/FATFS002/Src/ff.c **** 			b |= 3;						/* Eliminate NT flag */
1840:../Dave/Generated/src/FATFS002/Src/ff.c **** #ifdef _EXCVT
1841:../Dave/Generated/src/FATFS002/Src/ff.c **** 			c = excvt[c-0x80];			/* Upper conversion (SBCS) */
1842:../Dave/Generated/src/FATFS002/Src/ff.c **** #else
1843:../Dave/Generated/src/FATFS002/Src/ff.c **** #if !_DF1S	/* ASCII only cfg */
1844:../Dave/Generated/src/FATFS002/Src/ff.c **** 			return FR_INVALID_NAME;
1845:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
1846:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
1847:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
1848:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (IsDBCS1(c)) {				/* Check if it is a DBC 1st byte (always false on SBCS cfg) */
1849:../Dave/Generated/src/FATFS002/Src/ff.c **** 			d = (BYTE)p[si++];			/* Get 2nd byte */
1850:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (!IsDBCS2(d) || i >= ni - 1)	/* Reject invalid DBC */
1851:../Dave/Generated/src/FATFS002/Src/ff.c **** 				return FR_INVALID_NAME;
1852:../Dave/Generated/src/FATFS002/Src/ff.c **** 			sfn[i++] = c;
1853:../Dave/Generated/src/FATFS002/Src/ff.c **** 			sfn[i++] = d;
1854:../Dave/Generated/src/FATFS002/Src/ff.c **** 		} else {						/* Single byte code */
1855:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (chk_chr("\"*+,:;<=>\?[]|\x7F", c))	/* Reject illegal chrs for SFN */
1856:../Dave/Generated/src/FATFS002/Src/ff.c **** 				return FR_INVALID_NAME;
1857:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (IsUpper(c)) {			/* ASCII large capital? */
1858:../Dave/Generated/src/FATFS002/Src/ff.c **** 				b |= 2;
1859:../Dave/Generated/src/FATFS002/Src/ff.c **** 			} else {
1860:../Dave/Generated/src/FATFS002/Src/ff.c **** 				if (IsLower(c)) {		/* ASCII small capital? */
1861:../Dave/Generated/src/FATFS002/Src/ff.c **** 					b |= 1; c -= 0x20;
1862:../Dave/Generated/src/FATFS002/Src/ff.c **** 				}
1863:../Dave/Generated/src/FATFS002/Src/ff.c **** 			}
1864:../Dave/Generated/src/FATFS002/Src/ff.c **** 			sfn[i++] = c;
1865:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
1866:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
 2719              		.loc 1 1866 0
 2720 012c D1E7     		b	.L174
 2721              	.L183:
1838:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (c >= 0x80) {				/* Extended char? */
 2722              		.loc 1 1838 0
 2723 012e BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2724 0130 5BB2     		sxtb	r3, r3
 2725 0132 002B     		cmp	r3, #0
 2726 0134 0CDA     		bge	.L187
1839:../Dave/Generated/src/FATFS002/Src/ff.c **** 			b |= 3;						/* Eliminate NT flag */
 2727              		.loc 1 1839 0
 2728 0136 FB7F     		ldrb	r3, [r7, #31]
 2729 0138 43F00303 		orr	r3, r3, #3
 2730 013c FB77     		strb	r3, [r7, #31]
1841:../Dave/Generated/src/FATFS002/Src/ff.c **** 			c = excvt[c-0x80];			/* Upper conversion (SBCS) */
 2731              		.loc 1 1841 0
 2732 013e BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2733 0140 A3F18002 		sub	r2, r3, #128
 2734 0144 40F20003 		movw	r3, #:lower16:excvt.4415
 2735 0148 C0F20003 		movt	r3, #:upper16:excvt.4415
 2736 014c 9B5C     		ldrb	r3, [r3, r2]
 2737 014e BB77     		strb	r3, [r7, #30]
 2738              	.L187:
1855:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (chk_chr("\"*+,:;<=>\?[]|\x7F", c))	/* Reject illegal chrs for SFN */
 2739              		.loc 1 1855 0
 2740 0150 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2741 0152 40F20000 		movw	r0, #:lower16:.LC0
 2742 0156 C0F20000 		movt	r0, #:upper16:.LC0
 2743 015a 1946     		mov	r1, r3
 2744 015c FFF7FEFF 		bl	chk_chr
 2745 0160 0346     		mov	r3, r0
 2746 0162 002B     		cmp	r3, #0
 2747 0164 02D0     		beq	.L188
1856:../Dave/Generated/src/FATFS002/Src/ff.c **** 				return FR_INVALID_NAME;
 2748              		.loc 1 1856 0
 2749 0166 4FF00603 		mov	r3, #6
 2750 016a 5EE0     		b	.L178
 2751              	.L188:
1857:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (IsUpper(c)) {			/* ASCII large capital? */
 2752              		.loc 1 1857 0
 2753 016c BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2754 016e 402B     		cmp	r3, #64
 2755 0170 07D9     		bls	.L189
1857:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (IsUpper(c)) {			/* ASCII large capital? */
 2756              		.loc 1 1857 0 is_stmt 0 discriminator 1
 2757 0172 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2758 0174 5A2B     		cmp	r3, #90
 2759 0176 04D8     		bhi	.L189
1858:../Dave/Generated/src/FATFS002/Src/ff.c **** 				b |= 2;
 2760              		.loc 1 1858 0 is_stmt 1
 2761 0178 FB7F     		ldrb	r3, [r7, #31]
 2762 017a 43F00203 		orr	r3, r3, #2
 2763 017e FB77     		strb	r3, [r7, #31]
 2764 0180 0DE0     		b	.L190
 2765              	.L189:
1860:../Dave/Generated/src/FATFS002/Src/ff.c **** 				if (IsLower(c)) {		/* ASCII small capital? */
 2766              		.loc 1 1860 0
 2767 0182 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2768 0184 602B     		cmp	r3, #96
 2769 0186 0AD9     		bls	.L190
1860:../Dave/Generated/src/FATFS002/Src/ff.c **** 				if (IsLower(c)) {		/* ASCII small capital? */
 2770              		.loc 1 1860 0 is_stmt 0 discriminator 1
 2771 0188 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2772 018a 7A2B     		cmp	r3, #122
 2773 018c 07D8     		bhi	.L190
1861:../Dave/Generated/src/FATFS002/Src/ff.c **** 					b |= 1; c -= 0x20;
 2774              		.loc 1 1861 0 is_stmt 1
 2775 018e FB7F     		ldrb	r3, [r7, #31]
 2776 0190 43F00103 		orr	r3, r3, #1
 2777 0194 FB77     		strb	r3, [r7, #31]
 2778 0196 BB7F     		ldrb	r3, [r7, #30]
 2779 0198 A3F12003 		sub	r3, r3, #32
 2780 019c BB77     		strb	r3, [r7, #30]
 2781              	.L190:
1864:../Dave/Generated/src/FATFS002/Src/ff.c **** 			sfn[i++] = c;
 2782              		.loc 1 1864 0
 2783 019e BA68     		ldr	r2, [r7, #8]
 2784 01a0 3B69     		ldr	r3, [r7, #16]
 2785 01a2 D318     		adds	r3, r2, r3
 2786 01a4 BA7F     		ldrb	r2, [r7, #30]
 2787 01a6 1A70     		strb	r2, [r3, #0]
 2788 01a8 3B69     		ldr	r3, [r7, #16]
 2789 01aa 03F10103 		add	r3, r3, #1
 2790 01ae 3B61     		str	r3, [r7, #16]
 2791              		.loc 1 1866 0
 2792 01b0 8FE7     		b	.L174
 2793              	.L181:
1867:../Dave/Generated/src/FATFS002/Src/ff.c **** 	*path = &p[si];						/* Return pointer to the next segment */
 2794              		.loc 1 1867 0
 2795 01b2 FA68     		ldr	r2, [r7, #12]
 2796 01b4 7B69     		ldr	r3, [r7, #20]
 2797 01b6 D218     		adds	r2, r2, r3
 2798 01b8 3B68     		ldr	r3, [r7, #0]
 2799 01ba 1A60     		str	r2, [r3, #0]
1868:../Dave/Generated/src/FATFS002/Src/ff.c **** 	c = (c <= ' ') ? NS_LAST : 0;		/* Set last segment flag if end of path */
 2800              		.loc 1 1868 0
 2801 01bc BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2802 01be 202B     		cmp	r3, #32
 2803 01c0 02D8     		bhi	.L191
 2804              		.loc 1 1868 0 is_stmt 0 discriminator 1
 2805 01c2 4FF00403 		mov	r3, #4
 2806 01c6 01E0     		b	.L192
 2807              	.L191:
 2808              		.loc 1 1868 0 discriminator 2
 2809 01c8 4FF00003 		mov	r3, #0
 2810              	.L192:
 2811              		.loc 1 1868 0 discriminator 3
 2812 01cc BB77     		strb	r3, [r7, #30]
1869:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1870:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (!i) return FR_INVALID_NAME;		/* Reject nul string */
 2813              		.loc 1 1870 0 is_stmt 1 discriminator 3
 2814 01ce 3B69     		ldr	r3, [r7, #16]
 2815 01d0 002B     		cmp	r3, #0
 2816 01d2 02D1     		bne	.L193
 2817              		.loc 1 1870 0 is_stmt 0 discriminator 1
 2818 01d4 4FF00603 		mov	r3, #6
 2819 01d8 27E0     		b	.L178
 2820              	.L193:
1871:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (sfn[0] == DDE) sfn[0] = NDDE;	/* When first char collides with DDE, replace it with 0x05 */
 2821              		.loc 1 1871 0 is_stmt 1
 2822 01da BB68     		ldr	r3, [r7, #8]
 2823 01dc 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2824 01de E52B     		cmp	r3, #229
 2825 01e0 03D1     		bne	.L194
 2826              		.loc 1 1871 0 is_stmt 0 discriminator 1
 2827 01e2 BB68     		ldr	r3, [r7, #8]
 2828 01e4 4FF00502 		mov	r2, #5
 2829 01e8 1A70     		strb	r2, [r3, #0]
 2830              	.L194:
1872:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1873:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (ni == 8) b <<= 2;
 2831              		.loc 1 1873 0 is_stmt 1
 2832 01ea BB69     		ldr	r3, [r7, #24]
 2833 01ec 082B     		cmp	r3, #8
 2834 01ee 03D1     		bne	.L195
 2835              		.loc 1 1873 0 is_stmt 0 discriminator 1
 2836 01f0 FB7F     		ldrb	r3, [r7, #31]
 2837 01f2 4FEA8303 		lsl	r3, r3, #2
 2838 01f6 FB77     		strb	r3, [r7, #31]
 2839              	.L195:
1874:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if ((b & 0x03) == 0x01) c |= NS_EXT;	/* NT flag (Name extension has only small capital) */
 2840              		.loc 1 1874 0 is_stmt 1
 2841 01f8 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2842 01fa 03F00303 		and	r3, r3, #3
 2843 01fe 012B     		cmp	r3, #1
 2844 0200 03D1     		bne	.L196
 2845              		.loc 1 1874 0 is_stmt 0 discriminator 1
 2846 0202 BB7F     		ldrb	r3, [r7, #30]
 2847 0204 43F01003 		orr	r3, r3, #16
 2848 0208 BB77     		strb	r3, [r7, #30]
 2849              	.L196:
1875:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if ((b & 0x0C) == 0x04) c |= NS_BODY;	/* NT flag (Name body has only small capital) */
 2850              		.loc 1 1875 0 is_stmt 1
 2851 020a FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2852 020c 03F00C03 		and	r3, r3, #12
 2853 0210 042B     		cmp	r3, #4
 2854 0212 03D1     		bne	.L197
 2855              		.loc 1 1875 0 is_stmt 0 discriminator 1
 2856 0214 BB7F     		ldrb	r3, [r7, #30]
 2857 0216 43F00803 		orr	r3, r3, #8
 2858 021a BB77     		strb	r3, [r7, #30]
 2859              	.L197:
1876:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1877:../Dave/Generated/src/FATFS002/Src/ff.c **** 	sfn[NS] = c;		/* Store NT flag, File name is created */
 2860              		.loc 1 1877 0 is_stmt 1
 2861 021c BB68     		ldr	r3, [r7, #8]
 2862 021e 03F10B03 		add	r3, r3, #11
 2863 0222 BA7F     		ldrb	r2, [r7, #30]
 2864 0224 1A70     		strb	r2, [r3, #0]
1878:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1879:../Dave/Generated/src/FATFS002/Src/ff.c **** 	return FR_OK;
 2865              		.loc 1 1879 0
 2866 0226 4FF00003 		mov	r3, #0
 2867              	.L178:
1880:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
1881:../Dave/Generated/src/FATFS002/Src/ff.c **** }
 2868              		.loc 1 1881 0
 2869 022a 1846     		mov	r0, r3
 2870 022c 07F12007 		add	r7, r7, #32
 2871 0230 BD46     		mov	sp, r7
 2872 0232 80BD     		pop	{r7, pc}
 2873              		.cfi_endproc
 2874              	.LFE17:
 2876              		.section	.text.get_fileinfo,"ax",%progbits
 2877              		.align	2
 2878              		.thumb
 2879              		.thumb_func
 2881              	get_fileinfo:
 2882              	.LFB18:
1882:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1883:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1884:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1885:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1886:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
1887:../Dave/Generated/src/FATFS002/Src/ff.c **** /* Get file information from directory entry                             */
1888:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
1889:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _FS_MINIMIZE <= 1
1890:../Dave/Generated/src/FATFS002/Src/ff.c **** static
1891:../Dave/Generated/src/FATFS002/Src/ff.c **** void get_fileinfo (		/* No return code */
1892:../Dave/Generated/src/FATFS002/Src/ff.c **** 	DIR *dj,			/* Pointer to the directory object */
1893:../Dave/Generated/src/FATFS002/Src/ff.c **** 	FILINFO *fno	 	/* Pointer to the file information to be filled */
1894:../Dave/Generated/src/FATFS002/Src/ff.c **** )
1895:../Dave/Generated/src/FATFS002/Src/ff.c **** {
 2883              		.loc 1 1895 0
 2884              		.cfi_startproc
 2885              		@ args = 0, pretend = 0, frame = 32
 2886              		@ frame_needed = 1, uses_anonymous_args = 0
 2887              		@ link register save eliminated.
 2888 0000 80B4     		push	{r7}
 2889              	.LCFI54:
 2890              		.cfi_def_cfa_offset 4
 2891              		.cfi_offset 7, -4
 2892 0002 89B0     		sub	sp, sp, #36
 2893              	.LCFI55:
 2894              		.cfi_def_cfa_offset 40
 2895 0004 00AF     		add	r7, sp, #0
 2896              	.LCFI56:
 2897              		.cfi_def_cfa_register 7
 2898 0006 7860     		str	r0, [r7, #4]
 2899 0008 3960     		str	r1, [r7, #0]
1896:../Dave/Generated/src/FATFS002/Src/ff.c **** 	UINT i;
1897:../Dave/Generated/src/FATFS002/Src/ff.c **** 	BYTE nt, *dir;
1898:../Dave/Generated/src/FATFS002/Src/ff.c **** 	TCHAR *p, c;
1899:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1900:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1901:../Dave/Generated/src/FATFS002/Src/ff.c **** 	p = fno->fname;
 2900              		.loc 1 1901 0
 2901 000a 3B68     		ldr	r3, [r7, #0]
 2902 000c 03F10903 		add	r3, r3, #9
 2903 0010 BB61     		str	r3, [r7, #24]
1902:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (dj->sect) {
 2904              		.loc 1 1902 0
 2905 0012 7B68     		ldr	r3, [r7, #4]
 2906 0014 1B69     		ldr	r3, [r3, #16]
 2907 0016 002B     		cmp	r3, #0
 2908 0018 00F09180 		beq	.L199
1903:../Dave/Generated/src/FATFS002/Src/ff.c **** 		dir = dj->dir;
 2909              		.loc 1 1903 0
 2910 001c 7B68     		ldr	r3, [r7, #4]
 2911 001e 5B69     		ldr	r3, [r3, #20]
 2912 0020 3B61     		str	r3, [r7, #16]
1904:../Dave/Generated/src/FATFS002/Src/ff.c **** 		nt = dir[DIR_NTres];		/* NT flag */
 2913              		.loc 1 1904 0
 2914 0022 3B69     		ldr	r3, [r7, #16]
 2915 0024 1B7B     		ldrb	r3, [r3, #12]
 2916 0026 FB73     		strb	r3, [r7, #15]
1905:../Dave/Generated/src/FATFS002/Src/ff.c **** 		for (i = 0; i < 8; i++) {	/* Copy name body */
 2917              		.loc 1 1905 0
 2918 0028 4FF00003 		mov	r3, #0
 2919 002c FB61     		str	r3, [r7, #28]
 2920 002e 18E0     		b	.L200
 2921              	.L204:
1906:../Dave/Generated/src/FATFS002/Src/ff.c **** 			c = dir[i];
 2922              		.loc 1 1906 0
 2923 0030 3A69     		ldr	r2, [r7, #16]
 2924 0032 FB69     		ldr	r3, [r7, #28]
 2925 0034 D318     		adds	r3, r2, r3
 2926 0036 1B78     		ldrb	r3, [r3, #0]
 2927 0038 FB75     		strb	r3, [r7, #23]
1907:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (c == ' ') break;
 2928              		.loc 1 1907 0
 2929 003a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2930 003c 202B     		cmp	r3, #32
 2931 003e 14D0     		beq	.L209
 2932              	.L201:
1908:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (c == NDDE) c = (TCHAR)DDE;
 2933              		.loc 1 1908 0
 2934 0040 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2935 0042 052B     		cmp	r3, #5
 2936 0044 02D1     		bne	.L203
 2937              		.loc 1 1908 0 is_stmt 0 discriminator 1
 2938 0046 4FF0E503 		mov	r3, #229
 2939 004a FB75     		strb	r3, [r7, #23]
 2940              	.L203:
1909:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (_USE_LFN && (nt & NS_BODY) && IsUpper(c)) c += 0x20;
1910:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _LFN_UNICODE
1911:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (IsDBCS1(c) && i < 7 && IsDBCS2(dir[i+1]))
1912:../Dave/Generated/src/FATFS002/Src/ff.c **** 				c = (c << 8) | dir[++i];
1913:../Dave/Generated/src/FATFS002/Src/ff.c **** 			c = ff_convert(c, 1);
1914:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (!c) c = '?';
1915:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
1916:../Dave/Generated/src/FATFS002/Src/ff.c **** 			*p++ = c;
 2941              		.loc 1 1916 0 is_stmt 1
 2942 004c BB69     		ldr	r3, [r7, #24]
 2943 004e FA7D     		ldrb	r2, [r7, #23]
 2944 0050 1A70     		strb	r2, [r3, #0]
 2945 0052 BB69     		ldr	r3, [r7, #24]
 2946 0054 03F10103 		add	r3, r3, #1
 2947 0058 BB61     		str	r3, [r7, #24]
1905:../Dave/Generated/src/FATFS002/Src/ff.c **** 		for (i = 0; i < 8; i++) {	/* Copy name body */
 2948              		.loc 1 1905 0
 2949 005a FB69     		ldr	r3, [r7, #28]
 2950 005c 03F10103 		add	r3, r3, #1
 2951 0060 FB61     		str	r3, [r7, #28]
 2952              	.L200:
1905:../Dave/Generated/src/FATFS002/Src/ff.c **** 		for (i = 0; i < 8; i++) {	/* Copy name body */
 2953              		.loc 1 1905 0 is_stmt 0 discriminator 1
 2954 0062 FB69     		ldr	r3, [r7, #28]
 2955 0064 072B     		cmp	r3, #7
 2956 0066 E3D9     		bls	.L204
 2957 0068 00E0     		b	.L202
 2958              	.L209:
1907:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (c == ' ') break;
 2959              		.loc 1 1907 0 is_stmt 1
 2960 006a 00BF     		nop
 2961              	.L202:
1917:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
1918:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (dir[8] != ' ') {		/* Copy name extension */
 2962              		.loc 1 1918 0
 2963 006c 3B69     		ldr	r3, [r7, #16]
 2964 006e 03F10803 		add	r3, r3, #8
 2965 0072 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2966 0074 202B     		cmp	r3, #32
 2967 0076 23D0     		beq	.L205
1919:../Dave/Generated/src/FATFS002/Src/ff.c **** 			*p++ = '.';
 2968              		.loc 1 1919 0
 2969 0078 BB69     		ldr	r3, [r7, #24]
 2970 007a 4FF02E02 		mov	r2, #46
 2971 007e 1A70     		strb	r2, [r3, #0]
 2972 0080 BB69     		ldr	r3, [r7, #24]
 2973 0082 03F10103 		add	r3, r3, #1
 2974 0086 BB61     		str	r3, [r7, #24]
1920:../Dave/Generated/src/FATFS002/Src/ff.c **** 			for (i = 8; i < 11; i++) {
 2975              		.loc 1 1920 0
 2976 0088 4FF00803 		mov	r3, #8
 2977 008c FB61     		str	r3, [r7, #28]
 2978 008e 12E0     		b	.L206
 2979              	.L208:
1921:../Dave/Generated/src/FATFS002/Src/ff.c **** 				c = dir[i];
 2980              		.loc 1 1921 0
 2981 0090 3A69     		ldr	r2, [r7, #16]
 2982 0092 FB69     		ldr	r3, [r7, #28]
 2983 0094 D318     		adds	r3, r2, r3
 2984 0096 1B78     		ldrb	r3, [r3, #0]
 2985 0098 FB75     		strb	r3, [r7, #23]
1922:../Dave/Generated/src/FATFS002/Src/ff.c **** 				if (c == ' ') break;
 2986              		.loc 1 1922 0
 2987 009a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2988 009c 202B     		cmp	r3, #32
 2989 009e 0ED0     		beq	.L210
 2990              	.L207:
1923:../Dave/Generated/src/FATFS002/Src/ff.c **** 				if (_USE_LFN && (nt & NS_EXT) && IsUpper(c)) c += 0x20;
1924:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _LFN_UNICODE
1925:../Dave/Generated/src/FATFS002/Src/ff.c **** 				if (IsDBCS1(c) && i < 10 && IsDBCS2(dir[i+1]))
1926:../Dave/Generated/src/FATFS002/Src/ff.c **** 					c = (c << 8) | dir[++i];
1927:../Dave/Generated/src/FATFS002/Src/ff.c **** 				c = ff_convert(c, 1);
1928:../Dave/Generated/src/FATFS002/Src/ff.c **** 				if (!c) c = '?';
1929:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
1930:../Dave/Generated/src/FATFS002/Src/ff.c **** 				*p++ = c;
 2991              		.loc 1 1930 0
 2992 00a0 BB69     		ldr	r3, [r7, #24]
 2993 00a2 FA7D     		ldrb	r2, [r7, #23]
 2994 00a4 1A70     		strb	r2, [r3, #0]
 2995 00a6 BB69     		ldr	r3, [r7, #24]
 2996 00a8 03F10103 		add	r3, r3, #1
 2997 00ac BB61     		str	r3, [r7, #24]
1920:../Dave/Generated/src/FATFS002/Src/ff.c **** 			for (i = 8; i < 11; i++) {
 2998              		.loc 1 1920 0
 2999 00ae FB69     		ldr	r3, [r7, #28]
 3000 00b0 03F10103 		add	r3, r3, #1
 3001 00b4 FB61     		str	r3, [r7, #28]
 3002              	.L206:
1920:../Dave/Generated/src/FATFS002/Src/ff.c **** 			for (i = 8; i < 11; i++) {
 3003              		.loc 1 1920 0 is_stmt 0 discriminator 1
 3004 00b6 FB69     		ldr	r3, [r7, #28]
 3005 00b8 0A2B     		cmp	r3, #10
 3006 00ba E9D9     		bls	.L208
 3007 00bc 00E0     		b	.L205
 3008              	.L210:
1922:../Dave/Generated/src/FATFS002/Src/ff.c **** 				if (c == ' ') break;
 3009              		.loc 1 1922 0 is_stmt 1
 3010 00be 00BF     		nop
 3011              	.L205:
1931:../Dave/Generated/src/FATFS002/Src/ff.c **** 			}
1932:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
1933:../Dave/Generated/src/FATFS002/Src/ff.c **** 		fno->fattrib = dir[DIR_Attr];				/* Attribute */
 3012              		.loc 1 1933 0
 3013 00c0 3B69     		ldr	r3, [r7, #16]
 3014 00c2 DA7A     		ldrb	r2, [r3, #11]	@ zero_extendqisi2
 3015 00c4 3B68     		ldr	r3, [r7, #0]
 3016 00c6 1A72     		strb	r2, [r3, #8]
1934:../Dave/Generated/src/FATFS002/Src/ff.c **** 		fno->fsize = LD_DWORD(dir+DIR_FileSize);	/* Size */
 3017              		.loc 1 1934 0
 3018 00c8 3B69     		ldr	r3, [r7, #16]
 3019 00ca 03F11F03 		add	r3, r3, #31
 3020 00ce 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3021 00d0 4FEA0362 		lsl	r2, r3, #24
 3022 00d4 3B69     		ldr	r3, [r7, #16]
 3023 00d6 03F11E03 		add	r3, r3, #30
 3024 00da 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3025 00dc 4FEA0343 		lsl	r3, r3, #16
 3026 00e0 1A43     		orrs	r2, r2, r3
 3027 00e2 3B69     		ldr	r3, [r7, #16]
 3028 00e4 03F11D03 		add	r3, r3, #29
 3029 00e8 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3030 00ea 4FEA0323 		lsl	r3, r3, #8
 3031 00ee 1A43     		orrs	r2, r2, r3
 3032 00f0 3B69     		ldr	r3, [r7, #16]
 3033 00f2 03F11C03 		add	r3, r3, #28
 3034 00f6 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3035 00f8 1A43     		orrs	r2, r2, r3
 3036 00fa 3B68     		ldr	r3, [r7, #0]
 3037 00fc 1A60     		str	r2, [r3, #0]
1935:../Dave/Generated/src/FATFS002/Src/ff.c **** 		fno->fdate = LD_WORD(dir+DIR_WrtDate);		/* Date */
 3038              		.loc 1 1935 0
 3039 00fe 3B69     		ldr	r3, [r7, #16]
 3040 0100 03F11903 		add	r3, r3, #25
 3041 0104 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3042 0106 4FEA0323 		lsl	r3, r3, #8
 3043 010a 9AB2     		uxth	r2, r3
 3044 010c 3B69     		ldr	r3, [r7, #16]
 3045 010e 03F11803 		add	r3, r3, #24
 3046 0112 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3047 0114 1343     		orrs	r3, r3, r2
 3048 0116 9BB2     		uxth	r3, r3
 3049 0118 9AB2     		uxth	r2, r3
 3050 011a 3B68     		ldr	r3, [r7, #0]
 3051 011c 9A80     		strh	r2, [r3, #4]	@ movhi
1936:../Dave/Generated/src/FATFS002/Src/ff.c **** 		fno->ftime = LD_WORD(dir+DIR_WrtTime);		/* Time */
 3052              		.loc 1 1936 0
 3053 011e 3B69     		ldr	r3, [r7, #16]
 3054 0120 03F11703 		add	r3, r3, #23
 3055 0124 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3056 0126 4FEA0323 		lsl	r3, r3, #8
 3057 012a 9AB2     		uxth	r2, r3
 3058 012c 3B69     		ldr	r3, [r7, #16]
 3059 012e 03F11603 		add	r3, r3, #22
 3060 0132 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3061 0134 1343     		orrs	r3, r3, r2
 3062 0136 9BB2     		uxth	r3, r3
 3063 0138 9AB2     		uxth	r2, r3
 3064 013a 3B68     		ldr	r3, [r7, #0]
 3065 013c DA80     		strh	r2, [r3, #6]	@ movhi
 3066              	.L199:
1937:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
1938:../Dave/Generated/src/FATFS002/Src/ff.c **** 	*p = 0;		/* Terminate SFN str by a \0 */
 3067              		.loc 1 1938 0
 3068 013e BB69     		ldr	r3, [r7, #24]
 3069 0140 4FF00002 		mov	r2, #0
 3070 0144 1A70     		strb	r2, [r3, #0]
1939:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1940:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _USE_LFN
1941:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (fno->lfname && fno->lfsize) {
1942:../Dave/Generated/src/FATFS002/Src/ff.c **** 		TCHAR *tp = fno->lfname;
1943:../Dave/Generated/src/FATFS002/Src/ff.c **** 		WCHAR w, *lfn;
1944:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1945:../Dave/Generated/src/FATFS002/Src/ff.c **** 		i = 0;
1946:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (dj->sect && dj->lfn_idx != 0xFFFF) {/* Get LFN if available */
1947:../Dave/Generated/src/FATFS002/Src/ff.c **** 			lfn = dj->lfn;
1948:../Dave/Generated/src/FATFS002/Src/ff.c **** 			while ((w = *lfn++) != 0) {			/* Get an LFN char */
1949:../Dave/Generated/src/FATFS002/Src/ff.c **** #if !_LFN_UNICODE
1950:../Dave/Generated/src/FATFS002/Src/ff.c **** 				w = ff_convert(w, 0);			/* Unicode -> OEM conversion */
1951:../Dave/Generated/src/FATFS002/Src/ff.c **** 				if (!w) { i = 0; break; }		/* Could not convert, no LFN */
1952:../Dave/Generated/src/FATFS002/Src/ff.c **** 				if (_DF1S && w >= 0x100)		/* Put 1st byte if it is a DBC (always false on SBCS cfg) */
1953:../Dave/Generated/src/FATFS002/Src/ff.c **** 					tp[i++] = (TCHAR)(w >> 8);
1954:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
1955:../Dave/Generated/src/FATFS002/Src/ff.c **** 				if (i >= fno->lfsize - 1) { i = 0; break; }	/* Buffer overflow, no LFN */
1956:../Dave/Generated/src/FATFS002/Src/ff.c **** 				tp[i++] = (TCHAR)w;
1957:../Dave/Generated/src/FATFS002/Src/ff.c **** 			}
1958:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
1959:../Dave/Generated/src/FATFS002/Src/ff.c **** 		tp[i] = 0;	/* Terminate the LFN str by a \0 */
1960:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
1961:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
1962:../Dave/Generated/src/FATFS002/Src/ff.c **** }
 3071              		.loc 1 1962 0
 3072 0146 07F12407 		add	r7, r7, #36
 3073 014a BD46     		mov	sp, r7
 3074 014c 80BC     		pop	{r7}
 3075 014e 7047     		bx	lr
 3076              		.cfi_endproc
 3077              	.LFE18:
 3079              		.section	.text.follow_path,"ax",%progbits
 3080              		.align	2
 3081              		.thumb
 3082              		.thumb_func
 3084              	follow_path:
 3085              	.LFB19:
1963:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif /* _FS_MINIMIZE <= 1 */
1964:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1965:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1966:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1967:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1968:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
1969:../Dave/Generated/src/FATFS002/Src/ff.c **** /* Follow a file path                                                    */
1970:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
1971:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1972:../Dave/Generated/src/FATFS002/Src/ff.c **** static
1973:../Dave/Generated/src/FATFS002/Src/ff.c **** FRESULT follow_path (	/* FR_OK(0): successful, !=0: error code */
1974:../Dave/Generated/src/FATFS002/Src/ff.c **** 	DIR *dj,			/* Directory object to return last directory and found object */
1975:../Dave/Generated/src/FATFS002/Src/ff.c **** 	const TCHAR *path	/* Full-path string to find a file or directory */
1976:../Dave/Generated/src/FATFS002/Src/ff.c **** )
1977:../Dave/Generated/src/FATFS002/Src/ff.c **** {
 3086              		.loc 1 1977 0
 3087              		.cfi_startproc
 3088              		@ args = 0, pretend = 0, frame = 16
 3089              		@ frame_needed = 1, uses_anonymous_args = 0
 3090 0000 80B5     		push	{r7, lr}
 3091              	.LCFI57:
 3092              		.cfi_def_cfa_offset 8
 3093              		.cfi_offset 7, -8
 3094              		.cfi_offset 14, -4
 3095 0002 84B0     		sub	sp, sp, #16
 3096              	.LCFI58:
 3097              		.cfi_def_cfa_offset 24
 3098 0004 00AF     		add	r7, sp, #0
 3099              	.LCFI59:
 3100              		.cfi_def_cfa_register 7
 3101 0006 7860     		str	r0, [r7, #4]
 3102 0008 3960     		str	r1, [r7, #0]
1978:../Dave/Generated/src/FATFS002/Src/ff.c **** 	FRESULT res;
1979:../Dave/Generated/src/FATFS002/Src/ff.c **** 	BYTE *dir, ns;
1980:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1981:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1982:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _FS_RPATH
1983:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (*path == '/' || *path == '\\') { /* There is a heading separator */
 3103              		.loc 1 1983 0
 3104 000a 3B68     		ldr	r3, [r7, #0]
 3105 000c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3106 000e 2F2B     		cmp	r3, #47
 3107 0010 03D0     		beq	.L212
 3108              		.loc 1 1983 0 is_stmt 0 discriminator 1
 3109 0012 3B68     		ldr	r3, [r7, #0]
 3110 0014 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3111 0016 5C2B     		cmp	r3, #92
 3112 0018 08D1     		bne	.L213
 3113              	.L212:
1984:../Dave/Generated/src/FATFS002/Src/ff.c **** 		path++;	dj->sclust = 0;		/* Strip it and start from the root dir */
 3114              		.loc 1 1984 0 is_stmt 1
 3115 001a 3B68     		ldr	r3, [r7, #0]
 3116 001c 03F10103 		add	r3, r3, #1
 3117 0020 3B60     		str	r3, [r7, #0]
 3118 0022 7B68     		ldr	r3, [r7, #4]
 3119 0024 4FF00002 		mov	r2, #0
 3120 0028 9A60     		str	r2, [r3, #8]
 3121 002a 04E0     		b	.L214
 3122              	.L213:
1985:../Dave/Generated/src/FATFS002/Src/ff.c **** 	} else {							/* No heading separator */
1986:../Dave/Generated/src/FATFS002/Src/ff.c **** 		dj->sclust = dj->fs->cdir;	/* Start from the current dir */
 3123              		.loc 1 1986 0
 3124 002c 7B68     		ldr	r3, [r7, #4]
 3125 002e 1B68     		ldr	r3, [r3, #0]
 3126 0030 9A69     		ldr	r2, [r3, #24]
 3127 0032 7B68     		ldr	r3, [r7, #4]
 3128 0034 9A60     		str	r2, [r3, #8]
 3129              	.L214:
1987:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
1988:../Dave/Generated/src/FATFS002/Src/ff.c **** #else
1989:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (*path == '/' || *path == '\\')	/* Strip heading separator if exist */
1990:../Dave/Generated/src/FATFS002/Src/ff.c **** 		path++;
1991:../Dave/Generated/src/FATFS002/Src/ff.c **** 	dj->sclust = 0;						/* Start from the root dir */
1992:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
1993:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1994:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if ((UINT)*path < ' ') {			/* Nul path means the start directory itself */
 3130              		.loc 1 1994 0
 3131 0036 3B68     		ldr	r3, [r7, #0]
 3132 0038 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3133 003a 1F2B     		cmp	r3, #31
 3134 003c 0BD8     		bhi	.L215
1995:../Dave/Generated/src/FATFS002/Src/ff.c **** 		res = dir_sdi(dj, 0);
 3135              		.loc 1 1995 0
 3136 003e 7868     		ldr	r0, [r7, #4]
 3137 0040 4FF00001 		mov	r1, #0
 3138 0044 FFF7FEFF 		bl	dir_sdi
 3139 0048 0346     		mov	r3, r0
 3140 004a FB73     		strb	r3, [r7, #15]
1996:../Dave/Generated/src/FATFS002/Src/ff.c **** 		dj->dir = 0;
 3141              		.loc 1 1996 0
 3142 004c 7B68     		ldr	r3, [r7, #4]
 3143 004e 4FF00002 		mov	r2, #0
 3144 0052 5A61     		str	r2, [r3, #20]
 3145 0054 75E0     		b	.L216
 3146              	.L215:
1997:../Dave/Generated/src/FATFS002/Src/ff.c **** 
1998:../Dave/Generated/src/FATFS002/Src/ff.c **** 	} else {							/* Follow path */
1999:../Dave/Generated/src/FATFS002/Src/ff.c **** 		for (;;) {
2000:../Dave/Generated/src/FATFS002/Src/ff.c **** 			res = create_name(dj, &path);	/* Get a segment */
 3147              		.loc 1 2000 0
 3148 0056 3B46     		mov	r3, r7
 3149 0058 7868     		ldr	r0, [r7, #4]
 3150 005a 1946     		mov	r1, r3
 3151 005c FFF7FEFF 		bl	create_name
 3152 0060 0346     		mov	r3, r0
 3153 0062 FB73     		strb	r3, [r7, #15]
2001:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (res != FR_OK) break;
 3154              		.loc 1 2001 0
 3155 0064 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3156 0066 002B     		cmp	r3, #0
 3157 0068 64D1     		bne	.L227
 3158              	.L217:
2002:../Dave/Generated/src/FATFS002/Src/ff.c **** 			res = dir_find(dj);				/* Find it */
 3159              		.loc 1 2002 0
 3160 006a 7868     		ldr	r0, [r7, #4]
 3161 006c FFF7FEFF 		bl	dir_find
 3162 0070 0346     		mov	r3, r0
 3163 0072 FB73     		strb	r3, [r7, #15]
2003:../Dave/Generated/src/FATFS002/Src/ff.c **** 			ns = *(dj->fn+NS);
 3164              		.loc 1 2003 0
 3165 0074 7B68     		ldr	r3, [r7, #4]
 3166 0076 9B69     		ldr	r3, [r3, #24]
 3167 0078 DB7A     		ldrb	r3, [r3, #11]
 3168 007a BB73     		strb	r3, [r7, #14]
2004:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (res != FR_OK) {				/* Failed to find the object */
 3169              		.loc 1 2004 0
 3170 007c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3171 007e 002B     		cmp	r3, #0
 3172 0080 21D0     		beq	.L218
2005:../Dave/Generated/src/FATFS002/Src/ff.c **** 				if (res != FR_NO_FILE) break;	/* Abort if any hard error occured */
 3173              		.loc 1 2005 0
 3174 0082 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3175 0084 042B     		cmp	r3, #4
 3176 0086 57D1     		bne	.L228
 3177              	.L219:
2006:../Dave/Generated/src/FATFS002/Src/ff.c **** 				/* Object not found */
2007:../Dave/Generated/src/FATFS002/Src/ff.c **** 				if (_FS_RPATH && (ns & NS_DOT)) {	/* If dot entry is not exit */
 3178              		.loc 1 2007 0
 3179 0088 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3180 008a 03F02003 		and	r3, r3, #32
 3181 008e 002B     		cmp	r3, #0
 3182 0090 10D0     		beq	.L220
2008:../Dave/Generated/src/FATFS002/Src/ff.c **** 					dj->sclust = 0; dj->dir = 0;	/* It is the root dir */
 3183              		.loc 1 2008 0
 3184 0092 7B68     		ldr	r3, [r7, #4]
 3185 0094 4FF00002 		mov	r2, #0
 3186 0098 9A60     		str	r2, [r3, #8]
 3187 009a 7B68     		ldr	r3, [r7, #4]
 3188 009c 4FF00002 		mov	r2, #0
 3189 00a0 5A61     		str	r2, [r3, #20]
2009:../Dave/Generated/src/FATFS002/Src/ff.c **** 					res = FR_OK;
 3190              		.loc 1 2009 0
 3191 00a2 4FF00003 		mov	r3, #0
 3192 00a6 FB73     		strb	r3, [r7, #15]
2010:../Dave/Generated/src/FATFS002/Src/ff.c **** 					if (!(ns & NS_LAST)) continue;
 3193              		.loc 1 2010 0
 3194 00a8 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3195 00aa 03F00403 		and	r3, r3, #4
 3196 00ae 002B     		cmp	r3, #0
 3197 00b0 44D1     		bne	.L229
 3198 00b2 3EE0     		b	.L226
 3199              	.L220:
2011:../Dave/Generated/src/FATFS002/Src/ff.c **** 				} else {							/* Could not find the object */
2012:../Dave/Generated/src/FATFS002/Src/ff.c **** 					if (!(ns & NS_LAST)) res = FR_NO_PATH;
 3200              		.loc 1 2012 0
 3201 00b4 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3202 00b6 03F00403 		and	r3, r3, #4
 3203 00ba 002B     		cmp	r3, #0
 3204 00bc 3ED1     		bne	.L229
 3205              		.loc 1 2012 0 is_stmt 0 discriminator 1
 3206 00be 4FF00503 		mov	r3, #5
 3207 00c2 FB73     		strb	r3, [r7, #15]
2013:../Dave/Generated/src/FATFS002/Src/ff.c **** 				}
2014:../Dave/Generated/src/FATFS002/Src/ff.c **** 				break;
 3208              		.loc 1 2014 0 is_stmt 1 discriminator 1
 3209 00c4 3AE0     		b	.L229
 3210              	.L218:
2015:../Dave/Generated/src/FATFS002/Src/ff.c **** 			}
2016:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (ns & NS_LAST) break;			/* Last segment match. Function completed. */
 3211              		.loc 1 2016 0
 3212 00c6 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3213 00c8 03F00403 		and	r3, r3, #4
 3214 00cc 002B     		cmp	r3, #0
 3215 00ce 37D1     		bne	.L230
 3216              	.L223:
2017:../Dave/Generated/src/FATFS002/Src/ff.c **** 			dir = dj->dir;						/* There is next segment. Follow the sub directory */
 3217              		.loc 1 2017 0
 3218 00d0 7B68     		ldr	r3, [r7, #4]
 3219 00d2 5B69     		ldr	r3, [r3, #20]
 3220 00d4 BB60     		str	r3, [r7, #8]
2018:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (!(dir[DIR_Attr] & AM_DIR)) {	/* Cannot follow because it is a file */
 3221              		.loc 1 2018 0
 3222 00d6 BB68     		ldr	r3, [r7, #8]
 3223 00d8 03F10B03 		add	r3, r3, #11
 3224 00dc 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3225 00de 03F01003 		and	r3, r3, #16
 3226 00e2 002B     		cmp	r3, #0
 3227 00e4 03D1     		bne	.L224
2019:../Dave/Generated/src/FATFS002/Src/ff.c **** 				res = FR_NO_PATH; break;
 3228              		.loc 1 2019 0
 3229 00e6 4FF00503 		mov	r3, #5
 3230 00ea FB73     		strb	r3, [r7, #15]
 3231 00ec 29E0     		b	.L216
 3232              	.L224:
2020:../Dave/Generated/src/FATFS002/Src/ff.c **** 			}
2021:../Dave/Generated/src/FATFS002/Src/ff.c **** 			dj->sclust = LD_CLUST(dir);
 3233              		.loc 1 2021 0
 3234 00ee BB68     		ldr	r3, [r7, #8]
 3235 00f0 03F11503 		add	r3, r3, #21
 3236 00f4 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3237 00f6 4FEA0323 		lsl	r3, r3, #8
 3238 00fa 9AB2     		uxth	r2, r3
 3239 00fc BB68     		ldr	r3, [r7, #8]
 3240 00fe 03F11403 		add	r3, r3, #20
 3241 0102 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3242 0104 1343     		orrs	r3, r3, r2
 3243 0106 9BB2     		uxth	r3, r3
 3244 0108 9BB2     		uxth	r3, r3
 3245 010a 4FEA0342 		lsl	r2, r3, #16
 3246 010e BB68     		ldr	r3, [r7, #8]
 3247 0110 03F11B03 		add	r3, r3, #27
 3248 0114 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3249 0116 4FEA0323 		lsl	r3, r3, #8
 3250 011a 99B2     		uxth	r1, r3
 3251 011c BB68     		ldr	r3, [r7, #8]
 3252 011e 03F11A03 		add	r3, r3, #26
 3253 0122 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3254 0124 0B43     		orrs	r3, r3, r1
 3255 0126 9BB2     		uxth	r3, r3
 3256 0128 9BB2     		uxth	r3, r3
 3257 012a 1A43     		orrs	r2, r2, r3
 3258 012c 7B68     		ldr	r3, [r7, #4]
 3259 012e 9A60     		str	r2, [r3, #8]
2022:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
 3260              		.loc 1 2022 0
 3261 0130 91E7     		b	.L215
 3262              	.L226:
 3263 0132 90E7     		b	.L215
 3264              	.L227:
2001:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (res != FR_OK) break;
 3265              		.loc 1 2001 0
 3266 0134 00BF     		nop
 3267 0136 04E0     		b	.L216
 3268              	.L228:
2005:../Dave/Generated/src/FATFS002/Src/ff.c **** 				if (res != FR_NO_FILE) break;	/* Abort if any hard error occured */
 3269              		.loc 1 2005 0
 3270 0138 00BF     		nop
 3271 013a 02E0     		b	.L216
 3272              	.L229:
2014:../Dave/Generated/src/FATFS002/Src/ff.c **** 				break;
 3273              		.loc 1 2014 0
 3274 013c 00BF     		nop
 3275 013e 00E0     		b	.L216
 3276              	.L230:
2016:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (ns & NS_LAST) break;			/* Last segment match. Function completed. */
 3277              		.loc 1 2016 0
 3278 0140 00BF     		nop
 3279              	.L216:
2023:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
2024:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2025:../Dave/Generated/src/FATFS002/Src/ff.c **** 	return res;
 3280              		.loc 1 2025 0
 3281 0142 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
2026:../Dave/Generated/src/FATFS002/Src/ff.c **** }
 3282              		.loc 1 2026 0
 3283 0144 1846     		mov	r0, r3
 3284 0146 07F11007 		add	r7, r7, #16
 3285 014a BD46     		mov	sp, r7
 3286 014c 80BD     		pop	{r7, pc}
 3287              		.cfi_endproc
 3288              	.LFE19:
 3290 014e 00BF     		.section	.text.check_fs,"ax",%progbits
 3291              		.align	2
 3292              		.thumb
 3293              		.thumb_func
 3295              	check_fs:
 3296              	.LFB20:
2027:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2028:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2029:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2030:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2031:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
2032:../Dave/Generated/src/FATFS002/Src/ff.c **** /* Load a sector and check if it is an FAT Volume Boot Record            */
2033:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
2034:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2035:../Dave/Generated/src/FATFS002/Src/ff.c **** static
2036:../Dave/Generated/src/FATFS002/Src/ff.c **** BYTE check_fs (	/* 0:FAT-VBR, 1:Valid BR but not FAT, 2:Not a BR, 3:Disk error */
2037:../Dave/Generated/src/FATFS002/Src/ff.c **** 	FATFS *fs,	/* File system object */
2038:../Dave/Generated/src/FATFS002/Src/ff.c **** 	DWORD sect	/* Sector# (lba) to check if it is an FAT boot record or not */
2039:../Dave/Generated/src/FATFS002/Src/ff.c **** )
2040:../Dave/Generated/src/FATFS002/Src/ff.c **** {
 3297              		.loc 1 2040 0
 3298              		.cfi_startproc
 3299              		@ args = 0, pretend = 0, frame = 8
 3300              		@ frame_needed = 1, uses_anonymous_args = 0
 3301 0000 80B5     		push	{r7, lr}
 3302              	.LCFI60:
 3303              		.cfi_def_cfa_offset 8
 3304              		.cfi_offset 7, -8
 3305              		.cfi_offset 14, -4
 3306 0002 82B0     		sub	sp, sp, #8
 3307              	.LCFI61:
 3308              		.cfi_def_cfa_offset 16
 3309 0004 00AF     		add	r7, sp, #0
 3310              	.LCFI62:
 3311              		.cfi_def_cfa_register 7
 3312 0006 7860     		str	r0, [r7, #4]
 3313 0008 3960     		str	r1, [r7, #0]
2041:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (disk_read(fs->drv, fs->win, sect, 1) != RES_OK)	/* Load boot record */
 3314              		.loc 1 2041 0
 3315 000a 7B68     		ldr	r3, [r7, #4]
 3316 000c 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 3317 000e 7B68     		ldr	r3, [r7, #4]
 3318 0010 03F13403 		add	r3, r3, #52
 3319 0014 1046     		mov	r0, r2
 3320 0016 1946     		mov	r1, r3
 3321 0018 3A68     		ldr	r2, [r7, #0]
 3322 001a 4FF00103 		mov	r3, #1
 3323 001e FFF7FEFF 		bl	disk_read
 3324 0022 0346     		mov	r3, r0
 3325 0024 002B     		cmp	r3, #0
 3326 0026 02D0     		beq	.L232
2042:../Dave/Generated/src/FATFS002/Src/ff.c **** 		return 3;
 3327              		.loc 1 2042 0
 3328 0028 4FF00303 		mov	r3, #3
 3329 002c 56E0     		b	.L233
 3330              	.L232:
2043:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (LD_WORD(&fs->win[BS_55AA]) != 0xAA55)		/* Check record signature (always placed at offset 510 
 3331              		.loc 1 2043 0
 3332 002e 7B68     		ldr	r3, [r7, #4]
 3333 0030 93F83332 		ldrb	r3, [r3, #563]	@ zero_extendqisi2
 3334 0034 4FEA0323 		lsl	r3, r3, #8
 3335 0038 9AB2     		uxth	r2, r3
 3336 003a 7B68     		ldr	r3, [r7, #4]
 3337 003c 93F83232 		ldrb	r3, [r3, #562]	@ zero_extendqisi2
 3338 0040 1343     		orrs	r3, r3, r2
 3339 0042 9BB2     		uxth	r3, r3
 3340 0044 1AB2     		sxth	r2, r3
 3341 0046 4AF65523 		movw	r3, #43605
 3342 004a CFF6FF73 		movt	r3, 65535
 3343 004e 9A42     		cmp	r2, r3
 3344 0050 02D0     		beq	.L234
2044:../Dave/Generated/src/FATFS002/Src/ff.c **** 		return 2;
 3345              		.loc 1 2044 0
 3346 0052 4FF00203 		mov	r3, #2
 3347 0056 41E0     		b	.L233
 3348              	.L234:
2045:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2046:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if ((LD_DWORD(&fs->win[BS_FilSysType]) & 0xFFFFFF) == 0x544146)	/* Check "FAT" string */
 3349              		.loc 1 2046 0
 3350 0058 7B68     		ldr	r3, [r7, #4]
 3351 005a 93F86D30 		ldrb	r3, [r3, #109]	@ zero_extendqisi2
 3352 005e 4FEA0362 		lsl	r2, r3, #24
 3353 0062 7B68     		ldr	r3, [r7, #4]
 3354 0064 93F86C30 		ldrb	r3, [r3, #108]	@ zero_extendqisi2
 3355 0068 4FEA0343 		lsl	r3, r3, #16
 3356 006c 1A43     		orrs	r2, r2, r3
 3357 006e 7B68     		ldr	r3, [r7, #4]
 3358 0070 93F86B30 		ldrb	r3, [r3, #107]	@ zero_extendqisi2
 3359 0074 4FEA0323 		lsl	r3, r3, #8
 3360 0078 1A43     		orrs	r2, r2, r3
 3361 007a 7B68     		ldr	r3, [r7, #4]
 3362 007c 93F86A30 		ldrb	r3, [r3, #106]	@ zero_extendqisi2
 3363 0080 1343     		orrs	r3, r3, r2
 3364 0082 23F07F42 		bic	r2, r3, #-16777216
 3365 0086 44F24613 		movw	r3, #16710
 3366 008a C0F25403 		movt	r3, 84
 3367 008e 9A42     		cmp	r2, r3
 3368 0090 02D1     		bne	.L235
2047:../Dave/Generated/src/FATFS002/Src/ff.c **** 		return 0;
 3369              		.loc 1 2047 0
 3370 0092 4FF00003 		mov	r3, #0
 3371 0096 21E0     		b	.L233
 3372              	.L235:
2048:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if ((LD_DWORD(&fs->win[BS_FilSysType32]) & 0xFFFFFF) == 0x544146)
 3373              		.loc 1 2048 0
 3374 0098 7B68     		ldr	r3, [r7, #4]
 3375 009a 93F88930 		ldrb	r3, [r3, #137]	@ zero_extendqisi2
 3376 009e 4FEA0362 		lsl	r2, r3, #24
 3377 00a2 7B68     		ldr	r3, [r7, #4]
 3378 00a4 93F88830 		ldrb	r3, [r3, #136]	@ zero_extendqisi2
 3379 00a8 4FEA0343 		lsl	r3, r3, #16
 3380 00ac 1A43     		orrs	r2, r2, r3
 3381 00ae 7B68     		ldr	r3, [r7, #4]
 3382 00b0 93F88730 		ldrb	r3, [r3, #135]	@ zero_extendqisi2
 3383 00b4 4FEA0323 		lsl	r3, r3, #8
 3384 00b8 1A43     		orrs	r2, r2, r3
 3385 00ba 7B68     		ldr	r3, [r7, #4]
 3386 00bc 93F88630 		ldrb	r3, [r3, #134]	@ zero_extendqisi2
 3387 00c0 1343     		orrs	r3, r3, r2
 3388 00c2 23F07F42 		bic	r2, r3, #-16777216
 3389 00c6 44F24613 		movw	r3, #16710
 3390 00ca C0F25403 		movt	r3, 84
 3391 00ce 9A42     		cmp	r2, r3
 3392 00d0 02D1     		bne	.L236
2049:../Dave/Generated/src/FATFS002/Src/ff.c **** 		return 0;
 3393              		.loc 1 2049 0
 3394 00d2 4FF00003 		mov	r3, #0
 3395 00d6 01E0     		b	.L233
 3396              	.L236:
2050:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2051:../Dave/Generated/src/FATFS002/Src/ff.c **** 	return 1;
 3397              		.loc 1 2051 0
 3398 00d8 4FF00103 		mov	r3, #1
 3399              	.L233:
2052:../Dave/Generated/src/FATFS002/Src/ff.c **** }
 3400              		.loc 1 2052 0
 3401 00dc 1846     		mov	r0, r3
 3402 00de 07F10807 		add	r7, r7, #8
 3403 00e2 BD46     		mov	sp, r7
 3404 00e4 80BD     		pop	{r7, pc}
 3405              		.cfi_endproc
 3406              	.LFE20:
 3408 00e6 00BF     		.section	.text.chk_mounted,"ax",%progbits
 3409              		.align	2
 3410              		.thumb
 3411              		.thumb_func
 3413              	chk_mounted:
 3414              	.LFB21:
2053:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2054:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2055:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2056:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2057:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
2058:../Dave/Generated/src/FATFS002/Src/ff.c **** /* Check if the file system object is valid or not                       */
2059:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
2060:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2061:../Dave/Generated/src/FATFS002/Src/ff.c **** static
2062:../Dave/Generated/src/FATFS002/Src/ff.c **** FRESULT chk_mounted (	/* FR_OK(0): successful, !=0: any error occurred */
2063:../Dave/Generated/src/FATFS002/Src/ff.c **** 	const TCHAR **path,	/* Pointer to pointer to the path name (drive number) */
2064:../Dave/Generated/src/FATFS002/Src/ff.c **** 	FATFS **rfs,		/* Pointer to pointer to the found file system object */
2065:../Dave/Generated/src/FATFS002/Src/ff.c **** 	BYTE chk_wp			/* !=0: Check media write protection for write access */
2066:../Dave/Generated/src/FATFS002/Src/ff.c **** )
2067:../Dave/Generated/src/FATFS002/Src/ff.c **** {
 3415              		.loc 1 2067 0
 3416              		.cfi_startproc
 3417              		@ args = 0, pretend = 0, frame = 72
 3418              		@ frame_needed = 1, uses_anonymous_args = 0
 3419 0000 80B5     		push	{r7, lr}
 3420              	.LCFI63:
 3421              		.cfi_def_cfa_offset 8
 3422              		.cfi_offset 7, -8
 3423              		.cfi_offset 14, -4
 3424 0002 92B0     		sub	sp, sp, #72
 3425              	.LCFI64:
 3426              		.cfi_def_cfa_offset 80
 3427 0004 00AF     		add	r7, sp, #0
 3428              	.LCFI65:
 3429              		.cfi_def_cfa_register 7
 3430 0006 F860     		str	r0, [r7, #12]
 3431 0008 B960     		str	r1, [r7, #8]
 3432 000a 1346     		mov	r3, r2
 3433 000c FB71     		strb	r3, [r7, #7]
2068:../Dave/Generated/src/FATFS002/Src/ff.c **** 	BYTE fmt, b, pi, *tbl;
2069:../Dave/Generated/src/FATFS002/Src/ff.c **** 	UINT vol;
2070:../Dave/Generated/src/FATFS002/Src/ff.c **** 	DSTATUS stat;
2071:../Dave/Generated/src/FATFS002/Src/ff.c **** 	DWORD bsect, fasize, tsect, sysect, nclst, szbfat;
2072:../Dave/Generated/src/FATFS002/Src/ff.c **** 	WORD nrsv;
2073:../Dave/Generated/src/FATFS002/Src/ff.c **** 	const TCHAR *p = *path;
 3434              		.loc 1 2073 0
 3435 000e FB68     		ldr	r3, [r7, #12]
 3436 0010 1B68     		ldr	r3, [r3, #0]
 3437 0012 FB62     		str	r3, [r7, #44]
2074:../Dave/Generated/src/FATFS002/Src/ff.c **** 	FATFS *fs;
2075:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2076:../Dave/Generated/src/FATFS002/Src/ff.c **** 	/* Get logical drive number from the path name */
2077:../Dave/Generated/src/FATFS002/Src/ff.c **** 	vol = p[0] - '0';					/* Is there a drive number? */
 3438              		.loc 1 2077 0
 3439 0014 FB6A     		ldr	r3, [r7, #44]
 3440 0016 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3441 0018 A3F13003 		sub	r3, r3, #48
 3442 001c 3B64     		str	r3, [r7, #64]
2078:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (vol <= 9 && p[1] == ':') {		/* Found a drive number, get and strip it */
 3443              		.loc 1 2078 0
 3444 001e 3B6C     		ldr	r3, [r7, #64]
 3445 0020 092B     		cmp	r3, #9
 3446 0022 0DD8     		bhi	.L238
 3447              		.loc 1 2078 0 is_stmt 0 discriminator 1
 3448 0024 FB6A     		ldr	r3, [r7, #44]
 3449 0026 03F10103 		add	r3, r3, #1
 3450 002a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3451 002c 3A2B     		cmp	r3, #58
 3452 002e 07D1     		bne	.L238
2079:../Dave/Generated/src/FATFS002/Src/ff.c **** 		p += 2; *path = p;				/* Return pointer to the path name */
 3453              		.loc 1 2079 0 is_stmt 1
 3454 0030 FB6A     		ldr	r3, [r7, #44]
 3455 0032 03F10203 		add	r3, r3, #2
 3456 0036 FB62     		str	r3, [r7, #44]
 3457 0038 FB68     		ldr	r3, [r7, #12]
 3458 003a FA6A     		ldr	r2, [r7, #44]
 3459 003c 1A60     		str	r2, [r3, #0]
 3460 003e 05E0     		b	.L239
 3461              	.L238:
2080:../Dave/Generated/src/FATFS002/Src/ff.c **** 	} else {							/* No drive number is given */
2081:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _FS_RPATH
2082:../Dave/Generated/src/FATFS002/Src/ff.c **** 		vol = CurrVol;					/* Use current drive */
 3462              		.loc 1 2082 0
 3463 0040 40F20003 		movw	r3, #:lower16:CurrVol
 3464 0044 C0F20003 		movt	r3, #:upper16:CurrVol
 3465 0048 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3466 004a 3B64     		str	r3, [r7, #64]
 3467              	.L239:
2083:../Dave/Generated/src/FATFS002/Src/ff.c **** #else
2084:../Dave/Generated/src/FATFS002/Src/ff.c **** 		vol = 0;						/* Use drive 0 */
2085:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
2086:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
2087:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2088:../Dave/Generated/src/FATFS002/Src/ff.c **** 	/* Check if the file system object is valid or not */
2089:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (vol >= _VOLUMES) 				/* Is the drive number valid? */
 3468              		.loc 1 2089 0
 3469 004c 3B6C     		ldr	r3, [r7, #64]
 3470 004e 012B     		cmp	r3, #1
 3471 0050 02D9     		bls	.L240
2090:../Dave/Generated/src/FATFS002/Src/ff.c **** 		return FR_INVALID_DRIVE;
 3472              		.loc 1 2090 0
 3473 0052 4FF00B03 		mov	r3, #11
 3474 0056 D3E2     		b	.L241
 3475              	.L240:
2091:../Dave/Generated/src/FATFS002/Src/ff.c **** 	*rfs = fs = FatFs[vol];				/* Return pointer to the corresponding file system object */
 3476              		.loc 1 2091 0
 3477 0058 40F20003 		movw	r3, #:lower16:FatFs
 3478 005c C0F20003 		movt	r3, #:upper16:FatFs
 3479 0060 3A6C     		ldr	r2, [r7, #64]
 3480 0062 53F82230 		ldr	r3, [r3, r2, lsl #2]
 3481 0066 BB62     		str	r3, [r7, #40]
 3482 0068 BB68     		ldr	r3, [r7, #8]
 3483 006a BA6A     		ldr	r2, [r7, #40]
 3484 006c 1A60     		str	r2, [r3, #0]
2092:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (!fs) return FR_NOT_ENABLED;		/* Is the file system object available? */
 3485              		.loc 1 2092 0
 3486 006e BB6A     		ldr	r3, [r7, #40]
 3487 0070 002B     		cmp	r3, #0
 3488 0072 02D1     		bne	.L242
 3489              		.loc 1 2092 0 is_stmt 0 discriminator 1
 3490 0074 4FF00C03 		mov	r3, #12
 3491 0078 C2E2     		b	.L241
 3492              	.L242:
2093:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2094:../Dave/Generated/src/FATFS002/Src/ff.c **** 	ENTER_FF(fs);						/* Lock file system */
2095:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2096:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (fs->fs_type) {					/* If the logical drive has been mounted */
 3493              		.loc 1 2096 0 is_stmt 1
 3494 007a BB6A     		ldr	r3, [r7, #40]
 3495 007c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3496 007e 002B     		cmp	r3, #0
 3497 0080 1CD0     		beq	.L243
2097:../Dave/Generated/src/FATFS002/Src/ff.c **** 		stat = disk_status(fs->drv);
 3498              		.loc 1 2097 0
 3499 0082 BB6A     		ldr	r3, [r7, #40]
 3500 0084 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3501 0086 1846     		mov	r0, r3
 3502 0088 FFF7FEFF 		bl	disk_status
 3503 008c 0346     		mov	r3, r0
 3504 008e 87F82730 		strb	r3, [r7, #39]
2098:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (!(stat & STA_NOINIT)) {		/* and the physical drive is kept initialized (has not been changed)
 3505              		.loc 1 2098 0
 3506 0092 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 3507 0096 03F00103 		and	r3, r3, #1
 3508 009a 002B     		cmp	r3, #0
 3509 009c 0ED1     		bne	.L243
2099:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (!_FS_READONLY && chk_wp && (stat & STA_PROTECT))	/* Check write protection if needed */
 3510              		.loc 1 2099 0
 3511 009e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3512 00a0 002B     		cmp	r3, #0
 3513 00a2 08D0     		beq	.L244
 3514              		.loc 1 2099 0 is_stmt 0 discriminator 1
 3515 00a4 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 3516 00a8 03F00403 		and	r3, r3, #4
 3517 00ac 002B     		cmp	r3, #0
 3518 00ae 02D0     		beq	.L244
2100:../Dave/Generated/src/FATFS002/Src/ff.c **** 				return FR_WRITE_PROTECTED;
 3519              		.loc 1 2100 0 is_stmt 1
 3520 00b0 4FF00A03 		mov	r3, #10
 3521 00b4 A4E2     		b	.L241
 3522              	.L244:
2101:../Dave/Generated/src/FATFS002/Src/ff.c **** 			return FR_OK;				/* The file system object is valid */
 3523              		.loc 1 2101 0
 3524 00b6 4FF00003 		mov	r3, #0
 3525 00ba A1E2     		b	.L241
 3526              	.L243:
2102:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
2103:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
2104:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2105:../Dave/Generated/src/FATFS002/Src/ff.c **** 	/* The file system object is not valid. */
2106:../Dave/Generated/src/FATFS002/Src/ff.c **** 	/* Following code attempts to mount the volume. (analyze BPB and initialize the fs object) */
2107:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2108:../Dave/Generated/src/FATFS002/Src/ff.c **** 	fs->fs_type = 0;					/* Clear the file system object */
 3527              		.loc 1 2108 0
 3528 00bc BB6A     		ldr	r3, [r7, #40]
 3529 00be 4FF00002 		mov	r2, #0
 3530 00c2 1A70     		strb	r2, [r3, #0]
2109:../Dave/Generated/src/FATFS002/Src/ff.c **** 	fs->drv = LD2PD(vol);				/* Bind the logical drive and a physical drive */
 3531              		.loc 1 2109 0
 3532 00c4 3B6C     		ldr	r3, [r7, #64]
 3533 00c6 DAB2     		uxtb	r2, r3
 3534 00c8 BB6A     		ldr	r3, [r7, #40]
 3535 00ca 5A70     		strb	r2, [r3, #1]
2110:../Dave/Generated/src/FATFS002/Src/ff.c **** 	stat = disk_initialize(fs->drv);	/* Initialize low level disk I/O layer */
 3536              		.loc 1 2110 0
 3537 00cc BB6A     		ldr	r3, [r7, #40]
 3538 00ce 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3539 00d0 1846     		mov	r0, r3
 3540 00d2 FFF7FEFF 		bl	disk_initialize
 3541 00d6 0346     		mov	r3, r0
 3542 00d8 87F82730 		strb	r3, [r7, #39]
2111:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (stat & STA_NOINIT)				/* Check if the initialization succeeded */
 3543              		.loc 1 2111 0
 3544 00dc 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 3545 00e0 03F00103 		and	r3, r3, #1
 3546 00e4 002B     		cmp	r3, #0
 3547 00e6 02D0     		beq	.L245
2112:../Dave/Generated/src/FATFS002/Src/ff.c **** 		return FR_NOT_READY;			/* Failed to initialize due to no media or hard error */
 3548              		.loc 1 2112 0
 3549 00e8 4FF00303 		mov	r3, #3
 3550 00ec 88E2     		b	.L241
 3551              	.L245:
2113:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (!_FS_READONLY && chk_wp && (stat & STA_PROTECT))	/* Check disk write protection if needed */
 3552              		.loc 1 2113 0
 3553 00ee FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3554 00f0 002B     		cmp	r3, #0
 3555 00f2 08D0     		beq	.L246
 3556              		.loc 1 2113 0 is_stmt 0 discriminator 1
 3557 00f4 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 3558 00f8 03F00403 		and	r3, r3, #4
 3559 00fc 002B     		cmp	r3, #0
 3560 00fe 02D0     		beq	.L246
2114:../Dave/Generated/src/FATFS002/Src/ff.c **** 		return FR_WRITE_PROTECTED;
 3561              		.loc 1 2114 0 is_stmt 1
 3562 0100 4FF00A03 		mov	r3, #10
 3563 0104 7CE2     		b	.L241
 3564              	.L246:
2115:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _MAX_SS != 512						/* Get disk sector size (variable sector size cfg only) */
2116:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (disk_ioctl(fs->drv, GET_SECTOR_SIZE, &fs->ssize) != RES_OK)
2117:../Dave/Generated/src/FATFS002/Src/ff.c **** 		return FR_DISK_ERR;
2118:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
2119:../Dave/Generated/src/FATFS002/Src/ff.c **** 	/* Search FAT partition on the drive. Supports only generic partitionings, FDISK and SFD. */
2120:../Dave/Generated/src/FATFS002/Src/ff.c **** 	fmt = check_fs(fs, bsect = 0);		/* Load sector 0 and check if it is an FAT-VBR (in SFD) */
 3565              		.loc 1 2120 0
 3566 0106 4FF00003 		mov	r3, #0
 3567 010a FB63     		str	r3, [r7, #60]
 3568 010c B86A     		ldr	r0, [r7, #40]
 3569 010e F96B     		ldr	r1, [r7, #60]
 3570 0110 FFF7FEFF 		bl	check_fs
 3571 0114 0346     		mov	r3, r0
 3572 0116 87F84730 		strb	r3, [r7, #71]
2121:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (LD2PT(vol) && !fmt) fmt = 1;	/* Force non-SFD if the volume is forced partition */
2122:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (fmt == 1) {						/* Not an FAT-VBR, the physical drive can be partitioned */
 3573              		.loc 1 2122 0
 3574 011a 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 3575 011e 012B     		cmp	r3, #1
 3576 0120 41D1     		bne	.L247
2123:../Dave/Generated/src/FATFS002/Src/ff.c **** 		/* Check the partition listed in the partition table */
2124:../Dave/Generated/src/FATFS002/Src/ff.c **** 		pi = LD2PT(vol);
 3577              		.loc 1 2124 0
 3578 0122 4FF00003 		mov	r3, #0
 3579 0126 87F84630 		strb	r3, [r7, #70]
2125:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (pi) pi--;
 3580              		.loc 1 2125 0
 3581 012a 97F84630 		ldrb	r3, [r7, #70]	@ zero_extendqisi2
 3582 012e 002B     		cmp	r3, #0
 3583 0130 05D0     		beq	.L248
 3584              		.loc 1 2125 0 is_stmt 0 discriminator 1
 3585 0132 97F84630 		ldrb	r3, [r7, #70]
 3586 0136 03F1FF33 		add	r3, r3, #-1
 3587 013a 87F84630 		strb	r3, [r7, #70]
 3588              	.L248:
2126:../Dave/Generated/src/FATFS002/Src/ff.c **** 		tbl = &fs->win[MBR_Table + pi * SZ_PTE];/* Partition table */
 3589              		.loc 1 2126 0 is_stmt 1
 3590 013e 97F84630 		ldrb	r3, [r7, #70]	@ zero_extendqisi2
 3591 0142 4FEA0313 		lsl	r3, r3, #4
 3592 0146 03F5DF73 		add	r3, r3, #446
 3593 014a 03F13003 		add	r3, r3, #48
 3594 014e BA6A     		ldr	r2, [r7, #40]
 3595 0150 D318     		adds	r3, r2, r3
 3596 0152 03F10403 		add	r3, r3, #4
 3597 0156 3B62     		str	r3, [r7, #32]
2127:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (tbl[4]) {						/* Is the partition existing? */
 3598              		.loc 1 2127 0
 3599 0158 3B6A     		ldr	r3, [r7, #32]
 3600 015a 03F10403 		add	r3, r3, #4
 3601 015e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3602 0160 002B     		cmp	r3, #0
 3603 0162 20D0     		beq	.L247
2128:../Dave/Generated/src/FATFS002/Src/ff.c **** 			bsect = LD_DWORD(&tbl[8]);		/* Partition offset in LBA */
 3604              		.loc 1 2128 0
 3605 0164 3B6A     		ldr	r3, [r7, #32]
 3606 0166 03F10B03 		add	r3, r3, #11
 3607 016a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3608 016c 4FEA0362 		lsl	r2, r3, #24
 3609 0170 3B6A     		ldr	r3, [r7, #32]
 3610 0172 03F10A03 		add	r3, r3, #10
 3611 0176 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3612 0178 4FEA0343 		lsl	r3, r3, #16
 3613 017c 1A43     		orrs	r2, r2, r3
 3614 017e 3B6A     		ldr	r3, [r7, #32]
 3615 0180 03F10903 		add	r3, r3, #9
 3616 0184 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3617 0186 4FEA0323 		lsl	r3, r3, #8
 3618 018a 1A43     		orrs	r2, r2, r3
 3619 018c 3B6A     		ldr	r3, [r7, #32]
 3620 018e 03F10803 		add	r3, r3, #8
 3621 0192 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3622 0194 1343     		orrs	r3, r3, r2
 3623 0196 FB63     		str	r3, [r7, #60]
2129:../Dave/Generated/src/FATFS002/Src/ff.c **** 			fmt = check_fs(fs, bsect);		/* Check the partition */
 3624              		.loc 1 2129 0
 3625 0198 B86A     		ldr	r0, [r7, #40]
 3626 019a F96B     		ldr	r1, [r7, #60]
 3627 019c FFF7FEFF 		bl	check_fs
 3628 01a0 0346     		mov	r3, r0
 3629 01a2 87F84730 		strb	r3, [r7, #71]
 3630              	.L247:
2130:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
2131:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
2132:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (fmt == 3) return FR_DISK_ERR;
 3631              		.loc 1 2132 0
 3632 01a6 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 3633 01aa 032B     		cmp	r3, #3
 3634 01ac 02D1     		bne	.L249
 3635              		.loc 1 2132 0 is_stmt 0 discriminator 1
 3636 01ae 4FF00103 		mov	r3, #1
 3637 01b2 25E2     		b	.L241
 3638              	.L249:
2133:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (fmt) return FR_NO_FILESYSTEM;		/* No FAT volume is found */
 3639              		.loc 1 2133 0 is_stmt 1
 3640 01b4 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 3641 01b8 002B     		cmp	r3, #0
 3642 01ba 02D0     		beq	.L250
 3643              		.loc 1 2133 0 is_stmt 0 discriminator 1
 3644 01bc 4FF00D03 		mov	r3, #13
 3645 01c0 1EE2     		b	.L241
 3646              	.L250:
2134:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2135:../Dave/Generated/src/FATFS002/Src/ff.c **** 	/* An FAT volume is found. Following code initializes the file system object */
2136:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2137:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (LD_WORD(fs->win+BPB_BytsPerSec) != SS(fs))		/* (BPB_BytsPerSec must be equal to the physical s
 3647              		.loc 1 2137 0 is_stmt 1
 3648 01c2 BB6A     		ldr	r3, [r7, #40]
 3649 01c4 93F84030 		ldrb	r3, [r3, #64]	@ zero_extendqisi2
 3650 01c8 4FEA0323 		lsl	r3, r3, #8
 3651 01cc 9AB2     		uxth	r2, r3
 3652 01ce BB6A     		ldr	r3, [r7, #40]
 3653 01d0 93F83F30 		ldrb	r3, [r3, #63]	@ zero_extendqisi2
 3654 01d4 1343     		orrs	r3, r3, r2
 3655 01d6 9BB2     		uxth	r3, r3
 3656 01d8 1BB2     		sxth	r3, r3
 3657 01da B3F5007F 		cmp	r3, #512
 3658 01de 02D0     		beq	.L251
2138:../Dave/Generated/src/FATFS002/Src/ff.c **** 		return FR_NO_FILESYSTEM;
 3659              		.loc 1 2138 0
 3660 01e0 4FF00D03 		mov	r3, #13
 3661 01e4 0CE2     		b	.L241
 3662              	.L251:
2139:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2140:../Dave/Generated/src/FATFS002/Src/ff.c **** 	fasize = LD_WORD(fs->win+BPB_FATSz16);				/* Number of sectors per FAT */
 3663              		.loc 1 2140 0
 3664 01e6 BB6A     		ldr	r3, [r7, #40]
 3665 01e8 93F84B30 		ldrb	r3, [r3, #75]	@ zero_extendqisi2
 3666 01ec 4FEA0323 		lsl	r3, r3, #8
 3667 01f0 9AB2     		uxth	r2, r3
 3668 01f2 BB6A     		ldr	r3, [r7, #40]
 3669 01f4 93F84A30 		ldrb	r3, [r3, #74]	@ zero_extendqisi2
 3670 01f8 1343     		orrs	r3, r3, r2
 3671 01fa 9BB2     		uxth	r3, r3
 3672 01fc 9BB2     		uxth	r3, r3
 3673 01fe BB63     		str	r3, [r7, #56]
2141:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (!fasize) fasize = LD_DWORD(fs->win+BPB_FATSz32);
 3674              		.loc 1 2141 0
 3675 0200 BB6B     		ldr	r3, [r7, #56]
 3676 0202 002B     		cmp	r3, #0
 3677 0204 15D1     		bne	.L252
 3678              		.loc 1 2141 0 is_stmt 0 discriminator 1
 3679 0206 BB6A     		ldr	r3, [r7, #40]
 3680 0208 93F85B30 		ldrb	r3, [r3, #91]	@ zero_extendqisi2
 3681 020c 4FEA0362 		lsl	r2, r3, #24
 3682 0210 BB6A     		ldr	r3, [r7, #40]
 3683 0212 93F85A30 		ldrb	r3, [r3, #90]	@ zero_extendqisi2
 3684 0216 4FEA0343 		lsl	r3, r3, #16
 3685 021a 1A43     		orrs	r2, r2, r3
 3686 021c BB6A     		ldr	r3, [r7, #40]
 3687 021e 93F85930 		ldrb	r3, [r3, #89]	@ zero_extendqisi2
 3688 0222 4FEA0323 		lsl	r3, r3, #8
 3689 0226 1A43     		orrs	r2, r2, r3
 3690 0228 BB6A     		ldr	r3, [r7, #40]
 3691 022a 93F85830 		ldrb	r3, [r3, #88]	@ zero_extendqisi2
 3692 022e 1343     		orrs	r3, r3, r2
 3693 0230 BB63     		str	r3, [r7, #56]
 3694              	.L252:
2142:../Dave/Generated/src/FATFS002/Src/ff.c **** 	fs->fsize = fasize;
 3695              		.loc 1 2142 0 is_stmt 1
 3696 0232 BB6A     		ldr	r3, [r7, #40]
 3697 0234 BA6B     		ldr	r2, [r7, #56]
 3698 0236 1A62     		str	r2, [r3, #32]
2143:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2144:../Dave/Generated/src/FATFS002/Src/ff.c **** 	fs->n_fats = b = fs->win[BPB_NumFATs];				/* Number of FAT copies */
 3699              		.loc 1 2144 0
 3700 0238 BB6A     		ldr	r3, [r7, #40]
 3701 023a 93F84430 		ldrb	r3, [r3, #68]
 3702 023e FB77     		strb	r3, [r7, #31]
 3703 0240 BB6A     		ldr	r3, [r7, #40]
 3704 0242 FA7F     		ldrb	r2, [r7, #31]
 3705 0244 DA70     		strb	r2, [r3, #3]
2145:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (b != 1 && b != 2) return FR_NO_FILESYSTEM;		/* (Must be 1 or 2) */
 3706              		.loc 1 2145 0
 3707 0246 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 3708 0248 012B     		cmp	r3, #1
 3709 024a 05D0     		beq	.L253
 3710              		.loc 1 2145 0 is_stmt 0 discriminator 1
 3711 024c FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 3712 024e 022B     		cmp	r3, #2
 3713 0250 02D0     		beq	.L253
 3714 0252 4FF00D03 		mov	r3, #13
 3715 0256 D3E1     		b	.L241
 3716              	.L253:
2146:../Dave/Generated/src/FATFS002/Src/ff.c **** 	fasize *= b;										/* Number of sectors for FAT area */
 3717              		.loc 1 2146 0 is_stmt 1
 3718 0258 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 3719 025a BB6B     		ldr	r3, [r7, #56]
 3720 025c 02FB03F3 		mul	r3, r2, r3
 3721 0260 BB63     		str	r3, [r7, #56]
2147:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2148:../Dave/Generated/src/FATFS002/Src/ff.c **** 	fs->csize = b = fs->win[BPB_SecPerClus];			/* Number of sectors per cluster */
 3722              		.loc 1 2148 0
 3723 0262 BB6A     		ldr	r3, [r7, #40]
 3724 0264 93F84130 		ldrb	r3, [r3, #65]
 3725 0268 FB77     		strb	r3, [r7, #31]
 3726 026a BB6A     		ldr	r3, [r7, #40]
 3727 026c FA7F     		ldrb	r2, [r7, #31]
 3728 026e 9A70     		strb	r2, [r3, #2]
2149:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (!b || (b & (b - 1))) return FR_NO_FILESYSTEM;	/* (Must be power of 2) */
 3729              		.loc 1 2149 0
 3730 0270 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 3731 0272 002B     		cmp	r3, #0
 3732 0274 06D0     		beq	.L254
 3733              		.loc 1 2149 0 is_stmt 0 discriminator 2
 3734 0276 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 3735 0278 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 3736 027a 03F1FF33 		add	r3, r3, #-1
 3737 027e 1340     		ands	r3, r3, r2
 3738 0280 002B     		cmp	r3, #0
 3739 0282 02D0     		beq	.L255
 3740              	.L254:
 3741              		.loc 1 2149 0 discriminator 1
 3742 0284 4FF00D03 		mov	r3, #13
 3743 0288 BAE1     		b	.L241
 3744              	.L255:
2150:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2151:../Dave/Generated/src/FATFS002/Src/ff.c **** 	fs->n_rootdir = LD_WORD(fs->win+BPB_RootEntCnt);	/* Number of root directory entries */
 3745              		.loc 1 2151 0 is_stmt 1
 3746 028a BB6A     		ldr	r3, [r7, #40]
 3747 028c 93F84630 		ldrb	r3, [r3, #70]	@ zero_extendqisi2
 3748 0290 4FEA0323 		lsl	r3, r3, #8
 3749 0294 9AB2     		uxth	r2, r3
 3750 0296 BB6A     		ldr	r3, [r7, #40]
 3751 0298 93F84530 		ldrb	r3, [r3, #69]	@ zero_extendqisi2
 3752 029c 1343     		orrs	r3, r3, r2
 3753 029e 9BB2     		uxth	r3, r3
 3754 02a0 9AB2     		uxth	r2, r3
 3755 02a2 BB6A     		ldr	r3, [r7, #40]
 3756 02a4 1A81     		strh	r2, [r3, #8]	@ movhi
2152:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (fs->n_rootdir % (SS(fs) / SZ_DIR)) return FR_NO_FILESYSTEM;	/* (BPB_RootEntCnt must be sector 
 3757              		.loc 1 2152 0
 3758 02a6 BB6A     		ldr	r3, [r7, #40]
 3759 02a8 1B89     		ldrh	r3, [r3, #8]
 3760 02aa 03F00F03 		and	r3, r3, #15
 3761 02ae 9BB2     		uxth	r3, r3
 3762 02b0 002B     		cmp	r3, #0
 3763 02b2 02D0     		beq	.L256
 3764              		.loc 1 2152 0 is_stmt 0 discriminator 1
 3765 02b4 4FF00D03 		mov	r3, #13
 3766 02b8 A2E1     		b	.L241
 3767              	.L256:
2153:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2154:../Dave/Generated/src/FATFS002/Src/ff.c **** 	tsect = LD_WORD(fs->win+BPB_TotSec16);				/* Number of sectors on the volume */
 3768              		.loc 1 2154 0 is_stmt 1
 3769 02ba BB6A     		ldr	r3, [r7, #40]
 3770 02bc 93F84830 		ldrb	r3, [r3, #72]	@ zero_extendqisi2
 3771 02c0 4FEA0323 		lsl	r3, r3, #8
 3772 02c4 9AB2     		uxth	r2, r3
 3773 02c6 BB6A     		ldr	r3, [r7, #40]
 3774 02c8 93F84730 		ldrb	r3, [r3, #71]	@ zero_extendqisi2
 3775 02cc 1343     		orrs	r3, r3, r2
 3776 02ce 9BB2     		uxth	r3, r3
 3777 02d0 9BB2     		uxth	r3, r3
 3778 02d2 7B63     		str	r3, [r7, #52]
2155:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (!tsect) tsect = LD_DWORD(fs->win+BPB_TotSec32);
 3779              		.loc 1 2155 0
 3780 02d4 7B6B     		ldr	r3, [r7, #52]
 3781 02d6 002B     		cmp	r3, #0
 3782 02d8 15D1     		bne	.L257
 3783              		.loc 1 2155 0 is_stmt 0 discriminator 1
 3784 02da BB6A     		ldr	r3, [r7, #40]
 3785 02dc 93F85730 		ldrb	r3, [r3, #87]	@ zero_extendqisi2
 3786 02e0 4FEA0362 		lsl	r2, r3, #24
 3787 02e4 BB6A     		ldr	r3, [r7, #40]
 3788 02e6 93F85630 		ldrb	r3, [r3, #86]	@ zero_extendqisi2
 3789 02ea 4FEA0343 		lsl	r3, r3, #16
 3790 02ee 1A43     		orrs	r2, r2, r3
 3791 02f0 BB6A     		ldr	r3, [r7, #40]
 3792 02f2 93F85530 		ldrb	r3, [r3, #85]	@ zero_extendqisi2
 3793 02f6 4FEA0323 		lsl	r3, r3, #8
 3794 02fa 1A43     		orrs	r2, r2, r3
 3795 02fc BB6A     		ldr	r3, [r7, #40]
 3796 02fe 93F85430 		ldrb	r3, [r3, #84]	@ zero_extendqisi2
 3797 0302 1343     		orrs	r3, r3, r2
 3798 0304 7B63     		str	r3, [r7, #52]
 3799              	.L257:
2156:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2157:../Dave/Generated/src/FATFS002/Src/ff.c **** 	nrsv = LD_WORD(fs->win+BPB_RsvdSecCnt);				/* Number of reserved sectors */
 3800              		.loc 1 2157 0 is_stmt 1
 3801 0306 BB6A     		ldr	r3, [r7, #40]
 3802 0308 93F84330 		ldrb	r3, [r3, #67]	@ zero_extendqisi2
 3803 030c 4FEA0323 		lsl	r3, r3, #8
 3804 0310 9AB2     		uxth	r2, r3
 3805 0312 BB6A     		ldr	r3, [r7, #40]
 3806 0314 93F84230 		ldrb	r3, [r3, #66]	@ zero_extendqisi2
 3807 0318 1343     		orrs	r3, r3, r2
 3808 031a 9BB2     		uxth	r3, r3
 3809 031c BB83     		strh	r3, [r7, #28]	@ movhi
2158:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (!nrsv) return FR_NO_FILESYSTEM;					/* (BPB_RsvdSecCnt must not be 0) */
 3810              		.loc 1 2158 0
 3811 031e BB8B     		ldrh	r3, [r7, #28]
 3812 0320 002B     		cmp	r3, #0
 3813 0322 02D1     		bne	.L258
 3814              		.loc 1 2158 0 is_stmt 0 discriminator 1
 3815 0324 4FF00D03 		mov	r3, #13
 3816 0328 6AE1     		b	.L241
 3817              	.L258:
2159:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2160:../Dave/Generated/src/FATFS002/Src/ff.c **** 	/* Determine the FAT sub type */
2161:../Dave/Generated/src/FATFS002/Src/ff.c **** 	sysect = nrsv + fasize + fs->n_rootdir / (SS(fs) / SZ_DIR);	/* RSV+FAT+DIR */
 3818              		.loc 1 2161 0 is_stmt 1
 3819 032a BA8B     		ldrh	r2, [r7, #28]
 3820 032c BB6B     		ldr	r3, [r7, #56]
 3821 032e D218     		adds	r2, r2, r3
 3822 0330 BB6A     		ldr	r3, [r7, #40]
 3823 0332 1B89     		ldrh	r3, [r3, #8]
 3824 0334 4FEA1313 		lsr	r3, r3, #4
 3825 0338 9BB2     		uxth	r3, r3
 3826 033a D318     		adds	r3, r2, r3
 3827 033c BB61     		str	r3, [r7, #24]
2162:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (tsect < sysect) return FR_NO_FILESYSTEM;		/* (Invalid volume size) */
 3828              		.loc 1 2162 0
 3829 033e 7A6B     		ldr	r2, [r7, #52]
 3830 0340 BB69     		ldr	r3, [r7, #24]
 3831 0342 9A42     		cmp	r2, r3
 3832 0344 02D2     		bcs	.L259
 3833              		.loc 1 2162 0 is_stmt 0 discriminator 1
 3834 0346 4FF00D03 		mov	r3, #13
 3835 034a 59E1     		b	.L241
 3836              	.L259:
2163:../Dave/Generated/src/FATFS002/Src/ff.c **** 	nclst = (tsect - sysect) / fs->csize;				/* Number of clusters */
 3837              		.loc 1 2163 0 is_stmt 1
 3838 034c 7A6B     		ldr	r2, [r7, #52]
 3839 034e BB69     		ldr	r3, [r7, #24]
 3840 0350 D21A     		subs	r2, r2, r3
 3841 0352 BB6A     		ldr	r3, [r7, #40]
 3842 0354 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 3843 0356 B2FBF3F3 		udiv	r3, r2, r3
 3844 035a 7B61     		str	r3, [r7, #20]
2164:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (!nclst) return FR_NO_FILESYSTEM;				/* (Invalid volume size) */
 3845              		.loc 1 2164 0
 3846 035c 7B69     		ldr	r3, [r7, #20]
 3847 035e 002B     		cmp	r3, #0
 3848 0360 02D1     		bne	.L260
 3849              		.loc 1 2164 0 is_stmt 0 discriminator 1
 3850 0362 4FF00D03 		mov	r3, #13
 3851 0366 4BE1     		b	.L241
 3852              	.L260:
2165:../Dave/Generated/src/FATFS002/Src/ff.c **** 	fmt = FS_FAT12;
 3853              		.loc 1 2165 0 is_stmt 1
 3854 0368 4FF00103 		mov	r3, #1
 3855 036c 87F84730 		strb	r3, [r7, #71]
2166:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (nclst >= MIN_FAT16) fmt = FS_FAT16;
 3856              		.loc 1 2166 0
 3857 0370 7A69     		ldr	r2, [r7, #20]
 3858 0372 40F6F573 		movw	r3, #4085
 3859 0376 9A42     		cmp	r2, r3
 3860 0378 03D9     		bls	.L261
 3861              		.loc 1 2166 0 is_stmt 0 discriminator 1
 3862 037a 4FF00203 		mov	r3, #2
 3863 037e 87F84730 		strb	r3, [r7, #71]
 3864              	.L261:
2167:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (nclst >= MIN_FAT32) fmt = FS_FAT32;
 3865              		.loc 1 2167 0 is_stmt 1
 3866 0382 7A69     		ldr	r2, [r7, #20]
 3867 0384 4FF6F573 		movw	r3, #65525
 3868 0388 9A42     		cmp	r2, r3
 3869 038a 03D9     		bls	.L262
 3870              		.loc 1 2167 0 is_stmt 0 discriminator 1
 3871 038c 4FF00303 		mov	r3, #3
 3872 0390 87F84730 		strb	r3, [r7, #71]
 3873              	.L262:
2168:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2169:../Dave/Generated/src/FATFS002/Src/ff.c **** 	/* Boundaries and Limits */
2170:../Dave/Generated/src/FATFS002/Src/ff.c **** 	fs->n_fatent = nclst + 2;							/* Number of FAT entries */
 3874              		.loc 1 2170 0 is_stmt 1
 3875 0394 7B69     		ldr	r3, [r7, #20]
 3876 0396 03F10202 		add	r2, r3, #2
 3877 039a BB6A     		ldr	r3, [r7, #40]
 3878 039c DA61     		str	r2, [r3, #28]
2171:../Dave/Generated/src/FATFS002/Src/ff.c **** 	fs->database = bsect + sysect;						/* Data start sector */
 3879              		.loc 1 2171 0
 3880 039e FA6B     		ldr	r2, [r7, #60]
 3881 03a0 BB69     		ldr	r3, [r7, #24]
 3882 03a2 D218     		adds	r2, r2, r3
 3883 03a4 BB6A     		ldr	r3, [r7, #40]
 3884 03a6 DA62     		str	r2, [r3, #44]
2172:../Dave/Generated/src/FATFS002/Src/ff.c **** 	fs->fatbase = bsect + nrsv; 						/* FAT start sector */
 3885              		.loc 1 2172 0
 3886 03a8 BA8B     		ldrh	r2, [r7, #28]
 3887 03aa FB6B     		ldr	r3, [r7, #60]
 3888 03ac D218     		adds	r2, r2, r3
 3889 03ae BB6A     		ldr	r3, [r7, #40]
 3890 03b0 5A62     		str	r2, [r3, #36]
2173:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (fmt == FS_FAT32) {
 3891              		.loc 1 2173 0
 3892 03b2 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 3893 03b6 032B     		cmp	r3, #3
 3894 03b8 23D1     		bne	.L263
2174:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (fs->n_rootdir) return FR_NO_FILESYSTEM;		/* (BPB_RootEntCnt must be 0) */
 3895              		.loc 1 2174 0
 3896 03ba BB6A     		ldr	r3, [r7, #40]
 3897 03bc 1B89     		ldrh	r3, [r3, #8]
 3898 03be 002B     		cmp	r3, #0
 3899 03c0 02D0     		beq	.L264
 3900              		.loc 1 2174 0 is_stmt 0 discriminator 1
 3901 03c2 4FF00D03 		mov	r3, #13
 3902 03c6 1BE1     		b	.L241
 3903              	.L264:
2175:../Dave/Generated/src/FATFS002/Src/ff.c **** 		fs->dirbase = LD_DWORD(fs->win+BPB_RootClus);	/* Root directory start cluster */
 3904              		.loc 1 2175 0 is_stmt 1
 3905 03c8 BB6A     		ldr	r3, [r7, #40]
 3906 03ca 93F86330 		ldrb	r3, [r3, #99]	@ zero_extendqisi2
 3907 03ce 4FEA0362 		lsl	r2, r3, #24
 3908 03d2 BB6A     		ldr	r3, [r7, #40]
 3909 03d4 93F86230 		ldrb	r3, [r3, #98]	@ zero_extendqisi2
 3910 03d8 4FEA0343 		lsl	r3, r3, #16
 3911 03dc 1A43     		orrs	r2, r2, r3
 3912 03de BB6A     		ldr	r3, [r7, #40]
 3913 03e0 93F86130 		ldrb	r3, [r3, #97]	@ zero_extendqisi2
 3914 03e4 4FEA0323 		lsl	r3, r3, #8
 3915 03e8 1A43     		orrs	r2, r2, r3
 3916 03ea BB6A     		ldr	r3, [r7, #40]
 3917 03ec 93F86030 		ldrb	r3, [r3, #96]	@ zero_extendqisi2
 3918 03f0 1A43     		orrs	r2, r2, r3
 3919 03f2 BB6A     		ldr	r3, [r7, #40]
 3920 03f4 9A62     		str	r2, [r3, #40]
2176:../Dave/Generated/src/FATFS002/Src/ff.c **** 		szbfat = fs->n_fatent * 4;						/* (Required FAT size) */
 3921              		.loc 1 2176 0
 3922 03f6 BB6A     		ldr	r3, [r7, #40]
 3923 03f8 DB69     		ldr	r3, [r3, #28]
 3924 03fa 4FEA8303 		lsl	r3, r3, #2
 3925 03fe 3B63     		str	r3, [r7, #48]
 3926 0400 23E0     		b	.L265
 3927              	.L263:
2177:../Dave/Generated/src/FATFS002/Src/ff.c **** 	} else {
2178:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (!fs->n_rootdir)	return FR_NO_FILESYSTEM;	/* (BPB_RootEntCnt must not be 0) */
 3928              		.loc 1 2178 0
 3929 0402 BB6A     		ldr	r3, [r7, #40]
 3930 0404 1B89     		ldrh	r3, [r3, #8]
 3931 0406 002B     		cmp	r3, #0
 3932 0408 02D1     		bne	.L266
 3933              		.loc 1 2178 0 is_stmt 0 discriminator 1
 3934 040a 4FF00D03 		mov	r3, #13
 3935 040e F7E0     		b	.L241
 3936              	.L266:
2179:../Dave/Generated/src/FATFS002/Src/ff.c **** 		fs->dirbase = fs->fatbase + fasize;				/* Root directory start sector */
 3937              		.loc 1 2179 0 is_stmt 1
 3938 0410 BB6A     		ldr	r3, [r7, #40]
 3939 0412 5A6A     		ldr	r2, [r3, #36]
 3940 0414 BB6B     		ldr	r3, [r7, #56]
 3941 0416 D218     		adds	r2, r2, r3
 3942 0418 BB6A     		ldr	r3, [r7, #40]
 3943 041a 9A62     		str	r2, [r3, #40]
2180:../Dave/Generated/src/FATFS002/Src/ff.c **** 		szbfat = (fmt == FS_FAT16) ?					/* (Required FAT size) */
2181:../Dave/Generated/src/FATFS002/Src/ff.c **** 			fs->n_fatent * 2 : fs->n_fatent * 3 / 2 + (fs->n_fatent & 1);
 3944              		.loc 1 2181 0
 3945 041c 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 3946 0420 022B     		cmp	r3, #2
 3947 0422 04D1     		bne	.L267
 3948              		.loc 1 2181 0 is_stmt 0 discriminator 1
 3949 0424 BB6A     		ldr	r3, [r7, #40]
 3950 0426 DB69     		ldr	r3, [r3, #28]
 3951 0428 4FEA4303 		lsl	r3, r3, #1
 3952 042c 0CE0     		b	.L268
 3953              	.L267:
 3954              		.loc 1 2181 0 discriminator 2
 3955 042e BB6A     		ldr	r3, [r7, #40]
 3956 0430 DA69     		ldr	r2, [r3, #28]
 3957 0432 1346     		mov	r3, r2
 3958 0434 4FEA4303 		lsl	r3, r3, #1
 3959 0438 9B18     		adds	r3, r3, r2
 3960 043a 4FEA5302 		lsr	r2, r3, #1
 3961 043e BB6A     		ldr	r3, [r7, #40]
 3962 0440 DB69     		ldr	r3, [r3, #28]
 3963 0442 03F00103 		and	r3, r3, #1
 3964 0446 D318     		adds	r3, r2, r3
 3965              	.L268:
2180:../Dave/Generated/src/FATFS002/Src/ff.c **** 		szbfat = (fmt == FS_FAT16) ?					/* (Required FAT size) */
 3966              		.loc 1 2180 0 is_stmt 1
 3967 0448 3B63     		str	r3, [r7, #48]
 3968              	.L265:
2182:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
2183:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (fs->fsize < (szbfat + (SS(fs) - 1)) / SS(fs))	/* (BPB_FATSz must not be less than required) */
 3969              		.loc 1 2183 0
 3970 044a BB6A     		ldr	r3, [r7, #40]
 3971 044c 1A6A     		ldr	r2, [r3, #32]
 3972 044e 3B6B     		ldr	r3, [r7, #48]
 3973 0450 03F2FF13 		addw	r3, r3, #511
 3974 0454 4FEA5323 		lsr	r3, r3, #9
 3975 0458 9A42     		cmp	r2, r3
 3976 045a 02D2     		bcs	.L269
2184:../Dave/Generated/src/FATFS002/Src/ff.c **** 		return FR_NO_FILESYSTEM;
 3977              		.loc 1 2184 0
 3978 045c 4FF00D03 		mov	r3, #13
 3979 0460 CEE0     		b	.L241
 3980              	.L269:
2185:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2186:../Dave/Generated/src/FATFS002/Src/ff.c **** #if !_FS_READONLY
2187:../Dave/Generated/src/FATFS002/Src/ff.c **** 	/* Initialize cluster allocation information */
2188:../Dave/Generated/src/FATFS002/Src/ff.c **** 	fs->free_clust = 0xFFFFFFFF;
 3981              		.loc 1 2188 0
 3982 0462 BB6A     		ldr	r3, [r7, #40]
 3983 0464 4FF0FF32 		mov	r2, #-1
 3984 0468 1A61     		str	r2, [r3, #16]
2189:../Dave/Generated/src/FATFS002/Src/ff.c **** 	fs->last_clust = 0;
 3985              		.loc 1 2189 0
 3986 046a BB6A     		ldr	r3, [r7, #40]
 3987 046c 4FF00002 		mov	r2, #0
 3988 0470 DA60     		str	r2, [r3, #12]
2190:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2191:../Dave/Generated/src/FATFS002/Src/ff.c **** 	/* Get fsinfo if available */
2192:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (fmt == FS_FAT32) {
 3989              		.loc 1 2192 0
 3990 0472 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 3991 0476 032B     		cmp	r3, #3
 3992 0478 40F09C80 		bne	.L270
2193:../Dave/Generated/src/FATFS002/Src/ff.c **** 	 	fs->fsi_flag = 0;
 3993              		.loc 1 2193 0
 3994 047c BB6A     		ldr	r3, [r7, #40]
 3995 047e 4FF00002 		mov	r2, #0
 3996 0482 5A71     		strb	r2, [r3, #5]
2194:../Dave/Generated/src/FATFS002/Src/ff.c **** 		fs->fsi_sector = bsect + LD_WORD(fs->win+BPB_FSInfo);
 3997              		.loc 1 2194 0
 3998 0484 BB6A     		ldr	r3, [r7, #40]
 3999 0486 93F86530 		ldrb	r3, [r3, #101]	@ zero_extendqisi2
 4000 048a 4FEA0323 		lsl	r3, r3, #8
 4001 048e 9AB2     		uxth	r2, r3
 4002 0490 BB6A     		ldr	r3, [r7, #40]
 4003 0492 93F86430 		ldrb	r3, [r3, #100]	@ zero_extendqisi2
 4004 0496 1343     		orrs	r3, r3, r2
 4005 0498 9BB2     		uxth	r3, r3
 4006 049a 9BB2     		uxth	r3, r3
 4007 049c 1A46     		mov	r2, r3
 4008 049e FB6B     		ldr	r3, [r7, #60]
 4009 04a0 D218     		adds	r2, r2, r3
 4010 04a2 BB6A     		ldr	r3, [r7, #40]
 4011 04a4 5A61     		str	r2, [r3, #20]
2195:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (disk_read(fs->drv, fs->win, fs->fsi_sector, 1) == RES_OK &&
 4012              		.loc 1 2195 0
 4013 04a6 BB6A     		ldr	r3, [r7, #40]
 4014 04a8 5978     		ldrb	r1, [r3, #1]	@ zero_extendqisi2
 4015 04aa BB6A     		ldr	r3, [r7, #40]
 4016 04ac 03F13402 		add	r2, r3, #52
 4017 04b0 BB6A     		ldr	r3, [r7, #40]
 4018 04b2 5B69     		ldr	r3, [r3, #20]
 4019 04b4 0846     		mov	r0, r1
 4020 04b6 1146     		mov	r1, r2
 4021 04b8 1A46     		mov	r2, r3
 4022 04ba 4FF00103 		mov	r3, #1
 4023 04be FFF7FEFF 		bl	disk_read
 4024 04c2 0346     		mov	r3, r0
 4025 04c4 002B     		cmp	r3, #0
 4026 04c6 75D1     		bne	.L270
2196:../Dave/Generated/src/FATFS002/Src/ff.c **** 			LD_WORD(fs->win+BS_55AA) == 0xAA55 &&
 4027              		.loc 1 2196 0 discriminator 1
 4028 04c8 BB6A     		ldr	r3, [r7, #40]
 4029 04ca 93F83332 		ldrb	r3, [r3, #563]	@ zero_extendqisi2
 4030 04ce 4FEA0323 		lsl	r3, r3, #8
 4031 04d2 9AB2     		uxth	r2, r3
 4032 04d4 BB6A     		ldr	r3, [r7, #40]
 4033 04d6 93F83232 		ldrb	r3, [r3, #562]	@ zero_extendqisi2
 4034 04da 1343     		orrs	r3, r3, r2
 4035 04dc 9BB2     		uxth	r3, r3
2195:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (disk_read(fs->drv, fs->win, fs->fsi_sector, 1) == RES_OK &&
 4036              		.loc 1 2195 0 discriminator 1
 4037 04de 1AB2     		sxth	r2, r3
 4038 04e0 4AF65523 		movw	r3, #43605
 4039 04e4 CFF6FF73 		movt	r3, 65535
 4040 04e8 9A42     		cmp	r2, r3
 4041 04ea 63D1     		bne	.L270
2197:../Dave/Generated/src/FATFS002/Src/ff.c **** 			LD_DWORD(fs->win+FSI_LeadSig) == 0x41615252 &&
 4042              		.loc 1 2197 0
 4043 04ec BB6A     		ldr	r3, [r7, #40]
 4044 04ee 93F83730 		ldrb	r3, [r3, #55]	@ zero_extendqisi2
 4045 04f2 4FEA0362 		lsl	r2, r3, #24
 4046 04f6 BB6A     		ldr	r3, [r7, #40]
 4047 04f8 93F83630 		ldrb	r3, [r3, #54]	@ zero_extendqisi2
 4048 04fc 4FEA0343 		lsl	r3, r3, #16
 4049 0500 1A43     		orrs	r2, r2, r3
 4050 0502 BB6A     		ldr	r3, [r7, #40]
 4051 0504 93F83530 		ldrb	r3, [r3, #53]	@ zero_extendqisi2
 4052 0508 4FEA0323 		lsl	r3, r3, #8
 4053 050c 1A43     		orrs	r2, r2, r3
 4054 050e BB6A     		ldr	r3, [r7, #40]
 4055 0510 93F83430 		ldrb	r3, [r3, #52]	@ zero_extendqisi2
 4056 0514 1A43     		orrs	r2, r2, r3
2196:../Dave/Generated/src/FATFS002/Src/ff.c **** 			LD_WORD(fs->win+BS_55AA) == 0xAA55 &&
 4057              		.loc 1 2196 0
 4058 0516 45F25223 		movw	r3, #21074
 4059 051a C4F26113 		movt	r3, 16737
 4060 051e 9A42     		cmp	r2, r3
 4061 0520 48D1     		bne	.L270
2198:../Dave/Generated/src/FATFS002/Src/ff.c **** 			LD_DWORD(fs->win+FSI_StrucSig) == 0x61417272) {
 4062              		.loc 1 2198 0
 4063 0522 BB6A     		ldr	r3, [r7, #40]
 4064 0524 93F81B32 		ldrb	r3, [r3, #539]	@ zero_extendqisi2
 4065 0528 4FEA0362 		lsl	r2, r3, #24
 4066 052c BB6A     		ldr	r3, [r7, #40]
 4067 052e 93F81A32 		ldrb	r3, [r3, #538]	@ zero_extendqisi2
 4068 0532 4FEA0343 		lsl	r3, r3, #16
 4069 0536 1A43     		orrs	r2, r2, r3
 4070 0538 BB6A     		ldr	r3, [r7, #40]
 4071 053a 93F81932 		ldrb	r3, [r3, #537]	@ zero_extendqisi2
 4072 053e 4FEA0323 		lsl	r3, r3, #8
 4073 0542 1A43     		orrs	r2, r2, r3
 4074 0544 BB6A     		ldr	r3, [r7, #40]
 4075 0546 93F81832 		ldrb	r3, [r3, #536]	@ zero_extendqisi2
 4076 054a 1A43     		orrs	r2, r2, r3
2197:../Dave/Generated/src/FATFS002/Src/ff.c **** 			LD_DWORD(fs->win+FSI_LeadSig) == 0x41615252 &&
 4077              		.loc 1 2197 0
 4078 054c 47F27223 		movw	r3, #29298
 4079 0550 C6F24113 		movt	r3, 24897
 4080 0554 9A42     		cmp	r2, r3
 4081 0556 2DD1     		bne	.L270
2199:../Dave/Generated/src/FATFS002/Src/ff.c **** 				fs->last_clust = LD_DWORD(fs->win+FSI_Nxt_Free);
 4082              		.loc 1 2199 0
 4083 0558 BB6A     		ldr	r3, [r7, #40]
 4084 055a 93F82332 		ldrb	r3, [r3, #547]	@ zero_extendqisi2
 4085 055e 4FEA0362 		lsl	r2, r3, #24
 4086 0562 BB6A     		ldr	r3, [r7, #40]
 4087 0564 93F82232 		ldrb	r3, [r3, #546]	@ zero_extendqisi2
 4088 0568 4FEA0343 		lsl	r3, r3, #16
 4089 056c 1A43     		orrs	r2, r2, r3
 4090 056e BB6A     		ldr	r3, [r7, #40]
 4091 0570 93F82132 		ldrb	r3, [r3, #545]	@ zero_extendqisi2
 4092 0574 4FEA0323 		lsl	r3, r3, #8
 4093 0578 1A43     		orrs	r2, r2, r3
 4094 057a BB6A     		ldr	r3, [r7, #40]
 4095 057c 93F82032 		ldrb	r3, [r3, #544]	@ zero_extendqisi2
 4096 0580 1A43     		orrs	r2, r2, r3
 4097 0582 BB6A     		ldr	r3, [r7, #40]
 4098 0584 DA60     		str	r2, [r3, #12]
2200:../Dave/Generated/src/FATFS002/Src/ff.c **** 				fs->free_clust = LD_DWORD(fs->win+FSI_Free_Count);
 4099              		.loc 1 2200 0
 4100 0586 BB6A     		ldr	r3, [r7, #40]
 4101 0588 93F81F32 		ldrb	r3, [r3, #543]	@ zero_extendqisi2
 4102 058c 4FEA0362 		lsl	r2, r3, #24
 4103 0590 BB6A     		ldr	r3, [r7, #40]
 4104 0592 93F81E32 		ldrb	r3, [r3, #542]	@ zero_extendqisi2
 4105 0596 4FEA0343 		lsl	r3, r3, #16
 4106 059a 1A43     		orrs	r2, r2, r3
 4107 059c BB6A     		ldr	r3, [r7, #40]
 4108 059e 93F81D32 		ldrb	r3, [r3, #541]	@ zero_extendqisi2
 4109 05a2 4FEA0323 		lsl	r3, r3, #8
 4110 05a6 1A43     		orrs	r2, r2, r3
 4111 05a8 BB6A     		ldr	r3, [r7, #40]
 4112 05aa 93F81C32 		ldrb	r3, [r3, #540]	@ zero_extendqisi2
 4113 05ae 1A43     		orrs	r2, r2, r3
 4114 05b0 BB6A     		ldr	r3, [r7, #40]
 4115 05b2 1A61     		str	r2, [r3, #16]
 4116              	.L270:
2201:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
2202:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
2203:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
2204:../Dave/Generated/src/FATFS002/Src/ff.c **** 	fs->fs_type = fmt;		/* FAT sub-type */
 4117              		.loc 1 2204 0
 4118 05b4 BB6A     		ldr	r3, [r7, #40]
 4119 05b6 97F84720 		ldrb	r2, [r7, #71]
 4120 05ba 1A70     		strb	r2, [r3, #0]
2205:../Dave/Generated/src/FATFS002/Src/ff.c **** 	fs->id = ++Fsid;		/* File system mount ID */
 4121              		.loc 1 2205 0
 4122 05bc 40F20003 		movw	r3, #:lower16:Fsid
 4123 05c0 C0F20003 		movt	r3, #:upper16:Fsid
 4124 05c4 1B88     		ldrh	r3, [r3, #0]
 4125 05c6 03F10103 		add	r3, r3, #1
 4126 05ca 9AB2     		uxth	r2, r3
 4127 05cc 40F20003 		movw	r3, #:lower16:Fsid
 4128 05d0 C0F20003 		movt	r3, #:upper16:Fsid
 4129 05d4 1A80     		strh	r2, [r3, #0]	@ movhi
 4130 05d6 40F20003 		movw	r3, #:lower16:Fsid
 4131 05da C0F20003 		movt	r3, #:upper16:Fsid
 4132 05de 1A88     		ldrh	r2, [r3, #0]
 4133 05e0 BB6A     		ldr	r3, [r7, #40]
 4134 05e2 DA80     		strh	r2, [r3, #6]	@ movhi
2206:../Dave/Generated/src/FATFS002/Src/ff.c **** 	fs->winsect = 0;		/* Invalidate sector cache */
 4135              		.loc 1 2206 0
 4136 05e4 BB6A     		ldr	r3, [r7, #40]
 4137 05e6 4FF00002 		mov	r2, #0
 4138 05ea 1A63     		str	r2, [r3, #48]
2207:../Dave/Generated/src/FATFS002/Src/ff.c **** 	fs->wflag = 0;
 4139              		.loc 1 2207 0
 4140 05ec BB6A     		ldr	r3, [r7, #40]
 4141 05ee 4FF00002 		mov	r2, #0
 4142 05f2 1A71     		strb	r2, [r3, #4]
2208:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _FS_RPATH
2209:../Dave/Generated/src/FATFS002/Src/ff.c **** 	fs->cdir = 0;			/* Current directory (root dir) */
 4143              		.loc 1 2209 0
 4144 05f4 BB6A     		ldr	r3, [r7, #40]
 4145 05f6 4FF00002 		mov	r2, #0
 4146 05fa 9A61     		str	r2, [r3, #24]
2210:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
2211:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _FS_SHARE				/* Clear file lock semaphores */
2212:../Dave/Generated/src/FATFS002/Src/ff.c **** 	clear_lock(fs);
2213:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
2214:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2215:../Dave/Generated/src/FATFS002/Src/ff.c **** 	return FR_OK;
 4147              		.loc 1 2215 0
 4148 05fc 4FF00003 		mov	r3, #0
 4149              	.L241:
2216:../Dave/Generated/src/FATFS002/Src/ff.c **** }
 4150              		.loc 1 2216 0
 4151 0600 1846     		mov	r0, r3
 4152 0602 07F14807 		add	r7, r7, #72
 4153 0606 BD46     		mov	sp, r7
 4154 0608 80BD     		pop	{r7, pc}
 4155              		.cfi_endproc
 4156              	.LFE21:
 4158 060a 00BF     		.section	.text.validate,"ax",%progbits
 4159              		.align	2
 4160              		.thumb
 4161              		.thumb_func
 4163              	validate:
 4164              	.LFB22:
2217:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2218:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2219:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2220:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2221:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
2222:../Dave/Generated/src/FATFS002/Src/ff.c **** /* Check if the file/dir object is valid or not                          */
2223:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
2224:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2225:../Dave/Generated/src/FATFS002/Src/ff.c **** static
2226:../Dave/Generated/src/FATFS002/Src/ff.c **** FRESULT validate (	/* FR_OK(0): The object is valid, !=0: Invalid */
2227:../Dave/Generated/src/FATFS002/Src/ff.c **** 	FATFS *fs,		/* Pointer to the file system object */
2228:../Dave/Generated/src/FATFS002/Src/ff.c **** 	WORD id			/* Member id of the target object to be checked */
2229:../Dave/Generated/src/FATFS002/Src/ff.c **** )
2230:../Dave/Generated/src/FATFS002/Src/ff.c **** {
 4165              		.loc 1 2230 0
 4166              		.cfi_startproc
 4167              		@ args = 0, pretend = 0, frame = 8
 4168              		@ frame_needed = 1, uses_anonymous_args = 0
 4169 0000 80B5     		push	{r7, lr}
 4170              	.LCFI66:
 4171              		.cfi_def_cfa_offset 8
 4172              		.cfi_offset 7, -8
 4173              		.cfi_offset 14, -4
 4174 0002 82B0     		sub	sp, sp, #8
 4175              	.LCFI67:
 4176              		.cfi_def_cfa_offset 16
 4177 0004 00AF     		add	r7, sp, #0
 4178              	.LCFI68:
 4179              		.cfi_def_cfa_register 7
 4180 0006 7860     		str	r0, [r7, #4]
 4181 0008 0B46     		mov	r3, r1
 4182 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2231:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (!fs || !fs->fs_type || fs->id != id)
 4183              		.loc 1 2231 0
 4184 000c 7B68     		ldr	r3, [r7, #4]
 4185 000e 002B     		cmp	r3, #0
 4186 0010 08D0     		beq	.L272
 4187              		.loc 1 2231 0 is_stmt 0 discriminator 1
 4188 0012 7B68     		ldr	r3, [r7, #4]
 4189 0014 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 4190 0016 002B     		cmp	r3, #0
 4191 0018 04D0     		beq	.L272
 4192 001a 7B68     		ldr	r3, [r7, #4]
 4193 001c DB88     		ldrh	r3, [r3, #6]
 4194 001e 7A88     		ldrh	r2, [r7, #2]
 4195 0020 9A42     		cmp	r2, r3
 4196 0022 02D0     		beq	.L273
 4197              	.L272:
2232:../Dave/Generated/src/FATFS002/Src/ff.c **** 		return FR_INVALID_OBJECT;
 4198              		.loc 1 2232 0 is_stmt 1
 4199 0024 4FF00903 		mov	r3, #9
 4200 0028 0EE0     		b	.L274
 4201              	.L273:
2233:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2234:../Dave/Generated/src/FATFS002/Src/ff.c **** 	ENTER_FF(fs);		/* Lock file system */
2235:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2236:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (disk_status(fs->drv) & STA_NOINIT)
 4202              		.loc 1 2236 0
 4203 002a 7B68     		ldr	r3, [r7, #4]
 4204 002c 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 4205 002e 1846     		mov	r0, r3
 4206 0030 FFF7FEFF 		bl	disk_status
 4207 0034 0346     		mov	r3, r0
 4208 0036 03F00103 		and	r3, r3, #1
 4209 003a 002B     		cmp	r3, #0
 4210 003c 02D0     		beq	.L275
2237:../Dave/Generated/src/FATFS002/Src/ff.c **** 		return FR_NOT_READY;
 4211              		.loc 1 2237 0
 4212 003e 4FF00303 		mov	r3, #3
 4213 0042 01E0     		b	.L274
 4214              	.L275:
2238:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2239:../Dave/Generated/src/FATFS002/Src/ff.c **** 	return FR_OK;
 4215              		.loc 1 2239 0
 4216 0044 4FF00003 		mov	r3, #0
 4217              	.L274:
2240:../Dave/Generated/src/FATFS002/Src/ff.c **** }
 4218              		.loc 1 2240 0
 4219 0048 1846     		mov	r0, r3
 4220 004a 07F10807 		add	r7, r7, #8
 4221 004e BD46     		mov	sp, r7
 4222 0050 80BD     		pop	{r7, pc}
 4223              		.cfi_endproc
 4224              	.LFE22:
 4226 0052 00BF     		.section	.text.f_mount,"ax",%progbits
 4227              		.align	2
 4228              		.global	f_mount
 4229              		.thumb
 4230              		.thumb_func
 4232              	f_mount:
 4233              	.LFB23:
2241:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2242:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2243:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2244:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2245:../Dave/Generated/src/FATFS002/Src/ff.c **** /*--------------------------------------------------------------------------
2246:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2247:../Dave/Generated/src/FATFS002/Src/ff.c ****    Public Functions
2248:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2249:../Dave/Generated/src/FATFS002/Src/ff.c **** --------------------------------------------------------------------------*/
2250:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2251:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2252:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2253:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
2254:../Dave/Generated/src/FATFS002/Src/ff.c **** /* Mount/Unmount a Logical Drive                                         */
2255:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
2256:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2257:../Dave/Generated/src/FATFS002/Src/ff.c **** FRESULT f_mount (
2258:../Dave/Generated/src/FATFS002/Src/ff.c **** 	BYTE vol,		/* Logical drive number to be mounted/unmounted */
2259:../Dave/Generated/src/FATFS002/Src/ff.c **** 	FATFS *fs		/* Pointer to new file system object (NULL for unmount)*/
2260:../Dave/Generated/src/FATFS002/Src/ff.c **** )
2261:../Dave/Generated/src/FATFS002/Src/ff.c **** {
 4234              		.loc 1 2261 0
 4235              		.cfi_startproc
 4236              		@ args = 0, pretend = 0, frame = 16
 4237              		@ frame_needed = 1, uses_anonymous_args = 0
 4238              		@ link register save eliminated.
 4239 0000 80B4     		push	{r7}
 4240              	.LCFI69:
 4241              		.cfi_def_cfa_offset 4
 4242              		.cfi_offset 7, -4
 4243 0002 85B0     		sub	sp, sp, #20
 4244              	.LCFI70:
 4245              		.cfi_def_cfa_offset 24
 4246 0004 00AF     		add	r7, sp, #0
 4247              	.LCFI71:
 4248              		.cfi_def_cfa_register 7
 4249 0006 0346     		mov	r3, r0
 4250 0008 3960     		str	r1, [r7, #0]
 4251 000a FB71     		strb	r3, [r7, #7]
2262:../Dave/Generated/src/FATFS002/Src/ff.c **** 	FATFS *rfs;
2263:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2264:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2265:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (vol >= _VOLUMES)		/* Check if the drive number is valid */
 4252              		.loc 1 2265 0
 4253 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4254 000e 012B     		cmp	r3, #1
 4255 0010 02D9     		bls	.L277
2266:../Dave/Generated/src/FATFS002/Src/ff.c **** 		return FR_INVALID_DRIVE;
 4256              		.loc 1 2266 0
 4257 0012 4FF00B03 		mov	r3, #11
 4258 0016 1FE0     		b	.L278
 4259              	.L277:
2267:../Dave/Generated/src/FATFS002/Src/ff.c **** 	rfs = FatFs[vol];			/* Get current fs object */
 4260              		.loc 1 2267 0
 4261 0018 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4262 001a 40F20003 		movw	r3, #:lower16:FatFs
 4263 001e C0F20003 		movt	r3, #:upper16:FatFs
 4264 0022 53F82230 		ldr	r3, [r3, r2, lsl #2]
 4265 0026 FB60     		str	r3, [r7, #12]
2268:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2269:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (rfs) {
 4266              		.loc 1 2269 0
 4267 0028 FB68     		ldr	r3, [r7, #12]
 4268 002a 002B     		cmp	r3, #0
 4269 002c 03D0     		beq	.L279
2270:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _FS_SHARE
2271:../Dave/Generated/src/FATFS002/Src/ff.c **** 		clear_lock(rfs);
2272:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
2273:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _FS_REENTRANT				/* Discard sync object of the current volume */
2274:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (!ff_del_syncobj(rfs->sobj)) return FR_INT_ERR;
2275:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
2276:../Dave/Generated/src/FATFS002/Src/ff.c **** 		rfs->fs_type = 0;		/* Clear old fs object */
 4270              		.loc 1 2276 0
 4271 002e FB68     		ldr	r3, [r7, #12]
 4272 0030 4FF00002 		mov	r2, #0
 4273 0034 1A70     		strb	r2, [r3, #0]
 4274              	.L279:
2277:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
2278:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2279:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (fs) {
 4275              		.loc 1 2279 0
 4276 0036 3B68     		ldr	r3, [r7, #0]
 4277 0038 002B     		cmp	r3, #0
 4278 003a 03D0     		beq	.L280
2280:../Dave/Generated/src/FATFS002/Src/ff.c **** 		fs->fs_type = 0;		/* Clear new fs object */
 4279              		.loc 1 2280 0
 4280 003c 3B68     		ldr	r3, [r7, #0]
 4281 003e 4FF00002 		mov	r2, #0
 4282 0042 1A70     		strb	r2, [r3, #0]
 4283              	.L280:
2281:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _FS_REENTRANT				/* Create sync object for the new volume */
2282:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (!ff_cre_syncobj(vol, &fs->sobj)) return FR_INT_ERR;
2283:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
2284:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
2285:../Dave/Generated/src/FATFS002/Src/ff.c **** 	FatFs[vol] = fs;			/* Register new fs object */
 4284              		.loc 1 2285 0
 4285 0044 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4286 0046 40F20003 		movw	r3, #:lower16:FatFs
 4287 004a C0F20003 		movt	r3, #:upper16:FatFs
 4288 004e 3968     		ldr	r1, [r7, #0]
 4289 0050 43F82210 		str	r1, [r3, r2, lsl #2]
2286:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2287:../Dave/Generated/src/FATFS002/Src/ff.c **** 	return FR_OK;
 4290              		.loc 1 2287 0
 4291 0054 4FF00003 		mov	r3, #0
 4292              	.L278:
2288:../Dave/Generated/src/FATFS002/Src/ff.c **** }
 4293              		.loc 1 2288 0
 4294 0058 1846     		mov	r0, r3
 4295 005a 07F11407 		add	r7, r7, #20
 4296 005e BD46     		mov	sp, r7
 4297 0060 80BC     		pop	{r7}
 4298 0062 7047     		bx	lr
 4299              		.cfi_endproc
 4300              	.LFE23:
 4302              		.section	.text.f_open,"ax",%progbits
 4303              		.align	2
 4304              		.global	f_open
 4305              		.thumb
 4306              		.thumb_func
 4308              	f_open:
 4309              	.LFB24:
2289:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2290:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2291:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2292:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2293:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
2294:../Dave/Generated/src/FATFS002/Src/ff.c **** /* Open or Create a File                                                 */
2295:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
2296:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2297:../Dave/Generated/src/FATFS002/Src/ff.c **** FRESULT f_open (
2298:../Dave/Generated/src/FATFS002/Src/ff.c **** 	FIL *fp,			/* Pointer to the blank file object */
2299:../Dave/Generated/src/FATFS002/Src/ff.c **** 	const TCHAR *path,	/* Pointer to the file name */
2300:../Dave/Generated/src/FATFS002/Src/ff.c **** 	BYTE mode			/* Access mode and file open mode flags */
2301:../Dave/Generated/src/FATFS002/Src/ff.c **** )
2302:../Dave/Generated/src/FATFS002/Src/ff.c **** {
 4310              		.loc 1 2302 0
 4311              		.cfi_startproc
 4312              		@ args = 0, pretend = 0, frame = 72
 4313              		@ frame_needed = 1, uses_anonymous_args = 0
 4314 0000 80B5     		push	{r7, lr}
 4315              	.LCFI72:
 4316              		.cfi_def_cfa_offset 8
 4317              		.cfi_offset 7, -8
 4318              		.cfi_offset 14, -4
 4319 0002 92B0     		sub	sp, sp, #72
 4320              	.LCFI73:
 4321              		.cfi_def_cfa_offset 80
 4322 0004 00AF     		add	r7, sp, #0
 4323              	.LCFI74:
 4324              		.cfi_def_cfa_register 7
 4325 0006 F860     		str	r0, [r7, #12]
 4326 0008 B960     		str	r1, [r7, #8]
 4327 000a 1346     		mov	r3, r2
 4328 000c FB71     		strb	r3, [r7, #7]
2303:../Dave/Generated/src/FATFS002/Src/ff.c **** 	FRESULT res;
2304:../Dave/Generated/src/FATFS002/Src/ff.c **** 	DIR dj;
2305:../Dave/Generated/src/FATFS002/Src/ff.c **** 	BYTE *dir;
2306:../Dave/Generated/src/FATFS002/Src/ff.c **** 	DEF_NAMEBUF;
2307:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2308:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2309:../Dave/Generated/src/FATFS002/Src/ff.c **** 	fp->fs = 0;			/* Clear file object */
 4329              		.loc 1 2309 0
 4330 000e FB68     		ldr	r3, [r7, #12]
 4331 0010 4FF00002 		mov	r2, #0
 4332 0014 1A60     		str	r2, [r3, #0]
2310:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2311:../Dave/Generated/src/FATFS002/Src/ff.c **** #if !_FS_READONLY
2312:../Dave/Generated/src/FATFS002/Src/ff.c **** 	mode &= FA_READ | FA_WRITE | FA_CREATE_ALWAYS | FA_OPEN_ALWAYS | FA_CREATE_NEW;
 4333              		.loc 1 2312 0
 4334 0016 FB79     		ldrb	r3, [r7, #7]
 4335 0018 03F01F03 		and	r3, r3, #31
 4336 001c FB71     		strb	r3, [r7, #7]
2313:../Dave/Generated/src/FATFS002/Src/ff.c **** 	res = chk_mounted(&path, &dj.fs, (BYTE)(mode & ~FA_READ));
 4337              		.loc 1 2313 0
 4338 001e FB79     		ldrb	r3, [r7, #7]
 4339 0020 23F00103 		bic	r3, r3, #1
 4340 0024 DBB2     		uxtb	r3, r3
 4341 0026 07F10801 		add	r1, r7, #8
 4342 002a 07F11C02 		add	r2, r7, #28
 4343 002e 0846     		mov	r0, r1
 4344 0030 1146     		mov	r1, r2
 4345 0032 1A46     		mov	r2, r3
 4346 0034 FFF7FEFF 		bl	chk_mounted
 4347 0038 0346     		mov	r3, r0
 4348 003a 87F84730 		strb	r3, [r7, #71]
2314:../Dave/Generated/src/FATFS002/Src/ff.c **** #else
2315:../Dave/Generated/src/FATFS002/Src/ff.c **** 	mode &= FA_READ;
2316:../Dave/Generated/src/FATFS002/Src/ff.c **** 	res = chk_mounted(&path, &dj.fs, 0);
2317:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
2318:../Dave/Generated/src/FATFS002/Src/ff.c **** 	INIT_BUF(dj);
 4349              		.loc 1 2318 0
 4350 003e 07F11003 		add	r3, r7, #16
 4351 0042 7B63     		str	r3, [r7, #52]
2319:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (res == FR_OK)
 4352              		.loc 1 2319 0
 4353 0044 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 4354 0048 002B     		cmp	r3, #0
 4355 004a 09D1     		bne	.L282
2320:../Dave/Generated/src/FATFS002/Src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
 4356              		.loc 1 2320 0
 4357 004c BB68     		ldr	r3, [r7, #8]
 4358 004e 07F11C02 		add	r2, r7, #28
 4359 0052 1046     		mov	r0, r2
 4360 0054 1946     		mov	r1, r3
 4361 0056 FFF7FEFF 		bl	follow_path
 4362 005a 0346     		mov	r3, r0
 4363 005c 87F84730 		strb	r3, [r7, #71]
 4364              	.L282:
2321:../Dave/Generated/src/FATFS002/Src/ff.c **** 	dir = dj.dir;
 4365              		.loc 1 2321 0
 4366 0060 3B6B     		ldr	r3, [r7, #48]
 4367 0062 3B64     		str	r3, [r7, #64]
2322:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2323:../Dave/Generated/src/FATFS002/Src/ff.c **** #if !_FS_READONLY	/* R/W configuration */
2324:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (res == FR_OK) {
 4368              		.loc 1 2324 0
 4369 0064 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 4370 0068 002B     		cmp	r3, #0
 4371 006a 06D1     		bne	.L283
2325:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (!dir)	/* Current dir itself */
 4372              		.loc 1 2325 0
 4373 006c 3B6C     		ldr	r3, [r7, #64]
 4374 006e 002B     		cmp	r3, #0
 4375 0070 03D1     		bne	.L283
2326:../Dave/Generated/src/FATFS002/Src/ff.c **** 			res = FR_INVALID_NAME;
 4376              		.loc 1 2326 0
 4377 0072 4FF00603 		mov	r3, #6
 4378 0076 87F84730 		strb	r3, [r7, #71]
 4379              	.L283:
2327:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _FS_SHARE
2328:../Dave/Generated/src/FATFS002/Src/ff.c **** 		else
2329:../Dave/Generated/src/FATFS002/Src/ff.c **** 			res = chk_lock(&dj, (mode & ~FA_READ) ? 1 : 0);
2330:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
2331:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
2332:../Dave/Generated/src/FATFS002/Src/ff.c **** 	/* Create or Open a file */
2333:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (mode & (FA_CREATE_ALWAYS | FA_OPEN_ALWAYS | FA_CREATE_NEW)) {
 4380              		.loc 1 2333 0
 4381 007a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4382 007c 03F01C03 		and	r3, r3, #28
 4383 0080 002B     		cmp	r3, #0
 4384 0082 00F0D580 		beq	.L284
 4385              	.LBB4:
2334:../Dave/Generated/src/FATFS002/Src/ff.c **** 		DWORD dw, cl;
2335:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2336:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (res != FR_OK) {					/* No file, create new */
 4386              		.loc 1 2336 0
 4387 0086 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 4388 008a 002B     		cmp	r3, #0
 4389 008c 12D0     		beq	.L285
2337:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (res == FR_NO_FILE)			/* There is no file to open, create a new entry */
 4390              		.loc 1 2337 0
 4391 008e 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 4392 0092 042B     		cmp	r3, #4
 4393 0094 07D1     		bne	.L286
2338:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _FS_SHARE
2339:../Dave/Generated/src/FATFS002/Src/ff.c **** 				res = enq_lock() ? dir_register(&dj) : FR_TOO_MANY_OPEN_FILES;
2340:../Dave/Generated/src/FATFS002/Src/ff.c **** #else
2341:../Dave/Generated/src/FATFS002/Src/ff.c **** 				res = dir_register(&dj);
 4394              		.loc 1 2341 0
 4395 0096 07F11C03 		add	r3, r7, #28
 4396 009a 1846     		mov	r0, r3
 4397 009c FFF7FEFF 		bl	dir_register
 4398 00a0 0346     		mov	r3, r0
 4399 00a2 87F84730 		strb	r3, [r7, #71]
 4400              	.L286:
2342:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
2343:../Dave/Generated/src/FATFS002/Src/ff.c **** 			mode |= FA_CREATE_ALWAYS;		/* File is created */
 4401              		.loc 1 2343 0
 4402 00a6 FB79     		ldrb	r3, [r7, #7]
 4403 00a8 43F00803 		orr	r3, r3, #8
 4404 00ac FB71     		strb	r3, [r7, #7]
2344:../Dave/Generated/src/FATFS002/Src/ff.c **** 			dir = dj.dir;					/* New entry */
 4405              		.loc 1 2344 0
 4406 00ae 3B6B     		ldr	r3, [r7, #48]
 4407 00b0 3B64     		str	r3, [r7, #64]
 4408 00b2 15E0     		b	.L287
 4409              	.L285:
2345:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
2346:../Dave/Generated/src/FATFS002/Src/ff.c **** 		else {								/* Any object is already existing */
2347:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (dir[DIR_Attr] & (AM_RDO | AM_DIR)) {	/* Cannot overwrite it (R/O or DIR) */
 4410              		.loc 1 2347 0
 4411 00b4 3B6C     		ldr	r3, [r7, #64]
 4412 00b6 03F10B03 		add	r3, r3, #11
 4413 00ba 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 4414 00bc 03F01103 		and	r3, r3, #17
 4415 00c0 002B     		cmp	r3, #0
 4416 00c2 04D0     		beq	.L288
2348:../Dave/Generated/src/FATFS002/Src/ff.c **** 				res = FR_DENIED;
 4417              		.loc 1 2348 0
 4418 00c4 4FF00703 		mov	r3, #7
 4419 00c8 87F84730 		strb	r3, [r7, #71]
 4420 00cc 08E0     		b	.L287
 4421              	.L288:
2349:../Dave/Generated/src/FATFS002/Src/ff.c **** 			} else {
2350:../Dave/Generated/src/FATFS002/Src/ff.c **** 				if (mode & FA_CREATE_NEW)	/* Cannot create as new file */
 4422              		.loc 1 2350 0
 4423 00ce FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4424 00d0 03F00403 		and	r3, r3, #4
 4425 00d4 002B     		cmp	r3, #0
 4426 00d6 03D0     		beq	.L287
2351:../Dave/Generated/src/FATFS002/Src/ff.c **** 					res = FR_EXIST;
 4427              		.loc 1 2351 0
 4428 00d8 4FF00803 		mov	r3, #8
 4429 00dc 87F84730 		strb	r3, [r7, #71]
 4430              	.L287:
2352:../Dave/Generated/src/FATFS002/Src/ff.c **** 			}
2353:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
2354:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (res == FR_OK && (mode & FA_CREATE_ALWAYS)) {	/* Truncate it if overwrite mode */
 4431              		.loc 1 2354 0
 4432 00e0 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 4433 00e4 002B     		cmp	r3, #0
 4434 00e6 40F0C580 		bne	.L289
 4435              		.loc 1 2354 0 is_stmt 0 discriminator 1
 4436 00ea FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4437 00ec 03F00803 		and	r3, r3, #8
 4438 00f0 002B     		cmp	r3, #0
 4439 00f2 00F0BF80 		beq	.L289
2355:../Dave/Generated/src/FATFS002/Src/ff.c **** 			dw = get_fattime();					/* Created time */
 4440              		.loc 1 2355 0 is_stmt 1
 4441 00f6 FFF7FEFF 		bl	get_fattime
 4442 00fa F863     		str	r0, [r7, #60]
2356:../Dave/Generated/src/FATFS002/Src/ff.c **** 			ST_DWORD(dir+DIR_CrtTime, dw);
 4443              		.loc 1 2356 0
 4444 00fc 3B6C     		ldr	r3, [r7, #64]
 4445 00fe 03F10E03 		add	r3, r3, #14
 4446 0102 FA6B     		ldr	r2, [r7, #60]
 4447 0104 D2B2     		uxtb	r2, r2
 4448 0106 1A70     		strb	r2, [r3, #0]
 4449 0108 3B6C     		ldr	r3, [r7, #64]
 4450 010a 03F10F03 		add	r3, r3, #15
 4451 010e FA6B     		ldr	r2, [r7, #60]
 4452 0110 92B2     		uxth	r2, r2
 4453 0112 4FEA1222 		lsr	r2, r2, #8
 4454 0116 92B2     		uxth	r2, r2
 4455 0118 D2B2     		uxtb	r2, r2
 4456 011a 1A70     		strb	r2, [r3, #0]
 4457 011c 3B6C     		ldr	r3, [r7, #64]
 4458 011e 03F11003 		add	r3, r3, #16
 4459 0122 FA6B     		ldr	r2, [r7, #60]
 4460 0124 4FEA1242 		lsr	r2, r2, #16
 4461 0128 D2B2     		uxtb	r2, r2
 4462 012a 1A70     		strb	r2, [r3, #0]
 4463 012c 3B6C     		ldr	r3, [r7, #64]
 4464 012e 03F11103 		add	r3, r3, #17
 4465 0132 FA6B     		ldr	r2, [r7, #60]
 4466 0134 4FEA1262 		lsr	r2, r2, #24
 4467 0138 D2B2     		uxtb	r2, r2
 4468 013a 1A70     		strb	r2, [r3, #0]
2357:../Dave/Generated/src/FATFS002/Src/ff.c **** 			dir[DIR_Attr] = 0;					/* Reset attribute */
 4469              		.loc 1 2357 0
 4470 013c 3B6C     		ldr	r3, [r7, #64]
 4471 013e 03F10B03 		add	r3, r3, #11
 4472 0142 4FF00002 		mov	r2, #0
 4473 0146 1A70     		strb	r2, [r3, #0]
2358:../Dave/Generated/src/FATFS002/Src/ff.c **** 			ST_DWORD(dir+DIR_FileSize, 0);		/* size = 0 */
 4474              		.loc 1 2358 0
 4475 0148 3B6C     		ldr	r3, [r7, #64]
 4476 014a 03F11C03 		add	r3, r3, #28
 4477 014e 4FF00002 		mov	r2, #0
 4478 0152 1A70     		strb	r2, [r3, #0]
 4479 0154 3B6C     		ldr	r3, [r7, #64]
 4480 0156 03F11D03 		add	r3, r3, #29
 4481 015a 4FF00002 		mov	r2, #0
 4482 015e 1A70     		strb	r2, [r3, #0]
 4483 0160 3B6C     		ldr	r3, [r7, #64]
 4484 0162 03F11E03 		add	r3, r3, #30
 4485 0166 4FF00002 		mov	r2, #0
 4486 016a 1A70     		strb	r2, [r3, #0]
 4487 016c 3B6C     		ldr	r3, [r7, #64]
 4488 016e 03F11F03 		add	r3, r3, #31
 4489 0172 4FF00002 		mov	r2, #0
 4490 0176 1A70     		strb	r2, [r3, #0]
2359:../Dave/Generated/src/FATFS002/Src/ff.c **** 			cl = LD_CLUST(dir);					/* Get start cluster */
 4491              		.loc 1 2359 0
 4492 0178 3B6C     		ldr	r3, [r7, #64]
 4493 017a 03F11503 		add	r3, r3, #21
 4494 017e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 4495 0180 4FEA0323 		lsl	r3, r3, #8
 4496 0184 9AB2     		uxth	r2, r3
 4497 0186 3B6C     		ldr	r3, [r7, #64]
 4498 0188 03F11403 		add	r3, r3, #20
 4499 018c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 4500 018e 1343     		orrs	r3, r3, r2
 4501 0190 9BB2     		uxth	r3, r3
 4502 0192 9BB2     		uxth	r3, r3
 4503 0194 4FEA0342 		lsl	r2, r3, #16
 4504 0198 3B6C     		ldr	r3, [r7, #64]
 4505 019a 03F11B03 		add	r3, r3, #27
 4506 019e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 4507 01a0 4FEA0323 		lsl	r3, r3, #8
 4508 01a4 99B2     		uxth	r1, r3
 4509 01a6 3B6C     		ldr	r3, [r7, #64]
 4510 01a8 03F11A03 		add	r3, r3, #26
 4511 01ac 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 4512 01ae 0B43     		orrs	r3, r3, r1
 4513 01b0 9BB2     		uxth	r3, r3
 4514 01b2 9BB2     		uxth	r3, r3
 4515 01b4 1343     		orrs	r3, r3, r2
 4516 01b6 BB63     		str	r3, [r7, #56]
2360:../Dave/Generated/src/FATFS002/Src/ff.c **** 			ST_CLUST(dir, 0);					/* cluster = 0 */
 4517              		.loc 1 2360 0
 4518 01b8 3B6C     		ldr	r3, [r7, #64]
 4519 01ba 03F11A03 		add	r3, r3, #26
 4520 01be 4FF00002 		mov	r2, #0
 4521 01c2 1A70     		strb	r2, [r3, #0]
 4522 01c4 3B6C     		ldr	r3, [r7, #64]
 4523 01c6 03F11B03 		add	r3, r3, #27
 4524 01ca 4FF00002 		mov	r2, #0
 4525 01ce 1A70     		strb	r2, [r3, #0]
 4526 01d0 3B6C     		ldr	r3, [r7, #64]
 4527 01d2 03F11403 		add	r3, r3, #20
 4528 01d6 4FF00002 		mov	r2, #0
 4529 01da 1A70     		strb	r2, [r3, #0]
 4530 01dc 3B6C     		ldr	r3, [r7, #64]
 4531 01de 03F11503 		add	r3, r3, #21
 4532 01e2 4FF00002 		mov	r2, #0
 4533 01e6 1A70     		strb	r2, [r3, #0]
2361:../Dave/Generated/src/FATFS002/Src/ff.c **** 			dj.fs->wflag = 1;
 4534              		.loc 1 2361 0
 4535 01e8 FB69     		ldr	r3, [r7, #28]
 4536 01ea 4FF00102 		mov	r2, #1
 4537 01ee 1A71     		strb	r2, [r3, #4]
2362:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (cl) {							/* Remove the cluster chain if exist */
 4538              		.loc 1 2362 0
 4539 01f0 BB6B     		ldr	r3, [r7, #56]
 4540 01f2 002B     		cmp	r3, #0
 4541 01f4 3ED0     		beq	.L289
2363:../Dave/Generated/src/FATFS002/Src/ff.c **** 				dw = dj.fs->winsect;
 4542              		.loc 1 2363 0
 4543 01f6 FB69     		ldr	r3, [r7, #28]
 4544 01f8 1B6B     		ldr	r3, [r3, #48]
 4545 01fa FB63     		str	r3, [r7, #60]
2364:../Dave/Generated/src/FATFS002/Src/ff.c **** 				res = remove_chain(dj.fs, cl);
 4546              		.loc 1 2364 0
 4547 01fc FB69     		ldr	r3, [r7, #28]
 4548 01fe 1846     		mov	r0, r3
 4549 0200 B96B     		ldr	r1, [r7, #56]
 4550 0202 FFF7FEFF 		bl	remove_chain
 4551 0206 0346     		mov	r3, r0
 4552 0208 87F84730 		strb	r3, [r7, #71]
2365:../Dave/Generated/src/FATFS002/Src/ff.c **** 				if (res == FR_OK) {
 4553              		.loc 1 2365 0
 4554 020c 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 4555 0210 002B     		cmp	r3, #0
 4556 0212 2FD1     		bne	.L289
2366:../Dave/Generated/src/FATFS002/Src/ff.c **** 					dj.fs->last_clust = cl - 1;	/* Reuse the cluster hole */
 4557              		.loc 1 2366 0
 4558 0214 FB69     		ldr	r3, [r7, #28]
 4559 0216 BA6B     		ldr	r2, [r7, #56]
 4560 0218 02F1FF32 		add	r2, r2, #-1
 4561 021c DA60     		str	r2, [r3, #12]
2367:../Dave/Generated/src/FATFS002/Src/ff.c **** 					res = move_window(dj.fs, dw);
 4562              		.loc 1 2367 0
 4563 021e FB69     		ldr	r3, [r7, #28]
 4564 0220 1846     		mov	r0, r3
 4565 0222 F96B     		ldr	r1, [r7, #60]
 4566 0224 FFF7FEFF 		bl	move_window
 4567 0228 0346     		mov	r3, r0
 4568 022a 87F84730 		strb	r3, [r7, #71]
 4569 022e 21E0     		b	.L289
 4570              	.L284:
 4571              	.LBE4:
2368:../Dave/Generated/src/FATFS002/Src/ff.c **** 				}
2369:../Dave/Generated/src/FATFS002/Src/ff.c **** 			}
2370:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
2371:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
2372:../Dave/Generated/src/FATFS002/Src/ff.c **** 	else {	/* Open an existing file */
2373:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (res == FR_OK) {						/* Follow succeeded */
 4572              		.loc 1 2373 0
 4573 0230 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 4574 0234 002B     		cmp	r3, #0
 4575 0236 1DD1     		bne	.L289
2374:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (dir[DIR_Attr] & AM_DIR) {		/* It is a directory */
 4576              		.loc 1 2374 0
 4577 0238 3B6C     		ldr	r3, [r7, #64]
 4578 023a 03F10B03 		add	r3, r3, #11
 4579 023e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 4580 0240 03F01003 		and	r3, r3, #16
 4581 0244 002B     		cmp	r3, #0
 4582 0246 04D0     		beq	.L290
2375:../Dave/Generated/src/FATFS002/Src/ff.c **** 				res = FR_NO_FILE;
 4583              		.loc 1 2375 0
 4584 0248 4FF00403 		mov	r3, #4
 4585 024c 87F84730 		strb	r3, [r7, #71]
 4586 0250 10E0     		b	.L289
 4587              	.L290:
2376:../Dave/Generated/src/FATFS002/Src/ff.c **** 			} else {
2377:../Dave/Generated/src/FATFS002/Src/ff.c **** 				if ((mode & FA_WRITE) && (dir[DIR_Attr] & AM_RDO)) /* R/O violation */
 4588              		.loc 1 2377 0
 4589 0252 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4590 0254 03F00203 		and	r3, r3, #2
 4591 0258 002B     		cmp	r3, #0
 4592 025a 0BD0     		beq	.L289
 4593              		.loc 1 2377 0 is_stmt 0 discriminator 1
 4594 025c 3B6C     		ldr	r3, [r7, #64]
 4595 025e 03F10B03 		add	r3, r3, #11
 4596 0262 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 4597 0264 03F00103 		and	r3, r3, #1
 4598 0268 002B     		cmp	r3, #0
 4599 026a 03D0     		beq	.L289
2378:../Dave/Generated/src/FATFS002/Src/ff.c **** 					res = FR_DENIED;
 4600              		.loc 1 2378 0 is_stmt 1
 4601 026c 4FF00703 		mov	r3, #7
 4602 0270 87F84730 		strb	r3, [r7, #71]
 4603              	.L289:
2379:../Dave/Generated/src/FATFS002/Src/ff.c **** 			}
2380:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
2381:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
2382:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (res == FR_OK) {
 4604              		.loc 1 2382 0
 4605 0274 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 4606 0278 002B     		cmp	r3, #0
 4607 027a 0FD1     		bne	.L291
2383:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (mode & FA_CREATE_ALWAYS)			/* Set file change flag if created or overwritten */
 4608              		.loc 1 2383 0
 4609 027c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4610 027e 03F00803 		and	r3, r3, #8
 4611 0282 002B     		cmp	r3, #0
 4612 0284 03D0     		beq	.L292
2384:../Dave/Generated/src/FATFS002/Src/ff.c **** 			mode |= FA__WRITTEN;
 4613              		.loc 1 2384 0
 4614 0286 FB79     		ldrb	r3, [r7, #7]
 4615 0288 43F02003 		orr	r3, r3, #32
 4616 028c FB71     		strb	r3, [r7, #7]
 4617              	.L292:
2385:../Dave/Generated/src/FATFS002/Src/ff.c **** 		fp->dir_sect = dj.fs->winsect;			/* Pointer to the directory entry */
 4618              		.loc 1 2385 0
 4619 028e FB69     		ldr	r3, [r7, #28]
 4620 0290 1A6B     		ldr	r2, [r3, #48]
 4621 0292 FB68     		ldr	r3, [r7, #12]
 4622 0294 DA61     		str	r2, [r3, #28]
2386:../Dave/Generated/src/FATFS002/Src/ff.c **** 		fp->dir_ptr = dir;
 4623              		.loc 1 2386 0
 4624 0296 FB68     		ldr	r3, [r7, #12]
 4625 0298 3A6C     		ldr	r2, [r7, #64]
 4626 029a 1A62     		str	r2, [r3, #32]
 4627              	.L291:
2387:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _FS_SHARE
2388:../Dave/Generated/src/FATFS002/Src/ff.c **** 		fp->lockid = inc_lock(&dj, (mode & ~FA_READ) ? 1 : 0);
2389:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (!fp->lockid) res = FR_INT_ERR;
2390:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
2391:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
2392:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2393:../Dave/Generated/src/FATFS002/Src/ff.c **** #else				/* R/O configuration */
2394:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (res == FR_OK) {					/* Follow succeeded */
2395:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (!dir) {						/* Current dir itself */
2396:../Dave/Generated/src/FATFS002/Src/ff.c **** 			res = FR_INVALID_NAME;
2397:../Dave/Generated/src/FATFS002/Src/ff.c **** 		} else {
2398:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (dir[DIR_Attr] & AM_DIR)	/* It is a directory */
2399:../Dave/Generated/src/FATFS002/Src/ff.c **** 				res = FR_NO_FILE;
2400:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
2401:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
2402:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
2403:../Dave/Generated/src/FATFS002/Src/ff.c **** 	FREE_BUF();
2404:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2405:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (res == FR_OK) {
 4628              		.loc 1 2405 0
 4629 029c 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 4630 02a0 002B     		cmp	r3, #0
 4631 02a2 4DD1     		bne	.L293
2406:../Dave/Generated/src/FATFS002/Src/ff.c **** 		fp->flag = mode;					/* File access mode */
 4632              		.loc 1 2406 0
 4633 02a4 FB68     		ldr	r3, [r7, #12]
 4634 02a6 FA79     		ldrb	r2, [r7, #7]
 4635 02a8 9A71     		strb	r2, [r3, #6]
2407:../Dave/Generated/src/FATFS002/Src/ff.c **** 		fp->sclust = LD_CLUST(dir);			/* File start cluster */
 4636              		.loc 1 2407 0
 4637 02aa 3B6C     		ldr	r3, [r7, #64]
 4638 02ac 03F11503 		add	r3, r3, #21
 4639 02b0 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 4640 02b2 4FEA0323 		lsl	r3, r3, #8
 4641 02b6 9AB2     		uxth	r2, r3
 4642 02b8 3B6C     		ldr	r3, [r7, #64]
 4643 02ba 03F11403 		add	r3, r3, #20
 4644 02be 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 4645 02c0 1343     		orrs	r3, r3, r2
 4646 02c2 9BB2     		uxth	r3, r3
 4647 02c4 9BB2     		uxth	r3, r3
 4648 02c6 4FEA0342 		lsl	r2, r3, #16
 4649 02ca 3B6C     		ldr	r3, [r7, #64]
 4650 02cc 03F11B03 		add	r3, r3, #27
 4651 02d0 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 4652 02d2 4FEA0323 		lsl	r3, r3, #8
 4653 02d6 99B2     		uxth	r1, r3
 4654 02d8 3B6C     		ldr	r3, [r7, #64]
 4655 02da 03F11A03 		add	r3, r3, #26
 4656 02de 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 4657 02e0 0B43     		orrs	r3, r3, r1
 4658 02e2 9BB2     		uxth	r3, r3
 4659 02e4 9BB2     		uxth	r3, r3
 4660 02e6 1A43     		orrs	r2, r2, r3
 4661 02e8 FB68     		ldr	r3, [r7, #12]
 4662 02ea 1A61     		str	r2, [r3, #16]
2408:../Dave/Generated/src/FATFS002/Src/ff.c **** 		fp->fsize = LD_DWORD(dir+DIR_FileSize);	/* File size */
 4663              		.loc 1 2408 0
 4664 02ec 3B6C     		ldr	r3, [r7, #64]
 4665 02ee 03F11F03 		add	r3, r3, #31
 4666 02f2 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 4667 02f4 4FEA0362 		lsl	r2, r3, #24
 4668 02f8 3B6C     		ldr	r3, [r7, #64]
 4669 02fa 03F11E03 		add	r3, r3, #30
 4670 02fe 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 4671 0300 4FEA0343 		lsl	r3, r3, #16
 4672 0304 1A43     		orrs	r2, r2, r3
 4673 0306 3B6C     		ldr	r3, [r7, #64]
 4674 0308 03F11D03 		add	r3, r3, #29
 4675 030c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 4676 030e 4FEA0323 		lsl	r3, r3, #8
 4677 0312 1A43     		orrs	r2, r2, r3
 4678 0314 3B6C     		ldr	r3, [r7, #64]
 4679 0316 03F11C03 		add	r3, r3, #28
 4680 031a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 4681 031c 1A43     		orrs	r2, r2, r3
 4682 031e FB68     		ldr	r3, [r7, #12]
 4683 0320 DA60     		str	r2, [r3, #12]
2409:../Dave/Generated/src/FATFS002/Src/ff.c **** 		fp->fptr = 0;						/* File pointer */
 4684              		.loc 1 2409 0
 4685 0322 FB68     		ldr	r3, [r7, #12]
 4686 0324 4FF00002 		mov	r2, #0
 4687 0328 9A60     		str	r2, [r3, #8]
2410:../Dave/Generated/src/FATFS002/Src/ff.c **** 		fp->dsect = 0;
 4688              		.loc 1 2410 0
 4689 032a FB68     		ldr	r3, [r7, #12]
 4690 032c 4FF00002 		mov	r2, #0
 4691 0330 9A61     		str	r2, [r3, #24]
2411:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _USE_FASTSEEK
2412:../Dave/Generated/src/FATFS002/Src/ff.c **** 		fp->cltbl = 0;						/* Normal seek mode */
2413:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
2414:../Dave/Generated/src/FATFS002/Src/ff.c **** 		fp->fs = dj.fs; fp->id = dj.fs->id;	/* Validate file object */
 4692              		.loc 1 2414 0
 4693 0332 FA69     		ldr	r2, [r7, #28]
 4694 0334 FB68     		ldr	r3, [r7, #12]
 4695 0336 1A60     		str	r2, [r3, #0]
 4696 0338 FB69     		ldr	r3, [r7, #28]
 4697 033a DA88     		ldrh	r2, [r3, #6]
 4698 033c FB68     		ldr	r3, [r7, #12]
 4699 033e 9A80     		strh	r2, [r3, #4]	@ movhi
 4700              	.L293:
2415:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
2416:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2417:../Dave/Generated/src/FATFS002/Src/ff.c **** 	LEAVE_FF(dj.fs, res);
 4701              		.loc 1 2417 0
 4702 0340 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
2418:../Dave/Generated/src/FATFS002/Src/ff.c **** }
 4703              		.loc 1 2418 0
 4704 0344 1846     		mov	r0, r3
 4705 0346 07F14807 		add	r7, r7, #72
 4706 034a BD46     		mov	sp, r7
 4707 034c 80BD     		pop	{r7, pc}
 4708              		.cfi_endproc
 4709              	.LFE24:
 4711 034e 00BF     		.section	.text.f_read,"ax",%progbits
 4712              		.align	2
 4713              		.global	f_read
 4714              		.thumb
 4715              		.thumb_func
 4717              	f_read:
 4718              	.LFB25:
2419:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2420:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2421:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2422:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2423:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
2424:../Dave/Generated/src/FATFS002/Src/ff.c **** /* Read File                                                             */
2425:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
2426:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2427:../Dave/Generated/src/FATFS002/Src/ff.c **** FRESULT f_read (
2428:../Dave/Generated/src/FATFS002/Src/ff.c **** 	FIL *fp, 		/* Pointer to the file object */
2429:../Dave/Generated/src/FATFS002/Src/ff.c **** 	void *buff,		/* Pointer to data buffer */
2430:../Dave/Generated/src/FATFS002/Src/ff.c **** 	UINT btr,		/* Number of bytes to read */
2431:../Dave/Generated/src/FATFS002/Src/ff.c **** 	UINT *br		/* Pointer to number of bytes read */
2432:../Dave/Generated/src/FATFS002/Src/ff.c **** )
2433:../Dave/Generated/src/FATFS002/Src/ff.c **** {
 4719              		.loc 1 2433 0
 4720              		.cfi_startproc
 4721              		@ args = 0, pretend = 0, frame = 48
 4722              		@ frame_needed = 1, uses_anonymous_args = 0
 4723 0000 80B5     		push	{r7, lr}
 4724              	.LCFI75:
 4725              		.cfi_def_cfa_offset 8
 4726              		.cfi_offset 7, -8
 4727              		.cfi_offset 14, -4
 4728 0002 8CB0     		sub	sp, sp, #48
 4729              	.LCFI76:
 4730              		.cfi_def_cfa_offset 56
 4731 0004 00AF     		add	r7, sp, #0
 4732              	.LCFI77:
 4733              		.cfi_def_cfa_register 7
 4734 0006 F860     		str	r0, [r7, #12]
 4735 0008 B960     		str	r1, [r7, #8]
 4736 000a 7A60     		str	r2, [r7, #4]
 4737 000c 3B60     		str	r3, [r7, #0]
2434:../Dave/Generated/src/FATFS002/Src/ff.c **** 	FRESULT res;
2435:../Dave/Generated/src/FATFS002/Src/ff.c **** 	DWORD clst, sect, remain;
2436:../Dave/Generated/src/FATFS002/Src/ff.c **** 	UINT rcnt, cc;
2437:../Dave/Generated/src/FATFS002/Src/ff.c **** 	BYTE csect, *rbuff = buff;
 4738              		.loc 1 2437 0
 4739 000e BB68     		ldr	r3, [r7, #8]
 4740 0010 3B62     		str	r3, [r7, #32]
2438:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2439:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2440:../Dave/Generated/src/FATFS002/Src/ff.c **** 	*br = 0;	/* Initialize byte counter */
 4741              		.loc 1 2440 0
 4742 0012 3B68     		ldr	r3, [r7, #0]
 4743 0014 4FF00002 		mov	r2, #0
 4744 0018 1A60     		str	r2, [r3, #0]
2441:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2442:../Dave/Generated/src/FATFS002/Src/ff.c **** 	res = validate(fp->fs, fp->id);				/* Check validity */
 4745              		.loc 1 2442 0
 4746 001a FB68     		ldr	r3, [r7, #12]
 4747 001c 1A68     		ldr	r2, [r3, #0]
 4748 001e FB68     		ldr	r3, [r7, #12]
 4749 0020 9B88     		ldrh	r3, [r3, #4]
 4750 0022 1046     		mov	r0, r2
 4751 0024 1946     		mov	r1, r3
 4752 0026 FFF7FEFF 		bl	validate
 4753 002a 0346     		mov	r3, r0
 4754 002c FB77     		strb	r3, [r7, #31]
2443:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (res != FR_OK) LEAVE_FF(fp->fs, res);
 4755              		.loc 1 2443 0
 4756 002e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 4757 0030 002B     		cmp	r3, #0
 4758 0032 01D0     		beq	.L296
 4759              		.loc 1 2443 0 is_stmt 0 discriminator 1
 4760 0034 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 4761 0036 56E1     		b	.L297
 4762              	.L296:
2444:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (fp->flag & FA__ERROR)					/* Aborted file? */
 4763              		.loc 1 2444 0 is_stmt 1
 4764 0038 FB68     		ldr	r3, [r7, #12]
 4765 003a 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 4766 003c DBB2     		uxtb	r3, r3
 4767 003e 5BB2     		sxtb	r3, r3
 4768 0040 002B     		cmp	r3, #0
 4769 0042 02DA     		bge	.L298
2445:../Dave/Generated/src/FATFS002/Src/ff.c **** 		LEAVE_FF(fp->fs, FR_INT_ERR);
 4770              		.loc 1 2445 0
 4771 0044 4FF00203 		mov	r3, #2
 4772 0048 4DE1     		b	.L297
 4773              	.L298:
2446:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (!(fp->flag & FA_READ)) 					/* Check access mode */
 4774              		.loc 1 2446 0
 4775 004a FB68     		ldr	r3, [r7, #12]
 4776 004c 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 4777 004e 03F00103 		and	r3, r3, #1
 4778 0052 002B     		cmp	r3, #0
 4779 0054 02D1     		bne	.L299
2447:../Dave/Generated/src/FATFS002/Src/ff.c **** 		LEAVE_FF(fp->fs, FR_DENIED);
 4780              		.loc 1 2447 0
 4781 0056 4FF00703 		mov	r3, #7
 4782 005a 44E1     		b	.L297
 4783              	.L299:
2448:../Dave/Generated/src/FATFS002/Src/ff.c **** 	remain = fp->fsize - fp->fptr;
 4784              		.loc 1 2448 0
 4785 005c FB68     		ldr	r3, [r7, #12]
 4786 005e DA68     		ldr	r2, [r3, #12]
 4787 0060 FB68     		ldr	r3, [r7, #12]
 4788 0062 9B68     		ldr	r3, [r3, #8]
 4789 0064 D31A     		subs	r3, r2, r3
 4790 0066 BB61     		str	r3, [r7, #24]
2449:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (btr > remain) btr = (UINT)remain;		/* Truncate btr by remaining bytes */
 4791              		.loc 1 2449 0
 4792 0068 7A68     		ldr	r2, [r7, #4]
 4793 006a BB69     		ldr	r3, [r7, #24]
 4794 006c 9A42     		cmp	r2, r3
 4795 006e 40F23481 		bls	.L301
 4796              		.loc 1 2449 0 is_stmt 0 discriminator 1
 4797 0072 BB69     		ldr	r3, [r7, #24]
 4798 0074 7B60     		str	r3, [r7, #4]
2450:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2451:../Dave/Generated/src/FATFS002/Src/ff.c **** 	for ( ;  btr;								/* Repeat until all data read */
 4799              		.loc 1 2451 0 is_stmt 1 discriminator 1
 4800 0076 30E1     		b	.L301
 4801              	.L318:
2452:../Dave/Generated/src/FATFS002/Src/ff.c **** 		rbuff += rcnt, fp->fptr += rcnt, *br += rcnt, btr -= rcnt) {
2453:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if ((fp->fptr % SS(fp->fs)) == 0) {		/* On the sector boundary? */
 4802              		.loc 1 2453 0
 4803 0078 FB68     		ldr	r3, [r7, #12]
 4804 007a 9B68     		ldr	r3, [r3, #8]
 4805 007c 4FEAC353 		lsl	r3, r3, #23
 4806 0080 4FEAD353 		lsr	r3, r3, #23
 4807 0084 002B     		cmp	r3, #0
 4808 0086 40F0F480 		bne	.L302
2454:../Dave/Generated/src/FATFS002/Src/ff.c **** 			csect = (BYTE)(fp->fptr / SS(fp->fs) & (fp->fs->csize - 1));	/* Sector offset in the cluster */
 4809              		.loc 1 2454 0
 4810 008a FB68     		ldr	r3, [r7, #12]
 4811 008c 9B68     		ldr	r3, [r3, #8]
 4812 008e 4FEA5323 		lsr	r3, r3, #9
 4813 0092 DAB2     		uxtb	r2, r3
 4814 0094 FB68     		ldr	r3, [r7, #12]
 4815 0096 1B68     		ldr	r3, [r3, #0]
 4816 0098 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 4817 009a 03F1FF33 		add	r3, r3, #-1
 4818 009e DBB2     		uxtb	r3, r3
 4819 00a0 1340     		ands	r3, r3, r2
 4820 00a2 FB75     		strb	r3, [r7, #23]
2455:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (!csect) {						/* On the cluster boundary? */
 4821              		.loc 1 2455 0
 4822 00a4 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4823 00a6 002B     		cmp	r3, #0
 4824 00a8 2ED1     		bne	.L303
2456:../Dave/Generated/src/FATFS002/Src/ff.c **** 				if (fp->fptr == 0) {			/* On the top of the file? */
 4825              		.loc 1 2456 0
 4826 00aa FB68     		ldr	r3, [r7, #12]
 4827 00ac 9B68     		ldr	r3, [r3, #8]
 4828 00ae 002B     		cmp	r3, #0
 4829 00b0 03D1     		bne	.L304
2457:../Dave/Generated/src/FATFS002/Src/ff.c **** 					clst = fp->sclust;			/* Follow from the origin */
 4830              		.loc 1 2457 0
 4831 00b2 FB68     		ldr	r3, [r7, #12]
 4832 00b4 1B69     		ldr	r3, [r3, #16]
 4833 00b6 FB62     		str	r3, [r7, #44]
 4834 00b8 08E0     		b	.L305
 4835              	.L304:
2458:../Dave/Generated/src/FATFS002/Src/ff.c **** 				} else {						/* Middle or end of the file */
2459:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _USE_FASTSEEK
2460:../Dave/Generated/src/FATFS002/Src/ff.c **** 					if (fp->cltbl)
2461:../Dave/Generated/src/FATFS002/Src/ff.c **** 						clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
2462:../Dave/Generated/src/FATFS002/Src/ff.c **** 					else
2463:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
2464:../Dave/Generated/src/FATFS002/Src/ff.c **** 						clst = get_fat(fp->fs, fp->clust);	/* Follow cluster chain on the FAT */
 4836              		.loc 1 2464 0
 4837 00ba FB68     		ldr	r3, [r7, #12]
 4838 00bc 1A68     		ldr	r2, [r3, #0]
 4839 00be FB68     		ldr	r3, [r7, #12]
 4840 00c0 5B69     		ldr	r3, [r3, #20]
 4841 00c2 1046     		mov	r0, r2
 4842 00c4 1946     		mov	r1, r3
 4843 00c6 FFF7FEFF 		bl	get_fat
 4844 00ca F862     		str	r0, [r7, #44]
 4845              	.L305:
2465:../Dave/Generated/src/FATFS002/Src/ff.c **** 				}
2466:../Dave/Generated/src/FATFS002/Src/ff.c **** 				if (clst < 2) ABORT(fp->fs, FR_INT_ERR);
 4846              		.loc 1 2466 0
 4847 00cc FB6A     		ldr	r3, [r7, #44]
 4848 00ce 012B     		cmp	r3, #1
 4849 00d0 09D8     		bhi	.L306
 4850              		.loc 1 2466 0 is_stmt 0 discriminator 1
 4851 00d2 FB68     		ldr	r3, [r7, #12]
 4852 00d4 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 4853 00d6 63F07F03 		orn	r3, r3, #127
 4854 00da DAB2     		uxtb	r2, r3
 4855 00dc FB68     		ldr	r3, [r7, #12]
 4856 00de 9A71     		strb	r2, [r3, #6]
 4857 00e0 4FF00203 		mov	r3, #2
 4858 00e4 FFE0     		b	.L297
 4859              	.L306:
2467:../Dave/Generated/src/FATFS002/Src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
 4860              		.loc 1 2467 0 is_stmt 1
 4861 00e6 FB6A     		ldr	r3, [r7, #44]
 4862 00e8 B3F1FF3F 		cmp	r3, #-1
 4863 00ec 09D1     		bne	.L307
 4864              		.loc 1 2467 0 is_stmt 0 discriminator 1
 4865 00ee FB68     		ldr	r3, [r7, #12]
 4866 00f0 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 4867 00f2 63F07F03 		orn	r3, r3, #127
 4868 00f6 DAB2     		uxtb	r2, r3
 4869 00f8 FB68     		ldr	r3, [r7, #12]
 4870 00fa 9A71     		strb	r2, [r3, #6]
 4871 00fc 4FF00103 		mov	r3, #1
 4872 0100 F1E0     		b	.L297
 4873              	.L307:
2468:../Dave/Generated/src/FATFS002/Src/ff.c **** 				fp->clust = clst;				/* Update current cluster */
 4874              		.loc 1 2468 0 is_stmt 1
 4875 0102 FB68     		ldr	r3, [r7, #12]
 4876 0104 FA6A     		ldr	r2, [r7, #44]
 4877 0106 5A61     		str	r2, [r3, #20]
 4878              	.L303:
2469:../Dave/Generated/src/FATFS002/Src/ff.c **** 			}
2470:../Dave/Generated/src/FATFS002/Src/ff.c **** 			sect = clust2sect(fp->fs, fp->clust);	/* Get current sector */
 4879              		.loc 1 2470 0
 4880 0108 FB68     		ldr	r3, [r7, #12]
 4881 010a 1A68     		ldr	r2, [r3, #0]
 4882 010c FB68     		ldr	r3, [r7, #12]
 4883 010e 5B69     		ldr	r3, [r3, #20]
 4884 0110 1046     		mov	r0, r2
 4885 0112 1946     		mov	r1, r3
 4886 0114 FFF7FEFF 		bl	clust2sect
 4887 0118 3861     		str	r0, [r7, #16]
2471:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (!sect) ABORT(fp->fs, FR_INT_ERR);
 4888              		.loc 1 2471 0
 4889 011a 3B69     		ldr	r3, [r7, #16]
 4890 011c 002B     		cmp	r3, #0
 4891 011e 09D1     		bne	.L308
 4892              		.loc 1 2471 0 is_stmt 0 discriminator 1
 4893 0120 FB68     		ldr	r3, [r7, #12]
 4894 0122 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 4895 0124 63F07F03 		orn	r3, r3, #127
 4896 0128 DAB2     		uxtb	r2, r3
 4897 012a FB68     		ldr	r3, [r7, #12]
 4898 012c 9A71     		strb	r2, [r3, #6]
 4899 012e 4FF00203 		mov	r3, #2
 4900 0132 D8E0     		b	.L297
 4901              	.L308:
2472:../Dave/Generated/src/FATFS002/Src/ff.c **** 			sect += csect;
 4902              		.loc 1 2472 0 is_stmt 1
 4903 0134 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4904 0136 3A69     		ldr	r2, [r7, #16]
 4905 0138 D318     		adds	r3, r2, r3
 4906 013a 3B61     		str	r3, [r7, #16]
2473:../Dave/Generated/src/FATFS002/Src/ff.c **** 			cc = btr / SS(fp->fs);				/* When remaining bytes >= sector size, */
 4907              		.loc 1 2473 0
 4908 013c 7B68     		ldr	r3, [r7, #4]
 4909 013e 4FEA5323 		lsr	r3, r3, #9
 4910 0142 7B62     		str	r3, [r7, #36]
2474:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (cc) {							/* Read maximum contiguous sectors directly */
 4911              		.loc 1 2474 0
 4912 0144 7B6A     		ldr	r3, [r7, #36]
 4913 0146 002B     		cmp	r3, #0
 4914 0148 48D0     		beq	.L309
2475:../Dave/Generated/src/FATFS002/Src/ff.c **** 				if (csect + cc > fp->fs->csize)	/* Clip at cluster boundary */
 4915              		.loc 1 2475 0
 4916 014a FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 4917 014c 7B6A     		ldr	r3, [r7, #36]
 4918 014e D218     		adds	r2, r2, r3
 4919 0150 FB68     		ldr	r3, [r7, #12]
 4920 0152 1B68     		ldr	r3, [r3, #0]
 4921 0154 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 4922 0156 9A42     		cmp	r2, r3
 4923 0158 06D9     		bls	.L310
2476:../Dave/Generated/src/FATFS002/Src/ff.c **** 					cc = fp->fs->csize - csect;
 4924              		.loc 1 2476 0
 4925 015a FB68     		ldr	r3, [r7, #12]
 4926 015c 1B68     		ldr	r3, [r3, #0]
 4927 015e 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 4928 0160 1A46     		mov	r2, r3
 4929 0162 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4930 0164 D31A     		subs	r3, r2, r3
 4931 0166 7B62     		str	r3, [r7, #36]
 4932              	.L310:
2477:../Dave/Generated/src/FATFS002/Src/ff.c **** 				if (disk_read(fp->fs->drv, rbuff, sect, (BYTE)cc) != RES_OK)
 4933              		.loc 1 2477 0
 4934 0168 FB68     		ldr	r3, [r7, #12]
 4935 016a 1B68     		ldr	r3, [r3, #0]
 4936 016c 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 4937 016e 7B6A     		ldr	r3, [r7, #36]
 4938 0170 DBB2     		uxtb	r3, r3
 4939 0172 1046     		mov	r0, r2
 4940 0174 396A     		ldr	r1, [r7, #32]
 4941 0176 3A69     		ldr	r2, [r7, #16]
 4942 0178 FFF7FEFF 		bl	disk_read
 4943 017c 0346     		mov	r3, r0
 4944 017e 002B     		cmp	r3, #0
 4945 0180 09D0     		beq	.L311
2478:../Dave/Generated/src/FATFS002/Src/ff.c **** 					ABORT(fp->fs, FR_DISK_ERR);
 4946              		.loc 1 2478 0
 4947 0182 FB68     		ldr	r3, [r7, #12]
 4948 0184 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 4949 0186 63F07F03 		orn	r3, r3, #127
 4950 018a DAB2     		uxtb	r2, r3
 4951 018c FB68     		ldr	r3, [r7, #12]
 4952 018e 9A71     		strb	r2, [r3, #6]
 4953 0190 4FF00103 		mov	r3, #1
 4954 0194 A7E0     		b	.L297
 4955              	.L311:
2479:../Dave/Generated/src/FATFS002/Src/ff.c **** #if !_FS_READONLY && _FS_MINIMIZE <= 2			/* Replace one of the read sectors with cached data if it 
2480:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _FS_TINY
2481:../Dave/Generated/src/FATFS002/Src/ff.c **** 				if (fp->fs->wflag && fp->fs->winsect - sect < cc)
2482:../Dave/Generated/src/FATFS002/Src/ff.c **** 					mem_cpy(rbuff + ((fp->fs->winsect - sect) * SS(fp->fs)), fp->fs->win, SS(fp->fs));
2483:../Dave/Generated/src/FATFS002/Src/ff.c **** #else
2484:../Dave/Generated/src/FATFS002/Src/ff.c **** 				if ((fp->flag & FA__DIRTY) && fp->dsect - sect < cc)
 4956              		.loc 1 2484 0
 4957 0196 FB68     		ldr	r3, [r7, #12]
 4958 0198 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 4959 019a 03F04003 		and	r3, r3, #64
 4960 019e 002B     		cmp	r3, #0
 4961 01a0 17D0     		beq	.L312
 4962              		.loc 1 2484 0 is_stmt 0 discriminator 1
 4963 01a2 FB68     		ldr	r3, [r7, #12]
 4964 01a4 9A69     		ldr	r2, [r3, #24]
 4965 01a6 3B69     		ldr	r3, [r7, #16]
 4966 01a8 D21A     		subs	r2, r2, r3
 4967 01aa 7B6A     		ldr	r3, [r7, #36]
 4968 01ac 9A42     		cmp	r2, r3
 4969 01ae 10D2     		bcs	.L312
2485:../Dave/Generated/src/FATFS002/Src/ff.c **** 					mem_cpy(rbuff + ((fp->dsect - sect) * SS(fp->fs)), fp->buf, SS(fp->fs));
 4970              		.loc 1 2485 0 is_stmt 1
 4971 01b0 FB68     		ldr	r3, [r7, #12]
 4972 01b2 9A69     		ldr	r2, [r3, #24]
 4973 01b4 3B69     		ldr	r3, [r7, #16]
 4974 01b6 D31A     		subs	r3, r2, r3
 4975 01b8 4FEA4323 		lsl	r3, r3, #9
 4976 01bc 3A6A     		ldr	r2, [r7, #32]
 4977 01be D218     		adds	r2, r2, r3
 4978 01c0 FB68     		ldr	r3, [r7, #12]
 4979 01c2 03F12403 		add	r3, r3, #36
 4980 01c6 1046     		mov	r0, r2
 4981 01c8 1946     		mov	r1, r3
 4982 01ca 4FF40072 		mov	r2, #512
 4983 01ce FFF7FEFF 		bl	mem_cpy
 4984              	.L312:
2486:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
2487:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
2488:../Dave/Generated/src/FATFS002/Src/ff.c **** 				rcnt = SS(fp->fs) * cc;			/* Number of bytes transferred */
 4985              		.loc 1 2488 0
 4986 01d2 7B6A     		ldr	r3, [r7, #36]
 4987 01d4 4FEA4323 		lsl	r3, r3, #9
 4988 01d8 BB62     		str	r3, [r7, #40]
2489:../Dave/Generated/src/FATFS002/Src/ff.c **** 				continue;
 4989              		.loc 1 2489 0
 4990 01da 6AE0     		b	.L313
 4991              	.L309:
2490:../Dave/Generated/src/FATFS002/Src/ff.c **** 			}
2491:../Dave/Generated/src/FATFS002/Src/ff.c **** #if !_FS_TINY
2492:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (fp->dsect != sect) {			/* Load data sector if not in cache */
 4992              		.loc 1 2492 0
 4993 01dc FB68     		ldr	r3, [r7, #12]
 4994 01de 9A69     		ldr	r2, [r3, #24]
 4995 01e0 3B69     		ldr	r3, [r7, #16]
 4996 01e2 9A42     		cmp	r2, r3
 4997 01e4 42D0     		beq	.L314
2493:../Dave/Generated/src/FATFS002/Src/ff.c **** #if !_FS_READONLY
2494:../Dave/Generated/src/FATFS002/Src/ff.c **** 				if (fp->flag & FA__DIRTY) {		/* Write-back dirty sector cache */
 4998              		.loc 1 2494 0
 4999 01e6 FB68     		ldr	r3, [r7, #12]
 5000 01e8 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 5001 01ea 03F04003 		and	r3, r3, #64
 5002 01ee 002B     		cmp	r3, #0
 5003 01f0 22D0     		beq	.L315
2495:../Dave/Generated/src/FATFS002/Src/ff.c **** 					if (disk_write(fp->fs->drv, fp->buf, fp->dsect, 1) != RES_OK)
 5004              		.loc 1 2495 0
 5005 01f2 FB68     		ldr	r3, [r7, #12]
 5006 01f4 1B68     		ldr	r3, [r3, #0]
 5007 01f6 5978     		ldrb	r1, [r3, #1]	@ zero_extendqisi2
 5008 01f8 FB68     		ldr	r3, [r7, #12]
 5009 01fa 03F12402 		add	r2, r3, #36
 5010 01fe FB68     		ldr	r3, [r7, #12]
 5011 0200 9B69     		ldr	r3, [r3, #24]
 5012 0202 0846     		mov	r0, r1
 5013 0204 1146     		mov	r1, r2
 5014 0206 1A46     		mov	r2, r3
 5015 0208 4FF00103 		mov	r3, #1
 5016 020c FFF7FEFF 		bl	disk_write
 5017 0210 0346     		mov	r3, r0
 5018 0212 002B     		cmp	r3, #0
 5019 0214 09D0     		beq	.L316
2496:../Dave/Generated/src/FATFS002/Src/ff.c **** 						ABORT(fp->fs, FR_DISK_ERR);
 5020              		.loc 1 2496 0
 5021 0216 FB68     		ldr	r3, [r7, #12]
 5022 0218 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 5023 021a 63F07F03 		orn	r3, r3, #127
 5024 021e DAB2     		uxtb	r2, r3
 5025 0220 FB68     		ldr	r3, [r7, #12]
 5026 0222 9A71     		strb	r2, [r3, #6]
 5027 0224 4FF00103 		mov	r3, #1
 5028 0228 5DE0     		b	.L297
 5029              	.L316:
2497:../Dave/Generated/src/FATFS002/Src/ff.c **** 					fp->flag &= ~FA__DIRTY;
 5030              		.loc 1 2497 0
 5031 022a FB68     		ldr	r3, [r7, #12]
 5032 022c 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 5033 022e 23F04003 		bic	r3, r3, #64
 5034 0232 DAB2     		uxtb	r2, r3
 5035 0234 FB68     		ldr	r3, [r7, #12]
 5036 0236 9A71     		strb	r2, [r3, #6]
 5037              	.L315:
2498:../Dave/Generated/src/FATFS002/Src/ff.c **** 				}
2499:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
2500:../Dave/Generated/src/FATFS002/Src/ff.c **** 				if (disk_read(fp->fs->drv, fp->buf, sect, 1) != RES_OK)	/* Fill sector cache */
 5038              		.loc 1 2500 0
 5039 0238 FB68     		ldr	r3, [r7, #12]
 5040 023a 1B68     		ldr	r3, [r3, #0]
 5041 023c 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 5042 023e FB68     		ldr	r3, [r7, #12]
 5043 0240 03F12403 		add	r3, r3, #36
 5044 0244 1046     		mov	r0, r2
 5045 0246 1946     		mov	r1, r3
 5046 0248 3A69     		ldr	r2, [r7, #16]
 5047 024a 4FF00103 		mov	r3, #1
 5048 024e FFF7FEFF 		bl	disk_read
 5049 0252 0346     		mov	r3, r0
 5050 0254 002B     		cmp	r3, #0
 5051 0256 09D0     		beq	.L314
2501:../Dave/Generated/src/FATFS002/Src/ff.c **** 					ABORT(fp->fs, FR_DISK_ERR);
 5052              		.loc 1 2501 0
 5053 0258 FB68     		ldr	r3, [r7, #12]
 5054 025a 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 5055 025c 63F07F03 		orn	r3, r3, #127
 5056 0260 DAB2     		uxtb	r2, r3
 5057 0262 FB68     		ldr	r3, [r7, #12]
 5058 0264 9A71     		strb	r2, [r3, #6]
 5059 0266 4FF00103 		mov	r3, #1
 5060 026a 3CE0     		b	.L297
 5061              	.L314:
2502:../Dave/Generated/src/FATFS002/Src/ff.c **** 			}
2503:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
2504:../Dave/Generated/src/FATFS002/Src/ff.c **** 			fp->dsect = sect;
 5062              		.loc 1 2504 0
 5063 026c FB68     		ldr	r3, [r7, #12]
 5064 026e 3A69     		ldr	r2, [r7, #16]
 5065 0270 9A61     		str	r2, [r3, #24]
 5066              	.L302:
2505:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
2506:../Dave/Generated/src/FATFS002/Src/ff.c **** 		rcnt = SS(fp->fs) - (fp->fptr % SS(fp->fs));	/* Get partial sector data from sector buffer */
 5067              		.loc 1 2506 0
 5068 0272 FB68     		ldr	r3, [r7, #12]
 5069 0274 9B68     		ldr	r3, [r3, #8]
 5070 0276 4FEAC353 		lsl	r3, r3, #23
 5071 027a 4FEAD353 		lsr	r3, r3, #23
 5072 027e C3F50073 		rsb	r3, r3, #512
 5073 0282 BB62     		str	r3, [r7, #40]
2507:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (rcnt > btr) rcnt = btr;
 5074              		.loc 1 2507 0
 5075 0284 BA6A     		ldr	r2, [r7, #40]
 5076 0286 7B68     		ldr	r3, [r7, #4]
 5077 0288 9A42     		cmp	r2, r3
 5078 028a 01D9     		bls	.L317
 5079              		.loc 1 2507 0 is_stmt 0 discriminator 1
 5080 028c 7B68     		ldr	r3, [r7, #4]
 5081 028e BB62     		str	r3, [r7, #40]
 5082              	.L317:
2508:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _FS_TINY
2509:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (move_window(fp->fs, fp->dsect))		/* Move sector window */
2510:../Dave/Generated/src/FATFS002/Src/ff.c **** 			ABORT(fp->fs, FR_DISK_ERR);
2511:../Dave/Generated/src/FATFS002/Src/ff.c **** 		mem_cpy(rbuff, &fp->fs->win[fp->fptr % SS(fp->fs)], rcnt);	/* Pick partial sector */
2512:../Dave/Generated/src/FATFS002/Src/ff.c **** #else
2513:../Dave/Generated/src/FATFS002/Src/ff.c **** 		mem_cpy(rbuff, &fp->buf[fp->fptr % SS(fp->fs)], rcnt);	/* Pick partial sector */
 5083              		.loc 1 2513 0 is_stmt 1
 5084 0290 FB68     		ldr	r3, [r7, #12]
 5085 0292 9B68     		ldr	r3, [r3, #8]
 5086 0294 4FEAC353 		lsl	r3, r3, #23
 5087 0298 4FEAD353 		lsr	r3, r3, #23
 5088 029c 03F12003 		add	r3, r3, #32
 5089 02a0 FA68     		ldr	r2, [r7, #12]
 5090 02a2 D318     		adds	r3, r2, r3
 5091 02a4 03F10403 		add	r3, r3, #4
 5092 02a8 386A     		ldr	r0, [r7, #32]
 5093 02aa 1946     		mov	r1, r3
 5094 02ac BA6A     		ldr	r2, [r7, #40]
 5095 02ae FFF7FEFF 		bl	mem_cpy
 5096              	.L313:
2452:../Dave/Generated/src/FATFS002/Src/ff.c **** 		rbuff += rcnt, fp->fptr += rcnt, *br += rcnt, btr -= rcnt) {
 5097              		.loc 1 2452 0
 5098 02b2 3A6A     		ldr	r2, [r7, #32]
 5099 02b4 BB6A     		ldr	r3, [r7, #40]
 5100 02b6 D318     		adds	r3, r2, r3
 5101 02b8 3B62     		str	r3, [r7, #32]
 5102 02ba FB68     		ldr	r3, [r7, #12]
 5103 02bc 9A68     		ldr	r2, [r3, #8]
 5104 02be BB6A     		ldr	r3, [r7, #40]
 5105 02c0 D218     		adds	r2, r2, r3
 5106 02c2 FB68     		ldr	r3, [r7, #12]
 5107 02c4 9A60     		str	r2, [r3, #8]
 5108 02c6 3B68     		ldr	r3, [r7, #0]
 5109 02c8 1A68     		ldr	r2, [r3, #0]
 5110 02ca BB6A     		ldr	r3, [r7, #40]
 5111 02cc D218     		adds	r2, r2, r3
 5112 02ce 3B68     		ldr	r3, [r7, #0]
 5113 02d0 1A60     		str	r2, [r3, #0]
 5114 02d2 7A68     		ldr	r2, [r7, #4]
 5115 02d4 BB6A     		ldr	r3, [r7, #40]
 5116 02d6 D31A     		subs	r3, r2, r3
 5117 02d8 7B60     		str	r3, [r7, #4]
 5118              	.L301:
2451:../Dave/Generated/src/FATFS002/Src/ff.c **** 	for ( ;  btr;								/* Repeat until all data read */
 5119              		.loc 1 2451 0 discriminator 1
 5120 02da 7B68     		ldr	r3, [r7, #4]
 5121 02dc 002B     		cmp	r3, #0
 5122 02de 7FF4CBAE 		bne	.L318
2514:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
2515:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
2516:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2517:../Dave/Generated/src/FATFS002/Src/ff.c **** 	LEAVE_FF(fp->fs, FR_OK);
 5123              		.loc 1 2517 0
 5124 02e2 4FF00003 		mov	r3, #0
 5125              	.L297:
2518:../Dave/Generated/src/FATFS002/Src/ff.c **** }
 5126              		.loc 1 2518 0
 5127 02e6 1846     		mov	r0, r3
 5128 02e8 07F13007 		add	r7, r7, #48
 5129 02ec BD46     		mov	sp, r7
 5130 02ee 80BD     		pop	{r7, pc}
 5131              		.cfi_endproc
 5132              	.LFE25:
 5134              		.section	.text.f_write,"ax",%progbits
 5135              		.align	2
 5136              		.global	f_write
 5137              		.thumb
 5138              		.thumb_func
 5140              	f_write:
 5141              	.LFB26:
2519:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2520:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2521:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2522:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2523:../Dave/Generated/src/FATFS002/Src/ff.c **** #if !_FS_READONLY
2524:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
2525:../Dave/Generated/src/FATFS002/Src/ff.c **** /* Write File                                                            */
2526:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
2527:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2528:../Dave/Generated/src/FATFS002/Src/ff.c **** FRESULT f_write (
2529:../Dave/Generated/src/FATFS002/Src/ff.c **** 	FIL *fp,			/* Pointer to the file object */
2530:../Dave/Generated/src/FATFS002/Src/ff.c **** 	const void *buff,	/* Pointer to the data to be written */
2531:../Dave/Generated/src/FATFS002/Src/ff.c **** 	UINT btw,			/* Number of bytes to write */
2532:../Dave/Generated/src/FATFS002/Src/ff.c **** 	UINT *bw			/* Pointer to number of bytes written */
2533:../Dave/Generated/src/FATFS002/Src/ff.c **** )
2534:../Dave/Generated/src/FATFS002/Src/ff.c **** {
 5142              		.loc 1 2534 0
 5143              		.cfi_startproc
 5144              		@ args = 0, pretend = 0, frame = 40
 5145              		@ frame_needed = 1, uses_anonymous_args = 0
 5146 0000 80B5     		push	{r7, lr}
 5147              	.LCFI78:
 5148              		.cfi_def_cfa_offset 8
 5149              		.cfi_offset 7, -8
 5150              		.cfi_offset 14, -4
 5151 0002 8AB0     		sub	sp, sp, #40
 5152              	.LCFI79:
 5153              		.cfi_def_cfa_offset 48
 5154 0004 00AF     		add	r7, sp, #0
 5155              	.LCFI80:
 5156              		.cfi_def_cfa_register 7
 5157 0006 F860     		str	r0, [r7, #12]
 5158 0008 B960     		str	r1, [r7, #8]
 5159 000a 7A60     		str	r2, [r7, #4]
 5160 000c 3B60     		str	r3, [r7, #0]
2535:../Dave/Generated/src/FATFS002/Src/ff.c **** 	FRESULT res;
2536:../Dave/Generated/src/FATFS002/Src/ff.c **** 	DWORD clst, sect;
2537:../Dave/Generated/src/FATFS002/Src/ff.c **** 	UINT wcnt, cc;
2538:../Dave/Generated/src/FATFS002/Src/ff.c **** 	const BYTE *wbuff = buff;
 5161              		.loc 1 2538 0
 5162 000e BB68     		ldr	r3, [r7, #8]
 5163 0010 BB61     		str	r3, [r7, #24]
2539:../Dave/Generated/src/FATFS002/Src/ff.c **** 	BYTE csect;
2540:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2541:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2542:../Dave/Generated/src/FATFS002/Src/ff.c **** 	*bw = 0;	/* Initialize byte counter */
 5164              		.loc 1 2542 0
 5165 0012 3B68     		ldr	r3, [r7, #0]
 5166 0014 4FF00002 		mov	r2, #0
 5167 0018 1A60     		str	r2, [r3, #0]
2543:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2544:../Dave/Generated/src/FATFS002/Src/ff.c **** 	res = validate(fp->fs, fp->id);			/* Check validity */
 5168              		.loc 1 2544 0
 5169 001a FB68     		ldr	r3, [r7, #12]
 5170 001c 1A68     		ldr	r2, [r3, #0]
 5171 001e FB68     		ldr	r3, [r7, #12]
 5172 0020 9B88     		ldrh	r3, [r3, #4]
 5173 0022 1046     		mov	r0, r2
 5174 0024 1946     		mov	r1, r3
 5175 0026 FFF7FEFF 		bl	validate
 5176 002a 0346     		mov	r3, r0
 5177 002c FB75     		strb	r3, [r7, #23]
2545:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (res != FR_OK) LEAVE_FF(fp->fs, res);
 5178              		.loc 1 2545 0
 5179 002e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 5180 0030 002B     		cmp	r3, #0
 5181 0032 01D0     		beq	.L320
 5182              		.loc 1 2545 0 is_stmt 0 discriminator 1
 5183 0034 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 5184 0036 88E1     		b	.L321
 5185              	.L320:
2546:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (fp->flag & FA__ERROR)				/* Aborted file? */
 5186              		.loc 1 2546 0 is_stmt 1
 5187 0038 FB68     		ldr	r3, [r7, #12]
 5188 003a 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 5189 003c DBB2     		uxtb	r3, r3
 5190 003e 5BB2     		sxtb	r3, r3
 5191 0040 002B     		cmp	r3, #0
 5192 0042 02DA     		bge	.L322
2547:../Dave/Generated/src/FATFS002/Src/ff.c **** 		LEAVE_FF(fp->fs, FR_INT_ERR);
 5193              		.loc 1 2547 0
 5194 0044 4FF00203 		mov	r3, #2
 5195 0048 7FE1     		b	.L321
 5196              	.L322:
2548:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (!(fp->flag & FA_WRITE))				/* Check access mode */
 5197              		.loc 1 2548 0
 5198 004a FB68     		ldr	r3, [r7, #12]
 5199 004c 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 5200 004e 03F00203 		and	r3, r3, #2
 5201 0052 002B     		cmp	r3, #0
 5202 0054 02D1     		bne	.L323
2549:../Dave/Generated/src/FATFS002/Src/ff.c **** 		LEAVE_FF(fp->fs, FR_DENIED);
 5203              		.loc 1 2549 0
 5204 0056 4FF00703 		mov	r3, #7
 5205 005a 76E1     		b	.L321
 5206              	.L323:
2550:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if ((DWORD)(fp->fsize + btw) < fp->fsize) btw = 0;	/* File size cannot reach 4GB */
 5207              		.loc 1 2550 0
 5208 005c FB68     		ldr	r3, [r7, #12]
 5209 005e DA68     		ldr	r2, [r3, #12]
 5210 0060 7B68     		ldr	r3, [r7, #4]
 5211 0062 D218     		adds	r2, r2, r3
 5212 0064 FB68     		ldr	r3, [r7, #12]
 5213 0066 DB68     		ldr	r3, [r3, #12]
 5214 0068 9A42     		cmp	r2, r3
 5215 006a 80F05581 		bcs	.L325
 5216              		.loc 1 2550 0 is_stmt 0 discriminator 1
 5217 006e 4FF00003 		mov	r3, #0
 5218 0072 7B60     		str	r3, [r7, #4]
2551:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2552:../Dave/Generated/src/FATFS002/Src/ff.c **** 	for ( ;  btw;							/* Repeat until all data written */
 5219              		.loc 1 2552 0 is_stmt 1 discriminator 1
 5220 0074 50E1     		b	.L325
 5221              	.L344:
2553:../Dave/Generated/src/FATFS002/Src/ff.c **** 		wbuff += wcnt, fp->fptr += wcnt, *bw += wcnt, btw -= wcnt) {
2554:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if ((fp->fptr % SS(fp->fs)) == 0) {	/* On the sector boundary? */
 5222              		.loc 1 2554 0
 5223 0076 FB68     		ldr	r3, [r7, #12]
 5224 0078 9B68     		ldr	r3, [r3, #8]
 5225 007a 4FEAC353 		lsl	r3, r3, #23
 5226 007e 4FEAD353 		lsr	r3, r3, #23
 5227 0082 002B     		cmp	r3, #0
 5228 0084 40F00D81 		bne	.L326
2555:../Dave/Generated/src/FATFS002/Src/ff.c **** 			csect = (BYTE)(fp->fptr / SS(fp->fs) & (fp->fs->csize - 1));	/* Sector offset in the cluster */
 5229              		.loc 1 2555 0
 5230 0088 FB68     		ldr	r3, [r7, #12]
 5231 008a 9B68     		ldr	r3, [r3, #8]
 5232 008c 4FEA5323 		lsr	r3, r3, #9
 5233 0090 DAB2     		uxtb	r2, r3
 5234 0092 FB68     		ldr	r3, [r7, #12]
 5235 0094 1B68     		ldr	r3, [r3, #0]
 5236 0096 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 5237 0098 03F1FF33 		add	r3, r3, #-1
 5238 009c DBB2     		uxtb	r3, r3
 5239 009e 1340     		ands	r3, r3, r2
 5240 00a0 BB75     		strb	r3, [r7, #22]
2556:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (!csect) {					/* On the cluster boundary? */
 5241              		.loc 1 2556 0
 5242 00a2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 5243 00a4 002B     		cmp	r3, #0
 5244 00a6 40D1     		bne	.L327
2557:../Dave/Generated/src/FATFS002/Src/ff.c **** 				if (fp->fptr == 0) {		/* On the top of the file? */
 5245              		.loc 1 2557 0
 5246 00a8 FB68     		ldr	r3, [r7, #12]
 5247 00aa 9B68     		ldr	r3, [r3, #8]
 5248 00ac 002B     		cmp	r3, #0
 5249 00ae 11D1     		bne	.L328
2558:../Dave/Generated/src/FATFS002/Src/ff.c **** 					clst = fp->sclust;		/* Follow from the origin */
 5250              		.loc 1 2558 0
 5251 00b0 FB68     		ldr	r3, [r7, #12]
 5252 00b2 1B69     		ldr	r3, [r3, #16]
 5253 00b4 7B62     		str	r3, [r7, #36]
2559:../Dave/Generated/src/FATFS002/Src/ff.c **** 					if (clst == 0)			/* When no cluster is allocated, */
 5254              		.loc 1 2559 0
 5255 00b6 7B6A     		ldr	r3, [r7, #36]
 5256 00b8 002B     		cmp	r3, #0
 5257 00ba 14D1     		bne	.L329
2560:../Dave/Generated/src/FATFS002/Src/ff.c **** 						fp->sclust = clst = create_chain(fp->fs, 0);	/* Create a new cluster chain */
 5258              		.loc 1 2560 0
 5259 00bc FB68     		ldr	r3, [r7, #12]
 5260 00be 1B68     		ldr	r3, [r3, #0]
 5261 00c0 1846     		mov	r0, r3
 5262 00c2 4FF00001 		mov	r1, #0
 5263 00c6 FFF7FEFF 		bl	create_chain
 5264 00ca 7862     		str	r0, [r7, #36]
 5265 00cc FB68     		ldr	r3, [r7, #12]
 5266 00ce 7A6A     		ldr	r2, [r7, #36]
 5267 00d0 1A61     		str	r2, [r3, #16]
 5268 00d2 08E0     		b	.L329
 5269              	.L328:
2561:../Dave/Generated/src/FATFS002/Src/ff.c **** 				} else {					/* Middle or end of the file */
2562:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _USE_FASTSEEK
2563:../Dave/Generated/src/FATFS002/Src/ff.c **** 					if (fp->cltbl)
2564:../Dave/Generated/src/FATFS002/Src/ff.c **** 						clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
2565:../Dave/Generated/src/FATFS002/Src/ff.c **** 					else
2566:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
2567:../Dave/Generated/src/FATFS002/Src/ff.c **** 						clst = create_chain(fp->fs, fp->clust);	/* Follow or stretch cluster chain on the FAT */
 5270              		.loc 1 2567 0
 5271 00d4 FB68     		ldr	r3, [r7, #12]
 5272 00d6 1A68     		ldr	r2, [r3, #0]
 5273 00d8 FB68     		ldr	r3, [r7, #12]
 5274 00da 5B69     		ldr	r3, [r3, #20]
 5275 00dc 1046     		mov	r0, r2
 5276 00de 1946     		mov	r1, r3
 5277 00e0 FFF7FEFF 		bl	create_chain
 5278 00e4 7862     		str	r0, [r7, #36]
 5279              	.L329:
2568:../Dave/Generated/src/FATFS002/Src/ff.c **** 				}
2569:../Dave/Generated/src/FATFS002/Src/ff.c **** 				if (clst == 0) break;		/* Could not allocate a new cluster (disk full) */
 5280              		.loc 1 2569 0
 5281 00e6 7B6A     		ldr	r3, [r7, #36]
 5282 00e8 002B     		cmp	r3, #0
 5283 00ea 00F01A81 		beq	.L346
 5284              	.L330:
2570:../Dave/Generated/src/FATFS002/Src/ff.c **** 				if (clst == 1) ABORT(fp->fs, FR_INT_ERR);
 5285              		.loc 1 2570 0
 5286 00ee 7B6A     		ldr	r3, [r7, #36]
 5287 00f0 012B     		cmp	r3, #1
 5288 00f2 09D1     		bne	.L332
 5289              		.loc 1 2570 0 is_stmt 0 discriminator 1
 5290 00f4 FB68     		ldr	r3, [r7, #12]
 5291 00f6 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 5292 00f8 63F07F03 		orn	r3, r3, #127
 5293 00fc DAB2     		uxtb	r2, r3
 5294 00fe FB68     		ldr	r3, [r7, #12]
 5295 0100 9A71     		strb	r2, [r3, #6]
 5296 0102 4FF00203 		mov	r3, #2
 5297 0106 20E1     		b	.L321
 5298              	.L332:
2571:../Dave/Generated/src/FATFS002/Src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
 5299              		.loc 1 2571 0 is_stmt 1
 5300 0108 7B6A     		ldr	r3, [r7, #36]
 5301 010a B3F1FF3F 		cmp	r3, #-1
 5302 010e 09D1     		bne	.L333
 5303              		.loc 1 2571 0 is_stmt 0 discriminator 1
 5304 0110 FB68     		ldr	r3, [r7, #12]
 5305 0112 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 5306 0114 63F07F03 		orn	r3, r3, #127
 5307 0118 DAB2     		uxtb	r2, r3
 5308 011a FB68     		ldr	r3, [r7, #12]
 5309 011c 9A71     		strb	r2, [r3, #6]
 5310 011e 4FF00103 		mov	r3, #1
 5311 0122 12E1     		b	.L321
 5312              	.L333:
2572:../Dave/Generated/src/FATFS002/Src/ff.c **** 				fp->clust = clst;			/* Update current cluster */
 5313              		.loc 1 2572 0 is_stmt 1
 5314 0124 FB68     		ldr	r3, [r7, #12]
 5315 0126 7A6A     		ldr	r2, [r7, #36]
 5316 0128 5A61     		str	r2, [r3, #20]
 5317              	.L327:
2573:../Dave/Generated/src/FATFS002/Src/ff.c **** 			}
2574:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _FS_TINY
2575:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (fp->fs->winsect == fp->dsect && move_window(fp->fs, 0))	/* Write-back sector cache */
2576:../Dave/Generated/src/FATFS002/Src/ff.c **** 				ABORT(fp->fs, FR_DISK_ERR);
2577:../Dave/Generated/src/FATFS002/Src/ff.c **** #else
2578:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (fp->flag & FA__DIRTY) {		/* Write-back sector cache */
 5318              		.loc 1 2578 0
 5319 012a FB68     		ldr	r3, [r7, #12]
 5320 012c 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 5321 012e 03F04003 		and	r3, r3, #64
 5322 0132 002B     		cmp	r3, #0
 5323 0134 22D0     		beq	.L334
2579:../Dave/Generated/src/FATFS002/Src/ff.c **** 				if (disk_write(fp->fs->drv, fp->buf, fp->dsect, 1) != RES_OK)
 5324              		.loc 1 2579 0
 5325 0136 FB68     		ldr	r3, [r7, #12]
 5326 0138 1B68     		ldr	r3, [r3, #0]
 5327 013a 5978     		ldrb	r1, [r3, #1]	@ zero_extendqisi2
 5328 013c FB68     		ldr	r3, [r7, #12]
 5329 013e 03F12402 		add	r2, r3, #36
 5330 0142 FB68     		ldr	r3, [r7, #12]
 5331 0144 9B69     		ldr	r3, [r3, #24]
 5332 0146 0846     		mov	r0, r1
 5333 0148 1146     		mov	r1, r2
 5334 014a 1A46     		mov	r2, r3
 5335 014c 4FF00103 		mov	r3, #1
 5336 0150 FFF7FEFF 		bl	disk_write
 5337 0154 0346     		mov	r3, r0
 5338 0156 002B     		cmp	r3, #0
 5339 0158 09D0     		beq	.L335
2580:../Dave/Generated/src/FATFS002/Src/ff.c **** 					ABORT(fp->fs, FR_DISK_ERR);
 5340              		.loc 1 2580 0
 5341 015a FB68     		ldr	r3, [r7, #12]
 5342 015c 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 5343 015e 63F07F03 		orn	r3, r3, #127
 5344 0162 DAB2     		uxtb	r2, r3
 5345 0164 FB68     		ldr	r3, [r7, #12]
 5346 0166 9A71     		strb	r2, [r3, #6]
 5347 0168 4FF00103 		mov	r3, #1
 5348 016c EDE0     		b	.L321
 5349              	.L335:
2581:../Dave/Generated/src/FATFS002/Src/ff.c **** 				fp->flag &= ~FA__DIRTY;
 5350              		.loc 1 2581 0
 5351 016e FB68     		ldr	r3, [r7, #12]
 5352 0170 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 5353 0172 23F04003 		bic	r3, r3, #64
 5354 0176 DAB2     		uxtb	r2, r3
 5355 0178 FB68     		ldr	r3, [r7, #12]
 5356 017a 9A71     		strb	r2, [r3, #6]
 5357              	.L334:
2582:../Dave/Generated/src/FATFS002/Src/ff.c **** 			}
2583:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
2584:../Dave/Generated/src/FATFS002/Src/ff.c **** 			sect = clust2sect(fp->fs, fp->clust);	/* Get current sector */
 5358              		.loc 1 2584 0
 5359 017c FB68     		ldr	r3, [r7, #12]
 5360 017e 1A68     		ldr	r2, [r3, #0]
 5361 0180 FB68     		ldr	r3, [r7, #12]
 5362 0182 5B69     		ldr	r3, [r3, #20]
 5363 0184 1046     		mov	r0, r2
 5364 0186 1946     		mov	r1, r3
 5365 0188 FFF7FEFF 		bl	clust2sect
 5366 018c 3861     		str	r0, [r7, #16]
2585:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (!sect) ABORT(fp->fs, FR_INT_ERR);
 5367              		.loc 1 2585 0
 5368 018e 3B69     		ldr	r3, [r7, #16]
 5369 0190 002B     		cmp	r3, #0
 5370 0192 09D1     		bne	.L336
 5371              		.loc 1 2585 0 is_stmt 0 discriminator 1
 5372 0194 FB68     		ldr	r3, [r7, #12]
 5373 0196 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 5374 0198 63F07F03 		orn	r3, r3, #127
 5375 019c DAB2     		uxtb	r2, r3
 5376 019e FB68     		ldr	r3, [r7, #12]
 5377 01a0 9A71     		strb	r2, [r3, #6]
 5378 01a2 4FF00203 		mov	r3, #2
 5379 01a6 D0E0     		b	.L321
 5380              	.L336:
2586:../Dave/Generated/src/FATFS002/Src/ff.c **** 			sect += csect;
 5381              		.loc 1 2586 0 is_stmt 1
 5382 01a8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 5383 01aa 3A69     		ldr	r2, [r7, #16]
 5384 01ac D318     		adds	r3, r2, r3
 5385 01ae 3B61     		str	r3, [r7, #16]
2587:../Dave/Generated/src/FATFS002/Src/ff.c **** 			cc = btw / SS(fp->fs);			/* When remaining bytes >= sector size, */
 5386              		.loc 1 2587 0
 5387 01b0 7B68     		ldr	r3, [r7, #4]
 5388 01b2 4FEA5323 		lsr	r3, r3, #9
 5389 01b6 FB61     		str	r3, [r7, #28]
2588:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (cc) {						/* Write maximum contiguous sectors directly */
 5390              		.loc 1 2588 0
 5391 01b8 FB69     		ldr	r3, [r7, #28]
 5392 01ba 002B     		cmp	r3, #0
 5393 01bc 49D0     		beq	.L337
2589:../Dave/Generated/src/FATFS002/Src/ff.c **** 				if (csect + cc > fp->fs->csize)	/* Clip at cluster boundary */
 5394              		.loc 1 2589 0
 5395 01be BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 5396 01c0 FB69     		ldr	r3, [r7, #28]
 5397 01c2 D218     		adds	r2, r2, r3
 5398 01c4 FB68     		ldr	r3, [r7, #12]
 5399 01c6 1B68     		ldr	r3, [r3, #0]
 5400 01c8 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 5401 01ca 9A42     		cmp	r2, r3
 5402 01cc 06D9     		bls	.L338
2590:../Dave/Generated/src/FATFS002/Src/ff.c **** 					cc = fp->fs->csize - csect;
 5403              		.loc 1 2590 0
 5404 01ce FB68     		ldr	r3, [r7, #12]
 5405 01d0 1B68     		ldr	r3, [r3, #0]
 5406 01d2 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 5407 01d4 1A46     		mov	r2, r3
 5408 01d6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 5409 01d8 D31A     		subs	r3, r2, r3
 5410 01da FB61     		str	r3, [r7, #28]
 5411              	.L338:
2591:../Dave/Generated/src/FATFS002/Src/ff.c **** 				if (disk_write(fp->fs->drv, wbuff, sect, (BYTE)cc) != RES_OK)
 5412              		.loc 1 2591 0
 5413 01dc FB68     		ldr	r3, [r7, #12]
 5414 01de 1B68     		ldr	r3, [r3, #0]
 5415 01e0 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 5416 01e2 FB69     		ldr	r3, [r7, #28]
 5417 01e4 DBB2     		uxtb	r3, r3
 5418 01e6 1046     		mov	r0, r2
 5419 01e8 B969     		ldr	r1, [r7, #24]
 5420 01ea 3A69     		ldr	r2, [r7, #16]
 5421 01ec FFF7FEFF 		bl	disk_write
 5422 01f0 0346     		mov	r3, r0
 5423 01f2 002B     		cmp	r3, #0
 5424 01f4 09D0     		beq	.L339
2592:../Dave/Generated/src/FATFS002/Src/ff.c **** 					ABORT(fp->fs, FR_DISK_ERR);
 5425              		.loc 1 2592 0
 5426 01f6 FB68     		ldr	r3, [r7, #12]
 5427 01f8 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 5428 01fa 63F07F03 		orn	r3, r3, #127
 5429 01fe DAB2     		uxtb	r2, r3
 5430 0200 FB68     		ldr	r3, [r7, #12]
 5431 0202 9A71     		strb	r2, [r3, #6]
 5432 0204 4FF00103 		mov	r3, #1
 5433 0208 9FE0     		b	.L321
 5434              	.L339:
2593:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _FS_TINY
2594:../Dave/Generated/src/FATFS002/Src/ff.c **** 				if (fp->fs->winsect - sect < cc) {	/* Refill sector cache if it gets invalidated by the direct 
2595:../Dave/Generated/src/FATFS002/Src/ff.c **** 					mem_cpy(fp->fs->win, wbuff + ((fp->fs->winsect - sect) * SS(fp->fs)), SS(fp->fs));
2596:../Dave/Generated/src/FATFS002/Src/ff.c **** 					fp->fs->wflag = 0;
2597:../Dave/Generated/src/FATFS002/Src/ff.c **** 				}
2598:../Dave/Generated/src/FATFS002/Src/ff.c **** #else
2599:../Dave/Generated/src/FATFS002/Src/ff.c **** 				if (fp->dsect - sect < cc) { /* Refill sector cache if it gets invalidated by the direct write 
 5435              		.loc 1 2599 0
 5436 020a FB68     		ldr	r3, [r7, #12]
 5437 020c 9A69     		ldr	r2, [r3, #24]
 5438 020e 3B69     		ldr	r3, [r7, #16]
 5439 0210 D21A     		subs	r2, r2, r3
 5440 0212 FB69     		ldr	r3, [r7, #28]
 5441 0214 9A42     		cmp	r2, r3
 5442 0216 17D2     		bcs	.L340
2600:../Dave/Generated/src/FATFS002/Src/ff.c **** 					mem_cpy(fp->buf, wbuff + ((fp->dsect - sect) * SS(fp->fs)), SS(fp->fs));
 5443              		.loc 1 2600 0
 5444 0218 FB68     		ldr	r3, [r7, #12]
 5445 021a 03F12402 		add	r2, r3, #36
 5446 021e FB68     		ldr	r3, [r7, #12]
 5447 0220 9969     		ldr	r1, [r3, #24]
 5448 0222 3B69     		ldr	r3, [r7, #16]
 5449 0224 CB1A     		subs	r3, r1, r3
 5450 0226 4FEA4323 		lsl	r3, r3, #9
 5451 022a B969     		ldr	r1, [r7, #24]
 5452 022c CB18     		adds	r3, r1, r3
 5453 022e 1046     		mov	r0, r2
 5454 0230 1946     		mov	r1, r3
 5455 0232 4FF40072 		mov	r2, #512
 5456 0236 FFF7FEFF 		bl	mem_cpy
2601:../Dave/Generated/src/FATFS002/Src/ff.c **** 					fp->flag &= ~FA__DIRTY;
 5457              		.loc 1 2601 0
 5458 023a FB68     		ldr	r3, [r7, #12]
 5459 023c 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 5460 023e 23F04003 		bic	r3, r3, #64
 5461 0242 DAB2     		uxtb	r2, r3
 5462 0244 FB68     		ldr	r3, [r7, #12]
 5463 0246 9A71     		strb	r2, [r3, #6]
 5464              	.L340:
2602:../Dave/Generated/src/FATFS002/Src/ff.c **** 				}
2603:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
2604:../Dave/Generated/src/FATFS002/Src/ff.c **** 				wcnt = SS(fp->fs) * cc;		/* Number of bytes transferred */
 5465              		.loc 1 2604 0
 5466 0248 FB69     		ldr	r3, [r7, #28]
 5467 024a 4FEA4323 		lsl	r3, r3, #9
 5468 024e 3B62     		str	r3, [r7, #32]
2605:../Dave/Generated/src/FATFS002/Src/ff.c **** 				continue;
 5469              		.loc 1 2605 0
 5470 0250 4EE0     		b	.L341
 5471              	.L337:
2606:../Dave/Generated/src/FATFS002/Src/ff.c **** 			}
2607:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _FS_TINY
2608:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (fp->fptr >= fp->fsize) {	/* Avoid silly cache filling at growing edge */
2609:../Dave/Generated/src/FATFS002/Src/ff.c **** 				if (move_window(fp->fs, 0)) ABORT(fp->fs, FR_DISK_ERR);
2610:../Dave/Generated/src/FATFS002/Src/ff.c **** 				fp->fs->winsect = sect;
2611:../Dave/Generated/src/FATFS002/Src/ff.c **** 			}
2612:../Dave/Generated/src/FATFS002/Src/ff.c **** #else
2613:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (fp->dsect != sect) {		/* Fill sector cache with file data */
 5472              		.loc 1 2613 0
 5473 0252 FB68     		ldr	r3, [r7, #12]
 5474 0254 9A69     		ldr	r2, [r3, #24]
 5475 0256 3B69     		ldr	r3, [r7, #16]
 5476 0258 9A42     		cmp	r2, r3
 5477 025a 1FD0     		beq	.L342
2614:../Dave/Generated/src/FATFS002/Src/ff.c **** 				if (fp->fptr < fp->fsize &&
 5478              		.loc 1 2614 0
 5479 025c FB68     		ldr	r3, [r7, #12]
 5480 025e 9A68     		ldr	r2, [r3, #8]
 5481 0260 FB68     		ldr	r3, [r7, #12]
 5482 0262 DB68     		ldr	r3, [r3, #12]
 5483 0264 9A42     		cmp	r2, r3
 5484 0266 19D2     		bcs	.L342
2615:../Dave/Generated/src/FATFS002/Src/ff.c **** 					disk_read(fp->fs->drv, fp->buf, sect, 1) != RES_OK)
 5485              		.loc 1 2615 0 discriminator 1
 5486 0268 FB68     		ldr	r3, [r7, #12]
 5487 026a 1B68     		ldr	r3, [r3, #0]
 5488 026c 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 5489 026e FB68     		ldr	r3, [r7, #12]
 5490 0270 03F12403 		add	r3, r3, #36
 5491 0274 1046     		mov	r0, r2
 5492 0276 1946     		mov	r1, r3
 5493 0278 3A69     		ldr	r2, [r7, #16]
 5494 027a 4FF00103 		mov	r3, #1
 5495 027e FFF7FEFF 		bl	disk_read
 5496 0282 0346     		mov	r3, r0
2614:../Dave/Generated/src/FATFS002/Src/ff.c **** 				if (fp->fptr < fp->fsize &&
 5497              		.loc 1 2614 0 discriminator 1
 5498 0284 002B     		cmp	r3, #0
 5499 0286 09D0     		beq	.L342
2616:../Dave/Generated/src/FATFS002/Src/ff.c **** 						ABORT(fp->fs, FR_DISK_ERR);
 5500              		.loc 1 2616 0
 5501 0288 FB68     		ldr	r3, [r7, #12]
 5502 028a 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 5503 028c 63F07F03 		orn	r3, r3, #127
 5504 0290 DAB2     		uxtb	r2, r3
 5505 0292 FB68     		ldr	r3, [r7, #12]
 5506 0294 9A71     		strb	r2, [r3, #6]
 5507 0296 4FF00103 		mov	r3, #1
 5508 029a 56E0     		b	.L321
 5509              	.L342:
2617:../Dave/Generated/src/FATFS002/Src/ff.c **** 			}
2618:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
2619:../Dave/Generated/src/FATFS002/Src/ff.c **** 			fp->dsect = sect;
 5510              		.loc 1 2619 0
 5511 029c FB68     		ldr	r3, [r7, #12]
 5512 029e 3A69     		ldr	r2, [r7, #16]
 5513 02a0 9A61     		str	r2, [r3, #24]
 5514              	.L326:
2620:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
2621:../Dave/Generated/src/FATFS002/Src/ff.c **** 		wcnt = SS(fp->fs) - (fp->fptr % SS(fp->fs));/* Put partial sector into file I/O buffer */
 5515              		.loc 1 2621 0
 5516 02a2 FB68     		ldr	r3, [r7, #12]
 5517 02a4 9B68     		ldr	r3, [r3, #8]
 5518 02a6 4FEAC353 		lsl	r3, r3, #23
 5519 02aa 4FEAD353 		lsr	r3, r3, #23
 5520 02ae C3F50073 		rsb	r3, r3, #512
 5521 02b2 3B62     		str	r3, [r7, #32]
2622:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (wcnt > btw) wcnt = btw;
 5522              		.loc 1 2622 0
 5523 02b4 3A6A     		ldr	r2, [r7, #32]
 5524 02b6 7B68     		ldr	r3, [r7, #4]
 5525 02b8 9A42     		cmp	r2, r3
 5526 02ba 01D9     		bls	.L343
 5527              		.loc 1 2622 0 is_stmt 0 discriminator 1
 5528 02bc 7B68     		ldr	r3, [r7, #4]
 5529 02be 3B62     		str	r3, [r7, #32]
 5530              	.L343:
2623:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _FS_TINY
2624:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (move_window(fp->fs, fp->dsect))	/* Move sector window */
2625:../Dave/Generated/src/FATFS002/Src/ff.c **** 			ABORT(fp->fs, FR_DISK_ERR);
2626:../Dave/Generated/src/FATFS002/Src/ff.c **** 		mem_cpy(&fp->fs->win[fp->fptr % SS(fp->fs)], wbuff, wcnt);	/* Fit partial sector */
2627:../Dave/Generated/src/FATFS002/Src/ff.c **** 		fp->fs->wflag = 1;
2628:../Dave/Generated/src/FATFS002/Src/ff.c **** #else
2629:../Dave/Generated/src/FATFS002/Src/ff.c **** 		mem_cpy(&fp->buf[fp->fptr % SS(fp->fs)], wbuff, wcnt);	/* Fit partial sector */
 5531              		.loc 1 2629 0 is_stmt 1
 5532 02c0 FB68     		ldr	r3, [r7, #12]
 5533 02c2 9B68     		ldr	r3, [r3, #8]
 5534 02c4 4FEAC353 		lsl	r3, r3, #23
 5535 02c8 4FEAD353 		lsr	r3, r3, #23
 5536 02cc 03F12003 		add	r3, r3, #32
 5537 02d0 FA68     		ldr	r2, [r7, #12]
 5538 02d2 D318     		adds	r3, r2, r3
 5539 02d4 03F10403 		add	r3, r3, #4
 5540 02d8 1846     		mov	r0, r3
 5541 02da B969     		ldr	r1, [r7, #24]
 5542 02dc 3A6A     		ldr	r2, [r7, #32]
 5543 02de FFF7FEFF 		bl	mem_cpy
2630:../Dave/Generated/src/FATFS002/Src/ff.c **** 		fp->flag |= FA__DIRTY;
 5544              		.loc 1 2630 0
 5545 02e2 FB68     		ldr	r3, [r7, #12]
 5546 02e4 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 5547 02e6 43F04003 		orr	r3, r3, #64
 5548 02ea DAB2     		uxtb	r2, r3
 5549 02ec FB68     		ldr	r3, [r7, #12]
 5550 02ee 9A71     		strb	r2, [r3, #6]
 5551              	.L341:
2553:../Dave/Generated/src/FATFS002/Src/ff.c **** 		wbuff += wcnt, fp->fptr += wcnt, *bw += wcnt, btw -= wcnt) {
 5552              		.loc 1 2553 0
 5553 02f0 BA69     		ldr	r2, [r7, #24]
 5554 02f2 3B6A     		ldr	r3, [r7, #32]
 5555 02f4 D318     		adds	r3, r2, r3
 5556 02f6 BB61     		str	r3, [r7, #24]
 5557 02f8 FB68     		ldr	r3, [r7, #12]
 5558 02fa 9A68     		ldr	r2, [r3, #8]
 5559 02fc 3B6A     		ldr	r3, [r7, #32]
 5560 02fe D218     		adds	r2, r2, r3
 5561 0300 FB68     		ldr	r3, [r7, #12]
 5562 0302 9A60     		str	r2, [r3, #8]
 5563 0304 3B68     		ldr	r3, [r7, #0]
 5564 0306 1A68     		ldr	r2, [r3, #0]
 5565 0308 3B6A     		ldr	r3, [r7, #32]
 5566 030a D218     		adds	r2, r2, r3
 5567 030c 3B68     		ldr	r3, [r7, #0]
 5568 030e 1A60     		str	r2, [r3, #0]
 5569 0310 7A68     		ldr	r2, [r7, #4]
 5570 0312 3B6A     		ldr	r3, [r7, #32]
 5571 0314 D31A     		subs	r3, r2, r3
 5572 0316 7B60     		str	r3, [r7, #4]
 5573              	.L325:
2552:../Dave/Generated/src/FATFS002/Src/ff.c **** 	for ( ;  btw;							/* Repeat until all data written */
 5574              		.loc 1 2552 0 discriminator 1
 5575 0318 7B68     		ldr	r3, [r7, #4]
 5576 031a 002B     		cmp	r3, #0
 5577 031c 7FF4ABAE 		bne	.L344
 5578 0320 00E0     		b	.L331
 5579              	.L346:
2569:../Dave/Generated/src/FATFS002/Src/ff.c **** 				if (clst == 0) break;		/* Could not allocate a new cluster (disk full) */
 5580              		.loc 1 2569 0
 5581 0322 00BF     		nop
 5582              	.L331:
2631:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
2632:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
2633:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2634:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (fp->fptr > fp->fsize) fp->fsize = fp->fptr;	/* Update file size if needed */
 5583              		.loc 1 2634 0
 5584 0324 FB68     		ldr	r3, [r7, #12]
 5585 0326 9A68     		ldr	r2, [r3, #8]
 5586 0328 FB68     		ldr	r3, [r7, #12]
 5587 032a DB68     		ldr	r3, [r3, #12]
 5588 032c 9A42     		cmp	r2, r3
 5589 032e 03D9     		bls	.L345
 5590              		.loc 1 2634 0 is_stmt 0 discriminator 1
 5591 0330 FB68     		ldr	r3, [r7, #12]
 5592 0332 9A68     		ldr	r2, [r3, #8]
 5593 0334 FB68     		ldr	r3, [r7, #12]
 5594 0336 DA60     		str	r2, [r3, #12]
 5595              	.L345:
2635:../Dave/Generated/src/FATFS002/Src/ff.c **** 	fp->flag |= FA__WRITTEN;						/* Set file change flag */
 5596              		.loc 1 2635 0 is_stmt 1
 5597 0338 FB68     		ldr	r3, [r7, #12]
 5598 033a 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 5599 033c 43F02003 		orr	r3, r3, #32
 5600 0340 DAB2     		uxtb	r2, r3
 5601 0342 FB68     		ldr	r3, [r7, #12]
 5602 0344 9A71     		strb	r2, [r3, #6]
2636:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2637:../Dave/Generated/src/FATFS002/Src/ff.c **** 	LEAVE_FF(fp->fs, FR_OK);
 5603              		.loc 1 2637 0
 5604 0346 4FF00003 		mov	r3, #0
 5605              	.L321:
2638:../Dave/Generated/src/FATFS002/Src/ff.c **** }
 5606              		.loc 1 2638 0
 5607 034a 1846     		mov	r0, r3
 5608 034c 07F12807 		add	r7, r7, #40
 5609 0350 BD46     		mov	sp, r7
 5610 0352 80BD     		pop	{r7, pc}
 5611              		.cfi_endproc
 5612              	.LFE26:
 5614              		.section	.text.f_sync,"ax",%progbits
 5615              		.align	2
 5616              		.global	f_sync
 5617              		.thumb
 5618              		.thumb_func
 5620              	f_sync:
 5621              	.LFB27:
2639:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2640:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2641:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2642:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2643:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
2644:../Dave/Generated/src/FATFS002/Src/ff.c **** /* Synchronize the File Object                                           */
2645:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
2646:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2647:../Dave/Generated/src/FATFS002/Src/ff.c **** FRESULT f_sync (
2648:../Dave/Generated/src/FATFS002/Src/ff.c **** 	FIL *fp		/* Pointer to the file object */
2649:../Dave/Generated/src/FATFS002/Src/ff.c **** )
2650:../Dave/Generated/src/FATFS002/Src/ff.c **** {
 5622              		.loc 1 2650 0
 5623              		.cfi_startproc
 5624              		@ args = 0, pretend = 0, frame = 24
 5625              		@ frame_needed = 1, uses_anonymous_args = 0
 5626 0000 80B5     		push	{r7, lr}
 5627              	.LCFI81:
 5628              		.cfi_def_cfa_offset 8
 5629              		.cfi_offset 7, -8
 5630              		.cfi_offset 14, -4
 5631 0002 86B0     		sub	sp, sp, #24
 5632              	.LCFI82:
 5633              		.cfi_def_cfa_offset 32
 5634 0004 00AF     		add	r7, sp, #0
 5635              	.LCFI83:
 5636              		.cfi_def_cfa_register 7
 5637 0006 7860     		str	r0, [r7, #4]
2651:../Dave/Generated/src/FATFS002/Src/ff.c **** 	FRESULT res;
2652:../Dave/Generated/src/FATFS002/Src/ff.c **** 	DWORD tim;
2653:../Dave/Generated/src/FATFS002/Src/ff.c **** 	BYTE *dir;
2654:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2655:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2656:../Dave/Generated/src/FATFS002/Src/ff.c **** 	res = validate(fp->fs, fp->id);		/* Check validity of the object */
 5638              		.loc 1 2656 0
 5639 0008 7B68     		ldr	r3, [r7, #4]
 5640 000a 1A68     		ldr	r2, [r3, #0]
 5641 000c 7B68     		ldr	r3, [r7, #4]
 5642 000e 9B88     		ldrh	r3, [r3, #4]
 5643 0010 1046     		mov	r0, r2
 5644 0012 1946     		mov	r1, r3
 5645 0014 FFF7FEFF 		bl	validate
 5646 0018 0346     		mov	r3, r0
 5647 001a FB75     		strb	r3, [r7, #23]
2657:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (res == FR_OK) {
 5648              		.loc 1 2657 0
 5649 001c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 5650 001e 002B     		cmp	r3, #0
 5651 0020 40F0C780 		bne	.L348
2658:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (fp->flag & FA__WRITTEN) {	/* Has the file been written? */
 5652              		.loc 1 2658 0
 5653 0024 7B68     		ldr	r3, [r7, #4]
 5654 0026 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 5655 0028 03F02003 		and	r3, r3, #32
 5656 002c 002B     		cmp	r3, #0
 5657 002e 00F0C080 		beq	.L348
2659:../Dave/Generated/src/FATFS002/Src/ff.c **** #if !_FS_TINY	/* Write-back dirty buffer */
2660:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (fp->flag & FA__DIRTY) {
 5658              		.loc 1 2660 0
 5659 0032 7B68     		ldr	r3, [r7, #4]
 5660 0034 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 5661 0036 03F04003 		and	r3, r3, #64
 5662 003a 002B     		cmp	r3, #0
 5663 003c 1BD0     		beq	.L349
2661:../Dave/Generated/src/FATFS002/Src/ff.c **** 				if (disk_write(fp->fs->drv, fp->buf, fp->dsect, 1) != RES_OK)
 5664              		.loc 1 2661 0
 5665 003e 7B68     		ldr	r3, [r7, #4]
 5666 0040 1B68     		ldr	r3, [r3, #0]
 5667 0042 5978     		ldrb	r1, [r3, #1]	@ zero_extendqisi2
 5668 0044 7B68     		ldr	r3, [r7, #4]
 5669 0046 03F12402 		add	r2, r3, #36
 5670 004a 7B68     		ldr	r3, [r7, #4]
 5671 004c 9B69     		ldr	r3, [r3, #24]
 5672 004e 0846     		mov	r0, r1
 5673 0050 1146     		mov	r1, r2
 5674 0052 1A46     		mov	r2, r3
 5675 0054 4FF00103 		mov	r3, #1
 5676 0058 FFF7FEFF 		bl	disk_write
 5677 005c 0346     		mov	r3, r0
 5678 005e 002B     		cmp	r3, #0
 5679 0060 02D0     		beq	.L350
2662:../Dave/Generated/src/FATFS002/Src/ff.c **** 					LEAVE_FF(fp->fs, FR_DISK_ERR);
 5680              		.loc 1 2662 0
 5681 0062 4FF00103 		mov	r3, #1
 5682 0066 A5E0     		b	.L351
 5683              	.L350:
2663:../Dave/Generated/src/FATFS002/Src/ff.c **** 				fp->flag &= ~FA__DIRTY;
 5684              		.loc 1 2663 0
 5685 0068 7B68     		ldr	r3, [r7, #4]
 5686 006a 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 5687 006c 23F04003 		bic	r3, r3, #64
 5688 0070 DAB2     		uxtb	r2, r3
 5689 0072 7B68     		ldr	r3, [r7, #4]
 5690 0074 9A71     		strb	r2, [r3, #6]
 5691              	.L349:
2664:../Dave/Generated/src/FATFS002/Src/ff.c **** 			}
2665:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
2666:../Dave/Generated/src/FATFS002/Src/ff.c **** 			/* Update the directory entry */
2667:../Dave/Generated/src/FATFS002/Src/ff.c **** 			res = move_window(fp->fs, fp->dir_sect);
 5692              		.loc 1 2667 0
 5693 0076 7B68     		ldr	r3, [r7, #4]
 5694 0078 1A68     		ldr	r2, [r3, #0]
 5695 007a 7B68     		ldr	r3, [r7, #4]
 5696 007c DB69     		ldr	r3, [r3, #28]
 5697 007e 1046     		mov	r0, r2
 5698 0080 1946     		mov	r1, r3
 5699 0082 FFF7FEFF 		bl	move_window
 5700 0086 0346     		mov	r3, r0
 5701 0088 FB75     		strb	r3, [r7, #23]
2668:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (res == FR_OK) {
 5702              		.loc 1 2668 0
 5703 008a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 5704 008c 002B     		cmp	r3, #0
 5705 008e 40F09080 		bne	.L348
2669:../Dave/Generated/src/FATFS002/Src/ff.c **** 				dir = fp->dir_ptr;
 5706              		.loc 1 2669 0
 5707 0092 7B68     		ldr	r3, [r7, #4]
 5708 0094 1B6A     		ldr	r3, [r3, #32]
 5709 0096 3B61     		str	r3, [r7, #16]
2670:../Dave/Generated/src/FATFS002/Src/ff.c **** 				dir[DIR_Attr] |= AM_ARC;					/* Set archive bit */
 5710              		.loc 1 2670 0
 5711 0098 3B69     		ldr	r3, [r7, #16]
 5712 009a 03F10B03 		add	r3, r3, #11
 5713 009e 3A69     		ldr	r2, [r7, #16]
 5714 00a0 02F10B02 		add	r2, r2, #11
 5715 00a4 1278     		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 5716 00a6 42F02002 		orr	r2, r2, #32
 5717 00aa D2B2     		uxtb	r2, r2
 5718 00ac 1A70     		strb	r2, [r3, #0]
2671:../Dave/Generated/src/FATFS002/Src/ff.c **** 				ST_DWORD(dir+DIR_FileSize, fp->fsize);		/* Update file size */
 5719              		.loc 1 2671 0
 5720 00ae 3B69     		ldr	r3, [r7, #16]
 5721 00b0 03F11C03 		add	r3, r3, #28
 5722 00b4 7A68     		ldr	r2, [r7, #4]
 5723 00b6 D268     		ldr	r2, [r2, #12]
 5724 00b8 D2B2     		uxtb	r2, r2
 5725 00ba 1A70     		strb	r2, [r3, #0]
 5726 00bc 3B69     		ldr	r3, [r7, #16]
 5727 00be 03F11D03 		add	r3, r3, #29
 5728 00c2 7A68     		ldr	r2, [r7, #4]
 5729 00c4 D268     		ldr	r2, [r2, #12]
 5730 00c6 92B2     		uxth	r2, r2
 5731 00c8 4FEA1222 		lsr	r2, r2, #8
 5732 00cc 92B2     		uxth	r2, r2
 5733 00ce D2B2     		uxtb	r2, r2
 5734 00d0 1A70     		strb	r2, [r3, #0]
 5735 00d2 3B69     		ldr	r3, [r7, #16]
 5736 00d4 03F11E03 		add	r3, r3, #30
 5737 00d8 7A68     		ldr	r2, [r7, #4]
 5738 00da D268     		ldr	r2, [r2, #12]
 5739 00dc 4FEA1242 		lsr	r2, r2, #16
 5740 00e0 D2B2     		uxtb	r2, r2
 5741 00e2 1A70     		strb	r2, [r3, #0]
 5742 00e4 3B69     		ldr	r3, [r7, #16]
 5743 00e6 03F11F03 		add	r3, r3, #31
 5744 00ea 7A68     		ldr	r2, [r7, #4]
 5745 00ec D268     		ldr	r2, [r2, #12]
 5746 00ee 4FEA1262 		lsr	r2, r2, #24
 5747 00f2 D2B2     		uxtb	r2, r2
 5748 00f4 1A70     		strb	r2, [r3, #0]
2672:../Dave/Generated/src/FATFS002/Src/ff.c **** 				ST_CLUST(dir, fp->sclust);					/* Update start cluster */
 5749              		.loc 1 2672 0
 5750 00f6 3B69     		ldr	r3, [r7, #16]
 5751 00f8 03F11A03 		add	r3, r3, #26
 5752 00fc 7A68     		ldr	r2, [r7, #4]
 5753 00fe 1269     		ldr	r2, [r2, #16]
 5754 0100 D2B2     		uxtb	r2, r2
 5755 0102 1A70     		strb	r2, [r3, #0]
 5756 0104 3B69     		ldr	r3, [r7, #16]
 5757 0106 03F11B03 		add	r3, r3, #27
 5758 010a 7A68     		ldr	r2, [r7, #4]
 5759 010c 1269     		ldr	r2, [r2, #16]
 5760 010e 92B2     		uxth	r2, r2
 5761 0110 4FEA1222 		lsr	r2, r2, #8
 5762 0114 92B2     		uxth	r2, r2
 5763 0116 D2B2     		uxtb	r2, r2
 5764 0118 1A70     		strb	r2, [r3, #0]
 5765 011a 3B69     		ldr	r3, [r7, #16]
 5766 011c 03F11403 		add	r3, r3, #20
 5767 0120 7A68     		ldr	r2, [r7, #4]
 5768 0122 1269     		ldr	r2, [r2, #16]
 5769 0124 4FEA1242 		lsr	r2, r2, #16
 5770 0128 D2B2     		uxtb	r2, r2
 5771 012a 1A70     		strb	r2, [r3, #0]
 5772 012c 3B69     		ldr	r3, [r7, #16]
 5773 012e 03F11503 		add	r3, r3, #21
 5774 0132 7A68     		ldr	r2, [r7, #4]
 5775 0134 1269     		ldr	r2, [r2, #16]
 5776 0136 4FEA1242 		lsr	r2, r2, #16
 5777 013a 92B2     		uxth	r2, r2
 5778 013c 4FEA1222 		lsr	r2, r2, #8
 5779 0140 92B2     		uxth	r2, r2
 5780 0142 D2B2     		uxtb	r2, r2
 5781 0144 1A70     		strb	r2, [r3, #0]
2673:../Dave/Generated/src/FATFS002/Src/ff.c **** 				tim = get_fattime();						/* Update updated time */
 5782              		.loc 1 2673 0
 5783 0146 FFF7FEFF 		bl	get_fattime
 5784 014a F860     		str	r0, [r7, #12]
2674:../Dave/Generated/src/FATFS002/Src/ff.c **** 				ST_DWORD(dir+DIR_WrtTime, tim);
 5785              		.loc 1 2674 0
 5786 014c 3B69     		ldr	r3, [r7, #16]
 5787 014e 03F11603 		add	r3, r3, #22
 5788 0152 FA68     		ldr	r2, [r7, #12]
 5789 0154 D2B2     		uxtb	r2, r2
 5790 0156 1A70     		strb	r2, [r3, #0]
 5791 0158 3B69     		ldr	r3, [r7, #16]
 5792 015a 03F11703 		add	r3, r3, #23
 5793 015e FA68     		ldr	r2, [r7, #12]
 5794 0160 92B2     		uxth	r2, r2
 5795 0162 4FEA1222 		lsr	r2, r2, #8
 5796 0166 92B2     		uxth	r2, r2
 5797 0168 D2B2     		uxtb	r2, r2
 5798 016a 1A70     		strb	r2, [r3, #0]
 5799 016c 3B69     		ldr	r3, [r7, #16]
 5800 016e 03F11803 		add	r3, r3, #24
 5801 0172 FA68     		ldr	r2, [r7, #12]
 5802 0174 4FEA1242 		lsr	r2, r2, #16
 5803 0178 D2B2     		uxtb	r2, r2
 5804 017a 1A70     		strb	r2, [r3, #0]
 5805 017c 3B69     		ldr	r3, [r7, #16]
 5806 017e 03F11903 		add	r3, r3, #25
 5807 0182 FA68     		ldr	r2, [r7, #12]
 5808 0184 4FEA1262 		lsr	r2, r2, #24
 5809 0188 D2B2     		uxtb	r2, r2
 5810 018a 1A70     		strb	r2, [r3, #0]
2675:../Dave/Generated/src/FATFS002/Src/ff.c **** 				fp->flag &= ~FA__WRITTEN;
 5811              		.loc 1 2675 0
 5812 018c 7B68     		ldr	r3, [r7, #4]
 5813 018e 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 5814 0190 23F02003 		bic	r3, r3, #32
 5815 0194 DAB2     		uxtb	r2, r3
 5816 0196 7B68     		ldr	r3, [r7, #4]
 5817 0198 9A71     		strb	r2, [r3, #6]
2676:../Dave/Generated/src/FATFS002/Src/ff.c **** 				fp->fs->wflag = 1;
 5818              		.loc 1 2676 0
 5819 019a 7B68     		ldr	r3, [r7, #4]
 5820 019c 1B68     		ldr	r3, [r3, #0]
 5821 019e 4FF00102 		mov	r2, #1
 5822 01a2 1A71     		strb	r2, [r3, #4]
2677:../Dave/Generated/src/FATFS002/Src/ff.c **** 				res = sync(fp->fs);
 5823              		.loc 1 2677 0
 5824 01a4 7B68     		ldr	r3, [r7, #4]
 5825 01a6 1B68     		ldr	r3, [r3, #0]
 5826 01a8 1846     		mov	r0, r3
 5827 01aa FFF7FEFF 		bl	sync
 5828 01ae 0346     		mov	r3, r0
 5829 01b0 FB75     		strb	r3, [r7, #23]
 5830              	.L348:
2678:../Dave/Generated/src/FATFS002/Src/ff.c **** 			}
2679:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
2680:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
2681:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2682:../Dave/Generated/src/FATFS002/Src/ff.c **** 	LEAVE_FF(fp->fs, res);
 5831              		.loc 1 2682 0
 5832 01b2 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 5833              	.L351:
2683:../Dave/Generated/src/FATFS002/Src/ff.c **** }
 5834              		.loc 1 2683 0
 5835 01b4 1846     		mov	r0, r3
 5836 01b6 07F11807 		add	r7, r7, #24
 5837 01ba BD46     		mov	sp, r7
 5838 01bc 80BD     		pop	{r7, pc}
 5839              		.cfi_endproc
 5840              	.LFE27:
 5842 01be 00BF     		.section	.text.f_close,"ax",%progbits
 5843              		.align	2
 5844              		.global	f_close
 5845              		.thumb
 5846              		.thumb_func
 5848              	f_close:
 5849              	.LFB28:
2684:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2685:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif /* !_FS_READONLY */
2686:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2687:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2688:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2689:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2690:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
2691:../Dave/Generated/src/FATFS002/Src/ff.c **** /* Close File                                                            */
2692:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
2693:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2694:../Dave/Generated/src/FATFS002/Src/ff.c **** FRESULT f_close (
2695:../Dave/Generated/src/FATFS002/Src/ff.c **** 	FIL *fp		/* Pointer to the file object to be closed */
2696:../Dave/Generated/src/FATFS002/Src/ff.c **** )
2697:../Dave/Generated/src/FATFS002/Src/ff.c **** {
 5850              		.loc 1 2697 0
 5851              		.cfi_startproc
 5852              		@ args = 0, pretend = 0, frame = 16
 5853              		@ frame_needed = 1, uses_anonymous_args = 0
 5854 0000 80B5     		push	{r7, lr}
 5855              	.LCFI84:
 5856              		.cfi_def_cfa_offset 8
 5857              		.cfi_offset 7, -8
 5858              		.cfi_offset 14, -4
 5859 0002 84B0     		sub	sp, sp, #16
 5860              	.LCFI85:
 5861              		.cfi_def_cfa_offset 24
 5862 0004 00AF     		add	r7, sp, #0
 5863              	.LCFI86:
 5864              		.cfi_def_cfa_register 7
 5865 0006 7860     		str	r0, [r7, #4]
2698:../Dave/Generated/src/FATFS002/Src/ff.c **** 	FRESULT res;
2699:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2700:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _FS_READONLY
2701:../Dave/Generated/src/FATFS002/Src/ff.c **** 	FATFS *fs = fp->fs;
2702:../Dave/Generated/src/FATFS002/Src/ff.c **** 	res = validate(fs, fp->id);
2703:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (res == FR_OK) fp->fs = 0;	/* Discard file object */
2704:../Dave/Generated/src/FATFS002/Src/ff.c **** 	LEAVE_FF(fs, res);
2705:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2706:../Dave/Generated/src/FATFS002/Src/ff.c **** #else
2707:../Dave/Generated/src/FATFS002/Src/ff.c **** 	res = f_sync(fp);		/* Flush cached data */
 5866              		.loc 1 2707 0
 5867 0008 7868     		ldr	r0, [r7, #4]
 5868 000a FFF7FEFF 		bl	f_sync
 5869 000e 0346     		mov	r3, r0
 5870 0010 FB73     		strb	r3, [r7, #15]
2708:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _FS_SHARE
2709:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (res == FR_OK) {		/* Decrement open counter */
2710:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _FS_REENTRANT
2711:../Dave/Generated/src/FATFS002/Src/ff.c **** 		res = validate(fp->fs, fp->id);
2712:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (res == FR_OK) {
2713:../Dave/Generated/src/FATFS002/Src/ff.c **** 			res = dec_lock(fp->lockid);	
2714:../Dave/Generated/src/FATFS002/Src/ff.c **** 			unlock_fs(fp->fs, FR_OK);
2715:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
2716:../Dave/Generated/src/FATFS002/Src/ff.c **** #else
2717:../Dave/Generated/src/FATFS002/Src/ff.c **** 		res = dec_lock(fp->lockid);
2718:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
2719:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
2720:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
2721:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (res == FR_OK) fp->fs = 0;	/* Discard file object */
 5871              		.loc 1 2721 0
 5872 0012 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5873 0014 002B     		cmp	r3, #0
 5874 0016 03D1     		bne	.L353
 5875              		.loc 1 2721 0 is_stmt 0 discriminator 1
 5876 0018 7B68     		ldr	r3, [r7, #4]
 5877 001a 4FF00002 		mov	r2, #0
 5878 001e 1A60     		str	r2, [r3, #0]
 5879              	.L353:
2722:../Dave/Generated/src/FATFS002/Src/ff.c **** 	return res;
 5880              		.loc 1 2722 0 is_stmt 1
 5881 0020 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
2723:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
2724:../Dave/Generated/src/FATFS002/Src/ff.c **** }
 5882              		.loc 1 2724 0
 5883 0022 1846     		mov	r0, r3
 5884 0024 07F11007 		add	r7, r7, #16
 5885 0028 BD46     		mov	sp, r7
 5886 002a 80BD     		pop	{r7, pc}
 5887              		.cfi_endproc
 5888              	.LFE28:
 5890              		.section	.text.f_chdrive,"ax",%progbits
 5891              		.align	2
 5892              		.global	f_chdrive
 5893              		.thumb
 5894              		.thumb_func
 5896              	f_chdrive:
 5897              	.LFB29:
2725:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2726:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2727:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2728:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2729:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
2730:../Dave/Generated/src/FATFS002/Src/ff.c **** /* Current Drive/Directory Handlings                                     */
2731:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
2732:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2733:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _FS_RPATH >= 1
2734:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2735:../Dave/Generated/src/FATFS002/Src/ff.c **** FRESULT f_chdrive (
2736:../Dave/Generated/src/FATFS002/Src/ff.c **** 	BYTE drv		/* Drive number */
2737:../Dave/Generated/src/FATFS002/Src/ff.c **** )
2738:../Dave/Generated/src/FATFS002/Src/ff.c **** {
 5898              		.loc 1 2738 0
 5899              		.cfi_startproc
 5900              		@ args = 0, pretend = 0, frame = 8
 5901              		@ frame_needed = 1, uses_anonymous_args = 0
 5902              		@ link register save eliminated.
 5903 0000 80B4     		push	{r7}
 5904              	.LCFI87:
 5905              		.cfi_def_cfa_offset 4
 5906              		.cfi_offset 7, -4
 5907 0002 83B0     		sub	sp, sp, #12
 5908              	.LCFI88:
 5909              		.cfi_def_cfa_offset 16
 5910 0004 00AF     		add	r7, sp, #0
 5911              	.LCFI89:
 5912              		.cfi_def_cfa_register 7
 5913 0006 0346     		mov	r3, r0
 5914 0008 FB71     		strb	r3, [r7, #7]
2739:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (drv >= _VOLUMES) return FR_INVALID_DRIVE;
 5915              		.loc 1 2739 0
 5916 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5917 000c 012B     		cmp	r3, #1
 5918 000e 02D9     		bls	.L356
 5919              		.loc 1 2739 0 is_stmt 0 discriminator 1
 5920 0010 4FF00B03 		mov	r3, #11
 5921 0014 07E0     		b	.L357
 5922              	.L356:
2740:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2741:../Dave/Generated/src/FATFS002/Src/ff.c **** 	CurrVol = drv;
 5923              		.loc 1 2741 0 is_stmt 1
 5924 0016 40F20003 		movw	r3, #:lower16:CurrVol
 5925 001a C0F20003 		movt	r3, #:upper16:CurrVol
 5926 001e FA79     		ldrb	r2, [r7, #7]
 5927 0020 1A70     		strb	r2, [r3, #0]
2742:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2743:../Dave/Generated/src/FATFS002/Src/ff.c **** 	return FR_OK;
 5928              		.loc 1 2743 0
 5929 0022 4FF00003 		mov	r3, #0
 5930              	.L357:
2744:../Dave/Generated/src/FATFS002/Src/ff.c **** }
 5931              		.loc 1 2744 0
 5932 0026 1846     		mov	r0, r3
 5933 0028 07F10C07 		add	r7, r7, #12
 5934 002c BD46     		mov	sp, r7
 5935 002e 80BC     		pop	{r7}
 5936 0030 7047     		bx	lr
 5937              		.cfi_endproc
 5938              	.LFE29:
 5940 0032 00BF     		.section	.text.f_chdir,"ax",%progbits
 5941              		.align	2
 5942              		.global	f_chdir
 5943              		.thumb
 5944              		.thumb_func
 5946              	f_chdir:
 5947              	.LFB30:
2745:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2746:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2747:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2748:../Dave/Generated/src/FATFS002/Src/ff.c **** FRESULT f_chdir (
2749:../Dave/Generated/src/FATFS002/Src/ff.c **** 	const TCHAR *path	/* Pointer to the directory path */
2750:../Dave/Generated/src/FATFS002/Src/ff.c **** )
2751:../Dave/Generated/src/FATFS002/Src/ff.c **** {
 5948              		.loc 1 2751 0
 5949              		.cfi_startproc
 5950              		@ args = 0, pretend = 0, frame = 56
 5951              		@ frame_needed = 1, uses_anonymous_args = 0
 5952 0000 80B5     		push	{r7, lr}
 5953              	.LCFI90:
 5954              		.cfi_def_cfa_offset 8
 5955              		.cfi_offset 7, -8
 5956              		.cfi_offset 14, -4
 5957 0002 8EB0     		sub	sp, sp, #56
 5958              	.LCFI91:
 5959              		.cfi_def_cfa_offset 64
 5960 0004 00AF     		add	r7, sp, #0
 5961              	.LCFI92:
 5962              		.cfi_def_cfa_register 7
 5963 0006 7860     		str	r0, [r7, #4]
2752:../Dave/Generated/src/FATFS002/Src/ff.c **** 	FRESULT res;
2753:../Dave/Generated/src/FATFS002/Src/ff.c **** 	DIR dj;
2754:../Dave/Generated/src/FATFS002/Src/ff.c **** 	DEF_NAMEBUF;
2755:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2756:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2757:../Dave/Generated/src/FATFS002/Src/ff.c **** 	res = chk_mounted(&path, &dj.fs, 0);
 5964              		.loc 1 2757 0
 5965 0008 07F10402 		add	r2, r7, #4
 5966 000c 07F11803 		add	r3, r7, #24
 5967 0010 1046     		mov	r0, r2
 5968 0012 1946     		mov	r1, r3
 5969 0014 4FF00002 		mov	r2, #0
 5970 0018 FFF7FEFF 		bl	chk_mounted
 5971 001c 0346     		mov	r3, r0
 5972 001e 87F83730 		strb	r3, [r7, #55]
2758:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (res == FR_OK) {
 5973              		.loc 1 2758 0
 5974 0022 97F83730 		ldrb	r3, [r7, #55]	@ zero_extendqisi2
 5975 0026 002B     		cmp	r3, #0
 5976 0028 4DD1     		bne	.L359
2759:../Dave/Generated/src/FATFS002/Src/ff.c **** 		INIT_BUF(dj);
 5977              		.loc 1 2759 0
 5978 002a 07F10C03 		add	r3, r7, #12
 5979 002e 3B63     		str	r3, [r7, #48]
2760:../Dave/Generated/src/FATFS002/Src/ff.c **** 		res = follow_path(&dj, path);		/* Follow the path */
 5980              		.loc 1 2760 0
 5981 0030 7B68     		ldr	r3, [r7, #4]
 5982 0032 07F11802 		add	r2, r7, #24
 5983 0036 1046     		mov	r0, r2
 5984 0038 1946     		mov	r1, r3
 5985 003a FFF7FEFF 		bl	follow_path
 5986 003e 0346     		mov	r3, r0
 5987 0040 87F83730 		strb	r3, [r7, #55]
2761:../Dave/Generated/src/FATFS002/Src/ff.c **** 		FREE_BUF();
2762:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (res == FR_OK) {					/* Follow completed */
 5988              		.loc 1 2762 0
 5989 0044 97F83730 		ldrb	r3, [r7, #55]	@ zero_extendqisi2
 5990 0048 002B     		cmp	r3, #0
 5991 004a 34D1     		bne	.L360
2763:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (!dj.dir) {
 5992              		.loc 1 2763 0
 5993 004c FB6A     		ldr	r3, [r7, #44]
 5994 004e 002B     		cmp	r3, #0
 5995 0050 03D1     		bne	.L361
2764:../Dave/Generated/src/FATFS002/Src/ff.c **** 				dj.fs->cdir = dj.sclust;	/* Start directory itself */
 5996              		.loc 1 2764 0
 5997 0052 BB69     		ldr	r3, [r7, #24]
 5998 0054 3A6A     		ldr	r2, [r7, #32]
 5999 0056 9A61     		str	r2, [r3, #24]
 6000 0058 2DE0     		b	.L360
 6001              	.L361:
2765:../Dave/Generated/src/FATFS002/Src/ff.c **** 			} else {
2766:../Dave/Generated/src/FATFS002/Src/ff.c **** 				if (dj.dir[DIR_Attr] & AM_DIR)	/* Reached to the directory */
 6002              		.loc 1 2766 0
 6003 005a FB6A     		ldr	r3, [r7, #44]
 6004 005c 03F10B03 		add	r3, r3, #11
 6005 0060 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 6006 0062 03F01003 		and	r3, r3, #16
 6007 0066 002B     		cmp	r3, #0
 6008 0068 21D0     		beq	.L362
2767:../Dave/Generated/src/FATFS002/Src/ff.c **** 					dj.fs->cdir = LD_CLUST(dj.dir);
 6009              		.loc 1 2767 0
 6010 006a BB69     		ldr	r3, [r7, #24]
 6011 006c FA6A     		ldr	r2, [r7, #44]
 6012 006e 02F11502 		add	r2, r2, #21
 6013 0072 1278     		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 6014 0074 4FEA0222 		lsl	r2, r2, #8
 6015 0078 91B2     		uxth	r1, r2
 6016 007a FA6A     		ldr	r2, [r7, #44]
 6017 007c 02F11402 		add	r2, r2, #20
 6018 0080 1278     		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 6019 0082 0A43     		orrs	r2, r2, r1
 6020 0084 92B2     		uxth	r2, r2
 6021 0086 92B2     		uxth	r2, r2
 6022 0088 4FEA0241 		lsl	r1, r2, #16
 6023 008c FA6A     		ldr	r2, [r7, #44]
 6024 008e 02F11B02 		add	r2, r2, #27
 6025 0092 1278     		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 6026 0094 4FEA0222 		lsl	r2, r2, #8
 6027 0098 90B2     		uxth	r0, r2
 6028 009a FA6A     		ldr	r2, [r7, #44]
 6029 009c 02F11A02 		add	r2, r2, #26
 6030 00a0 1278     		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 6031 00a2 0243     		orrs	r2, r2, r0
 6032 00a4 92B2     		uxth	r2, r2
 6033 00a6 92B2     		uxth	r2, r2
 6034 00a8 0A43     		orrs	r2, r2, r1
 6035 00aa 9A61     		str	r2, [r3, #24]
 6036 00ac 03E0     		b	.L360
 6037              	.L362:
2768:../Dave/Generated/src/FATFS002/Src/ff.c **** 				else
2769:../Dave/Generated/src/FATFS002/Src/ff.c **** 					res = FR_NO_PATH;		/* Reached but a file */
 6038              		.loc 1 2769 0
 6039 00ae 4FF00503 		mov	r3, #5
 6040 00b2 87F83730 		strb	r3, [r7, #55]
 6041              	.L360:
2770:../Dave/Generated/src/FATFS002/Src/ff.c **** 			}
2771:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
2772:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (res == FR_NO_FILE) res = FR_NO_PATH;
 6042              		.loc 1 2772 0
 6043 00b6 97F83730 		ldrb	r3, [r7, #55]	@ zero_extendqisi2
 6044 00ba 042B     		cmp	r3, #4
 6045 00bc 03D1     		bne	.L359
 6046              		.loc 1 2772 0 is_stmt 0 discriminator 1
 6047 00be 4FF00503 		mov	r3, #5
 6048 00c2 87F83730 		strb	r3, [r7, #55]
 6049              	.L359:
2773:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
2774:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2775:../Dave/Generated/src/FATFS002/Src/ff.c **** 	LEAVE_FF(dj.fs, res);
 6050              		.loc 1 2775 0 is_stmt 1
 6051 00c6 97F83730 		ldrb	r3, [r7, #55]	@ zero_extendqisi2
2776:../Dave/Generated/src/FATFS002/Src/ff.c **** }
 6052              		.loc 1 2776 0
 6053 00ca 1846     		mov	r0, r3
 6054 00cc 07F13807 		add	r7, r7, #56
 6055 00d0 BD46     		mov	sp, r7
 6056 00d2 80BD     		pop	{r7, pc}
 6057              		.cfi_endproc
 6058              	.LFE30:
 6060              		.section	.text.f_lseek,"ax",%progbits
 6061              		.align	2
 6062              		.global	f_lseek
 6063              		.thumb
 6064              		.thumb_func
 6066              	f_lseek:
 6067              	.LFB31:
2777:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2778:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2779:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _FS_RPATH >= 2
2780:../Dave/Generated/src/FATFS002/Src/ff.c **** FRESULT f_getcwd (
2781:../Dave/Generated/src/FATFS002/Src/ff.c **** 	TCHAR *path,	/* Pointer to the directory path */
2782:../Dave/Generated/src/FATFS002/Src/ff.c **** 	UINT sz_path	/* Size of path */
2783:../Dave/Generated/src/FATFS002/Src/ff.c **** )
2784:../Dave/Generated/src/FATFS002/Src/ff.c **** {
2785:../Dave/Generated/src/FATFS002/Src/ff.c **** 	FRESULT res;
2786:../Dave/Generated/src/FATFS002/Src/ff.c **** 	DIR dj;
2787:../Dave/Generated/src/FATFS002/Src/ff.c **** 	UINT i, n;
2788:../Dave/Generated/src/FATFS002/Src/ff.c **** 	DWORD ccl;
2789:../Dave/Generated/src/FATFS002/Src/ff.c **** 	TCHAR *tp;
2790:../Dave/Generated/src/FATFS002/Src/ff.c **** 	FILINFO fno;
2791:../Dave/Generated/src/FATFS002/Src/ff.c **** 	DEF_NAMEBUF;
2792:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2793:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2794:../Dave/Generated/src/FATFS002/Src/ff.c **** 	*path = 0;
2795:../Dave/Generated/src/FATFS002/Src/ff.c **** 	res = chk_mounted((const TCHAR**)&path, &dj.fs, 0);	/* Get current volume */
2796:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (res == FR_OK) {
2797:../Dave/Generated/src/FATFS002/Src/ff.c **** 		INIT_BUF(dj);
2798:../Dave/Generated/src/FATFS002/Src/ff.c **** 		i = sz_path;		/* Bottom of buffer (dir stack base) */
2799:../Dave/Generated/src/FATFS002/Src/ff.c **** 		dj.sclust = dj.fs->cdir;			/* Start to follow upper dir from current dir */
2800:../Dave/Generated/src/FATFS002/Src/ff.c **** 		while ((ccl = dj.sclust) != 0) {	/* Repeat while current dir is a sub-dir */
2801:../Dave/Generated/src/FATFS002/Src/ff.c **** 			res = dir_sdi(&dj, 1);			/* Get parent dir */
2802:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (res != FR_OK) break;
2803:../Dave/Generated/src/FATFS002/Src/ff.c **** 			res = dir_read(&dj);
2804:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (res != FR_OK) break;
2805:../Dave/Generated/src/FATFS002/Src/ff.c **** 			dj.sclust = LD_CLUST(dj.dir);	/* Goto parent dir */
2806:../Dave/Generated/src/FATFS002/Src/ff.c **** 			res = dir_sdi(&dj, 0);
2807:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (res != FR_OK) break;
2808:../Dave/Generated/src/FATFS002/Src/ff.c **** 			do {							/* Find the entry links to the child dir */
2809:../Dave/Generated/src/FATFS002/Src/ff.c **** 				res = dir_read(&dj);
2810:../Dave/Generated/src/FATFS002/Src/ff.c **** 				if (res != FR_OK) break;
2811:../Dave/Generated/src/FATFS002/Src/ff.c **** 				if (ccl == LD_CLUST(dj.dir)) break;	/* Found the entry */
2812:../Dave/Generated/src/FATFS002/Src/ff.c **** 				res = dir_next(&dj, 0);	
2813:../Dave/Generated/src/FATFS002/Src/ff.c **** 			} while (res == FR_OK);
2814:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (res == FR_NO_FILE) res = FR_INT_ERR;/* It cannot be 'not found'. */
2815:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (res != FR_OK) break;
2816:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _USE_LFN
2817:../Dave/Generated/src/FATFS002/Src/ff.c **** 			fno.lfname = path;
2818:../Dave/Generated/src/FATFS002/Src/ff.c **** 			fno.lfsize = i;
2819:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
2820:../Dave/Generated/src/FATFS002/Src/ff.c **** 			get_fileinfo(&dj, &fno);		/* Get the dir name and push it to the buffer */
2821:../Dave/Generated/src/FATFS002/Src/ff.c **** 			tp = fno.fname;
2822:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (_USE_LFN && *path) tp = path;
2823:../Dave/Generated/src/FATFS002/Src/ff.c **** 			for (n = 0; tp[n]; n++) ;
2824:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (i < n + 3) {
2825:../Dave/Generated/src/FATFS002/Src/ff.c **** 				res = FR_NOT_ENOUGH_CORE; break;
2826:../Dave/Generated/src/FATFS002/Src/ff.c **** 			}
2827:../Dave/Generated/src/FATFS002/Src/ff.c **** 			while (n) path[--i] = tp[--n];
2828:../Dave/Generated/src/FATFS002/Src/ff.c **** 			path[--i] = '/';
2829:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
2830:../Dave/Generated/src/FATFS002/Src/ff.c **** 		tp = path;
2831:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (res == FR_OK) {
2832:../Dave/Generated/src/FATFS002/Src/ff.c **** 			*tp++ = '0' + CurrVol;			/* Put drive number */
2833:../Dave/Generated/src/FATFS002/Src/ff.c **** 			*tp++ = ':';
2834:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (i == sz_path) {				/* Root-dir */
2835:../Dave/Generated/src/FATFS002/Src/ff.c **** 				*tp++ = '/';
2836:../Dave/Generated/src/FATFS002/Src/ff.c **** 			} else {						/* Sub-dir */
2837:../Dave/Generated/src/FATFS002/Src/ff.c **** 				do		/* Add stacked path str */
2838:../Dave/Generated/src/FATFS002/Src/ff.c **** 					*tp++ = path[i++];
2839:../Dave/Generated/src/FATFS002/Src/ff.c **** 				while (i < sz_path);
2840:../Dave/Generated/src/FATFS002/Src/ff.c **** 			}
2841:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
2842:../Dave/Generated/src/FATFS002/Src/ff.c **** 		*tp = 0;
2843:../Dave/Generated/src/FATFS002/Src/ff.c **** 		FREE_BUF();
2844:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
2845:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2846:../Dave/Generated/src/FATFS002/Src/ff.c **** 	LEAVE_FF(dj.fs, res);
2847:../Dave/Generated/src/FATFS002/Src/ff.c **** }
2848:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif /* _FS_RPATH >= 2 */
2849:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif /* _FS_RPATH >= 1 */
2850:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2851:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2852:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2853:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _FS_MINIMIZE <= 2
2854:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
2855:../Dave/Generated/src/FATFS002/Src/ff.c **** /* Seek File R/W Pointer                                                 */
2856:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
2857:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2858:../Dave/Generated/src/FATFS002/Src/ff.c **** FRESULT f_lseek (
2859:../Dave/Generated/src/FATFS002/Src/ff.c **** 	FIL *fp,		/* Pointer to the file object */
2860:../Dave/Generated/src/FATFS002/Src/ff.c **** 	DWORD ofs		/* File pointer from top of file */
2861:../Dave/Generated/src/FATFS002/Src/ff.c **** )
2862:../Dave/Generated/src/FATFS002/Src/ff.c **** {
 6068              		.loc 1 2862 0
 6069              		.cfi_startproc
 6070              		@ args = 0, pretend = 0, frame = 32
 6071              		@ frame_needed = 1, uses_anonymous_args = 0
 6072 0000 80B5     		push	{r7, lr}
 6073              	.LCFI93:
 6074              		.cfi_def_cfa_offset 8
 6075              		.cfi_offset 7, -8
 6076              		.cfi_offset 14, -4
 6077 0002 88B0     		sub	sp, sp, #32
 6078              	.LCFI94:
 6079              		.cfi_def_cfa_offset 40
 6080 0004 00AF     		add	r7, sp, #0
 6081              	.LCFI95:
 6082              		.cfi_def_cfa_register 7
 6083 0006 7860     		str	r0, [r7, #4]
 6084 0008 3960     		str	r1, [r7, #0]
2863:../Dave/Generated/src/FATFS002/Src/ff.c **** 	FRESULT res;
2864:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2865:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2866:../Dave/Generated/src/FATFS002/Src/ff.c **** 	res = validate(fp->fs, fp->id);		/* Check validity of the object */
 6085              		.loc 1 2866 0
 6086 000a 7B68     		ldr	r3, [r7, #4]
 6087 000c 1A68     		ldr	r2, [r3, #0]
 6088 000e 7B68     		ldr	r3, [r7, #4]
 6089 0010 9B88     		ldrh	r3, [r3, #4]
 6090 0012 1046     		mov	r0, r2
 6091 0014 1946     		mov	r1, r3
 6092 0016 FFF7FEFF 		bl	validate
 6093 001a 0346     		mov	r3, r0
 6094 001c FB75     		strb	r3, [r7, #23]
2867:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (res != FR_OK) LEAVE_FF(fp->fs, res);
 6095              		.loc 1 2867 0
 6096 001e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6097 0020 002B     		cmp	r3, #0
 6098 0022 01D0     		beq	.L365
 6099              		.loc 1 2867 0 is_stmt 0 discriminator 1
 6100 0024 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6101 0026 57E1     		b	.L366
 6102              	.L365:
2868:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (fp->flag & FA__ERROR)			/* Check abort flag */
 6103              		.loc 1 2868 0 is_stmt 1
 6104 0028 7B68     		ldr	r3, [r7, #4]
 6105 002a 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 6106 002c DBB2     		uxtb	r3, r3
 6107 002e 5BB2     		sxtb	r3, r3
 6108 0030 002B     		cmp	r3, #0
 6109 0032 02DA     		bge	.L367
2869:../Dave/Generated/src/FATFS002/Src/ff.c **** 		LEAVE_FF(fp->fs, FR_INT_ERR);
 6110              		.loc 1 2869 0
 6111 0034 4FF00203 		mov	r3, #2
 6112 0038 4EE1     		b	.L366
 6113              	.L367:
 6114              	.LBB5:
2870:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2871:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _USE_FASTSEEK
2872:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (fp->cltbl) {	/* Fast seek */
2873:../Dave/Generated/src/FATFS002/Src/ff.c **** 		DWORD cl, pcl, ncl, tcl, dsc, tlen, ulen, *tbl;
2874:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2875:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (ofs == CREATE_LINKMAP) {	/* Create CLMT */
2876:../Dave/Generated/src/FATFS002/Src/ff.c **** 			tbl = fp->cltbl;
2877:../Dave/Generated/src/FATFS002/Src/ff.c **** 			tlen = *tbl++; ulen = 2;	/* Given table size and required table size */
2878:../Dave/Generated/src/FATFS002/Src/ff.c **** 			cl = fp->sclust;			/* Top of the chain */
2879:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (cl) {
2880:../Dave/Generated/src/FATFS002/Src/ff.c **** 				do {
2881:../Dave/Generated/src/FATFS002/Src/ff.c **** 					/* Get a fragment */
2882:../Dave/Generated/src/FATFS002/Src/ff.c **** 					tcl = cl; ncl = 0; ulen += 2;	/* Top, length and used items */
2883:../Dave/Generated/src/FATFS002/Src/ff.c **** 					do {
2884:../Dave/Generated/src/FATFS002/Src/ff.c **** 						pcl = cl; ncl++;
2885:../Dave/Generated/src/FATFS002/Src/ff.c **** 						cl = get_fat(fp->fs, cl);
2886:../Dave/Generated/src/FATFS002/Src/ff.c **** 						if (cl <= 1) ABORT(fp->fs, FR_INT_ERR);
2887:../Dave/Generated/src/FATFS002/Src/ff.c **** 						if (cl == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
2888:../Dave/Generated/src/FATFS002/Src/ff.c **** 					} while (cl == pcl + 1);
2889:../Dave/Generated/src/FATFS002/Src/ff.c **** 					if (ulen <= tlen) {		/* Store the length and top of the fragment */
2890:../Dave/Generated/src/FATFS002/Src/ff.c **** 						*tbl++ = ncl; *tbl++ = tcl;
2891:../Dave/Generated/src/FATFS002/Src/ff.c **** 					}
2892:../Dave/Generated/src/FATFS002/Src/ff.c **** 				} while (cl < fp->fs->n_fatent);	/* Repeat until end of chain */
2893:../Dave/Generated/src/FATFS002/Src/ff.c **** 			}
2894:../Dave/Generated/src/FATFS002/Src/ff.c **** 			*fp->cltbl = ulen;	/* Number of items used */
2895:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (ulen <= tlen)
2896:../Dave/Generated/src/FATFS002/Src/ff.c **** 				*tbl = 0;		/* Terminate table */
2897:../Dave/Generated/src/FATFS002/Src/ff.c **** 			else
2898:../Dave/Generated/src/FATFS002/Src/ff.c **** 				res = FR_NOT_ENOUGH_CORE;	/* Given table size is smaller than required */
2899:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2900:../Dave/Generated/src/FATFS002/Src/ff.c **** 		} else {						/* Fast seek */
2901:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (ofs > fp->fsize)		/* Clip offset at the file size */
2902:../Dave/Generated/src/FATFS002/Src/ff.c **** 				ofs = fp->fsize;
2903:../Dave/Generated/src/FATFS002/Src/ff.c **** 			fp->fptr = ofs;				/* Set file pointer */
2904:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (ofs) {
2905:../Dave/Generated/src/FATFS002/Src/ff.c **** 				fp->clust = clmt_clust(fp, ofs - 1);
2906:../Dave/Generated/src/FATFS002/Src/ff.c **** 				dsc = clust2sect(fp->fs, fp->clust);
2907:../Dave/Generated/src/FATFS002/Src/ff.c **** 				if (!dsc) ABORT(fp->fs, FR_INT_ERR);
2908:../Dave/Generated/src/FATFS002/Src/ff.c **** 				dsc += (ofs - 1) / SS(fp->fs) & (fp->fs->csize - 1);
2909:../Dave/Generated/src/FATFS002/Src/ff.c **** 				if (fp->fptr % SS(fp->fs) && dsc != fp->dsect) {	/* Refill sector cache if needed */
2910:../Dave/Generated/src/FATFS002/Src/ff.c **** #if !_FS_TINY
2911:../Dave/Generated/src/FATFS002/Src/ff.c **** #if !_FS_READONLY
2912:../Dave/Generated/src/FATFS002/Src/ff.c **** 					if (fp->flag & FA__DIRTY) {		/* Write-back dirty sector cache */
2913:../Dave/Generated/src/FATFS002/Src/ff.c **** 						if (disk_write(fp->fs->drv, fp->buf, fp->dsect, 1) != RES_OK)
2914:../Dave/Generated/src/FATFS002/Src/ff.c **** 							ABORT(fp->fs, FR_DISK_ERR);
2915:../Dave/Generated/src/FATFS002/Src/ff.c **** 						fp->flag &= ~FA__DIRTY;
2916:../Dave/Generated/src/FATFS002/Src/ff.c **** 					}
2917:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
2918:../Dave/Generated/src/FATFS002/Src/ff.c **** 					if (disk_read(fp->fs->drv, fp->buf, dsc, 1) != RES_OK)	/* Load current sector */
2919:../Dave/Generated/src/FATFS002/Src/ff.c **** 						ABORT(fp->fs, FR_DISK_ERR);
2920:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
2921:../Dave/Generated/src/FATFS002/Src/ff.c **** 					fp->dsect = dsc;
2922:../Dave/Generated/src/FATFS002/Src/ff.c **** 				}
2923:../Dave/Generated/src/FATFS002/Src/ff.c **** 			}
2924:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
2925:../Dave/Generated/src/FATFS002/Src/ff.c **** 	} else
2926:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
2927:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2928:../Dave/Generated/src/FATFS002/Src/ff.c **** 	/* Normal Seek */
2929:../Dave/Generated/src/FATFS002/Src/ff.c **** 	{
2930:../Dave/Generated/src/FATFS002/Src/ff.c **** 		DWORD clst, bcs, nsect, ifptr;
2931:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2932:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (ofs > fp->fsize					/* In read-only mode, clip offset with the file size */
 6115              		.loc 1 2932 0
 6116 003a 7B68     		ldr	r3, [r7, #4]
 6117 003c DA68     		ldr	r2, [r3, #12]
 6118 003e 3B68     		ldr	r3, [r7, #0]
 6119 0040 9A42     		cmp	r2, r3
 6120 0042 08D2     		bcs	.L368
2933:../Dave/Generated/src/FATFS002/Src/ff.c **** #if !_FS_READONLY
2934:../Dave/Generated/src/FATFS002/Src/ff.c **** 			 && !(fp->flag & FA_WRITE)
 6121              		.loc 1 2934 0
 6122 0044 7B68     		ldr	r3, [r7, #4]
 6123 0046 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 6124 0048 03F00203 		and	r3, r3, #2
 6125 004c 002B     		cmp	r3, #0
 6126 004e 02D1     		bne	.L368
2935:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
2936:../Dave/Generated/src/FATFS002/Src/ff.c **** 			) ofs = fp->fsize;
 6127              		.loc 1 2936 0
 6128 0050 7B68     		ldr	r3, [r7, #4]
 6129 0052 DB68     		ldr	r3, [r3, #12]
 6130 0054 3B60     		str	r3, [r7, #0]
 6131              	.L368:
2937:../Dave/Generated/src/FATFS002/Src/ff.c **** 
2938:../Dave/Generated/src/FATFS002/Src/ff.c **** 		ifptr = fp->fptr;
 6132              		.loc 1 2938 0
 6133 0056 7B68     		ldr	r3, [r7, #4]
 6134 0058 9B68     		ldr	r3, [r3, #8]
 6135 005a 3B61     		str	r3, [r7, #16]
2939:../Dave/Generated/src/FATFS002/Src/ff.c **** 		fp->fptr = nsect = 0;
 6136              		.loc 1 2939 0
 6137 005c 4FF00003 		mov	r3, #0
 6138 0060 BB61     		str	r3, [r7, #24]
 6139 0062 7B68     		ldr	r3, [r7, #4]
 6140 0064 BA69     		ldr	r2, [r7, #24]
 6141 0066 9A60     		str	r2, [r3, #8]
2940:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (ofs) {
 6142              		.loc 1 2940 0
 6143 0068 3B68     		ldr	r3, [r7, #0]
 6144 006a 002B     		cmp	r3, #0
 6145 006c 00F0CF80 		beq	.L369
2941:../Dave/Generated/src/FATFS002/Src/ff.c **** 			bcs = (DWORD)fp->fs->csize * SS(fp->fs);	/* Cluster size (byte) */
 6146              		.loc 1 2941 0
 6147 0070 7B68     		ldr	r3, [r7, #4]
 6148 0072 1B68     		ldr	r3, [r3, #0]
 6149 0074 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 6150 0076 4FEA4323 		lsl	r3, r3, #9
 6151 007a FB60     		str	r3, [r7, #12]
2942:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (ifptr > 0 &&
 6152              		.loc 1 2942 0
 6153 007c 3B69     		ldr	r3, [r7, #16]
 6154 007e 002B     		cmp	r3, #0
 6155 0080 1FD0     		beq	.L370
2943:../Dave/Generated/src/FATFS002/Src/ff.c **** 				(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
 6156              		.loc 1 2943 0 discriminator 1
 6157 0082 3B68     		ldr	r3, [r7, #0]
 6158 0084 03F1FF32 		add	r2, r3, #-1
 6159 0088 FB68     		ldr	r3, [r7, #12]
 6160 008a B2FBF3F2 		udiv	r2, r2, r3
 6161 008e 3B69     		ldr	r3, [r7, #16]
 6162 0090 03F1FF31 		add	r1, r3, #-1
 6163 0094 FB68     		ldr	r3, [r7, #12]
 6164 0096 B1FBF3F3 		udiv	r3, r1, r3
2942:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (ifptr > 0 &&
 6165              		.loc 1 2942 0 discriminator 1
 6166 009a 9A42     		cmp	r2, r3
 6167 009c 11D3     		bcc	.L370
2944:../Dave/Generated/src/FATFS002/Src/ff.c **** 				fp->fptr = (ifptr - 1) & ~(bcs - 1);	/* start from the current cluster */
 6168              		.loc 1 2944 0
 6169 009e 3B69     		ldr	r3, [r7, #16]
 6170 00a0 03F1FF32 		add	r2, r3, #-1
 6171 00a4 FB68     		ldr	r3, [r7, #12]
 6172 00a6 C3F10003 		rsb	r3, r3, #0
 6173 00aa 1A40     		ands	r2, r2, r3
 6174 00ac 7B68     		ldr	r3, [r7, #4]
 6175 00ae 9A60     		str	r2, [r3, #8]
2945:../Dave/Generated/src/FATFS002/Src/ff.c **** 				ofs -= fp->fptr;
 6176              		.loc 1 2945 0
 6177 00b0 7B68     		ldr	r3, [r7, #4]
 6178 00b2 9B68     		ldr	r3, [r3, #8]
 6179 00b4 3A68     		ldr	r2, [r7, #0]
 6180 00b6 D31A     		subs	r3, r2, r3
 6181 00b8 3B60     		str	r3, [r7, #0]
2946:../Dave/Generated/src/FATFS002/Src/ff.c **** 				clst = fp->clust;
 6182              		.loc 1 2946 0
 6183 00ba 7B68     		ldr	r3, [r7, #4]
 6184 00bc 5B69     		ldr	r3, [r3, #20]
 6185 00be FB61     		str	r3, [r7, #28]
 6186 00c0 2EE0     		b	.L371
 6187              	.L370:
2947:../Dave/Generated/src/FATFS002/Src/ff.c **** 			} else {									/* When seek to back cluster, */
2948:../Dave/Generated/src/FATFS002/Src/ff.c **** 				clst = fp->sclust;						/* start from the first cluster */
 6188              		.loc 1 2948 0
 6189 00c2 7B68     		ldr	r3, [r7, #4]
 6190 00c4 1B69     		ldr	r3, [r3, #16]
 6191 00c6 FB61     		str	r3, [r7, #28]
2949:../Dave/Generated/src/FATFS002/Src/ff.c **** #if !_FS_READONLY
2950:../Dave/Generated/src/FATFS002/Src/ff.c **** 				if (clst == 0) {						/* If no cluster chain, create a new chain */
 6192              		.loc 1 2950 0
 6193 00c8 FB69     		ldr	r3, [r7, #28]
 6194 00ca 002B     		cmp	r3, #0
 6195 00cc 25D1     		bne	.L372
2951:../Dave/Generated/src/FATFS002/Src/ff.c **** 					clst = create_chain(fp->fs, 0);
 6196              		.loc 1 2951 0
 6197 00ce 7B68     		ldr	r3, [r7, #4]
 6198 00d0 1B68     		ldr	r3, [r3, #0]
 6199 00d2 1846     		mov	r0, r3
 6200 00d4 4FF00001 		mov	r1, #0
 6201 00d8 FFF7FEFF 		bl	create_chain
 6202 00dc F861     		str	r0, [r7, #28]
2952:../Dave/Generated/src/FATFS002/Src/ff.c **** 					if (clst == 1) ABORT(fp->fs, FR_INT_ERR);
 6203              		.loc 1 2952 0
 6204 00de FB69     		ldr	r3, [r7, #28]
 6205 00e0 012B     		cmp	r3, #1
 6206 00e2 09D1     		bne	.L373
 6207              		.loc 1 2952 0 is_stmt 0 discriminator 1
 6208 00e4 7B68     		ldr	r3, [r7, #4]
 6209 00e6 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 6210 00e8 63F07F03 		orn	r3, r3, #127
 6211 00ec DAB2     		uxtb	r2, r3
 6212 00ee 7B68     		ldr	r3, [r7, #4]
 6213 00f0 9A71     		strb	r2, [r3, #6]
 6214 00f2 4FF00203 		mov	r3, #2
 6215 00f6 EFE0     		b	.L366
 6216              	.L373:
2953:../Dave/Generated/src/FATFS002/Src/ff.c **** 					if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
 6217              		.loc 1 2953 0 is_stmt 1
 6218 00f8 FB69     		ldr	r3, [r7, #28]
 6219 00fa B3F1FF3F 		cmp	r3, #-1
 6220 00fe 09D1     		bne	.L374
 6221              		.loc 1 2953 0 is_stmt 0 discriminator 1
 6222 0100 7B68     		ldr	r3, [r7, #4]
 6223 0102 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 6224 0104 63F07F03 		orn	r3, r3, #127
 6225 0108 DAB2     		uxtb	r2, r3
 6226 010a 7B68     		ldr	r3, [r7, #4]
 6227 010c 9A71     		strb	r2, [r3, #6]
 6228 010e 4FF00103 		mov	r3, #1
 6229 0112 E1E0     		b	.L366
 6230              	.L374:
2954:../Dave/Generated/src/FATFS002/Src/ff.c **** 					fp->sclust = clst;
 6231              		.loc 1 2954 0 is_stmt 1
 6232 0114 7B68     		ldr	r3, [r7, #4]
 6233 0116 FA69     		ldr	r2, [r7, #28]
 6234 0118 1A61     		str	r2, [r3, #16]
 6235              	.L372:
2955:../Dave/Generated/src/FATFS002/Src/ff.c **** 				}
2956:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
2957:../Dave/Generated/src/FATFS002/Src/ff.c **** 				fp->clust = clst;
 6236              		.loc 1 2957 0
 6237 011a 7B68     		ldr	r3, [r7, #4]
 6238 011c FA69     		ldr	r2, [r7, #28]
 6239 011e 5A61     		str	r2, [r3, #20]
 6240              	.L371:
2958:../Dave/Generated/src/FATFS002/Src/ff.c **** 			}
2959:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (clst != 0) {
 6241              		.loc 1 2959 0
 6242 0120 FB69     		ldr	r3, [r7, #28]
 6243 0122 002B     		cmp	r3, #0
 6244 0124 73D0     		beq	.L369
2960:../Dave/Generated/src/FATFS002/Src/ff.c **** 				while (ofs > bcs) {						/* Cluster following loop */
 6245              		.loc 1 2960 0
 6246 0126 47E0     		b	.L375
 6247              	.L382:
2961:../Dave/Generated/src/FATFS002/Src/ff.c **** #if !_FS_READONLY
2962:../Dave/Generated/src/FATFS002/Src/ff.c **** 					if (fp->flag & FA_WRITE) {			/* Check if in write mode or not */
 6248              		.loc 1 2962 0
 6249 0128 7B68     		ldr	r3, [r7, #4]
 6250 012a 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 6251 012c 03F00203 		and	r3, r3, #2
 6252 0130 002B     		cmp	r3, #0
 6253 0132 0CD0     		beq	.L376
2963:../Dave/Generated/src/FATFS002/Src/ff.c **** 						clst = create_chain(fp->fs, clst);	/* Force stretch if in write mode */
 6254              		.loc 1 2963 0
 6255 0134 7B68     		ldr	r3, [r7, #4]
 6256 0136 1B68     		ldr	r3, [r3, #0]
 6257 0138 1846     		mov	r0, r3
 6258 013a F969     		ldr	r1, [r7, #28]
 6259 013c FFF7FEFF 		bl	create_chain
 6260 0140 F861     		str	r0, [r7, #28]
2964:../Dave/Generated/src/FATFS002/Src/ff.c **** 						if (clst == 0) {				/* When disk gets full, clip file size */
 6261              		.loc 1 2964 0
 6262 0142 FB69     		ldr	r3, [r7, #28]
 6263 0144 002B     		cmp	r3, #0
 6264 0146 09D1     		bne	.L377
2965:../Dave/Generated/src/FATFS002/Src/ff.c **** 							ofs = bcs; break;
 6265              		.loc 1 2965 0
 6266 0148 FB68     		ldr	r3, [r7, #12]
 6267 014a 3B60     		str	r3, [r7, #0]
 6268 014c 38E0     		b	.L378
 6269              	.L376:
2966:../Dave/Generated/src/FATFS002/Src/ff.c **** 						}
2967:../Dave/Generated/src/FATFS002/Src/ff.c **** 					} else
2968:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
2969:../Dave/Generated/src/FATFS002/Src/ff.c **** 						clst = get_fat(fp->fs, clst);	/* Follow cluster chain if not in write mode */
 6270              		.loc 1 2969 0
 6271 014e 7B68     		ldr	r3, [r7, #4]
 6272 0150 1B68     		ldr	r3, [r3, #0]
 6273 0152 1846     		mov	r0, r3
 6274 0154 F969     		ldr	r1, [r7, #28]
 6275 0156 FFF7FEFF 		bl	get_fat
 6276 015a F861     		str	r0, [r7, #28]
 6277              	.L377:
2970:../Dave/Generated/src/FATFS002/Src/ff.c **** 					if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
 6278              		.loc 1 2970 0
 6279 015c FB69     		ldr	r3, [r7, #28]
 6280 015e B3F1FF3F 		cmp	r3, #-1
 6281 0162 09D1     		bne	.L379
 6282              		.loc 1 2970 0 is_stmt 0 discriminator 1
 6283 0164 7B68     		ldr	r3, [r7, #4]
 6284 0166 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 6285 0168 63F07F03 		orn	r3, r3, #127
 6286 016c DAB2     		uxtb	r2, r3
 6287 016e 7B68     		ldr	r3, [r7, #4]
 6288 0170 9A71     		strb	r2, [r3, #6]
 6289 0172 4FF00103 		mov	r3, #1
 6290 0176 AFE0     		b	.L366
 6291              	.L379:
2971:../Dave/Generated/src/FATFS002/Src/ff.c **** 					if (clst <= 1 || clst >= fp->fs->n_fatent) ABORT(fp->fs, FR_INT_ERR);
 6292              		.loc 1 2971 0 is_stmt 1
 6293 0178 FB69     		ldr	r3, [r7, #28]
 6294 017a 012B     		cmp	r3, #1
 6295 017c 05D9     		bls	.L380
 6296              		.loc 1 2971 0 is_stmt 0 discriminator 2
 6297 017e 7B68     		ldr	r3, [r7, #4]
 6298 0180 1B68     		ldr	r3, [r3, #0]
 6299 0182 DA69     		ldr	r2, [r3, #28]
 6300 0184 FB69     		ldr	r3, [r7, #28]
 6301 0186 9A42     		cmp	r2, r3
 6302 0188 09D8     		bhi	.L381
 6303              	.L380:
 6304              		.loc 1 2971 0 discriminator 1
 6305 018a 7B68     		ldr	r3, [r7, #4]
 6306 018c 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 6307 018e 63F07F03 		orn	r3, r3, #127
 6308 0192 DAB2     		uxtb	r2, r3
 6309 0194 7B68     		ldr	r3, [r7, #4]
 6310 0196 9A71     		strb	r2, [r3, #6]
 6311 0198 4FF00203 		mov	r3, #2
 6312 019c 9CE0     		b	.L366
 6313              	.L381:
2972:../Dave/Generated/src/FATFS002/Src/ff.c **** 					fp->clust = clst;
 6314              		.loc 1 2972 0 is_stmt 1
 6315 019e 7B68     		ldr	r3, [r7, #4]
 6316 01a0 FA69     		ldr	r2, [r7, #28]
 6317 01a2 5A61     		str	r2, [r3, #20]
2973:../Dave/Generated/src/FATFS002/Src/ff.c **** 					fp->fptr += bcs;
 6318              		.loc 1 2973 0
 6319 01a4 7B68     		ldr	r3, [r7, #4]
 6320 01a6 9A68     		ldr	r2, [r3, #8]
 6321 01a8 FB68     		ldr	r3, [r7, #12]
 6322 01aa D218     		adds	r2, r2, r3
 6323 01ac 7B68     		ldr	r3, [r7, #4]
 6324 01ae 9A60     		str	r2, [r3, #8]
2974:../Dave/Generated/src/FATFS002/Src/ff.c **** 					ofs -= bcs;
 6325              		.loc 1 2974 0
 6326 01b0 3A68     		ldr	r2, [r7, #0]
 6327 01b2 FB68     		ldr	r3, [r7, #12]
 6328 01b4 D31A     		subs	r3, r2, r3
 6329 01b6 3B60     		str	r3, [r7, #0]
 6330              	.L375:
2960:../Dave/Generated/src/FATFS002/Src/ff.c **** 				while (ofs > bcs) {						/* Cluster following loop */
 6331              		.loc 1 2960 0 discriminator 1
 6332 01b8 3A68     		ldr	r2, [r7, #0]
 6333 01ba FB68     		ldr	r3, [r7, #12]
 6334 01bc 9A42     		cmp	r2, r3
 6335 01be B3D8     		bhi	.L382
 6336              	.L378:
2975:../Dave/Generated/src/FATFS002/Src/ff.c **** 				}
2976:../Dave/Generated/src/FATFS002/Src/ff.c **** 				fp->fptr += ofs;
 6337              		.loc 1 2976 0
 6338 01c0 7B68     		ldr	r3, [r7, #4]
 6339 01c2 9A68     		ldr	r2, [r3, #8]
 6340 01c4 3B68     		ldr	r3, [r7, #0]
 6341 01c6 D218     		adds	r2, r2, r3
 6342 01c8 7B68     		ldr	r3, [r7, #4]
 6343 01ca 9A60     		str	r2, [r3, #8]
2977:../Dave/Generated/src/FATFS002/Src/ff.c **** 				if (ofs % SS(fp->fs)) {
 6344              		.loc 1 2977 0
 6345 01cc 3B68     		ldr	r3, [r7, #0]
 6346 01ce 4FEAC353 		lsl	r3, r3, #23
 6347 01d2 4FEAD353 		lsr	r3, r3, #23
 6348 01d6 002B     		cmp	r3, #0
 6349 01d8 19D0     		beq	.L369
2978:../Dave/Generated/src/FATFS002/Src/ff.c **** 					nsect = clust2sect(fp->fs, clst);	/* Current sector */
 6350              		.loc 1 2978 0
 6351 01da 7B68     		ldr	r3, [r7, #4]
 6352 01dc 1B68     		ldr	r3, [r3, #0]
 6353 01de 1846     		mov	r0, r3
 6354 01e0 F969     		ldr	r1, [r7, #28]
 6355 01e2 FFF7FEFF 		bl	clust2sect
 6356 01e6 B861     		str	r0, [r7, #24]
2979:../Dave/Generated/src/FATFS002/Src/ff.c **** 					if (!nsect) ABORT(fp->fs, FR_INT_ERR);
 6357              		.loc 1 2979 0
 6358 01e8 BB69     		ldr	r3, [r7, #24]
 6359 01ea 002B     		cmp	r3, #0
 6360 01ec 09D1     		bne	.L383
 6361              		.loc 1 2979 0 is_stmt 0 discriminator 1
 6362 01ee 7B68     		ldr	r3, [r7, #4]
 6363 01f0 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 6364 01f2 63F07F03 		orn	r3, r3, #127
 6365 01f6 DAB2     		uxtb	r2, r3
 6366 01f8 7B68     		ldr	r3, [r7, #4]
 6367 01fa 9A71     		strb	r2, [r3, #6]
 6368 01fc 4FF00203 		mov	r3, #2
 6369 0200 6AE0     		b	.L366
 6370              	.L383:
2980:../Dave/Generated/src/FATFS002/Src/ff.c **** 					nsect += ofs / SS(fp->fs);
 6371              		.loc 1 2980 0 is_stmt 1
 6372 0202 3B68     		ldr	r3, [r7, #0]
 6373 0204 4FEA5323 		lsr	r3, r3, #9
 6374 0208 BA69     		ldr	r2, [r7, #24]
 6375 020a D318     		adds	r3, r2, r3
 6376 020c BB61     		str	r3, [r7, #24]
 6377              	.L369:
2981:../Dave/Generated/src/FATFS002/Src/ff.c **** 				}
2982:../Dave/Generated/src/FATFS002/Src/ff.c **** 			}
2983:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
2984:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (fp->fptr % SS(fp->fs) && nsect != fp->dsect) {	/* Fill sector cache if needed */
 6378              		.loc 1 2984 0
 6379 020e 7B68     		ldr	r3, [r7, #4]
 6380 0210 9B68     		ldr	r3, [r3, #8]
 6381 0212 4FEAC353 		lsl	r3, r3, #23
 6382 0216 4FEAD353 		lsr	r3, r3, #23
 6383 021a 002B     		cmp	r3, #0
 6384 021c 4AD0     		beq	.L384
 6385              		.loc 1 2984 0 is_stmt 0 discriminator 1
 6386 021e 7B68     		ldr	r3, [r7, #4]
 6387 0220 9A69     		ldr	r2, [r3, #24]
 6388 0222 BB69     		ldr	r3, [r7, #24]
 6389 0224 9A42     		cmp	r2, r3
 6390 0226 45D0     		beq	.L384
2985:../Dave/Generated/src/FATFS002/Src/ff.c **** #if !_FS_TINY
2986:../Dave/Generated/src/FATFS002/Src/ff.c **** #if !_FS_READONLY
2987:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (fp->flag & FA__DIRTY) {			/* Write-back dirty sector cache */
 6391              		.loc 1 2987 0 is_stmt 1
 6392 0228 7B68     		ldr	r3, [r7, #4]
 6393 022a 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 6394 022c 03F04003 		and	r3, r3, #64
 6395 0230 002B     		cmp	r3, #0
 6396 0232 22D0     		beq	.L385
2988:../Dave/Generated/src/FATFS002/Src/ff.c **** 				if (disk_write(fp->fs->drv, fp->buf, fp->dsect, 1) != RES_OK)
 6397              		.loc 1 2988 0
 6398 0234 7B68     		ldr	r3, [r7, #4]
 6399 0236 1B68     		ldr	r3, [r3, #0]
 6400 0238 5978     		ldrb	r1, [r3, #1]	@ zero_extendqisi2
 6401 023a 7B68     		ldr	r3, [r7, #4]
 6402 023c 03F12402 		add	r2, r3, #36
 6403 0240 7B68     		ldr	r3, [r7, #4]
 6404 0242 9B69     		ldr	r3, [r3, #24]
 6405 0244 0846     		mov	r0, r1
 6406 0246 1146     		mov	r1, r2
 6407 0248 1A46     		mov	r2, r3
 6408 024a 4FF00103 		mov	r3, #1
 6409 024e FFF7FEFF 		bl	disk_write
 6410 0252 0346     		mov	r3, r0
 6411 0254 002B     		cmp	r3, #0
 6412 0256 09D0     		beq	.L386
2989:../Dave/Generated/src/FATFS002/Src/ff.c **** 					ABORT(fp->fs, FR_DISK_ERR);
 6413              		.loc 1 2989 0
 6414 0258 7B68     		ldr	r3, [r7, #4]
 6415 025a 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 6416 025c 63F07F03 		orn	r3, r3, #127
 6417 0260 DAB2     		uxtb	r2, r3
 6418 0262 7B68     		ldr	r3, [r7, #4]
 6419 0264 9A71     		strb	r2, [r3, #6]
 6420 0266 4FF00103 		mov	r3, #1
 6421 026a 35E0     		b	.L366
 6422              	.L386:
2990:../Dave/Generated/src/FATFS002/Src/ff.c **** 				fp->flag &= ~FA__DIRTY;
 6423              		.loc 1 2990 0
 6424 026c 7B68     		ldr	r3, [r7, #4]
 6425 026e 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 6426 0270 23F04003 		bic	r3, r3, #64
 6427 0274 DAB2     		uxtb	r2, r3
 6428 0276 7B68     		ldr	r3, [r7, #4]
 6429 0278 9A71     		strb	r2, [r3, #6]
 6430              	.L385:
2991:../Dave/Generated/src/FATFS002/Src/ff.c **** 			}
2992:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
2993:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (disk_read(fp->fs->drv, fp->buf, nsect, 1) != RES_OK)	/* Fill sector cache */
 6431              		.loc 1 2993 0
 6432 027a 7B68     		ldr	r3, [r7, #4]
 6433 027c 1B68     		ldr	r3, [r3, #0]
 6434 027e 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 6435 0280 7B68     		ldr	r3, [r7, #4]
 6436 0282 03F12403 		add	r3, r3, #36
 6437 0286 1046     		mov	r0, r2
 6438 0288 1946     		mov	r1, r3
 6439 028a BA69     		ldr	r2, [r7, #24]
 6440 028c 4FF00103 		mov	r3, #1
 6441 0290 FFF7FEFF 		bl	disk_read
 6442 0294 0346     		mov	r3, r0
 6443 0296 002B     		cmp	r3, #0
 6444 0298 09D0     		beq	.L387
2994:../Dave/Generated/src/FATFS002/Src/ff.c **** 				ABORT(fp->fs, FR_DISK_ERR);
 6445              		.loc 1 2994 0
 6446 029a 7B68     		ldr	r3, [r7, #4]
 6447 029c 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 6448 029e 63F07F03 		orn	r3, r3, #127
 6449 02a2 DAB2     		uxtb	r2, r3
 6450 02a4 7B68     		ldr	r3, [r7, #4]
 6451 02a6 9A71     		strb	r2, [r3, #6]
 6452 02a8 4FF00103 		mov	r3, #1
 6453 02ac 14E0     		b	.L366
 6454              	.L387:
2995:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
2996:../Dave/Generated/src/FATFS002/Src/ff.c **** 			fp->dsect = nsect;
 6455              		.loc 1 2996 0
 6456 02ae 7B68     		ldr	r3, [r7, #4]
 6457 02b0 BA69     		ldr	r2, [r7, #24]
 6458 02b2 9A61     		str	r2, [r3, #24]
 6459              	.L384:
2997:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
2998:../Dave/Generated/src/FATFS002/Src/ff.c **** #if !_FS_READONLY
2999:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (fp->fptr > fp->fsize) {			/* Set file change flag if the file size is extended */
 6460              		.loc 1 2999 0
 6461 02b4 7B68     		ldr	r3, [r7, #4]
 6462 02b6 9A68     		ldr	r2, [r3, #8]
 6463 02b8 7B68     		ldr	r3, [r7, #4]
 6464 02ba DB68     		ldr	r3, [r3, #12]
 6465 02bc 9A42     		cmp	r2, r3
 6466 02be 0AD9     		bls	.L388
3000:../Dave/Generated/src/FATFS002/Src/ff.c **** 			fp->fsize = fp->fptr;
 6467              		.loc 1 3000 0
 6468 02c0 7B68     		ldr	r3, [r7, #4]
 6469 02c2 9A68     		ldr	r2, [r3, #8]
 6470 02c4 7B68     		ldr	r3, [r7, #4]
 6471 02c6 DA60     		str	r2, [r3, #12]
3001:../Dave/Generated/src/FATFS002/Src/ff.c **** 			fp->flag |= FA__WRITTEN;
 6472              		.loc 1 3001 0
 6473 02c8 7B68     		ldr	r3, [r7, #4]
 6474 02ca 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 6475 02cc 43F02003 		orr	r3, r3, #32
 6476 02d0 DAB2     		uxtb	r2, r3
 6477 02d2 7B68     		ldr	r3, [r7, #4]
 6478 02d4 9A71     		strb	r2, [r3, #6]
 6479              	.L388:
 6480              	.LBE5:
3002:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
3003:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
3004:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
3005:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3006:../Dave/Generated/src/FATFS002/Src/ff.c **** 	LEAVE_FF(fp->fs, res);
 6481              		.loc 1 3006 0
 6482 02d6 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6483              	.L366:
3007:../Dave/Generated/src/FATFS002/Src/ff.c **** }
 6484              		.loc 1 3007 0
 6485 02d8 1846     		mov	r0, r3
 6486 02da 07F12007 		add	r7, r7, #32
 6487 02de BD46     		mov	sp, r7
 6488 02e0 80BD     		pop	{r7, pc}
 6489              		.cfi_endproc
 6490              	.LFE31:
 6492 02e2 00BF     		.section	.text.f_opendir,"ax",%progbits
 6493              		.align	2
 6494              		.global	f_opendir
 6495              		.thumb
 6496              		.thumb_func
 6498              	f_opendir:
 6499              	.LFB32:
3008:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3009:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3010:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3011:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _FS_MINIMIZE <= 1
3012:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
3013:../Dave/Generated/src/FATFS002/Src/ff.c **** /* Create a Directroy Object                                             */
3014:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
3015:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3016:../Dave/Generated/src/FATFS002/Src/ff.c **** FRESULT f_opendir (
3017:../Dave/Generated/src/FATFS002/Src/ff.c **** 	DIR *dj,			/* Pointer to directory object to create */
3018:../Dave/Generated/src/FATFS002/Src/ff.c **** 	const TCHAR *path	/* Pointer to the directory path */
3019:../Dave/Generated/src/FATFS002/Src/ff.c **** )
3020:../Dave/Generated/src/FATFS002/Src/ff.c **** {
 6500              		.loc 1 3020 0
 6501              		.cfi_startproc
 6502              		@ args = 0, pretend = 0, frame = 24
 6503              		@ frame_needed = 1, uses_anonymous_args = 0
 6504 0000 80B5     		push	{r7, lr}
 6505              	.LCFI96:
 6506              		.cfi_def_cfa_offset 8
 6507              		.cfi_offset 7, -8
 6508              		.cfi_offset 14, -4
 6509 0002 86B0     		sub	sp, sp, #24
 6510              	.LCFI97:
 6511              		.cfi_def_cfa_offset 32
 6512 0004 00AF     		add	r7, sp, #0
 6513              	.LCFI98:
 6514              		.cfi_def_cfa_register 7
 6515 0006 7860     		str	r0, [r7, #4]
 6516 0008 3960     		str	r1, [r7, #0]
3021:../Dave/Generated/src/FATFS002/Src/ff.c **** 	FRESULT res;
3022:../Dave/Generated/src/FATFS002/Src/ff.c **** 	DEF_NAMEBUF;
3023:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3024:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3025:../Dave/Generated/src/FATFS002/Src/ff.c **** 	res = chk_mounted(&path, &dj->fs, 0);
 6517              		.loc 1 3025 0
 6518 000a 7B68     		ldr	r3, [r7, #4]
 6519 000c 3A46     		mov	r2, r7
 6520 000e 1046     		mov	r0, r2
 6521 0010 1946     		mov	r1, r3
 6522 0012 4FF00002 		mov	r2, #0
 6523 0016 FFF7FEFF 		bl	chk_mounted
 6524 001a 0346     		mov	r3, r0
 6525 001c FB75     		strb	r3, [r7, #23]
3026:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (res == FR_OK) {
 6526              		.loc 1 3026 0
 6527 001e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6528 0020 002B     		cmp	r3, #0
 6529 0022 58D1     		bne	.L390
3027:../Dave/Generated/src/FATFS002/Src/ff.c **** 		INIT_BUF(*dj);
 6530              		.loc 1 3027 0
 6531 0024 7B68     		ldr	r3, [r7, #4]
 6532 0026 07F10802 		add	r2, r7, #8
 6533 002a 9A61     		str	r2, [r3, #24]
3028:../Dave/Generated/src/FATFS002/Src/ff.c **** 		res = follow_path(dj, path);			/* Follow the path to the directory */
 6534              		.loc 1 3028 0
 6535 002c 3B68     		ldr	r3, [r7, #0]
 6536 002e 7868     		ldr	r0, [r7, #4]
 6537 0030 1946     		mov	r1, r3
 6538 0032 FFF7FEFF 		bl	follow_path
 6539 0036 0346     		mov	r3, r0
 6540 0038 FB75     		strb	r3, [r7, #23]
3029:../Dave/Generated/src/FATFS002/Src/ff.c **** 		FREE_BUF();
3030:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (res == FR_OK) {						/* Follow completed */
 6541              		.loc 1 3030 0
 6542 003a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6543 003c 002B     		cmp	r3, #0
 6544 003e 44D1     		bne	.L391
3031:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (dj->dir) {						/* It is not the root dir */
 6545              		.loc 1 3031 0
 6546 0040 7B68     		ldr	r3, [r7, #4]
 6547 0042 5B69     		ldr	r3, [r3, #20]
 6548 0044 002B     		cmp	r3, #0
 6549 0046 31D0     		beq	.L392
3032:../Dave/Generated/src/FATFS002/Src/ff.c **** 				if (dj->dir[DIR_Attr] & AM_DIR) {	/* The object is a directory */
 6550              		.loc 1 3032 0
 6551 0048 7B68     		ldr	r3, [r7, #4]
 6552 004a 5B69     		ldr	r3, [r3, #20]
 6553 004c 03F10B03 		add	r3, r3, #11
 6554 0050 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 6555 0052 03F01003 		and	r3, r3, #16
 6556 0056 002B     		cmp	r3, #0
 6557 0058 25D0     		beq	.L393
3033:../Dave/Generated/src/FATFS002/Src/ff.c **** 					dj->sclust = LD_CLUST(dj->dir);
 6558              		.loc 1 3033 0
 6559 005a 7B68     		ldr	r3, [r7, #4]
 6560 005c 5B69     		ldr	r3, [r3, #20]
 6561 005e 03F11503 		add	r3, r3, #21
 6562 0062 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 6563 0064 4FEA0323 		lsl	r3, r3, #8
 6564 0068 9AB2     		uxth	r2, r3
 6565 006a 7B68     		ldr	r3, [r7, #4]
 6566 006c 5B69     		ldr	r3, [r3, #20]
 6567 006e 03F11403 		add	r3, r3, #20
 6568 0072 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 6569 0074 1343     		orrs	r3, r3, r2
 6570 0076 9BB2     		uxth	r3, r3
 6571 0078 9BB2     		uxth	r3, r3
 6572 007a 4FEA0342 		lsl	r2, r3, #16
 6573 007e 7B68     		ldr	r3, [r7, #4]
 6574 0080 5B69     		ldr	r3, [r3, #20]
 6575 0082 03F11B03 		add	r3, r3, #27
 6576 0086 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 6577 0088 4FEA0323 		lsl	r3, r3, #8
 6578 008c 99B2     		uxth	r1, r3
 6579 008e 7B68     		ldr	r3, [r7, #4]
 6580 0090 5B69     		ldr	r3, [r3, #20]
 6581 0092 03F11A03 		add	r3, r3, #26
 6582 0096 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 6583 0098 0B43     		orrs	r3, r3, r1
 6584 009a 9BB2     		uxth	r3, r3
 6585 009c 9BB2     		uxth	r3, r3
 6586 009e 1A43     		orrs	r2, r2, r3
 6587 00a0 7B68     		ldr	r3, [r7, #4]
 6588 00a2 9A60     		str	r2, [r3, #8]
 6589 00a4 02E0     		b	.L392
 6590              	.L393:
3034:../Dave/Generated/src/FATFS002/Src/ff.c **** 				} else {						/* The object is not a directory */
3035:../Dave/Generated/src/FATFS002/Src/ff.c **** 					res = FR_NO_PATH;
 6591              		.loc 1 3035 0
 6592 00a6 4FF00503 		mov	r3, #5
 6593 00aa FB75     		strb	r3, [r7, #23]
 6594              	.L392:
3036:../Dave/Generated/src/FATFS002/Src/ff.c **** 				}
3037:../Dave/Generated/src/FATFS002/Src/ff.c **** 			}
3038:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (res == FR_OK) {
 6595              		.loc 1 3038 0
 6596 00ac FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6597 00ae 002B     		cmp	r3, #0
 6598 00b0 0BD1     		bne	.L391
3039:../Dave/Generated/src/FATFS002/Src/ff.c **** 				dj->id = dj->fs->id;
 6599              		.loc 1 3039 0
 6600 00b2 7B68     		ldr	r3, [r7, #4]
 6601 00b4 1B68     		ldr	r3, [r3, #0]
 6602 00b6 DA88     		ldrh	r2, [r3, #6]
 6603 00b8 7B68     		ldr	r3, [r7, #4]
 6604 00ba 9A80     		strh	r2, [r3, #4]	@ movhi
3040:../Dave/Generated/src/FATFS002/Src/ff.c **** 				res = dir_sdi(dj, 0);			/* Rewind dir */
 6605              		.loc 1 3040 0
 6606 00bc 7868     		ldr	r0, [r7, #4]
 6607 00be 4FF00001 		mov	r1, #0
 6608 00c2 FFF7FEFF 		bl	dir_sdi
 6609 00c6 0346     		mov	r3, r0
 6610 00c8 FB75     		strb	r3, [r7, #23]
 6611              	.L391:
3041:../Dave/Generated/src/FATFS002/Src/ff.c **** 			}
3042:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
3043:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (res == FR_NO_FILE) res = FR_NO_PATH;
 6612              		.loc 1 3043 0
 6613 00ca FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6614 00cc 042B     		cmp	r3, #4
 6615 00ce 02D1     		bne	.L390
 6616              		.loc 1 3043 0 is_stmt 0 discriminator 1
 6617 00d0 4FF00503 		mov	r3, #5
 6618 00d4 FB75     		strb	r3, [r7, #23]
 6619              	.L390:
3044:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
3045:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3046:../Dave/Generated/src/FATFS002/Src/ff.c **** 	LEAVE_FF(dj->fs, res);
 6620              		.loc 1 3046 0 is_stmt 1
 6621 00d6 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
3047:../Dave/Generated/src/FATFS002/Src/ff.c **** }
 6622              		.loc 1 3047 0
 6623 00d8 1846     		mov	r0, r3
 6624 00da 07F11807 		add	r7, r7, #24
 6625 00de BD46     		mov	sp, r7
 6626 00e0 80BD     		pop	{r7, pc}
 6627              		.cfi_endproc
 6628              	.LFE32:
 6630 00e2 00BF     		.section	.text.f_readdir,"ax",%progbits
 6631              		.align	2
 6632              		.global	f_readdir
 6633              		.thumb
 6634              		.thumb_func
 6636              	f_readdir:
 6637              	.LFB33:
3048:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3049:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3050:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3051:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3052:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
3053:../Dave/Generated/src/FATFS002/Src/ff.c **** /* Read Directory Entry in Sequense                                      */
3054:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
3055:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3056:../Dave/Generated/src/FATFS002/Src/ff.c **** FRESULT f_readdir (
3057:../Dave/Generated/src/FATFS002/Src/ff.c **** 	DIR *dj,			/* Pointer to the open directory object */
3058:../Dave/Generated/src/FATFS002/Src/ff.c **** 	FILINFO *fno		/* Pointer to file information to return */
3059:../Dave/Generated/src/FATFS002/Src/ff.c **** )
3060:../Dave/Generated/src/FATFS002/Src/ff.c **** {
 6638              		.loc 1 3060 0
 6639              		.cfi_startproc
 6640              		@ args = 0, pretend = 0, frame = 24
 6641              		@ frame_needed = 1, uses_anonymous_args = 0
 6642 0000 80B5     		push	{r7, lr}
 6643              	.LCFI99:
 6644              		.cfi_def_cfa_offset 8
 6645              		.cfi_offset 7, -8
 6646              		.cfi_offset 14, -4
 6647 0002 86B0     		sub	sp, sp, #24
 6648              	.LCFI100:
 6649              		.cfi_def_cfa_offset 32
 6650 0004 00AF     		add	r7, sp, #0
 6651              	.LCFI101:
 6652              		.cfi_def_cfa_register 7
 6653 0006 7860     		str	r0, [r7, #4]
 6654 0008 3960     		str	r1, [r7, #0]
3061:../Dave/Generated/src/FATFS002/Src/ff.c **** 	FRESULT res;
3062:../Dave/Generated/src/FATFS002/Src/ff.c **** 	DEF_NAMEBUF;
3063:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3064:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3065:../Dave/Generated/src/FATFS002/Src/ff.c **** 	res = validate(dj->fs, dj->id);			/* Check validity of the object */
 6655              		.loc 1 3065 0
 6656 000a 7B68     		ldr	r3, [r7, #4]
 6657 000c 1A68     		ldr	r2, [r3, #0]
 6658 000e 7B68     		ldr	r3, [r7, #4]
 6659 0010 9B88     		ldrh	r3, [r3, #4]
 6660 0012 1046     		mov	r0, r2
 6661 0014 1946     		mov	r1, r3
 6662 0016 FFF7FEFF 		bl	validate
 6663 001a 0346     		mov	r3, r0
 6664 001c FB75     		strb	r3, [r7, #23]
3066:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (res == FR_OK) {
 6665              		.loc 1 3066 0
 6666 001e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6667 0020 002B     		cmp	r3, #0
 6668 0022 35D1     		bne	.L396
3067:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (!fno) {
 6669              		.loc 1 3067 0
 6670 0024 3B68     		ldr	r3, [r7, #0]
 6671 0026 002B     		cmp	r3, #0
 6672 0028 07D1     		bne	.L397
3068:../Dave/Generated/src/FATFS002/Src/ff.c **** 			res = dir_sdi(dj, 0);			/* Rewind the directory object */
 6673              		.loc 1 3068 0
 6674 002a 7868     		ldr	r0, [r7, #4]
 6675 002c 4FF00001 		mov	r1, #0
 6676 0030 FFF7FEFF 		bl	dir_sdi
 6677 0034 0346     		mov	r3, r0
 6678 0036 FB75     		strb	r3, [r7, #23]
 6679 0038 2AE0     		b	.L396
 6680              	.L397:
3069:../Dave/Generated/src/FATFS002/Src/ff.c **** 		} else {
3070:../Dave/Generated/src/FATFS002/Src/ff.c **** 			INIT_BUF(*dj);
 6681              		.loc 1 3070 0
 6682 003a 7B68     		ldr	r3, [r7, #4]
 6683 003c 07F10802 		add	r2, r7, #8
 6684 0040 9A61     		str	r2, [r3, #24]
3071:../Dave/Generated/src/FATFS002/Src/ff.c **** 			res = dir_read(dj);				/* Read an directory item */
 6685              		.loc 1 3071 0
 6686 0042 7868     		ldr	r0, [r7, #4]
 6687 0044 FFF7FEFF 		bl	dir_read
 6688 0048 0346     		mov	r3, r0
 6689 004a FB75     		strb	r3, [r7, #23]
3072:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (res == FR_NO_FILE) {		/* Reached end of dir */
 6690              		.loc 1 3072 0
 6691 004c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6692 004e 042B     		cmp	r3, #4
 6693 0050 06D1     		bne	.L398
3073:../Dave/Generated/src/FATFS002/Src/ff.c **** 				dj->sect = 0;
 6694              		.loc 1 3073 0
 6695 0052 7B68     		ldr	r3, [r7, #4]
 6696 0054 4FF00002 		mov	r2, #0
 6697 0058 1A61     		str	r2, [r3, #16]
3074:../Dave/Generated/src/FATFS002/Src/ff.c **** 				res = FR_OK;
 6698              		.loc 1 3074 0
 6699 005a 4FF00003 		mov	r3, #0
 6700 005e FB75     		strb	r3, [r7, #23]
 6701              	.L398:
3075:../Dave/Generated/src/FATFS002/Src/ff.c **** 			}
3076:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (res == FR_OK) {				/* A valid entry is found */
 6702              		.loc 1 3076 0
 6703 0060 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6704 0062 002B     		cmp	r3, #0
 6705 0064 14D1     		bne	.L396
3077:../Dave/Generated/src/FATFS002/Src/ff.c **** 				get_fileinfo(dj, fno);		/* Get the object information */
 6706              		.loc 1 3077 0
 6707 0066 7868     		ldr	r0, [r7, #4]
 6708 0068 3968     		ldr	r1, [r7, #0]
 6709 006a FFF7FEFF 		bl	get_fileinfo
3078:../Dave/Generated/src/FATFS002/Src/ff.c **** 				res = dir_next(dj, 0);		/* Increment index for next */
 6710              		.loc 1 3078 0
 6711 006e 7868     		ldr	r0, [r7, #4]
 6712 0070 4FF00001 		mov	r1, #0
 6713 0074 FFF7FEFF 		bl	dir_next
 6714 0078 0346     		mov	r3, r0
 6715 007a FB75     		strb	r3, [r7, #23]
3079:../Dave/Generated/src/FATFS002/Src/ff.c **** 				if (res == FR_NO_FILE) {
 6716              		.loc 1 3079 0
 6717 007c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6718 007e 042B     		cmp	r3, #4
 6719 0080 06D1     		bne	.L396
3080:../Dave/Generated/src/FATFS002/Src/ff.c **** 					dj->sect = 0;
 6720              		.loc 1 3080 0
 6721 0082 7B68     		ldr	r3, [r7, #4]
 6722 0084 4FF00002 		mov	r2, #0
 6723 0088 1A61     		str	r2, [r3, #16]
3081:../Dave/Generated/src/FATFS002/Src/ff.c **** 					res = FR_OK;
 6724              		.loc 1 3081 0
 6725 008a 4FF00003 		mov	r3, #0
 6726 008e FB75     		strb	r3, [r7, #23]
 6727              	.L396:
3082:../Dave/Generated/src/FATFS002/Src/ff.c **** 				}
3083:../Dave/Generated/src/FATFS002/Src/ff.c **** 			}
3084:../Dave/Generated/src/FATFS002/Src/ff.c **** 			FREE_BUF();
3085:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
3086:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
3087:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3088:../Dave/Generated/src/FATFS002/Src/ff.c **** 	LEAVE_FF(dj->fs, res);
 6728              		.loc 1 3088 0
 6729 0090 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
3089:../Dave/Generated/src/FATFS002/Src/ff.c **** }
 6730              		.loc 1 3089 0
 6731 0092 1846     		mov	r0, r3
 6732 0094 07F11807 		add	r7, r7, #24
 6733 0098 BD46     		mov	sp, r7
 6734 009a 80BD     		pop	{r7, pc}
 6735              		.cfi_endproc
 6736              	.LFE33:
 6738              		.section	.text.f_stat,"ax",%progbits
 6739              		.align	2
 6740              		.global	f_stat
 6741              		.thumb
 6742              		.thumb_func
 6744              	f_stat:
 6745              	.LFB34:
3090:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3091:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3092:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3093:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _FS_MINIMIZE == 0
3094:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
3095:../Dave/Generated/src/FATFS002/Src/ff.c **** /* Get File Status                                                       */
3096:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
3097:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3098:../Dave/Generated/src/FATFS002/Src/ff.c **** FRESULT f_stat (
3099:../Dave/Generated/src/FATFS002/Src/ff.c **** 	const TCHAR *path,	/* Pointer to the file path */
3100:../Dave/Generated/src/FATFS002/Src/ff.c **** 	FILINFO *fno		/* Pointer to file information to return */
3101:../Dave/Generated/src/FATFS002/Src/ff.c **** )
3102:../Dave/Generated/src/FATFS002/Src/ff.c **** {
 6746              		.loc 1 3102 0
 6747              		.cfi_startproc
 6748              		@ args = 0, pretend = 0, frame = 56
 6749              		@ frame_needed = 1, uses_anonymous_args = 0
 6750 0000 80B5     		push	{r7, lr}
 6751              	.LCFI102:
 6752              		.cfi_def_cfa_offset 8
 6753              		.cfi_offset 7, -8
 6754              		.cfi_offset 14, -4
 6755 0002 8EB0     		sub	sp, sp, #56
 6756              	.LCFI103:
 6757              		.cfi_def_cfa_offset 64
 6758 0004 00AF     		add	r7, sp, #0
 6759              	.LCFI104:
 6760              		.cfi_def_cfa_register 7
 6761 0006 7860     		str	r0, [r7, #4]
 6762 0008 3960     		str	r1, [r7, #0]
3103:../Dave/Generated/src/FATFS002/Src/ff.c **** 	FRESULT res;
3104:../Dave/Generated/src/FATFS002/Src/ff.c **** 	DIR dj;
3105:../Dave/Generated/src/FATFS002/Src/ff.c **** 	DEF_NAMEBUF;
3106:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3107:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3108:../Dave/Generated/src/FATFS002/Src/ff.c **** 	res = chk_mounted(&path, &dj.fs, 0);
 6763              		.loc 1 3108 0
 6764 000a 07F10402 		add	r2, r7, #4
 6765 000e 07F11803 		add	r3, r7, #24
 6766 0012 1046     		mov	r0, r2
 6767 0014 1946     		mov	r1, r3
 6768 0016 4FF00002 		mov	r2, #0
 6769 001a FFF7FEFF 		bl	chk_mounted
 6770 001e 0346     		mov	r3, r0
 6771 0020 87F83730 		strb	r3, [r7, #55]
3109:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (res == FR_OK) {
 6772              		.loc 1 3109 0
 6773 0024 97F83730 		ldrb	r3, [r7, #55]	@ zero_extendqisi2
 6774 0028 002B     		cmp	r3, #0
 6775 002a 1ED1     		bne	.L401
3110:../Dave/Generated/src/FATFS002/Src/ff.c **** 		INIT_BUF(dj);
 6776              		.loc 1 3110 0
 6777 002c 07F10C03 		add	r3, r7, #12
 6778 0030 3B63     		str	r3, [r7, #48]
3111:../Dave/Generated/src/FATFS002/Src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
 6779              		.loc 1 3111 0
 6780 0032 7B68     		ldr	r3, [r7, #4]
 6781 0034 07F11802 		add	r2, r7, #24
 6782 0038 1046     		mov	r0, r2
 6783 003a 1946     		mov	r1, r3
 6784 003c FFF7FEFF 		bl	follow_path
 6785 0040 0346     		mov	r3, r0
 6786 0042 87F83730 		strb	r3, [r7, #55]
3112:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (res == FR_OK) {				/* Follow completed */
 6787              		.loc 1 3112 0
 6788 0046 97F83730 		ldrb	r3, [r7, #55]	@ zero_extendqisi2
 6789 004a 002B     		cmp	r3, #0
 6790 004c 0DD1     		bne	.L401
3113:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (dj.dir)		/* Found an object */
 6791              		.loc 1 3113 0
 6792 004e FB6A     		ldr	r3, [r7, #44]
 6793 0050 002B     		cmp	r3, #0
 6794 0052 06D0     		beq	.L402
3114:../Dave/Generated/src/FATFS002/Src/ff.c **** 				get_fileinfo(&dj, fno);
 6795              		.loc 1 3114 0
 6796 0054 07F11803 		add	r3, r7, #24
 6797 0058 1846     		mov	r0, r3
 6798 005a 3968     		ldr	r1, [r7, #0]
 6799 005c FFF7FEFF 		bl	get_fileinfo
 6800 0060 03E0     		b	.L401
 6801              	.L402:
3115:../Dave/Generated/src/FATFS002/Src/ff.c **** 			else			/* It is root dir */
3116:../Dave/Generated/src/FATFS002/Src/ff.c **** 				res = FR_INVALID_NAME;
 6802              		.loc 1 3116 0
 6803 0062 4FF00603 		mov	r3, #6
 6804 0066 87F83730 		strb	r3, [r7, #55]
 6805              	.L401:
3117:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
3118:../Dave/Generated/src/FATFS002/Src/ff.c **** 		FREE_BUF();
3119:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
3120:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3121:../Dave/Generated/src/FATFS002/Src/ff.c **** 	LEAVE_FF(dj.fs, res);
 6806              		.loc 1 3121 0
 6807 006a 97F83730 		ldrb	r3, [r7, #55]	@ zero_extendqisi2
3122:../Dave/Generated/src/FATFS002/Src/ff.c **** }
 6808              		.loc 1 3122 0
 6809 006e 1846     		mov	r0, r3
 6810 0070 07F13807 		add	r7, r7, #56
 6811 0074 BD46     		mov	sp, r7
 6812 0076 80BD     		pop	{r7, pc}
 6813              		.cfi_endproc
 6814              	.LFE34:
 6816              		.section	.text.f_getfree,"ax",%progbits
 6817              		.align	2
 6818              		.global	f_getfree
 6819              		.thumb
 6820              		.thumb_func
 6822              	f_getfree:
 6823              	.LFB35:
3123:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3124:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3125:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3126:../Dave/Generated/src/FATFS002/Src/ff.c **** #if !_FS_READONLY
3127:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
3128:../Dave/Generated/src/FATFS002/Src/ff.c **** /* Get Number of Free Clusters                                           */
3129:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
3130:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3131:../Dave/Generated/src/FATFS002/Src/ff.c **** FRESULT f_getfree (
3132:../Dave/Generated/src/FATFS002/Src/ff.c **** 	const TCHAR *path,	/* Pointer to the logical drive number (root dir) */
3133:../Dave/Generated/src/FATFS002/Src/ff.c **** 	DWORD *nclst,		/* Pointer to the variable to return number of free clusters */
3134:../Dave/Generated/src/FATFS002/Src/ff.c **** 	FATFS **fatfs		/* Pointer to pointer to corresponding file system object to return */
3135:../Dave/Generated/src/FATFS002/Src/ff.c **** )
3136:../Dave/Generated/src/FATFS002/Src/ff.c **** {
 6824              		.loc 1 3136 0
 6825              		.cfi_startproc
 6826              		@ args = 0, pretend = 0, frame = 48
 6827              		@ frame_needed = 1, uses_anonymous_args = 0
 6828 0000 80B5     		push	{r7, lr}
 6829              	.LCFI105:
 6830              		.cfi_def_cfa_offset 8
 6831              		.cfi_offset 7, -8
 6832              		.cfi_offset 14, -4
 6833 0002 8CB0     		sub	sp, sp, #48
 6834              	.LCFI106:
 6835              		.cfi_def_cfa_offset 56
 6836 0004 00AF     		add	r7, sp, #0
 6837              	.LCFI107:
 6838              		.cfi_def_cfa_register 7
 6839 0006 F860     		str	r0, [r7, #12]
 6840 0008 B960     		str	r1, [r7, #8]
 6841 000a 7A60     		str	r2, [r7, #4]
3137:../Dave/Generated/src/FATFS002/Src/ff.c **** 	FRESULT res;
3138:../Dave/Generated/src/FATFS002/Src/ff.c **** 	DWORD n, clst, sect, stat;
3139:../Dave/Generated/src/FATFS002/Src/ff.c **** 	UINT i;
3140:../Dave/Generated/src/FATFS002/Src/ff.c **** 	BYTE fat, *p;
3141:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3142:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3143:../Dave/Generated/src/FATFS002/Src/ff.c **** 	/* Get drive number */
3144:../Dave/Generated/src/FATFS002/Src/ff.c **** 	res = chk_mounted(&path, fatfs, 0);
 6842              		.loc 1 3144 0
 6843 000c 07F10C03 		add	r3, r7, #12
 6844 0010 1846     		mov	r0, r3
 6845 0012 7968     		ldr	r1, [r7, #4]
 6846 0014 4FF00002 		mov	r2, #0
 6847 0018 FFF7FEFF 		bl	chk_mounted
 6848 001c 0346     		mov	r3, r0
 6849 001e 87F82F30 		strb	r3, [r7, #47]
3145:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (res == FR_OK) {
 6850              		.loc 1 3145 0
 6851 0022 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 6852 0026 002B     		cmp	r3, #0
 6853 0028 40F0CF80 		bne	.L405
3146:../Dave/Generated/src/FATFS002/Src/ff.c **** 		/* If free_clust is valid, return it without full cluster scan */
3147:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if ((*fatfs)->free_clust <= (*fatfs)->n_fatent - 2) {
 6854              		.loc 1 3147 0
 6855 002c 7B68     		ldr	r3, [r7, #4]
 6856 002e 1B68     		ldr	r3, [r3, #0]
 6857 0030 1A69     		ldr	r2, [r3, #16]
 6858 0032 7B68     		ldr	r3, [r7, #4]
 6859 0034 1B68     		ldr	r3, [r3, #0]
 6860 0036 DB69     		ldr	r3, [r3, #28]
 6861 0038 A3F10203 		sub	r3, r3, #2
 6862 003c 9A42     		cmp	r2, r3
 6863 003e 05D8     		bhi	.L406
3148:../Dave/Generated/src/FATFS002/Src/ff.c **** 			*nclst = (*fatfs)->free_clust;
 6864              		.loc 1 3148 0
 6865 0040 7B68     		ldr	r3, [r7, #4]
 6866 0042 1B68     		ldr	r3, [r3, #0]
 6867 0044 1A69     		ldr	r2, [r3, #16]
 6868 0046 BB68     		ldr	r3, [r7, #8]
 6869 0048 1A60     		str	r2, [r3, #0]
 6870 004a BEE0     		b	.L405
 6871              	.L406:
3149:../Dave/Generated/src/FATFS002/Src/ff.c **** 		} else {
3150:../Dave/Generated/src/FATFS002/Src/ff.c **** 			/* Get number of free clusters */
3151:../Dave/Generated/src/FATFS002/Src/ff.c **** 			fat = (*fatfs)->fs_type;
 6872              		.loc 1 3151 0
 6873 004c 7B68     		ldr	r3, [r7, #4]
 6874 004e 1B68     		ldr	r3, [r3, #0]
 6875 0050 1B78     		ldrb	r3, [r3, #0]
 6876 0052 FB75     		strb	r3, [r7, #23]
3152:../Dave/Generated/src/FATFS002/Src/ff.c **** 			n = 0;
 6877              		.loc 1 3152 0
 6878 0054 4FF00003 		mov	r3, #0
 6879 0058 BB62     		str	r3, [r7, #40]
3153:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (fat == FS_FAT12) {
 6880              		.loc 1 3153 0
 6881 005a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6882 005c 012B     		cmp	r3, #1
 6883 005e 2DD1     		bne	.L407
3154:../Dave/Generated/src/FATFS002/Src/ff.c **** 				clst = 2;
 6884              		.loc 1 3154 0
 6885 0060 4FF00203 		mov	r3, #2
 6886 0064 7B62     		str	r3, [r7, #36]
 6887              	.L412:
3155:../Dave/Generated/src/FATFS002/Src/ff.c **** 				do {
3156:../Dave/Generated/src/FATFS002/Src/ff.c **** 					stat = get_fat(*fatfs, clst);
 6888              		.loc 1 3156 0
 6889 0066 7B68     		ldr	r3, [r7, #4]
 6890 0068 1B68     		ldr	r3, [r3, #0]
 6891 006a 1846     		mov	r0, r3
 6892 006c 796A     		ldr	r1, [r7, #36]
 6893 006e FFF7FEFF 		bl	get_fat
 6894 0072 3861     		str	r0, [r7, #16]
3157:../Dave/Generated/src/FATFS002/Src/ff.c **** 					if (stat == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }
 6895              		.loc 1 3157 0
 6896 0074 3B69     		ldr	r3, [r7, #16]
 6897 0076 B3F1FF3F 		cmp	r3, #-1
 6898 007a 04D1     		bne	.L408
 6899              		.loc 1 3157 0 is_stmt 0 discriminator 1
 6900 007c 4FF00103 		mov	r3, #1
 6901 0080 87F82F30 		strb	r3, [r7, #47]
 6902 0084 92E0     		b	.L413
 6903              	.L408:
3158:../Dave/Generated/src/FATFS002/Src/ff.c **** 					if (stat == 1) { res = FR_INT_ERR; break; }
 6904              		.loc 1 3158 0 is_stmt 1
 6905 0086 3B69     		ldr	r3, [r7, #16]
 6906 0088 012B     		cmp	r3, #1
 6907 008a 05D1     		bne	.L410
 6908              		.loc 1 3158 0 is_stmt 0 discriminator 1
 6909 008c 4FF00203 		mov	r3, #2
 6910 0090 87F82F30 		strb	r3, [r7, #47]
 6911 0094 00BF     		nop
 6912 0096 89E0     		b	.L413
 6913              	.L410:
3159:../Dave/Generated/src/FATFS002/Src/ff.c **** 					if (stat == 0) n++;
 6914              		.loc 1 3159 0 is_stmt 1
 6915 0098 3B69     		ldr	r3, [r7, #16]
 6916 009a 002B     		cmp	r3, #0
 6917 009c 03D1     		bne	.L411
 6918              		.loc 1 3159 0 is_stmt 0 discriminator 1
 6919 009e BB6A     		ldr	r3, [r7, #40]
 6920 00a0 03F10103 		add	r3, r3, #1
 6921 00a4 BB62     		str	r3, [r7, #40]
 6922              	.L411:
3160:../Dave/Generated/src/FATFS002/Src/ff.c **** 				} while (++clst < (*fatfs)->n_fatent);
 6923              		.loc 1 3160 0 is_stmt 1
 6924 00a6 7B6A     		ldr	r3, [r7, #36]
 6925 00a8 03F10103 		add	r3, r3, #1
 6926 00ac 7B62     		str	r3, [r7, #36]
 6927 00ae 7B68     		ldr	r3, [r7, #4]
 6928 00b0 1B68     		ldr	r3, [r3, #0]
 6929 00b2 DB69     		ldr	r3, [r3, #28]
 6930 00b4 7A6A     		ldr	r2, [r7, #36]
 6931 00b6 9A42     		cmp	r2, r3
 6932 00b8 D5D3     		bcc	.L412
 6933 00ba 77E0     		b	.L413
 6934              	.L407:
3161:../Dave/Generated/src/FATFS002/Src/ff.c **** 			} else {
3162:../Dave/Generated/src/FATFS002/Src/ff.c **** 				clst = (*fatfs)->n_fatent;
 6935              		.loc 1 3162 0
 6936 00bc 7B68     		ldr	r3, [r7, #4]
 6937 00be 1B68     		ldr	r3, [r3, #0]
 6938 00c0 DB69     		ldr	r3, [r3, #28]
 6939 00c2 7B62     		str	r3, [r7, #36]
3163:../Dave/Generated/src/FATFS002/Src/ff.c **** 				sect = (*fatfs)->fatbase;
 6940              		.loc 1 3163 0
 6941 00c4 7B68     		ldr	r3, [r7, #4]
 6942 00c6 1B68     		ldr	r3, [r3, #0]
 6943 00c8 5B6A     		ldr	r3, [r3, #36]
 6944 00ca 3B62     		str	r3, [r7, #32]
3164:../Dave/Generated/src/FATFS002/Src/ff.c **** 				i = 0; p = 0;
 6945              		.loc 1 3164 0
 6946 00cc 4FF00003 		mov	r3, #0
 6947 00d0 FB61     		str	r3, [r7, #28]
 6948 00d2 4FF00003 		mov	r3, #0
 6949 00d6 BB61     		str	r3, [r7, #24]
 6950              	.L420:
3165:../Dave/Generated/src/FATFS002/Src/ff.c **** 				do {
3166:../Dave/Generated/src/FATFS002/Src/ff.c **** 					if (!i) {
 6951              		.loc 1 3166 0
 6952 00d8 FB69     		ldr	r3, [r7, #28]
 6953 00da 002B     		cmp	r3, #0
 6954 00dc 19D1     		bne	.L414
3167:../Dave/Generated/src/FATFS002/Src/ff.c **** 						res = move_window(*fatfs, sect++);
 6955              		.loc 1 3167 0
 6956 00de 7B68     		ldr	r3, [r7, #4]
 6957 00e0 1A68     		ldr	r2, [r3, #0]
 6958 00e2 3B6A     		ldr	r3, [r7, #32]
 6959 00e4 396A     		ldr	r1, [r7, #32]
 6960 00e6 01F10101 		add	r1, r1, #1
 6961 00ea 3962     		str	r1, [r7, #32]
 6962 00ec 1046     		mov	r0, r2
 6963 00ee 1946     		mov	r1, r3
 6964 00f0 FFF7FEFF 		bl	move_window
 6965 00f4 0346     		mov	r3, r0
 6966 00f6 87F82F30 		strb	r3, [r7, #47]
3168:../Dave/Generated/src/FATFS002/Src/ff.c **** 						if (res != FR_OK) break;
 6967              		.loc 1 3168 0
 6968 00fa 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 6969 00fe 002B     		cmp	r3, #0
 6970 0100 53D1     		bne	.L423
 6971              	.L415:
3169:../Dave/Generated/src/FATFS002/Src/ff.c **** 						p = (*fatfs)->win;
 6972              		.loc 1 3169 0
 6973 0102 7B68     		ldr	r3, [r7, #4]
 6974 0104 1B68     		ldr	r3, [r3, #0]
 6975 0106 03F13403 		add	r3, r3, #52
 6976 010a BB61     		str	r3, [r7, #24]
3170:../Dave/Generated/src/FATFS002/Src/ff.c **** 						i = SS(*fatfs);
 6977              		.loc 1 3170 0
 6978 010c 4FF40073 		mov	r3, #512
 6979 0110 FB61     		str	r3, [r7, #28]
 6980              	.L414:
3171:../Dave/Generated/src/FATFS002/Src/ff.c **** 					}
3172:../Dave/Generated/src/FATFS002/Src/ff.c **** 					if (fat == FS_FAT16) {
 6981              		.loc 1 3172 0
 6982 0112 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6983 0114 022B     		cmp	r3, #2
 6984 0116 19D1     		bne	.L416
3173:../Dave/Generated/src/FATFS002/Src/ff.c **** 						if (LD_WORD(p) == 0) n++;
 6985              		.loc 1 3173 0
 6986 0118 BB69     		ldr	r3, [r7, #24]
 6987 011a 03F10103 		add	r3, r3, #1
 6988 011e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 6989 0120 4FEA0323 		lsl	r3, r3, #8
 6990 0124 9AB2     		uxth	r2, r3
 6991 0126 BB69     		ldr	r3, [r7, #24]
 6992 0128 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 6993 012a 1343     		orrs	r3, r3, r2
 6994 012c 9BB2     		uxth	r3, r3
 6995 012e 002B     		cmp	r3, #0
 6996 0130 03D1     		bne	.L417
 6997              		.loc 1 3173 0 is_stmt 0 discriminator 1
 6998 0132 BB6A     		ldr	r3, [r7, #40]
 6999 0134 03F10103 		add	r3, r3, #1
 7000 0138 BB62     		str	r3, [r7, #40]
 7001              	.L417:
3174:../Dave/Generated/src/FATFS002/Src/ff.c **** 						p += 2; i -= 2;
 7002              		.loc 1 3174 0 is_stmt 1
 7003 013a BB69     		ldr	r3, [r7, #24]
 7004 013c 03F10203 		add	r3, r3, #2
 7005 0140 BB61     		str	r3, [r7, #24]
 7006 0142 FB69     		ldr	r3, [r7, #28]
 7007 0144 A3F10203 		sub	r3, r3, #2
 7008 0148 FB61     		str	r3, [r7, #28]
 7009 014a 26E0     		b	.L418
 7010              	.L416:
3175:../Dave/Generated/src/FATFS002/Src/ff.c **** 					} else {
3176:../Dave/Generated/src/FATFS002/Src/ff.c **** 						if ((LD_DWORD(p) & 0x0FFFFFFF) == 0) n++;
 7011              		.loc 1 3176 0
 7012 014c BB69     		ldr	r3, [r7, #24]
 7013 014e 03F10303 		add	r3, r3, #3
 7014 0152 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 7015 0154 4FEA0362 		lsl	r2, r3, #24
 7016 0158 BB69     		ldr	r3, [r7, #24]
 7017 015a 03F10203 		add	r3, r3, #2
 7018 015e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 7019 0160 4FEA0343 		lsl	r3, r3, #16
 7020 0164 1A43     		orrs	r2, r2, r3
 7021 0166 BB69     		ldr	r3, [r7, #24]
 7022 0168 03F10103 		add	r3, r3, #1
 7023 016c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 7024 016e 4FEA0323 		lsl	r3, r3, #8
 7025 0172 1A43     		orrs	r2, r2, r3
 7026 0174 BB69     		ldr	r3, [r7, #24]
 7027 0176 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 7028 0178 1343     		orrs	r3, r3, r2
 7029 017a 23F07043 		bic	r3, r3, #-268435456
 7030 017e 002B     		cmp	r3, #0
 7031 0180 03D1     		bne	.L419
 7032              		.loc 1 3176 0 is_stmt 0 discriminator 1
 7033 0182 BB6A     		ldr	r3, [r7, #40]
 7034 0184 03F10103 		add	r3, r3, #1
 7035 0188 BB62     		str	r3, [r7, #40]
 7036              	.L419:
3177:../Dave/Generated/src/FATFS002/Src/ff.c **** 						p += 4; i -= 4;
 7037              		.loc 1 3177 0 is_stmt 1
 7038 018a BB69     		ldr	r3, [r7, #24]
 7039 018c 03F10403 		add	r3, r3, #4
 7040 0190 BB61     		str	r3, [r7, #24]
 7041 0192 FB69     		ldr	r3, [r7, #28]
 7042 0194 A3F10403 		sub	r3, r3, #4
 7043 0198 FB61     		str	r3, [r7, #28]
 7044              	.L418:
3178:../Dave/Generated/src/FATFS002/Src/ff.c **** 					}
3179:../Dave/Generated/src/FATFS002/Src/ff.c **** 				} while (--clst);
 7045              		.loc 1 3179 0
 7046 019a 7B6A     		ldr	r3, [r7, #36]
 7047 019c 03F1FF33 		add	r3, r3, #-1
 7048 01a0 7B62     		str	r3, [r7, #36]
 7049 01a2 7B6A     		ldr	r3, [r7, #36]
 7050 01a4 002B     		cmp	r3, #0
 7051 01a6 97D1     		bne	.L420
 7052 01a8 00E0     		b	.L413
 7053              	.L423:
3168:../Dave/Generated/src/FATFS002/Src/ff.c **** 						if (res != FR_OK) break;
 7054              		.loc 1 3168 0
 7055 01aa 00BF     		nop
 7056              	.L413:
3180:../Dave/Generated/src/FATFS002/Src/ff.c **** 			}
3181:../Dave/Generated/src/FATFS002/Src/ff.c **** 			(*fatfs)->free_clust = n;
 7057              		.loc 1 3181 0
 7058 01ac 7B68     		ldr	r3, [r7, #4]
 7059 01ae 1B68     		ldr	r3, [r3, #0]
 7060 01b0 BA6A     		ldr	r2, [r7, #40]
 7061 01b2 1A61     		str	r2, [r3, #16]
3182:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (fat == FS_FAT32) (*fatfs)->fsi_flag = 1;
 7062              		.loc 1 3182 0
 7063 01b4 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 7064 01b6 032B     		cmp	r3, #3
 7065 01b8 04D1     		bne	.L421
 7066              		.loc 1 3182 0 is_stmt 0 discriminator 1
 7067 01ba 7B68     		ldr	r3, [r7, #4]
 7068 01bc 1B68     		ldr	r3, [r3, #0]
 7069 01be 4FF00102 		mov	r2, #1
 7070 01c2 5A71     		strb	r2, [r3, #5]
 7071              	.L421:
3183:../Dave/Generated/src/FATFS002/Src/ff.c **** 			*nclst = n;
 7072              		.loc 1 3183 0 is_stmt 1
 7073 01c4 BB68     		ldr	r3, [r7, #8]
 7074 01c6 BA6A     		ldr	r2, [r7, #40]
 7075 01c8 1A60     		str	r2, [r3, #0]
 7076              	.L405:
3184:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
3185:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
3186:../Dave/Generated/src/FATFS002/Src/ff.c **** 	LEAVE_FF(*fatfs, res);
 7077              		.loc 1 3186 0
 7078 01ca 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
3187:../Dave/Generated/src/FATFS002/Src/ff.c **** }
 7079              		.loc 1 3187 0
 7080 01ce 1846     		mov	r0, r3
 7081 01d0 07F13007 		add	r7, r7, #48
 7082 01d4 BD46     		mov	sp, r7
 7083 01d6 80BD     		pop	{r7, pc}
 7084              		.cfi_endproc
 7085              	.LFE35:
 7087              		.section	.text.f_truncate,"ax",%progbits
 7088              		.align	2
 7089              		.global	f_truncate
 7090              		.thumb
 7091              		.thumb_func
 7093              	f_truncate:
 7094              	.LFB36:
3188:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3189:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3190:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3191:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3192:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
3193:../Dave/Generated/src/FATFS002/Src/ff.c **** /* Truncate File                                                         */
3194:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
3195:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3196:../Dave/Generated/src/FATFS002/Src/ff.c **** FRESULT f_truncate (
3197:../Dave/Generated/src/FATFS002/Src/ff.c **** 	FIL *fp		/* Pointer to the file object */
3198:../Dave/Generated/src/FATFS002/Src/ff.c **** )
3199:../Dave/Generated/src/FATFS002/Src/ff.c **** {
 7095              		.loc 1 3199 0
 7096              		.cfi_startproc
 7097              		@ args = 0, pretend = 0, frame = 16
 7098              		@ frame_needed = 1, uses_anonymous_args = 0
 7099 0000 80B5     		push	{r7, lr}
 7100              	.LCFI108:
 7101              		.cfi_def_cfa_offset 8
 7102              		.cfi_offset 7, -8
 7103              		.cfi_offset 14, -4
 7104 0002 84B0     		sub	sp, sp, #16
 7105              	.LCFI109:
 7106              		.cfi_def_cfa_offset 24
 7107 0004 00AF     		add	r7, sp, #0
 7108              	.LCFI110:
 7109              		.cfi_def_cfa_register 7
 7110 0006 7860     		str	r0, [r7, #4]
3200:../Dave/Generated/src/FATFS002/Src/ff.c **** 	FRESULT res;
3201:../Dave/Generated/src/FATFS002/Src/ff.c **** 	DWORD ncl;
3202:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3203:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3204:../Dave/Generated/src/FATFS002/Src/ff.c **** 	res = validate(fp->fs, fp->id);		/* Check validity of the object */
 7111              		.loc 1 3204 0
 7112 0008 7B68     		ldr	r3, [r7, #4]
 7113 000a 1A68     		ldr	r2, [r3, #0]
 7114 000c 7B68     		ldr	r3, [r7, #4]
 7115 000e 9B88     		ldrh	r3, [r3, #4]
 7116 0010 1046     		mov	r0, r2
 7117 0012 1946     		mov	r1, r3
 7118 0014 FFF7FEFF 		bl	validate
 7119 0018 0346     		mov	r3, r0
 7120 001a FB73     		strb	r3, [r7, #15]
3205:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (res == FR_OK) {
 7121              		.loc 1 3205 0
 7122 001c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 7123 001e 002B     		cmp	r3, #0
 7124 0020 12D1     		bne	.L425
3206:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (fp->flag & FA__ERROR) {			/* Check abort flag */
 7125              		.loc 1 3206 0
 7126 0022 7B68     		ldr	r3, [r7, #4]
 7127 0024 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 7128 0026 DBB2     		uxtb	r3, r3
 7129 0028 5BB2     		sxtb	r3, r3
 7130 002a 002B     		cmp	r3, #0
 7131 002c 03DA     		bge	.L426
3207:../Dave/Generated/src/FATFS002/Src/ff.c **** 			res = FR_INT_ERR;
 7132              		.loc 1 3207 0
 7133 002e 4FF00203 		mov	r3, #2
 7134 0032 FB73     		strb	r3, [r7, #15]
 7135 0034 08E0     		b	.L425
 7136              	.L426:
3208:../Dave/Generated/src/FATFS002/Src/ff.c **** 		} else {
3209:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (!(fp->flag & FA_WRITE))		/* Check access mode */
 7137              		.loc 1 3209 0
 7138 0036 7B68     		ldr	r3, [r7, #4]
 7139 0038 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 7140 003a 03F00203 		and	r3, r3, #2
 7141 003e 002B     		cmp	r3, #0
 7142 0040 02D1     		bne	.L425
3210:../Dave/Generated/src/FATFS002/Src/ff.c **** 				res = FR_DENIED;
 7143              		.loc 1 3210 0
 7144 0042 4FF00703 		mov	r3, #7
 7145 0046 FB73     		strb	r3, [r7, #15]
 7146              	.L425:
3211:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
3212:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
3213:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (res == FR_OK) {
 7147              		.loc 1 3213 0
 7148 0048 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 7149 004a 002B     		cmp	r3, #0
 7150 004c 66D1     		bne	.L427
3214:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (fp->fsize > fp->fptr) {
 7151              		.loc 1 3214 0
 7152 004e 7B68     		ldr	r3, [r7, #4]
 7153 0050 DA68     		ldr	r2, [r3, #12]
 7154 0052 7B68     		ldr	r3, [r7, #4]
 7155 0054 9B68     		ldr	r3, [r3, #8]
 7156 0056 9A42     		cmp	r2, r3
 7157 0058 56D9     		bls	.L428
3215:../Dave/Generated/src/FATFS002/Src/ff.c **** 			fp->fsize = fp->fptr;	/* Set file size to current R/W point */
 7158              		.loc 1 3215 0
 7159 005a 7B68     		ldr	r3, [r7, #4]
 7160 005c 9A68     		ldr	r2, [r3, #8]
 7161 005e 7B68     		ldr	r3, [r7, #4]
 7162 0060 DA60     		str	r2, [r3, #12]
3216:../Dave/Generated/src/FATFS002/Src/ff.c **** 			fp->flag |= FA__WRITTEN;
 7163              		.loc 1 3216 0
 7164 0062 7B68     		ldr	r3, [r7, #4]
 7165 0064 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 7166 0066 43F02003 		orr	r3, r3, #32
 7167 006a DAB2     		uxtb	r2, r3
 7168 006c 7B68     		ldr	r3, [r7, #4]
 7169 006e 9A71     		strb	r2, [r3, #6]
3217:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (fp->fptr == 0) {	/* When set file size to zero, remove entire cluster chain */
 7170              		.loc 1 3217 0
 7171 0070 7B68     		ldr	r3, [r7, #4]
 7172 0072 9B68     		ldr	r3, [r3, #8]
 7173 0074 002B     		cmp	r3, #0
 7174 0076 0ED1     		bne	.L429
3218:../Dave/Generated/src/FATFS002/Src/ff.c **** 				res = remove_chain(fp->fs, fp->sclust);
 7175              		.loc 1 3218 0
 7176 0078 7B68     		ldr	r3, [r7, #4]
 7177 007a 1A68     		ldr	r2, [r3, #0]
 7178 007c 7B68     		ldr	r3, [r7, #4]
 7179 007e 1B69     		ldr	r3, [r3, #16]
 7180 0080 1046     		mov	r0, r2
 7181 0082 1946     		mov	r1, r3
 7182 0084 FFF7FEFF 		bl	remove_chain
 7183 0088 0346     		mov	r3, r0
 7184 008a FB73     		strb	r3, [r7, #15]
3219:../Dave/Generated/src/FATFS002/Src/ff.c **** 				fp->sclust = 0;
 7185              		.loc 1 3219 0
 7186 008c 7B68     		ldr	r3, [r7, #4]
 7187 008e 4FF00002 		mov	r2, #0
 7188 0092 1A61     		str	r2, [r3, #16]
 7189 0094 38E0     		b	.L428
 7190              	.L429:
3220:../Dave/Generated/src/FATFS002/Src/ff.c **** 			} else {				/* When truncate a part of the file, remove remaining clusters */
3221:../Dave/Generated/src/FATFS002/Src/ff.c **** 				ncl = get_fat(fp->fs, fp->clust);
 7191              		.loc 1 3221 0
 7192 0096 7B68     		ldr	r3, [r7, #4]
 7193 0098 1A68     		ldr	r2, [r3, #0]
 7194 009a 7B68     		ldr	r3, [r7, #4]
 7195 009c 5B69     		ldr	r3, [r3, #20]
 7196 009e 1046     		mov	r0, r2
 7197 00a0 1946     		mov	r1, r3
 7198 00a2 FFF7FEFF 		bl	get_fat
 7199 00a6 B860     		str	r0, [r7, #8]
3222:../Dave/Generated/src/FATFS002/Src/ff.c **** 				res = FR_OK;
 7200              		.loc 1 3222 0
 7201 00a8 4FF00003 		mov	r3, #0
 7202 00ac FB73     		strb	r3, [r7, #15]
3223:../Dave/Generated/src/FATFS002/Src/ff.c **** 				if (ncl == 0xFFFFFFFF) res = FR_DISK_ERR;
 7203              		.loc 1 3223 0
 7204 00ae BB68     		ldr	r3, [r7, #8]
 7205 00b0 B3F1FF3F 		cmp	r3, #-1
 7206 00b4 02D1     		bne	.L430
 7207              		.loc 1 3223 0 is_stmt 0 discriminator 1
 7208 00b6 4FF00103 		mov	r3, #1
 7209 00ba FB73     		strb	r3, [r7, #15]
 7210              	.L430:
3224:../Dave/Generated/src/FATFS002/Src/ff.c **** 				if (ncl == 1) res = FR_INT_ERR;
 7211              		.loc 1 3224 0 is_stmt 1
 7212 00bc BB68     		ldr	r3, [r7, #8]
 7213 00be 012B     		cmp	r3, #1
 7214 00c0 02D1     		bne	.L431
 7215              		.loc 1 3224 0 is_stmt 0 discriminator 1
 7216 00c2 4FF00203 		mov	r3, #2
 7217 00c6 FB73     		strb	r3, [r7, #15]
 7218              	.L431:
3225:../Dave/Generated/src/FATFS002/Src/ff.c **** 				if (res == FR_OK && ncl < fp->fs->n_fatent) {
 7219              		.loc 1 3225 0 is_stmt 1
 7220 00c8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 7221 00ca 002B     		cmp	r3, #0
 7222 00cc 1CD1     		bne	.L428
 7223              		.loc 1 3225 0 is_stmt 0 discriminator 1
 7224 00ce 7B68     		ldr	r3, [r7, #4]
 7225 00d0 1B68     		ldr	r3, [r3, #0]
 7226 00d2 DA69     		ldr	r2, [r3, #28]
 7227 00d4 BB68     		ldr	r3, [r7, #8]
 7228 00d6 9A42     		cmp	r2, r3
 7229 00d8 16D9     		bls	.L428
3226:../Dave/Generated/src/FATFS002/Src/ff.c **** 					res = put_fat(fp->fs, fp->clust, 0x0FFFFFFF);
 7230              		.loc 1 3226 0 is_stmt 1
 7231 00da 7B68     		ldr	r3, [r7, #4]
 7232 00dc 1A68     		ldr	r2, [r3, #0]
 7233 00de 7B68     		ldr	r3, [r7, #4]
 7234 00e0 5B69     		ldr	r3, [r3, #20]
 7235 00e2 1046     		mov	r0, r2
 7236 00e4 1946     		mov	r1, r3
 7237 00e6 6FF07042 		mvn	r2, #-268435456
 7238 00ea FFF7FEFF 		bl	put_fat
 7239 00ee 0346     		mov	r3, r0
 7240 00f0 FB73     		strb	r3, [r7, #15]
3227:../Dave/Generated/src/FATFS002/Src/ff.c **** 					if (res == FR_OK) res = remove_chain(fp->fs, ncl);
 7241              		.loc 1 3227 0
 7242 00f2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 7243 00f4 002B     		cmp	r3, #0
 7244 00f6 07D1     		bne	.L428
 7245              		.loc 1 3227 0 is_stmt 0 discriminator 1
 7246 00f8 7B68     		ldr	r3, [r7, #4]
 7247 00fa 1B68     		ldr	r3, [r3, #0]
 7248 00fc 1846     		mov	r0, r3
 7249 00fe B968     		ldr	r1, [r7, #8]
 7250 0100 FFF7FEFF 		bl	remove_chain
 7251 0104 0346     		mov	r3, r0
 7252 0106 FB73     		strb	r3, [r7, #15]
 7253              	.L428:
3228:../Dave/Generated/src/FATFS002/Src/ff.c **** 				}
3229:../Dave/Generated/src/FATFS002/Src/ff.c **** 			}
3230:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
3231:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (res != FR_OK) fp->flag |= FA__ERROR;
 7254              		.loc 1 3231 0 is_stmt 1
 7255 0108 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 7256 010a 002B     		cmp	r3, #0
 7257 010c 06D0     		beq	.L427
 7258              		.loc 1 3231 0 is_stmt 0 discriminator 1
 7259 010e 7B68     		ldr	r3, [r7, #4]
 7260 0110 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 7261 0112 63F07F03 		orn	r3, r3, #127
 7262 0116 DAB2     		uxtb	r2, r3
 7263 0118 7B68     		ldr	r3, [r7, #4]
 7264 011a 9A71     		strb	r2, [r3, #6]
 7265              	.L427:
3232:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
3233:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3234:../Dave/Generated/src/FATFS002/Src/ff.c **** 	LEAVE_FF(fp->fs, res);
 7266              		.loc 1 3234 0 is_stmt 1
 7267 011c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
3235:../Dave/Generated/src/FATFS002/Src/ff.c **** }
 7268              		.loc 1 3235 0
 7269 011e 1846     		mov	r0, r3
 7270 0120 07F11007 		add	r7, r7, #16
 7271 0124 BD46     		mov	sp, r7
 7272 0126 80BD     		pop	{r7, pc}
 7273              		.cfi_endproc
 7274              	.LFE36:
 7276              		.section	.text.f_unlink,"ax",%progbits
 7277              		.align	2
 7278              		.global	f_unlink
 7279              		.thumb
 7280              		.thumb_func
 7282              	f_unlink:
 7283              	.LFB37:
3236:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3237:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3238:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3239:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3240:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
3241:../Dave/Generated/src/FATFS002/Src/ff.c **** /* Delete a File or Directory                                            */
3242:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
3243:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3244:../Dave/Generated/src/FATFS002/Src/ff.c **** FRESULT f_unlink (
3245:../Dave/Generated/src/FATFS002/Src/ff.c **** 	const TCHAR *path		/* Pointer to the file or directory path */
3246:../Dave/Generated/src/FATFS002/Src/ff.c **** )
3247:../Dave/Generated/src/FATFS002/Src/ff.c **** {
 7284              		.loc 1 3247 0
 7285              		.cfi_startproc
 7286              		@ args = 0, pretend = 0, frame = 88
 7287              		@ frame_needed = 1, uses_anonymous_args = 0
 7288 0000 80B5     		push	{r7, lr}
 7289              	.LCFI111:
 7290              		.cfi_def_cfa_offset 8
 7291              		.cfi_offset 7, -8
 7292              		.cfi_offset 14, -4
 7293 0002 96B0     		sub	sp, sp, #88
 7294              	.LCFI112:
 7295              		.cfi_def_cfa_offset 96
 7296 0004 00AF     		add	r7, sp, #0
 7297              	.LCFI113:
 7298              		.cfi_def_cfa_register 7
 7299 0006 7860     		str	r0, [r7, #4]
3248:../Dave/Generated/src/FATFS002/Src/ff.c **** 	FRESULT res;
3249:../Dave/Generated/src/FATFS002/Src/ff.c **** 	DIR dj, sdj;
3250:../Dave/Generated/src/FATFS002/Src/ff.c **** 	BYTE *dir;
3251:../Dave/Generated/src/FATFS002/Src/ff.c **** 	DWORD dclst;
3252:../Dave/Generated/src/FATFS002/Src/ff.c **** 	DEF_NAMEBUF;
3253:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3254:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3255:../Dave/Generated/src/FATFS002/Src/ff.c **** 	res = chk_mounted(&path, &dj.fs, 1);
 7300              		.loc 1 3255 0
 7301 0008 07F10402 		add	r2, r7, #4
 7302 000c 07F13003 		add	r3, r7, #48
 7303 0010 1046     		mov	r0, r2
 7304 0012 1946     		mov	r1, r3
 7305 0014 4FF00102 		mov	r2, #1
 7306 0018 FFF7FEFF 		bl	chk_mounted
 7307 001c 0346     		mov	r3, r0
 7308 001e 87F85730 		strb	r3, [r7, #87]
3256:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (res == FR_OK) {
 7309              		.loc 1 3256 0
 7310 0022 97F85730 		ldrb	r3, [r7, #87]	@ zero_extendqisi2
 7311 0026 002B     		cmp	r3, #0
 7312 0028 40F0C980 		bne	.L434
3257:../Dave/Generated/src/FATFS002/Src/ff.c **** 		INIT_BUF(dj);
 7313              		.loc 1 3257 0
 7314 002c 07F10803 		add	r3, r7, #8
 7315 0030 BB64     		str	r3, [r7, #72]
3258:../Dave/Generated/src/FATFS002/Src/ff.c **** 		res = follow_path(&dj, path);		/* Follow the file path */
 7316              		.loc 1 3258 0
 7317 0032 7B68     		ldr	r3, [r7, #4]
 7318 0034 07F13002 		add	r2, r7, #48
 7319 0038 1046     		mov	r0, r2
 7320 003a 1946     		mov	r1, r3
 7321 003c FFF7FEFF 		bl	follow_path
 7322 0040 0346     		mov	r3, r0
 7323 0042 87F85730 		strb	r3, [r7, #87]
3259:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (_FS_RPATH && res == FR_OK && (dj.fn[NS] & NS_DOT))
 7324              		.loc 1 3259 0
 7325 0046 97F85730 		ldrb	r3, [r7, #87]	@ zero_extendqisi2
 7326 004a 002B     		cmp	r3, #0
 7327 004c 0BD1     		bne	.L435
 7328              		.loc 1 3259 0 is_stmt 0 discriminator 1
 7329 004e BB6C     		ldr	r3, [r7, #72]
 7330 0050 03F10B03 		add	r3, r3, #11
 7331 0054 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 7332 0056 03F02003 		and	r3, r3, #32
 7333 005a 002B     		cmp	r3, #0
 7334 005c 03D0     		beq	.L435
3260:../Dave/Generated/src/FATFS002/Src/ff.c **** 			res = FR_INVALID_NAME;			/* Cannot remove dot entry */
 7335              		.loc 1 3260 0 is_stmt 1
 7336 005e 4FF00603 		mov	r3, #6
 7337 0062 87F85730 		strb	r3, [r7, #87]
 7338              	.L435:
3261:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _FS_SHARE
3262:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (res == FR_OK) res = chk_lock(&dj, 2);	/* Cannot remove open file */
3263:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
3264:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (res == FR_OK) {					/* The object is accessible */
 7339              		.loc 1 3264 0
 7340 0066 97F85730 		ldrb	r3, [r7, #87]	@ zero_extendqisi2
 7341 006a 002B     		cmp	r3, #0
 7342 006c 40F0A780 		bne	.L434
3265:../Dave/Generated/src/FATFS002/Src/ff.c **** 			dir = dj.dir;
 7343              		.loc 1 3265 0
 7344 0070 7B6C     		ldr	r3, [r7, #68]
 7345 0072 3B65     		str	r3, [r7, #80]
3266:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (!dir) {
 7346              		.loc 1 3266 0
 7347 0074 3B6D     		ldr	r3, [r7, #80]
 7348 0076 002B     		cmp	r3, #0
 7349 0078 04D1     		bne	.L436
3267:../Dave/Generated/src/FATFS002/Src/ff.c **** 				res = FR_INVALID_NAME;		/* Cannot remove the start directory */
 7350              		.loc 1 3267 0
 7351 007a 4FF00603 		mov	r3, #6
 7352 007e 87F85730 		strb	r3, [r7, #87]
 7353 0082 0BE0     		b	.L437
 7354              	.L436:
3268:../Dave/Generated/src/FATFS002/Src/ff.c **** 			} else {
3269:../Dave/Generated/src/FATFS002/Src/ff.c **** 				if (dir[DIR_Attr] & AM_RDO)
 7355              		.loc 1 3269 0
 7356 0084 3B6D     		ldr	r3, [r7, #80]
 7357 0086 03F10B03 		add	r3, r3, #11
 7358 008a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 7359 008c 03F00103 		and	r3, r3, #1
 7360 0090 002B     		cmp	r3, #0
 7361 0092 03D0     		beq	.L437
3270:../Dave/Generated/src/FATFS002/Src/ff.c **** 					res = FR_DENIED;		/* Cannot remove R/O object */
 7362              		.loc 1 3270 0
 7363 0094 4FF00703 		mov	r3, #7
 7364 0098 87F85730 		strb	r3, [r7, #87]
 7365              	.L437:
3271:../Dave/Generated/src/FATFS002/Src/ff.c **** 			}
3272:../Dave/Generated/src/FATFS002/Src/ff.c **** 			dclst = LD_CLUST(dir);
 7366              		.loc 1 3272 0
 7367 009c 3B6D     		ldr	r3, [r7, #80]
 7368 009e 03F11503 		add	r3, r3, #21
 7369 00a2 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 7370 00a4 4FEA0323 		lsl	r3, r3, #8
 7371 00a8 9AB2     		uxth	r2, r3
 7372 00aa 3B6D     		ldr	r3, [r7, #80]
 7373 00ac 03F11403 		add	r3, r3, #20
 7374 00b0 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 7375 00b2 1343     		orrs	r3, r3, r2
 7376 00b4 9BB2     		uxth	r3, r3
 7377 00b6 9BB2     		uxth	r3, r3
 7378 00b8 4FEA0342 		lsl	r2, r3, #16
 7379 00bc 3B6D     		ldr	r3, [r7, #80]
 7380 00be 03F11B03 		add	r3, r3, #27
 7381 00c2 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 7382 00c4 4FEA0323 		lsl	r3, r3, #8
 7383 00c8 99B2     		uxth	r1, r3
 7384 00ca 3B6D     		ldr	r3, [r7, #80]
 7385 00cc 03F11A03 		add	r3, r3, #26
 7386 00d0 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 7387 00d2 0B43     		orrs	r3, r3, r1
 7388 00d4 9BB2     		uxth	r3, r3
 7389 00d6 9BB2     		uxth	r3, r3
 7390 00d8 1343     		orrs	r3, r3, r2
 7391 00da FB64     		str	r3, [r7, #76]
3273:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (res == FR_OK && (dir[DIR_Attr] & AM_DIR)) {	/* Is it a sub-dir? */
 7392              		.loc 1 3273 0
 7393 00dc 97F85730 		ldrb	r3, [r7, #87]	@ zero_extendqisi2
 7394 00e0 002B     		cmp	r3, #0
 7395 00e2 46D1     		bne	.L438
 7396              		.loc 1 3273 0 is_stmt 0 discriminator 1
 7397 00e4 3B6D     		ldr	r3, [r7, #80]
 7398 00e6 03F10B03 		add	r3, r3, #11
 7399 00ea 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 7400 00ec 03F01003 		and	r3, r3, #16
 7401 00f0 002B     		cmp	r3, #0
 7402 00f2 3ED0     		beq	.L438
3274:../Dave/Generated/src/FATFS002/Src/ff.c **** 				if (dclst < 2) {
 7403              		.loc 1 3274 0 is_stmt 1
 7404 00f4 FB6C     		ldr	r3, [r7, #76]
 7405 00f6 012B     		cmp	r3, #1
 7406 00f8 04D8     		bhi	.L439
3275:../Dave/Generated/src/FATFS002/Src/ff.c **** 					res = FR_INT_ERR;
 7407              		.loc 1 3275 0
 7408 00fa 4FF00203 		mov	r3, #2
 7409 00fe 87F85730 		strb	r3, [r7, #87]
 7410 0102 36E0     		b	.L438
 7411              	.L439:
3276:../Dave/Generated/src/FATFS002/Src/ff.c **** 				} else {
3277:../Dave/Generated/src/FATFS002/Src/ff.c **** 					mem_cpy(&sdj, &dj, sizeof(DIR));	/* Check if the sub-dir is empty or not */
 7412              		.loc 1 3277 0
 7413 0104 07F11402 		add	r2, r7, #20
 7414 0108 07F13003 		add	r3, r7, #48
 7415 010c 1046     		mov	r0, r2
 7416 010e 1946     		mov	r1, r3
 7417 0110 4FF01C02 		mov	r2, #28
 7418 0114 FFF7FEFF 		bl	mem_cpy
3278:../Dave/Generated/src/FATFS002/Src/ff.c **** 					sdj.sclust = dclst;
 7419              		.loc 1 3278 0
 7420 0118 FB6C     		ldr	r3, [r7, #76]
 7421 011a FB61     		str	r3, [r7, #28]
3279:../Dave/Generated/src/FATFS002/Src/ff.c **** 					res = dir_sdi(&sdj, 2);		/* Exclude dot entries */
 7422              		.loc 1 3279 0
 7423 011c 07F11403 		add	r3, r7, #20
 7424 0120 1846     		mov	r0, r3
 7425 0122 4FF00201 		mov	r1, #2
 7426 0126 FFF7FEFF 		bl	dir_sdi
 7427 012a 0346     		mov	r3, r0
 7428 012c 87F85730 		strb	r3, [r7, #87]
3280:../Dave/Generated/src/FATFS002/Src/ff.c **** 					if (res == FR_OK) {
 7429              		.loc 1 3280 0
 7430 0130 97F85730 		ldrb	r3, [r7, #87]	@ zero_extendqisi2
 7431 0134 002B     		cmp	r3, #0
 7432 0136 1CD1     		bne	.L438
3281:../Dave/Generated/src/FATFS002/Src/ff.c **** 						res = dir_read(&sdj);
 7433              		.loc 1 3281 0
 7434 0138 07F11403 		add	r3, r7, #20
 7435 013c 1846     		mov	r0, r3
 7436 013e FFF7FEFF 		bl	dir_read
 7437 0142 0346     		mov	r3, r0
 7438 0144 87F85730 		strb	r3, [r7, #87]
3282:../Dave/Generated/src/FATFS002/Src/ff.c **** 						if (res == FR_OK			/* Not empty dir */
 7439              		.loc 1 3282 0
 7440 0148 97F85730 		ldrb	r3, [r7, #87]	@ zero_extendqisi2
 7441 014c 002B     		cmp	r3, #0
 7442 014e 04D0     		beq	.L440
3283:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _FS_RPATH
3284:../Dave/Generated/src/FATFS002/Src/ff.c **** 						|| dclst == sdj.fs->cdir	/* Current dir */
 7443              		.loc 1 3284 0
 7444 0150 7B69     		ldr	r3, [r7, #20]
 7445 0152 9A69     		ldr	r2, [r3, #24]
 7446 0154 FB6C     		ldr	r3, [r7, #76]
 7447 0156 9A42     		cmp	r2, r3
 7448 0158 03D1     		bne	.L441
 7449              	.L440:
3285:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
3286:../Dave/Generated/src/FATFS002/Src/ff.c **** 						) res = FR_DENIED;
 7450              		.loc 1 3286 0
 7451 015a 4FF00703 		mov	r3, #7
 7452 015e 87F85730 		strb	r3, [r7, #87]
 7453              	.L441:
3287:../Dave/Generated/src/FATFS002/Src/ff.c **** 						if (res == FR_NO_FILE) res = FR_OK;	/* Empty */
 7454              		.loc 1 3287 0
 7455 0162 97F85730 		ldrb	r3, [r7, #87]	@ zero_extendqisi2
 7456 0166 042B     		cmp	r3, #4
 7457 0168 03D1     		bne	.L438
 7458              		.loc 1 3287 0 is_stmt 0 discriminator 1
 7459 016a 4FF00003 		mov	r3, #0
 7460 016e 87F85730 		strb	r3, [r7, #87]
 7461              	.L438:
3288:../Dave/Generated/src/FATFS002/Src/ff.c **** 					}
3289:../Dave/Generated/src/FATFS002/Src/ff.c **** 				}
3290:../Dave/Generated/src/FATFS002/Src/ff.c **** 			}
3291:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (res == FR_OK) {
 7462              		.loc 1 3291 0 is_stmt 1
 7463 0172 97F85730 		ldrb	r3, [r7, #87]	@ zero_extendqisi2
 7464 0176 002B     		cmp	r3, #0
 7465 0178 21D1     		bne	.L434
3292:../Dave/Generated/src/FATFS002/Src/ff.c **** 				res = dir_remove(&dj);		/* Remove the directory entry */
 7466              		.loc 1 3292 0
 7467 017a 07F13003 		add	r3, r7, #48
 7468 017e 1846     		mov	r0, r3
 7469 0180 FFF7FEFF 		bl	dir_remove
 7470 0184 0346     		mov	r3, r0
 7471 0186 87F85730 		strb	r3, [r7, #87]
3293:../Dave/Generated/src/FATFS002/Src/ff.c **** 				if (res == FR_OK) {
 7472              		.loc 1 3293 0
 7473 018a 97F85730 		ldrb	r3, [r7, #87]	@ zero_extendqisi2
 7474 018e 002B     		cmp	r3, #0
 7475 0190 15D1     		bne	.L434
3294:../Dave/Generated/src/FATFS002/Src/ff.c **** 					if (dclst)				/* Remove the cluster chain if exist */
 7476              		.loc 1 3294 0
 7477 0192 FB6C     		ldr	r3, [r7, #76]
 7478 0194 002B     		cmp	r3, #0
 7479 0196 07D0     		beq	.L442
3295:../Dave/Generated/src/FATFS002/Src/ff.c **** 						res = remove_chain(dj.fs, dclst);
 7480              		.loc 1 3295 0
 7481 0198 3B6B     		ldr	r3, [r7, #48]
 7482 019a 1846     		mov	r0, r3
 7483 019c F96C     		ldr	r1, [r7, #76]
 7484 019e FFF7FEFF 		bl	remove_chain
 7485 01a2 0346     		mov	r3, r0
 7486 01a4 87F85730 		strb	r3, [r7, #87]
 7487              	.L442:
3296:../Dave/Generated/src/FATFS002/Src/ff.c **** 					if (res == FR_OK) res = sync(dj.fs);
 7488              		.loc 1 3296 0
 7489 01a8 97F85730 		ldrb	r3, [r7, #87]	@ zero_extendqisi2
 7490 01ac 002B     		cmp	r3, #0
 7491 01ae 06D1     		bne	.L434
 7492              		.loc 1 3296 0 is_stmt 0 discriminator 1
 7493 01b0 3B6B     		ldr	r3, [r7, #48]
 7494 01b2 1846     		mov	r0, r3
 7495 01b4 FFF7FEFF 		bl	sync
 7496 01b8 0346     		mov	r3, r0
 7497 01ba 87F85730 		strb	r3, [r7, #87]
 7498              	.L434:
3297:../Dave/Generated/src/FATFS002/Src/ff.c **** 				}
3298:../Dave/Generated/src/FATFS002/Src/ff.c **** 			}
3299:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
3300:../Dave/Generated/src/FATFS002/Src/ff.c **** 		FREE_BUF();
3301:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
3302:../Dave/Generated/src/FATFS002/Src/ff.c **** 	LEAVE_FF(dj.fs, res);
 7499              		.loc 1 3302 0 is_stmt 1
 7500 01be 97F85730 		ldrb	r3, [r7, #87]	@ zero_extendqisi2
3303:../Dave/Generated/src/FATFS002/Src/ff.c **** }
 7501              		.loc 1 3303 0
 7502 01c2 1846     		mov	r0, r3
 7503 01c4 07F15807 		add	r7, r7, #88
 7504 01c8 BD46     		mov	sp, r7
 7505 01ca 80BD     		pop	{r7, pc}
 7506              		.cfi_endproc
 7507              	.LFE37:
 7509              		.section	.text.f_mkdir,"ax",%progbits
 7510              		.align	2
 7511              		.global	f_mkdir
 7512              		.thumb
 7513              		.thumb_func
 7515              	f_mkdir:
 7516              	.LFB38:
3304:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3305:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3306:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3307:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3308:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
3309:../Dave/Generated/src/FATFS002/Src/ff.c **** /* Create a Directory                                                    */
3310:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
3311:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3312:../Dave/Generated/src/FATFS002/Src/ff.c **** FRESULT f_mkdir (
3313:../Dave/Generated/src/FATFS002/Src/ff.c **** 	const TCHAR *path		/* Pointer to the directory path */
3314:../Dave/Generated/src/FATFS002/Src/ff.c **** )
3315:../Dave/Generated/src/FATFS002/Src/ff.c **** {
 7517              		.loc 1 3315 0
 7518              		.cfi_startproc
 7519              		@ args = 0, pretend = 0, frame = 72
 7520              		@ frame_needed = 1, uses_anonymous_args = 0
 7521 0000 80B5     		push	{r7, lr}
 7522              	.LCFI114:
 7523              		.cfi_def_cfa_offset 8
 7524              		.cfi_offset 7, -8
 7525              		.cfi_offset 14, -4
 7526 0002 92B0     		sub	sp, sp, #72
 7527              	.LCFI115:
 7528              		.cfi_def_cfa_offset 80
 7529 0004 00AF     		add	r7, sp, #0
 7530              	.LCFI116:
 7531              		.cfi_def_cfa_register 7
 7532 0006 7860     		str	r0, [r7, #4]
3316:../Dave/Generated/src/FATFS002/Src/ff.c **** 	FRESULT res;
3317:../Dave/Generated/src/FATFS002/Src/ff.c **** 	DIR dj;
3318:../Dave/Generated/src/FATFS002/Src/ff.c **** 	BYTE *dir, n;
3319:../Dave/Generated/src/FATFS002/Src/ff.c **** 	DWORD dsc, dcl, pcl, tim = get_fattime();
 7533              		.loc 1 3319 0
 7534 0008 FFF7FEFF 		bl	get_fattime
 7535 000c B863     		str	r0, [r7, #56]
3320:../Dave/Generated/src/FATFS002/Src/ff.c **** 	DEF_NAMEBUF;
3321:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3322:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3323:../Dave/Generated/src/FATFS002/Src/ff.c **** 	res = chk_mounted(&path, &dj.fs, 1);
 7536              		.loc 1 3323 0
 7537 000e 07F10402 		add	r2, r7, #4
 7538 0012 07F11403 		add	r3, r7, #20
 7539 0016 1046     		mov	r0, r2
 7540 0018 1946     		mov	r1, r3
 7541 001a 4FF00102 		mov	r2, #1
 7542 001e FFF7FEFF 		bl	chk_mounted
 7543 0022 0346     		mov	r3, r0
 7544 0024 87F84730 		strb	r3, [r7, #71]
3324:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (res == FR_OK) {
 7545              		.loc 1 3324 0
 7546 0028 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 7547 002c 002B     		cmp	r3, #0
 7548 002e 40F0A181 		bne	.L445
3325:../Dave/Generated/src/FATFS002/Src/ff.c **** 		INIT_BUF(dj);
 7549              		.loc 1 3325 0
 7550 0032 07F10803 		add	r3, r7, #8
 7551 0036 FB62     		str	r3, [r7, #44]
3326:../Dave/Generated/src/FATFS002/Src/ff.c **** 		res = follow_path(&dj, path);			/* Follow the file path */
 7552              		.loc 1 3326 0
 7553 0038 7B68     		ldr	r3, [r7, #4]
 7554 003a 07F11402 		add	r2, r7, #20
 7555 003e 1046     		mov	r0, r2
 7556 0040 1946     		mov	r1, r3
 7557 0042 FFF7FEFF 		bl	follow_path
 7558 0046 0346     		mov	r3, r0
 7559 0048 87F84730 		strb	r3, [r7, #71]
3327:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (res == FR_OK) res = FR_EXIST;		/* Any object with same name is already existing */
 7560              		.loc 1 3327 0
 7561 004c 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 7562 0050 002B     		cmp	r3, #0
 7563 0052 03D1     		bne	.L446
 7564              		.loc 1 3327 0 is_stmt 0 discriminator 1
 7565 0054 4FF00803 		mov	r3, #8
 7566 0058 87F84730 		strb	r3, [r7, #71]
 7567              	.L446:
3328:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (_FS_RPATH && res == FR_NO_FILE && (dj.fn[NS] & NS_DOT))
 7568              		.loc 1 3328 0 is_stmt 1
 7569 005c 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 7570 0060 042B     		cmp	r3, #4
 7571 0062 0BD1     		bne	.L447
 7572              		.loc 1 3328 0 is_stmt 0 discriminator 1
 7573 0064 FB6A     		ldr	r3, [r7, #44]
 7574 0066 03F10B03 		add	r3, r3, #11
 7575 006a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 7576 006c 03F02003 		and	r3, r3, #32
 7577 0070 002B     		cmp	r3, #0
 7578 0072 03D0     		beq	.L447
3329:../Dave/Generated/src/FATFS002/Src/ff.c **** 			res = FR_INVALID_NAME;
 7579              		.loc 1 3329 0 is_stmt 1
 7580 0074 4FF00603 		mov	r3, #6
 7581 0078 87F84730 		strb	r3, [r7, #71]
 7582              	.L447:
3330:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (res == FR_NO_FILE) {				/* Can create a new directory */
 7583              		.loc 1 3330 0
 7584 007c 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 7585 0080 042B     		cmp	r3, #4
 7586 0082 40F07781 		bne	.L445
3331:../Dave/Generated/src/FATFS002/Src/ff.c **** 			dcl = create_chain(dj.fs, 0);		/* Allocate a cluster for the new directory table */
 7587              		.loc 1 3331 0
 7588 0086 7B69     		ldr	r3, [r7, #20]
 7589 0088 1846     		mov	r0, r3
 7590 008a 4FF00001 		mov	r1, #0
 7591 008e FFF7FEFF 		bl	create_chain
 7592 0092 7863     		str	r0, [r7, #52]
3332:../Dave/Generated/src/FATFS002/Src/ff.c **** 			res = FR_OK;
 7593              		.loc 1 3332 0
 7594 0094 4FF00003 		mov	r3, #0
 7595 0098 87F84730 		strb	r3, [r7, #71]
3333:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (dcl == 0) res = FR_DENIED;		/* No space to allocate a new cluster */
 7596              		.loc 1 3333 0
 7597 009c 7B6B     		ldr	r3, [r7, #52]
 7598 009e 002B     		cmp	r3, #0
 7599 00a0 03D1     		bne	.L448
 7600              		.loc 1 3333 0 is_stmt 0 discriminator 1
 7601 00a2 4FF00703 		mov	r3, #7
 7602 00a6 87F84730 		strb	r3, [r7, #71]
 7603              	.L448:
3334:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (dcl == 1) res = FR_INT_ERR;
 7604              		.loc 1 3334 0 is_stmt 1
 7605 00aa 7B6B     		ldr	r3, [r7, #52]
 7606 00ac 012B     		cmp	r3, #1
 7607 00ae 03D1     		bne	.L449
 7608              		.loc 1 3334 0 is_stmt 0 discriminator 1
 7609 00b0 4FF00203 		mov	r3, #2
 7610 00b4 87F84730 		strb	r3, [r7, #71]
 7611              	.L449:
3335:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (dcl == 0xFFFFFFFF) res = FR_DISK_ERR;
 7612              		.loc 1 3335 0 is_stmt 1
 7613 00b8 7B6B     		ldr	r3, [r7, #52]
 7614 00ba B3F1FF3F 		cmp	r3, #-1
 7615 00be 03D1     		bne	.L450
 7616              		.loc 1 3335 0 is_stmt 0 discriminator 1
 7617 00c0 4FF00103 		mov	r3, #1
 7618 00c4 87F84730 		strb	r3, [r7, #71]
 7619              	.L450:
3336:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (res == FR_OK)					/* Flush FAT */
 7620              		.loc 1 3336 0 is_stmt 1
 7621 00c8 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 7622 00cc 002B     		cmp	r3, #0
 7623 00ce 08D1     		bne	.L451
3337:../Dave/Generated/src/FATFS002/Src/ff.c **** 				res = move_window(dj.fs, 0);
 7624              		.loc 1 3337 0
 7625 00d0 7B69     		ldr	r3, [r7, #20]
 7626 00d2 1846     		mov	r0, r3
 7627 00d4 4FF00001 		mov	r1, #0
 7628 00d8 FFF7FEFF 		bl	move_window
 7629 00dc 0346     		mov	r3, r0
 7630 00de 87F84730 		strb	r3, [r7, #71]
 7631              	.L451:
3338:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (res == FR_OK) {					/* Initialize the new directory table */
 7632              		.loc 1 3338 0
 7633 00e2 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 7634 00e6 002B     		cmp	r3, #0
 7635 00e8 40F0D780 		bne	.L452
3339:../Dave/Generated/src/FATFS002/Src/ff.c **** 				dsc = clust2sect(dj.fs, dcl);
 7636              		.loc 1 3339 0
 7637 00ec 7B69     		ldr	r3, [r7, #20]
 7638 00ee 1846     		mov	r0, r3
 7639 00f0 796B     		ldr	r1, [r7, #52]
 7640 00f2 FFF7FEFF 		bl	clust2sect
 7641 00f6 3864     		str	r0, [r7, #64]
3340:../Dave/Generated/src/FATFS002/Src/ff.c **** 				dir = dj.fs->win;
 7642              		.loc 1 3340 0
 7643 00f8 7B69     		ldr	r3, [r7, #20]
 7644 00fa 03F13403 		add	r3, r3, #52
 7645 00fe 3B63     		str	r3, [r7, #48]
3341:../Dave/Generated/src/FATFS002/Src/ff.c **** 				mem_set(dir, 0, SS(dj.fs));
 7646              		.loc 1 3341 0
 7647 0100 386B     		ldr	r0, [r7, #48]
 7648 0102 4FF00001 		mov	r1, #0
 7649 0106 4FF40072 		mov	r2, #512
 7650 010a FFF7FEFF 		bl	mem_set
3342:../Dave/Generated/src/FATFS002/Src/ff.c **** 				mem_set(dir+DIR_Name, ' ', 8+3);	/* Create "." entry */
 7651              		.loc 1 3342 0
 7652 010e 386B     		ldr	r0, [r7, #48]
 7653 0110 4FF02001 		mov	r1, #32
 7654 0114 4FF00B02 		mov	r2, #11
 7655 0118 FFF7FEFF 		bl	mem_set
3343:../Dave/Generated/src/FATFS002/Src/ff.c **** 				dir[DIR_Name] = '.';
 7656              		.loc 1 3343 0
 7657 011c 3B6B     		ldr	r3, [r7, #48]
 7658 011e 4FF02E02 		mov	r2, #46
 7659 0122 1A70     		strb	r2, [r3, #0]
3344:../Dave/Generated/src/FATFS002/Src/ff.c **** 				dir[DIR_Attr] = AM_DIR;
 7660              		.loc 1 3344 0
 7661 0124 3B6B     		ldr	r3, [r7, #48]
 7662 0126 03F10B03 		add	r3, r3, #11
 7663 012a 4FF01002 		mov	r2, #16
 7664 012e 1A70     		strb	r2, [r3, #0]
3345:../Dave/Generated/src/FATFS002/Src/ff.c **** 				ST_DWORD(dir+DIR_WrtTime, tim);
 7665              		.loc 1 3345 0
 7666 0130 3B6B     		ldr	r3, [r7, #48]
 7667 0132 03F11603 		add	r3, r3, #22
 7668 0136 BA6B     		ldr	r2, [r7, #56]
 7669 0138 D2B2     		uxtb	r2, r2
 7670 013a 1A70     		strb	r2, [r3, #0]
 7671 013c 3B6B     		ldr	r3, [r7, #48]
 7672 013e 03F11703 		add	r3, r3, #23
 7673 0142 BA6B     		ldr	r2, [r7, #56]
 7674 0144 92B2     		uxth	r2, r2
 7675 0146 4FEA1222 		lsr	r2, r2, #8
 7676 014a 92B2     		uxth	r2, r2
 7677 014c D2B2     		uxtb	r2, r2
 7678 014e 1A70     		strb	r2, [r3, #0]
 7679 0150 3B6B     		ldr	r3, [r7, #48]
 7680 0152 03F11803 		add	r3, r3, #24
 7681 0156 BA6B     		ldr	r2, [r7, #56]
 7682 0158 4FEA1242 		lsr	r2, r2, #16
 7683 015c D2B2     		uxtb	r2, r2
 7684 015e 1A70     		strb	r2, [r3, #0]
 7685 0160 3B6B     		ldr	r3, [r7, #48]
 7686 0162 03F11903 		add	r3, r3, #25
 7687 0166 BA6B     		ldr	r2, [r7, #56]
 7688 0168 4FEA1262 		lsr	r2, r2, #24
 7689 016c D2B2     		uxtb	r2, r2
 7690 016e 1A70     		strb	r2, [r3, #0]
3346:../Dave/Generated/src/FATFS002/Src/ff.c **** 				ST_CLUST(dir, dcl);
 7691              		.loc 1 3346 0
 7692 0170 3B6B     		ldr	r3, [r7, #48]
 7693 0172 03F11A03 		add	r3, r3, #26
 7694 0176 7A6B     		ldr	r2, [r7, #52]
 7695 0178 D2B2     		uxtb	r2, r2
 7696 017a 1A70     		strb	r2, [r3, #0]
 7697 017c 3B6B     		ldr	r3, [r7, #48]
 7698 017e 03F11B03 		add	r3, r3, #27
 7699 0182 7A6B     		ldr	r2, [r7, #52]
 7700 0184 92B2     		uxth	r2, r2
 7701 0186 4FEA1222 		lsr	r2, r2, #8
 7702 018a 92B2     		uxth	r2, r2
 7703 018c D2B2     		uxtb	r2, r2
 7704 018e 1A70     		strb	r2, [r3, #0]
 7705 0190 3B6B     		ldr	r3, [r7, #48]
 7706 0192 03F11403 		add	r3, r3, #20
 7707 0196 7A6B     		ldr	r2, [r7, #52]
 7708 0198 4FEA1242 		lsr	r2, r2, #16
 7709 019c D2B2     		uxtb	r2, r2
 7710 019e 1A70     		strb	r2, [r3, #0]
 7711 01a0 3B6B     		ldr	r3, [r7, #48]
 7712 01a2 03F11503 		add	r3, r3, #21
 7713 01a6 7A6B     		ldr	r2, [r7, #52]
 7714 01a8 4FEA1242 		lsr	r2, r2, #16
 7715 01ac 92B2     		uxth	r2, r2
 7716 01ae 4FEA1222 		lsr	r2, r2, #8
 7717 01b2 92B2     		uxth	r2, r2
 7718 01b4 D2B2     		uxtb	r2, r2
 7719 01b6 1A70     		strb	r2, [r3, #0]
3347:../Dave/Generated/src/FATFS002/Src/ff.c **** 				mem_cpy(dir+SZ_DIR, dir, SZ_DIR); 	/* Create ".." entry */
 7720              		.loc 1 3347 0
 7721 01b8 3B6B     		ldr	r3, [r7, #48]
 7722 01ba 03F12003 		add	r3, r3, #32
 7723 01be 1846     		mov	r0, r3
 7724 01c0 396B     		ldr	r1, [r7, #48]
 7725 01c2 4FF02002 		mov	r2, #32
 7726 01c6 FFF7FEFF 		bl	mem_cpy
3348:../Dave/Generated/src/FATFS002/Src/ff.c **** 				dir[33] = '.'; pcl = dj.sclust;
 7727              		.loc 1 3348 0
 7728 01ca 3B6B     		ldr	r3, [r7, #48]
 7729 01cc 03F12103 		add	r3, r3, #33
 7730 01d0 4FF02E02 		mov	r2, #46
 7731 01d4 1A70     		strb	r2, [r3, #0]
 7732 01d6 FB69     		ldr	r3, [r7, #28]
 7733 01d8 FB63     		str	r3, [r7, #60]
3349:../Dave/Generated/src/FATFS002/Src/ff.c **** 				if (dj.fs->fs_type == FS_FAT32 && pcl == dj.fs->dirbase)
 7734              		.loc 1 3349 0
 7735 01da 7B69     		ldr	r3, [r7, #20]
 7736 01dc 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 7737 01de 032B     		cmp	r3, #3
 7738 01e0 07D1     		bne	.L453
 7739              		.loc 1 3349 0 is_stmt 0 discriminator 1
 7740 01e2 7B69     		ldr	r3, [r7, #20]
 7741 01e4 9A6A     		ldr	r2, [r3, #40]
 7742 01e6 FB6B     		ldr	r3, [r7, #60]
 7743 01e8 9A42     		cmp	r2, r3
 7744 01ea 02D1     		bne	.L453
3350:../Dave/Generated/src/FATFS002/Src/ff.c **** 					pcl = 0;
 7745              		.loc 1 3350 0 is_stmt 1
 7746 01ec 4FF00003 		mov	r3, #0
 7747 01f0 FB63     		str	r3, [r7, #60]
 7748              	.L453:
3351:../Dave/Generated/src/FATFS002/Src/ff.c **** 				ST_CLUST(dir+SZ_DIR, pcl);
 7749              		.loc 1 3351 0
 7750 01f2 3B6B     		ldr	r3, [r7, #48]
 7751 01f4 03F13A03 		add	r3, r3, #58
 7752 01f8 FA6B     		ldr	r2, [r7, #60]
 7753 01fa D2B2     		uxtb	r2, r2
 7754 01fc 1A70     		strb	r2, [r3, #0]
 7755 01fe 3B6B     		ldr	r3, [r7, #48]
 7756 0200 03F13B03 		add	r3, r3, #59
 7757 0204 FA6B     		ldr	r2, [r7, #60]
 7758 0206 92B2     		uxth	r2, r2
 7759 0208 4FEA1222 		lsr	r2, r2, #8
 7760 020c 92B2     		uxth	r2, r2
 7761 020e D2B2     		uxtb	r2, r2
 7762 0210 1A70     		strb	r2, [r3, #0]
 7763 0212 3B6B     		ldr	r3, [r7, #48]
 7764 0214 03F13403 		add	r3, r3, #52
 7765 0218 FA6B     		ldr	r2, [r7, #60]
 7766 021a 4FEA1242 		lsr	r2, r2, #16
 7767 021e D2B2     		uxtb	r2, r2
 7768 0220 1A70     		strb	r2, [r3, #0]
 7769 0222 3B6B     		ldr	r3, [r7, #48]
 7770 0224 03F13503 		add	r3, r3, #53
 7771 0228 FA6B     		ldr	r2, [r7, #60]
 7772 022a 4FEA1242 		lsr	r2, r2, #16
 7773 022e 92B2     		uxth	r2, r2
 7774 0230 4FEA1222 		lsr	r2, r2, #8
 7775 0234 92B2     		uxth	r2, r2
 7776 0236 D2B2     		uxtb	r2, r2
 7777 0238 1A70     		strb	r2, [r3, #0]
3352:../Dave/Generated/src/FATFS002/Src/ff.c **** 				for (n = dj.fs->csize; n; n--) {	/* Write dot entries and clear following sectors */
 7778              		.loc 1 3352 0
 7779 023a 7B69     		ldr	r3, [r7, #20]
 7780 023c 9B78     		ldrb	r3, [r3, #2]
 7781 023e 87F84630 		strb	r3, [r7, #70]
 7782 0242 24E0     		b	.L454
 7783              	.L456:
3353:../Dave/Generated/src/FATFS002/Src/ff.c **** 					dj.fs->winsect = dsc++;
 7784              		.loc 1 3353 0
 7785 0244 7B69     		ldr	r3, [r7, #20]
 7786 0246 3A6C     		ldr	r2, [r7, #64]
 7787 0248 1A63     		str	r2, [r3, #48]
 7788 024a 3B6C     		ldr	r3, [r7, #64]
 7789 024c 03F10103 		add	r3, r3, #1
 7790 0250 3B64     		str	r3, [r7, #64]
3354:../Dave/Generated/src/FATFS002/Src/ff.c **** 					dj.fs->wflag = 1;
 7791              		.loc 1 3354 0
 7792 0252 7B69     		ldr	r3, [r7, #20]
 7793 0254 4FF00102 		mov	r2, #1
 7794 0258 1A71     		strb	r2, [r3, #4]
3355:../Dave/Generated/src/FATFS002/Src/ff.c **** 					res = move_window(dj.fs, 0);
 7795              		.loc 1 3355 0
 7796 025a 7B69     		ldr	r3, [r7, #20]
 7797 025c 1846     		mov	r0, r3
 7798 025e 4FF00001 		mov	r1, #0
 7799 0262 FFF7FEFF 		bl	move_window
 7800 0266 0346     		mov	r3, r0
 7801 0268 87F84730 		strb	r3, [r7, #71]
3356:../Dave/Generated/src/FATFS002/Src/ff.c **** 					if (res != FR_OK) break;
 7802              		.loc 1 3356 0
 7803 026c 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 7804 0270 002B     		cmp	r3, #0
 7805 0272 11D1     		bne	.L460
 7806              	.L455:
3357:../Dave/Generated/src/FATFS002/Src/ff.c **** 					mem_set(dir, 0, SS(dj.fs));
 7807              		.loc 1 3357 0
 7808 0274 386B     		ldr	r0, [r7, #48]
 7809 0276 4FF00001 		mov	r1, #0
 7810 027a 4FF40072 		mov	r2, #512
 7811 027e FFF7FEFF 		bl	mem_set
3352:../Dave/Generated/src/FATFS002/Src/ff.c **** 				for (n = dj.fs->csize; n; n--) {	/* Write dot entries and clear following sectors */
 7812              		.loc 1 3352 0
 7813 0282 97F84630 		ldrb	r3, [r7, #70]
 7814 0286 03F1FF33 		add	r3, r3, #-1
 7815 028a 87F84630 		strb	r3, [r7, #70]
 7816              	.L454:
3352:../Dave/Generated/src/FATFS002/Src/ff.c **** 				for (n = dj.fs->csize; n; n--) {	/* Write dot entries and clear following sectors */
 7817              		.loc 1 3352 0 is_stmt 0 discriminator 1
 7818 028e 97F84630 		ldrb	r3, [r7, #70]	@ zero_extendqisi2
 7819 0292 002B     		cmp	r3, #0
 7820 0294 D6D1     		bne	.L456
 7821 0296 00E0     		b	.L452
 7822              	.L460:
3356:../Dave/Generated/src/FATFS002/Src/ff.c **** 					if (res != FR_OK) break;
 7823              		.loc 1 3356 0 is_stmt 1
 7824 0298 00BF     		nop
 7825              	.L452:
3358:../Dave/Generated/src/FATFS002/Src/ff.c **** 				}
3359:../Dave/Generated/src/FATFS002/Src/ff.c **** 			}
3360:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (res == FR_OK) res = dir_register(&dj);	/* Register the object to the directoy */
 7826              		.loc 1 3360 0
 7827 029a 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 7828 029e 002B     		cmp	r3, #0
 7829 02a0 07D1     		bne	.L457
 7830              		.loc 1 3360 0 is_stmt 0 discriminator 1
 7831 02a2 07F11403 		add	r3, r7, #20
 7832 02a6 1846     		mov	r0, r3
 7833 02a8 FFF7FEFF 		bl	dir_register
 7834 02ac 0346     		mov	r3, r0
 7835 02ae 87F84730 		strb	r3, [r7, #71]
 7836              	.L457:
3361:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (res != FR_OK) {
 7837              		.loc 1 3361 0 is_stmt 1
 7838 02b2 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 7839 02b6 002B     		cmp	r3, #0
 7840 02b8 05D0     		beq	.L458
3362:../Dave/Generated/src/FATFS002/Src/ff.c **** 				remove_chain(dj.fs, dcl);			/* Could not register, remove cluster chain */
 7841              		.loc 1 3362 0
 7842 02ba 7B69     		ldr	r3, [r7, #20]
 7843 02bc 1846     		mov	r0, r3
 7844 02be 796B     		ldr	r1, [r7, #52]
 7845 02c0 FFF7FEFF 		bl	remove_chain
 7846 02c4 56E0     		b	.L445
 7847              	.L458:
3363:../Dave/Generated/src/FATFS002/Src/ff.c **** 			} else {
3364:../Dave/Generated/src/FATFS002/Src/ff.c **** 				dir = dj.dir;
 7848              		.loc 1 3364 0
 7849 02c6 BB6A     		ldr	r3, [r7, #40]
 7850 02c8 3B63     		str	r3, [r7, #48]
3365:../Dave/Generated/src/FATFS002/Src/ff.c **** 				dir[DIR_Attr] = AM_DIR;				/* Attribute */
 7851              		.loc 1 3365 0
 7852 02ca 3B6B     		ldr	r3, [r7, #48]
 7853 02cc 03F10B03 		add	r3, r3, #11
 7854 02d0 4FF01002 		mov	r2, #16
 7855 02d4 1A70     		strb	r2, [r3, #0]
3366:../Dave/Generated/src/FATFS002/Src/ff.c **** 				ST_DWORD(dir+DIR_WrtTime, tim);		/* Created time */
 7856              		.loc 1 3366 0
 7857 02d6 3B6B     		ldr	r3, [r7, #48]
 7858 02d8 03F11603 		add	r3, r3, #22
 7859 02dc BA6B     		ldr	r2, [r7, #56]
 7860 02de D2B2     		uxtb	r2, r2
 7861 02e0 1A70     		strb	r2, [r3, #0]
 7862 02e2 3B6B     		ldr	r3, [r7, #48]
 7863 02e4 03F11703 		add	r3, r3, #23
 7864 02e8 BA6B     		ldr	r2, [r7, #56]
 7865 02ea 92B2     		uxth	r2, r2
 7866 02ec 4FEA1222 		lsr	r2, r2, #8
 7867 02f0 92B2     		uxth	r2, r2
 7868 02f2 D2B2     		uxtb	r2, r2
 7869 02f4 1A70     		strb	r2, [r3, #0]
 7870 02f6 3B6B     		ldr	r3, [r7, #48]
 7871 02f8 03F11803 		add	r3, r3, #24
 7872 02fc BA6B     		ldr	r2, [r7, #56]
 7873 02fe 4FEA1242 		lsr	r2, r2, #16
 7874 0302 D2B2     		uxtb	r2, r2
 7875 0304 1A70     		strb	r2, [r3, #0]
 7876 0306 3B6B     		ldr	r3, [r7, #48]
 7877 0308 03F11903 		add	r3, r3, #25
 7878 030c BA6B     		ldr	r2, [r7, #56]
 7879 030e 4FEA1262 		lsr	r2, r2, #24
 7880 0312 D2B2     		uxtb	r2, r2
 7881 0314 1A70     		strb	r2, [r3, #0]
3367:../Dave/Generated/src/FATFS002/Src/ff.c **** 				ST_CLUST(dir, dcl);					/* Table start cluster */
 7882              		.loc 1 3367 0
 7883 0316 3B6B     		ldr	r3, [r7, #48]
 7884 0318 03F11A03 		add	r3, r3, #26
 7885 031c 7A6B     		ldr	r2, [r7, #52]
 7886 031e D2B2     		uxtb	r2, r2
 7887 0320 1A70     		strb	r2, [r3, #0]
 7888 0322 3B6B     		ldr	r3, [r7, #48]
 7889 0324 03F11B03 		add	r3, r3, #27
 7890 0328 7A6B     		ldr	r2, [r7, #52]
 7891 032a 92B2     		uxth	r2, r2
 7892 032c 4FEA1222 		lsr	r2, r2, #8
 7893 0330 92B2     		uxth	r2, r2
 7894 0332 D2B2     		uxtb	r2, r2
 7895 0334 1A70     		strb	r2, [r3, #0]
 7896 0336 3B6B     		ldr	r3, [r7, #48]
 7897 0338 03F11403 		add	r3, r3, #20
 7898 033c 7A6B     		ldr	r2, [r7, #52]
 7899 033e 4FEA1242 		lsr	r2, r2, #16
 7900 0342 D2B2     		uxtb	r2, r2
 7901 0344 1A70     		strb	r2, [r3, #0]
 7902 0346 3B6B     		ldr	r3, [r7, #48]
 7903 0348 03F11503 		add	r3, r3, #21
 7904 034c 7A6B     		ldr	r2, [r7, #52]
 7905 034e 4FEA1242 		lsr	r2, r2, #16
 7906 0352 92B2     		uxth	r2, r2
 7907 0354 4FEA1222 		lsr	r2, r2, #8
 7908 0358 92B2     		uxth	r2, r2
 7909 035a D2B2     		uxtb	r2, r2
 7910 035c 1A70     		strb	r2, [r3, #0]
3368:../Dave/Generated/src/FATFS002/Src/ff.c **** 				dj.fs->wflag = 1;
 7911              		.loc 1 3368 0
 7912 035e 7B69     		ldr	r3, [r7, #20]
 7913 0360 4FF00102 		mov	r2, #1
 7914 0364 1A71     		strb	r2, [r3, #4]
3369:../Dave/Generated/src/FATFS002/Src/ff.c **** 				res = sync(dj.fs);
 7915              		.loc 1 3369 0
 7916 0366 7B69     		ldr	r3, [r7, #20]
 7917 0368 1846     		mov	r0, r3
 7918 036a FFF7FEFF 		bl	sync
 7919 036e 0346     		mov	r3, r0
 7920 0370 87F84730 		strb	r3, [r7, #71]
 7921              	.L445:
3370:../Dave/Generated/src/FATFS002/Src/ff.c **** 			}
3371:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
3372:../Dave/Generated/src/FATFS002/Src/ff.c **** 		FREE_BUF();
3373:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
3374:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3375:../Dave/Generated/src/FATFS002/Src/ff.c **** 	LEAVE_FF(dj.fs, res);
 7922              		.loc 1 3375 0
 7923 0374 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
3376:../Dave/Generated/src/FATFS002/Src/ff.c **** }
 7924              		.loc 1 3376 0
 7925 0378 1846     		mov	r0, r3
 7926 037a 07F14807 		add	r7, r7, #72
 7927 037e BD46     		mov	sp, r7
 7928 0380 80BD     		pop	{r7, pc}
 7929              		.cfi_endproc
 7930              	.LFE38:
 7932 0382 00BF     		.section	.text.f_chmod,"ax",%progbits
 7933              		.align	2
 7934              		.global	f_chmod
 7935              		.thumb
 7936              		.thumb_func
 7938              	f_chmod:
 7939              	.LFB39:
3377:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3378:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3379:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3380:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3381:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
3382:../Dave/Generated/src/FATFS002/Src/ff.c **** /* Change Attribute                                                      */
3383:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
3384:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3385:../Dave/Generated/src/FATFS002/Src/ff.c **** FRESULT f_chmod (
3386:../Dave/Generated/src/FATFS002/Src/ff.c **** 	const TCHAR *path,	/* Pointer to the file path */
3387:../Dave/Generated/src/FATFS002/Src/ff.c **** 	BYTE value,			/* Attribute bits */
3388:../Dave/Generated/src/FATFS002/Src/ff.c **** 	BYTE mask			/* Attribute mask to change */
3389:../Dave/Generated/src/FATFS002/Src/ff.c **** )
3390:../Dave/Generated/src/FATFS002/Src/ff.c **** {
 7940              		.loc 1 3390 0
 7941              		.cfi_startproc
 7942              		@ args = 0, pretend = 0, frame = 56
 7943              		@ frame_needed = 1, uses_anonymous_args = 0
 7944 0000 80B5     		push	{r7, lr}
 7945              	.LCFI117:
 7946              		.cfi_def_cfa_offset 8
 7947              		.cfi_offset 7, -8
 7948              		.cfi_offset 14, -4
 7949 0002 8EB0     		sub	sp, sp, #56
 7950              	.LCFI118:
 7951              		.cfi_def_cfa_offset 64
 7952 0004 00AF     		add	r7, sp, #0
 7953              	.LCFI119:
 7954              		.cfi_def_cfa_register 7
 7955 0006 7860     		str	r0, [r7, #4]
 7956 0008 1346     		mov	r3, r2
 7957 000a 0A46     		mov	r2, r1
 7958 000c FA70     		strb	r2, [r7, #3]
 7959 000e BB70     		strb	r3, [r7, #2]
3391:../Dave/Generated/src/FATFS002/Src/ff.c **** 	FRESULT res;
3392:../Dave/Generated/src/FATFS002/Src/ff.c **** 	DIR dj;
3393:../Dave/Generated/src/FATFS002/Src/ff.c **** 	BYTE *dir;
3394:../Dave/Generated/src/FATFS002/Src/ff.c **** 	DEF_NAMEBUF;
3395:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3396:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3397:../Dave/Generated/src/FATFS002/Src/ff.c **** 	res = chk_mounted(&path, &dj.fs, 1);
 7960              		.loc 1 3397 0
 7961 0010 07F10402 		add	r2, r7, #4
 7962 0014 07F11403 		add	r3, r7, #20
 7963 0018 1046     		mov	r0, r2
 7964 001a 1946     		mov	r1, r3
 7965 001c 4FF00102 		mov	r2, #1
 7966 0020 FFF7FEFF 		bl	chk_mounted
 7967 0024 0346     		mov	r3, r0
 7968 0026 87F83730 		strb	r3, [r7, #55]
3398:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (res == FR_OK) {
 7969              		.loc 1 3398 0
 7970 002a 97F83730 		ldrb	r3, [r7, #55]	@ zero_extendqisi2
 7971 002e 002B     		cmp	r3, #0
 7972 0030 4DD1     		bne	.L462
3399:../Dave/Generated/src/FATFS002/Src/ff.c **** 		INIT_BUF(dj);
 7973              		.loc 1 3399 0
 7974 0032 07F10803 		add	r3, r7, #8
 7975 0036 FB62     		str	r3, [r7, #44]
3400:../Dave/Generated/src/FATFS002/Src/ff.c **** 		res = follow_path(&dj, path);		/* Follow the file path */
 7976              		.loc 1 3400 0
 7977 0038 7B68     		ldr	r3, [r7, #4]
 7978 003a 07F11402 		add	r2, r7, #20
 7979 003e 1046     		mov	r0, r2
 7980 0040 1946     		mov	r1, r3
 7981 0042 FFF7FEFF 		bl	follow_path
 7982 0046 0346     		mov	r3, r0
 7983 0048 87F83730 		strb	r3, [r7, #55]
3401:../Dave/Generated/src/FATFS002/Src/ff.c **** 		FREE_BUF();
3402:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (_FS_RPATH && res == FR_OK && (dj.fn[NS] & NS_DOT))
 7984              		.loc 1 3402 0
 7985 004c 97F83730 		ldrb	r3, [r7, #55]	@ zero_extendqisi2
 7986 0050 002B     		cmp	r3, #0
 7987 0052 0BD1     		bne	.L463
 7988              		.loc 1 3402 0 is_stmt 0 discriminator 1
 7989 0054 FB6A     		ldr	r3, [r7, #44]
 7990 0056 03F10B03 		add	r3, r3, #11
 7991 005a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 7992 005c 03F02003 		and	r3, r3, #32
 7993 0060 002B     		cmp	r3, #0
 7994 0062 03D0     		beq	.L463
3403:../Dave/Generated/src/FATFS002/Src/ff.c **** 			res = FR_INVALID_NAME;
 7995              		.loc 1 3403 0 is_stmt 1
 7996 0064 4FF00603 		mov	r3, #6
 7997 0068 87F83730 		strb	r3, [r7, #55]
 7998              	.L463:
3404:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (res == FR_OK) {
 7999              		.loc 1 3404 0
 8000 006c 97F83730 		ldrb	r3, [r7, #55]	@ zero_extendqisi2
 8001 0070 002B     		cmp	r3, #0
 8002 0072 2CD1     		bne	.L462
3405:../Dave/Generated/src/FATFS002/Src/ff.c **** 			dir = dj.dir;
 8003              		.loc 1 3405 0
 8004 0074 BB6A     		ldr	r3, [r7, #40]
 8005 0076 3B63     		str	r3, [r7, #48]
3406:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (!dir) {						/* Is it a root directory? */
 8006              		.loc 1 3406 0
 8007 0078 3B6B     		ldr	r3, [r7, #48]
 8008 007a 002B     		cmp	r3, #0
 8009 007c 04D1     		bne	.L464
3407:../Dave/Generated/src/FATFS002/Src/ff.c **** 				res = FR_INVALID_NAME;
 8010              		.loc 1 3407 0
 8011 007e 4FF00603 		mov	r3, #6
 8012 0082 87F83730 		strb	r3, [r7, #55]
 8013 0086 22E0     		b	.L462
 8014              	.L464:
3408:../Dave/Generated/src/FATFS002/Src/ff.c **** 			} else {						/* File or sub directory */
3409:../Dave/Generated/src/FATFS002/Src/ff.c **** 				mask &= AM_RDO|AM_HID|AM_SYS|AM_ARC;	/* Valid attribute mask */
 8015              		.loc 1 3409 0
 8016 0088 BB78     		ldrb	r3, [r7, #2]
 8017 008a 03F02703 		and	r3, r3, #39
 8018 008e BB70     		strb	r3, [r7, #2]
3410:../Dave/Generated/src/FATFS002/Src/ff.c **** 				dir[DIR_Attr] = (value & mask) | (dir[DIR_Attr] & (BYTE)~mask);	/* Apply attribute change */
 8019              		.loc 1 3410 0
 8020 0090 3B6B     		ldr	r3, [r7, #48]
 8021 0092 03F10B03 		add	r3, r3, #11
 8022 0096 F978     		ldrb	r1, [r7, #3]
 8023 0098 BA78     		ldrb	r2, [r7, #2]
 8024 009a 0A40     		ands	r2, r2, r1
 8025 009c D1B2     		uxtb	r1, r2
 8026 009e 3A6B     		ldr	r2, [r7, #48]
 8027 00a0 02F10B02 		add	r2, r2, #11
 8028 00a4 1078     		ldrb	r0, [r2, #0]	@ zero_extendqisi2
 8029 00a6 BA78     		ldrb	r2, [r7, #2]
 8030 00a8 6FEA0202 		mvn	r2, r2
 8031 00ac D2B2     		uxtb	r2, r2
 8032 00ae 0240     		ands	r2, r2, r0
 8033 00b0 D2B2     		uxtb	r2, r2
 8034 00b2 0A43     		orrs	r2, r2, r1
 8035 00b4 D2B2     		uxtb	r2, r2
 8036 00b6 1A70     		strb	r2, [r3, #0]
3411:../Dave/Generated/src/FATFS002/Src/ff.c **** 				dj.fs->wflag = 1;
 8037              		.loc 1 3411 0
 8038 00b8 7B69     		ldr	r3, [r7, #20]
 8039 00ba 4FF00102 		mov	r2, #1
 8040 00be 1A71     		strb	r2, [r3, #4]
3412:../Dave/Generated/src/FATFS002/Src/ff.c **** 				res = sync(dj.fs);
 8041              		.loc 1 3412 0
 8042 00c0 7B69     		ldr	r3, [r7, #20]
 8043 00c2 1846     		mov	r0, r3
 8044 00c4 FFF7FEFF 		bl	sync
 8045 00c8 0346     		mov	r3, r0
 8046 00ca 87F83730 		strb	r3, [r7, #55]
 8047              	.L462:
3413:../Dave/Generated/src/FATFS002/Src/ff.c **** 			}
3414:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
3415:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
3416:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3417:../Dave/Generated/src/FATFS002/Src/ff.c **** 	LEAVE_FF(dj.fs, res);
 8048              		.loc 1 3417 0
 8049 00ce 97F83730 		ldrb	r3, [r7, #55]	@ zero_extendqisi2
3418:../Dave/Generated/src/FATFS002/Src/ff.c **** }
 8050              		.loc 1 3418 0
 8051 00d2 1846     		mov	r0, r3
 8052 00d4 07F13807 		add	r7, r7, #56
 8053 00d8 BD46     		mov	sp, r7
 8054 00da 80BD     		pop	{r7, pc}
 8055              		.cfi_endproc
 8056              	.LFE39:
 8058              		.section	.text.f_utime,"ax",%progbits
 8059              		.align	2
 8060              		.global	f_utime
 8061              		.thumb
 8062              		.thumb_func
 8064              	f_utime:
 8065              	.LFB40:
3419:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3420:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3421:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3422:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3423:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
3424:../Dave/Generated/src/FATFS002/Src/ff.c **** /* Change Timestamp                                                      */
3425:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
3426:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3427:../Dave/Generated/src/FATFS002/Src/ff.c **** FRESULT f_utime (
3428:../Dave/Generated/src/FATFS002/Src/ff.c **** 	const TCHAR *path,	/* Pointer to the file/directory name */
3429:../Dave/Generated/src/FATFS002/Src/ff.c **** 	const FILINFO *fno	/* Pointer to the time stamp to be set */
3430:../Dave/Generated/src/FATFS002/Src/ff.c **** )
3431:../Dave/Generated/src/FATFS002/Src/ff.c **** {
 8066              		.loc 1 3431 0
 8067              		.cfi_startproc
 8068              		@ args = 0, pretend = 0, frame = 56
 8069              		@ frame_needed = 1, uses_anonymous_args = 0
 8070 0000 80B5     		push	{r7, lr}
 8071              	.LCFI120:
 8072              		.cfi_def_cfa_offset 8
 8073              		.cfi_offset 7, -8
 8074              		.cfi_offset 14, -4
 8075 0002 8EB0     		sub	sp, sp, #56
 8076              	.LCFI121:
 8077              		.cfi_def_cfa_offset 64
 8078 0004 00AF     		add	r7, sp, #0
 8079              	.LCFI122:
 8080              		.cfi_def_cfa_register 7
 8081 0006 7860     		str	r0, [r7, #4]
 8082 0008 3960     		str	r1, [r7, #0]
3432:../Dave/Generated/src/FATFS002/Src/ff.c **** 	FRESULT res;
3433:../Dave/Generated/src/FATFS002/Src/ff.c **** 	DIR dj;
3434:../Dave/Generated/src/FATFS002/Src/ff.c **** 	BYTE *dir;
3435:../Dave/Generated/src/FATFS002/Src/ff.c **** 	DEF_NAMEBUF;
3436:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3437:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3438:../Dave/Generated/src/FATFS002/Src/ff.c **** 	res = chk_mounted(&path, &dj.fs, 1);
 8083              		.loc 1 3438 0
 8084 000a 07F10402 		add	r2, r7, #4
 8085 000e 07F11403 		add	r3, r7, #20
 8086 0012 1046     		mov	r0, r2
 8087 0014 1946     		mov	r1, r3
 8088 0016 4FF00102 		mov	r2, #1
 8089 001a FFF7FEFF 		bl	chk_mounted
 8090 001e 0346     		mov	r3, r0
 8091 0020 87F83730 		strb	r3, [r7, #55]
3439:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (res == FR_OK) {
 8092              		.loc 1 3439 0
 8093 0024 97F83730 		ldrb	r3, [r7, #55]	@ zero_extendqisi2
 8094 0028 002B     		cmp	r3, #0
 8095 002a 57D1     		bne	.L467
3440:../Dave/Generated/src/FATFS002/Src/ff.c **** 		INIT_BUF(dj);
 8096              		.loc 1 3440 0
 8097 002c 07F10803 		add	r3, r7, #8
 8098 0030 FB62     		str	r3, [r7, #44]
3441:../Dave/Generated/src/FATFS002/Src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
 8099              		.loc 1 3441 0
 8100 0032 7B68     		ldr	r3, [r7, #4]
 8101 0034 07F11402 		add	r2, r7, #20
 8102 0038 1046     		mov	r0, r2
 8103 003a 1946     		mov	r1, r3
 8104 003c FFF7FEFF 		bl	follow_path
 8105 0040 0346     		mov	r3, r0
 8106 0042 87F83730 		strb	r3, [r7, #55]
3442:../Dave/Generated/src/FATFS002/Src/ff.c **** 		FREE_BUF();
3443:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (_FS_RPATH && res == FR_OK && (dj.fn[NS] & NS_DOT))
 8107              		.loc 1 3443 0
 8108 0046 97F83730 		ldrb	r3, [r7, #55]	@ zero_extendqisi2
 8109 004a 002B     		cmp	r3, #0
 8110 004c 0BD1     		bne	.L468
 8111              		.loc 1 3443 0 is_stmt 0 discriminator 1
 8112 004e FB6A     		ldr	r3, [r7, #44]
 8113 0050 03F10B03 		add	r3, r3, #11
 8114 0054 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 8115 0056 03F02003 		and	r3, r3, #32
 8116 005a 002B     		cmp	r3, #0
 8117 005c 03D0     		beq	.L468
3444:../Dave/Generated/src/FATFS002/Src/ff.c **** 			res = FR_INVALID_NAME;
 8118              		.loc 1 3444 0 is_stmt 1
 8119 005e 4FF00603 		mov	r3, #6
 8120 0062 87F83730 		strb	r3, [r7, #55]
 8121              	.L468:
3445:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (res == FR_OK) {
 8122              		.loc 1 3445 0
 8123 0066 97F83730 		ldrb	r3, [r7, #55]	@ zero_extendqisi2
 8124 006a 002B     		cmp	r3, #0
 8125 006c 36D1     		bne	.L467
3446:../Dave/Generated/src/FATFS002/Src/ff.c **** 			dir = dj.dir;
 8126              		.loc 1 3446 0
 8127 006e BB6A     		ldr	r3, [r7, #40]
 8128 0070 3B63     		str	r3, [r7, #48]
3447:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (!dir) {					/* Root directory */
 8129              		.loc 1 3447 0
 8130 0072 3B6B     		ldr	r3, [r7, #48]
 8131 0074 002B     		cmp	r3, #0
 8132 0076 04D1     		bne	.L469
3448:../Dave/Generated/src/FATFS002/Src/ff.c **** 				res = FR_INVALID_NAME;
 8133              		.loc 1 3448 0
 8134 0078 4FF00603 		mov	r3, #6
 8135 007c 87F83730 		strb	r3, [r7, #55]
 8136 0080 2CE0     		b	.L467
 8137              	.L469:
3449:../Dave/Generated/src/FATFS002/Src/ff.c **** 			} else {					/* File or sub-directory */
3450:../Dave/Generated/src/FATFS002/Src/ff.c **** 				ST_WORD(dir+DIR_WrtTime, fno->ftime);
 8138              		.loc 1 3450 0
 8139 0082 3B6B     		ldr	r3, [r7, #48]
 8140 0084 03F11603 		add	r3, r3, #22
 8141 0088 3A68     		ldr	r2, [r7, #0]
 8142 008a D288     		ldrh	r2, [r2, #6]
 8143 008c D2B2     		uxtb	r2, r2
 8144 008e 1A70     		strb	r2, [r3, #0]
 8145 0090 3B6B     		ldr	r3, [r7, #48]
 8146 0092 03F11703 		add	r3, r3, #23
 8147 0096 3A68     		ldr	r2, [r7, #0]
 8148 0098 D288     		ldrh	r2, [r2, #6]
 8149 009a 4FEA1222 		lsr	r2, r2, #8
 8150 009e 92B2     		uxth	r2, r2
 8151 00a0 D2B2     		uxtb	r2, r2
 8152 00a2 1A70     		strb	r2, [r3, #0]
3451:../Dave/Generated/src/FATFS002/Src/ff.c **** 				ST_WORD(dir+DIR_WrtDate, fno->fdate);
 8153              		.loc 1 3451 0
 8154 00a4 3B6B     		ldr	r3, [r7, #48]
 8155 00a6 03F11803 		add	r3, r3, #24
 8156 00aa 3A68     		ldr	r2, [r7, #0]
 8157 00ac 9288     		ldrh	r2, [r2, #4]
 8158 00ae D2B2     		uxtb	r2, r2
 8159 00b0 1A70     		strb	r2, [r3, #0]
 8160 00b2 3B6B     		ldr	r3, [r7, #48]
 8161 00b4 03F11903 		add	r3, r3, #25
 8162 00b8 3A68     		ldr	r2, [r7, #0]
 8163 00ba 9288     		ldrh	r2, [r2, #4]
 8164 00bc 4FEA1222 		lsr	r2, r2, #8
 8165 00c0 92B2     		uxth	r2, r2
 8166 00c2 D2B2     		uxtb	r2, r2
 8167 00c4 1A70     		strb	r2, [r3, #0]
3452:../Dave/Generated/src/FATFS002/Src/ff.c **** 				dj.fs->wflag = 1;
 8168              		.loc 1 3452 0
 8169 00c6 7B69     		ldr	r3, [r7, #20]
 8170 00c8 4FF00102 		mov	r2, #1
 8171 00cc 1A71     		strb	r2, [r3, #4]
3453:../Dave/Generated/src/FATFS002/Src/ff.c **** 				res = sync(dj.fs);
 8172              		.loc 1 3453 0
 8173 00ce 7B69     		ldr	r3, [r7, #20]
 8174 00d0 1846     		mov	r0, r3
 8175 00d2 FFF7FEFF 		bl	sync
 8176 00d6 0346     		mov	r3, r0
 8177 00d8 87F83730 		strb	r3, [r7, #55]
 8178              	.L467:
3454:../Dave/Generated/src/FATFS002/Src/ff.c **** 			}
3455:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
3456:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
3457:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3458:../Dave/Generated/src/FATFS002/Src/ff.c **** 	LEAVE_FF(dj.fs, res);
 8179              		.loc 1 3458 0
 8180 00dc 97F83730 		ldrb	r3, [r7, #55]	@ zero_extendqisi2
3459:../Dave/Generated/src/FATFS002/Src/ff.c **** }
 8181              		.loc 1 3459 0
 8182 00e0 1846     		mov	r0, r3
 8183 00e2 07F13807 		add	r7, r7, #56
 8184 00e6 BD46     		mov	sp, r7
 8185 00e8 80BD     		pop	{r7, pc}
 8186              		.cfi_endproc
 8187              	.LFE40:
 8189 00ea 00BF     		.section	.text.f_rename,"ax",%progbits
 8190              		.align	2
 8191              		.global	f_rename
 8192              		.thumb
 8193              		.thumb_func
 8195              	f_rename:
 8196              	.LFB41:
3460:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3461:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3462:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3463:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3464:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
3465:../Dave/Generated/src/FATFS002/Src/ff.c **** /* Rename File/Directory                                                 */
3466:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
3467:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3468:../Dave/Generated/src/FATFS002/Src/ff.c **** FRESULT f_rename (
3469:../Dave/Generated/src/FATFS002/Src/ff.c **** 	const TCHAR *path_old,	/* Pointer to the old name */
3470:../Dave/Generated/src/FATFS002/Src/ff.c **** 	const TCHAR *path_new	/* Pointer to the new name */
3471:../Dave/Generated/src/FATFS002/Src/ff.c **** )
3472:../Dave/Generated/src/FATFS002/Src/ff.c **** {
 8197              		.loc 1 3472 0
 8198              		.cfi_startproc
 8199              		@ args = 0, pretend = 0, frame = 112
 8200              		@ frame_needed = 1, uses_anonymous_args = 0
 8201 0000 80B5     		push	{r7, lr}
 8202              	.LCFI123:
 8203              		.cfi_def_cfa_offset 8
 8204              		.cfi_offset 7, -8
 8205              		.cfi_offset 14, -4
 8206 0002 9CB0     		sub	sp, sp, #112
 8207              	.LCFI124:
 8208              		.cfi_def_cfa_offset 120
 8209 0004 00AF     		add	r7, sp, #0
 8210              	.LCFI125:
 8211              		.cfi_def_cfa_register 7
 8212 0006 7860     		str	r0, [r7, #4]
 8213 0008 3960     		str	r1, [r7, #0]
3473:../Dave/Generated/src/FATFS002/Src/ff.c **** 	FRESULT res;
3474:../Dave/Generated/src/FATFS002/Src/ff.c **** 	DIR djo, djn;
3475:../Dave/Generated/src/FATFS002/Src/ff.c **** 	BYTE buf[21], *dir;
3476:../Dave/Generated/src/FATFS002/Src/ff.c **** 	DWORD dw;
3477:../Dave/Generated/src/FATFS002/Src/ff.c **** 	DEF_NAMEBUF;
3478:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3479:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3480:../Dave/Generated/src/FATFS002/Src/ff.c **** 	res = chk_mounted(&path_old, &djo.fs, 1);
 8214              		.loc 1 3480 0
 8215 000a 07F10402 		add	r2, r7, #4
 8216 000e 07F14803 		add	r3, r7, #72
 8217 0012 1046     		mov	r0, r2
 8218 0014 1946     		mov	r1, r3
 8219 0016 4FF00102 		mov	r2, #1
 8220 001a FFF7FEFF 		bl	chk_mounted
 8221 001e 0346     		mov	r3, r0
 8222 0020 87F86F30 		strb	r3, [r7, #111]
3481:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (res == FR_OK) {
 8223              		.loc 1 3481 0
 8224 0024 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 8225 0028 002B     		cmp	r3, #0
 8226 002a 40F01C81 		bne	.L472
3482:../Dave/Generated/src/FATFS002/Src/ff.c **** 		djn.fs = djo.fs;
 8227              		.loc 1 3482 0
 8228 002e BB6C     		ldr	r3, [r7, #72]
 8229 0030 FB62     		str	r3, [r7, #44]
3483:../Dave/Generated/src/FATFS002/Src/ff.c **** 		INIT_BUF(djo);
 8230              		.loc 1 3483 0
 8231 0032 07F10803 		add	r3, r7, #8
 8232 0036 3B66     		str	r3, [r7, #96]
3484:../Dave/Generated/src/FATFS002/Src/ff.c **** 		res = follow_path(&djo, path_old);		/* Check old object */
 8233              		.loc 1 3484 0
 8234 0038 7B68     		ldr	r3, [r7, #4]
 8235 003a 07F14802 		add	r2, r7, #72
 8236 003e 1046     		mov	r0, r2
 8237 0040 1946     		mov	r1, r3
 8238 0042 FFF7FEFF 		bl	follow_path
 8239 0046 0346     		mov	r3, r0
 8240 0048 87F86F30 		strb	r3, [r7, #111]
3485:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (_FS_RPATH && res == FR_OK && (djo.fn[NS] & NS_DOT))
 8241              		.loc 1 3485 0
 8242 004c 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 8243 0050 002B     		cmp	r3, #0
 8244 0052 0BD1     		bne	.L473
 8245              		.loc 1 3485 0 is_stmt 0 discriminator 1
 8246 0054 3B6E     		ldr	r3, [r7, #96]
 8247 0056 03F10B03 		add	r3, r3, #11
 8248 005a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 8249 005c 03F02003 		and	r3, r3, #32
 8250 0060 002B     		cmp	r3, #0
 8251 0062 03D0     		beq	.L473
3486:../Dave/Generated/src/FATFS002/Src/ff.c **** 			res = FR_INVALID_NAME;
 8252              		.loc 1 3486 0 is_stmt 1
 8253 0064 4FF00603 		mov	r3, #6
 8254 0068 87F86F30 		strb	r3, [r7, #111]
 8255              	.L473:
3487:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _FS_SHARE
3488:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (res == FR_OK) res = chk_lock(&djo, 2);
3489:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
3490:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (res == FR_OK) {						/* Old object is found */
 8256              		.loc 1 3490 0
 8257 006c 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 8258 0070 002B     		cmp	r3, #0
 8259 0072 40F0F880 		bne	.L472
3491:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (!djo.dir) {						/* Is root dir? */
 8260              		.loc 1 3491 0
 8261 0076 FB6D     		ldr	r3, [r7, #92]
 8262 0078 002B     		cmp	r3, #0
 8263 007a 04D1     		bne	.L474
3492:../Dave/Generated/src/FATFS002/Src/ff.c **** 				res = FR_NO_FILE;
 8264              		.loc 1 3492 0
 8265 007c 4FF00403 		mov	r3, #4
 8266 0080 87F86F30 		strb	r3, [r7, #111]
 8267 0084 EFE0     		b	.L472
 8268              	.L474:
3493:../Dave/Generated/src/FATFS002/Src/ff.c **** 			} else {
3494:../Dave/Generated/src/FATFS002/Src/ff.c **** 				mem_cpy(buf, djo.dir+DIR_Attr, 21);		/* Save the object information except for name */
 8269              		.loc 1 3494 0
 8270 0086 FB6D     		ldr	r3, [r7, #92]
 8271 0088 03F10B03 		add	r3, r3, #11
 8272 008c 07F11402 		add	r2, r7, #20
 8273 0090 1046     		mov	r0, r2
 8274 0092 1946     		mov	r1, r3
 8275 0094 4FF01502 		mov	r2, #21
 8276 0098 FFF7FEFF 		bl	mem_cpy
3495:../Dave/Generated/src/FATFS002/Src/ff.c **** 				mem_cpy(&djn, &djo, sizeof(DIR));		/* Check new object */
 8277              		.loc 1 3495 0
 8278 009c 07F12C02 		add	r2, r7, #44
 8279 00a0 07F14803 		add	r3, r7, #72
 8280 00a4 1046     		mov	r0, r2
 8281 00a6 1946     		mov	r1, r3
 8282 00a8 4FF01C02 		mov	r2, #28
 8283 00ac FFF7FEFF 		bl	mem_cpy
3496:../Dave/Generated/src/FATFS002/Src/ff.c **** 				res = follow_path(&djn, path_new);
 8284              		.loc 1 3496 0
 8285 00b0 07F12C03 		add	r3, r7, #44
 8286 00b4 1846     		mov	r0, r3
 8287 00b6 3968     		ldr	r1, [r7, #0]
 8288 00b8 FFF7FEFF 		bl	follow_path
 8289 00bc 0346     		mov	r3, r0
 8290 00be 87F86F30 		strb	r3, [r7, #111]
3497:../Dave/Generated/src/FATFS002/Src/ff.c **** 				if (res == FR_OK) res = FR_EXIST;		/* The new object name is already existing */
 8291              		.loc 1 3497 0
 8292 00c2 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 8293 00c6 002B     		cmp	r3, #0
 8294 00c8 03D1     		bne	.L475
 8295              		.loc 1 3497 0 is_stmt 0 discriminator 1
 8296 00ca 4FF00803 		mov	r3, #8
 8297 00ce 87F86F30 		strb	r3, [r7, #111]
 8298              	.L475:
3498:../Dave/Generated/src/FATFS002/Src/ff.c **** 				if (res == FR_NO_FILE) { 				/* Is it a valid path and no name collision? */
 8299              		.loc 1 3498 0 is_stmt 1
 8300 00d2 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 8301 00d6 042B     		cmp	r3, #4
 8302 00d8 40F0C580 		bne	.L472
3499:../Dave/Generated/src/FATFS002/Src/ff.c **** /* Start critical section that any interruption or error can cause cross-link */
3500:../Dave/Generated/src/FATFS002/Src/ff.c **** 					res = dir_register(&djn);			/* Register the new entry */
 8303              		.loc 1 3500 0
 8304 00dc 07F12C03 		add	r3, r7, #44
 8305 00e0 1846     		mov	r0, r3
 8306 00e2 FFF7FEFF 		bl	dir_register
 8307 00e6 0346     		mov	r3, r0
 8308 00e8 87F86F30 		strb	r3, [r7, #111]
3501:../Dave/Generated/src/FATFS002/Src/ff.c **** 					if (res == FR_OK) {
 8309              		.loc 1 3501 0
 8310 00ec 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 8311 00f0 002B     		cmp	r3, #0
 8312 00f2 40F0B880 		bne	.L472
3502:../Dave/Generated/src/FATFS002/Src/ff.c **** 						dir = djn.dir;					/* Copy object information except for name */
 8313              		.loc 1 3502 0
 8314 00f6 3B6C     		ldr	r3, [r7, #64]
 8315 00f8 BB66     		str	r3, [r7, #104]
3503:../Dave/Generated/src/FATFS002/Src/ff.c **** 						mem_cpy(dir+13, buf+2, 19);
 8316              		.loc 1 3503 0
 8317 00fa BB6E     		ldr	r3, [r7, #104]
 8318 00fc 03F10D02 		add	r2, r3, #13
 8319 0100 07F11403 		add	r3, r7, #20
 8320 0104 03F10203 		add	r3, r3, #2
 8321 0108 1046     		mov	r0, r2
 8322 010a 1946     		mov	r1, r3
 8323 010c 4FF01302 		mov	r2, #19
 8324 0110 FFF7FEFF 		bl	mem_cpy
3504:../Dave/Generated/src/FATFS002/Src/ff.c **** 						dir[DIR_Attr] = buf[0] | AM_ARC;
 8325              		.loc 1 3504 0
 8326 0114 BB6E     		ldr	r3, [r7, #104]
 8327 0116 03F10B03 		add	r3, r3, #11
 8328 011a 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8329 011c 42F02002 		orr	r2, r2, #32
 8330 0120 D2B2     		uxtb	r2, r2
 8331 0122 1A70     		strb	r2, [r3, #0]
3505:../Dave/Generated/src/FATFS002/Src/ff.c **** 						djo.fs->wflag = 1;
 8332              		.loc 1 3505 0
 8333 0124 BB6C     		ldr	r3, [r7, #72]
 8334 0126 4FF00102 		mov	r2, #1
 8335 012a 1A71     		strb	r2, [r3, #4]
3506:../Dave/Generated/src/FATFS002/Src/ff.c **** 						if (djo.sclust != djn.sclust && (dir[DIR_Attr] & AM_DIR)) {		/* Update .. entry in the direct
 8336              		.loc 1 3506 0
 8337 012c 3A6D     		ldr	r2, [r7, #80]
 8338 012e 7B6B     		ldr	r3, [r7, #52]
 8339 0130 9A42     		cmp	r2, r3
 8340 0132 00F08180 		beq	.L476
 8341              		.loc 1 3506 0 is_stmt 0 discriminator 1
 8342 0136 BB6E     		ldr	r3, [r7, #104]
 8343 0138 03F10B03 		add	r3, r3, #11
 8344 013c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 8345 013e 03F01003 		and	r3, r3, #16
 8346 0142 002B     		cmp	r3, #0
 8347 0144 78D0     		beq	.L476
3507:../Dave/Generated/src/FATFS002/Src/ff.c **** 							dw = clust2sect(djn.fs, LD_CLUST(dir));
 8348              		.loc 1 3507 0 is_stmt 1
 8349 0146 FA6A     		ldr	r2, [r7, #44]
 8350 0148 BB6E     		ldr	r3, [r7, #104]
 8351 014a 03F11503 		add	r3, r3, #21
 8352 014e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 8353 0150 4FEA0323 		lsl	r3, r3, #8
 8354 0154 99B2     		uxth	r1, r3
 8355 0156 BB6E     		ldr	r3, [r7, #104]
 8356 0158 03F11403 		add	r3, r3, #20
 8357 015c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 8358 015e 0B43     		orrs	r3, r3, r1
 8359 0160 9BB2     		uxth	r3, r3
 8360 0162 9BB2     		uxth	r3, r3
 8361 0164 4FEA0341 		lsl	r1, r3, #16
 8362 0168 BB6E     		ldr	r3, [r7, #104]
 8363 016a 03F11B03 		add	r3, r3, #27
 8364 016e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 8365 0170 4FEA0323 		lsl	r3, r3, #8
 8366 0174 98B2     		uxth	r0, r3
 8367 0176 BB6E     		ldr	r3, [r7, #104]
 8368 0178 03F11A03 		add	r3, r3, #26
 8369 017c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 8370 017e 0343     		orrs	r3, r3, r0
 8371 0180 9BB2     		uxth	r3, r3
 8372 0182 9BB2     		uxth	r3, r3
 8373 0184 0B43     		orrs	r3, r3, r1
 8374 0186 1046     		mov	r0, r2
 8375 0188 1946     		mov	r1, r3
 8376 018a FFF7FEFF 		bl	clust2sect
 8377 018e 7866     		str	r0, [r7, #100]
3508:../Dave/Generated/src/FATFS002/Src/ff.c **** 							if (!dw) {
 8378              		.loc 1 3508 0
 8379 0190 7B6E     		ldr	r3, [r7, #100]
 8380 0192 002B     		cmp	r3, #0
 8381 0194 04D1     		bne	.L477
3509:../Dave/Generated/src/FATFS002/Src/ff.c **** 								res = FR_INT_ERR;
 8382              		.loc 1 3509 0
 8383 0196 4FF00203 		mov	r3, #2
 8384 019a 87F86F30 		strb	r3, [r7, #111]
 8385 019e 4BE0     		b	.L476
 8386              	.L477:
3510:../Dave/Generated/src/FATFS002/Src/ff.c **** 							} else {
3511:../Dave/Generated/src/FATFS002/Src/ff.c **** 								res = move_window(djn.fs, dw);
 8387              		.loc 1 3511 0
 8388 01a0 FB6A     		ldr	r3, [r7, #44]
 8389 01a2 1846     		mov	r0, r3
 8390 01a4 796E     		ldr	r1, [r7, #100]
 8391 01a6 FFF7FEFF 		bl	move_window
 8392 01aa 0346     		mov	r3, r0
 8393 01ac 87F86F30 		strb	r3, [r7, #111]
3512:../Dave/Generated/src/FATFS002/Src/ff.c **** 								dir = djn.fs->win+SZ_DIR;	/* .. entry */
 8394              		.loc 1 3512 0
 8395 01b0 FB6A     		ldr	r3, [r7, #44]
 8396 01b2 03F15403 		add	r3, r3, #84
 8397 01b6 BB66     		str	r3, [r7, #104]
3513:../Dave/Generated/src/FATFS002/Src/ff.c **** 								if (res == FR_OK && dir[1] == '.') {
 8398              		.loc 1 3513 0
 8399 01b8 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 8400 01bc 002B     		cmp	r3, #0
 8401 01be 3BD1     		bne	.L476
 8402              		.loc 1 3513 0 is_stmt 0 discriminator 1
 8403 01c0 BB6E     		ldr	r3, [r7, #104]
 8404 01c2 03F10103 		add	r3, r3, #1
 8405 01c6 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 8406 01c8 2E2B     		cmp	r3, #46
 8407 01ca 35D1     		bne	.L476
3514:../Dave/Generated/src/FATFS002/Src/ff.c **** 									dw = (djn.fs->fs_type == FS_FAT32 && djn.sclust == djn.fs->dirbase) ? 0 : djn.sclust;
 8408              		.loc 1 3514 0 is_stmt 1
 8409 01cc FB6A     		ldr	r3, [r7, #44]
 8410 01ce 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 8411 01d0 032B     		cmp	r3, #3
 8412 01d2 04D1     		bne	.L478
 8413              		.loc 1 3514 0 is_stmt 0 discriminator 2
 8414 01d4 7A6B     		ldr	r2, [r7, #52]
 8415 01d6 FB6A     		ldr	r3, [r7, #44]
 8416 01d8 9B6A     		ldr	r3, [r3, #40]
 8417 01da 9A42     		cmp	r2, r3
 8418 01dc 01D0     		beq	.L479
 8419              	.L478:
 8420              		.loc 1 3514 0 discriminator 1
 8421 01de 7B6B     		ldr	r3, [r7, #52]
 8422 01e0 01E0     		b	.L480
 8423              	.L479:
 8424 01e2 4FF00003 		mov	r3, #0
 8425              	.L480:
 8426              		.loc 1 3514 0 discriminator 3
 8427 01e6 7B66     		str	r3, [r7, #100]
3515:../Dave/Generated/src/FATFS002/Src/ff.c **** 									ST_CLUST(dir, dw);
 8428              		.loc 1 3515 0 is_stmt 1 discriminator 3
 8429 01e8 BB6E     		ldr	r3, [r7, #104]
 8430 01ea 03F11A03 		add	r3, r3, #26
 8431 01ee 7A6E     		ldr	r2, [r7, #100]
 8432 01f0 D2B2     		uxtb	r2, r2
 8433 01f2 1A70     		strb	r2, [r3, #0]
 8434 01f4 BB6E     		ldr	r3, [r7, #104]
 8435 01f6 03F11B03 		add	r3, r3, #27
 8436 01fa 7A6E     		ldr	r2, [r7, #100]
 8437 01fc 92B2     		uxth	r2, r2
 8438 01fe 4FEA1222 		lsr	r2, r2, #8
 8439 0202 92B2     		uxth	r2, r2
 8440 0204 D2B2     		uxtb	r2, r2
 8441 0206 1A70     		strb	r2, [r3, #0]
 8442 0208 BB6E     		ldr	r3, [r7, #104]
 8443 020a 03F11403 		add	r3, r3, #20
 8444 020e 7A6E     		ldr	r2, [r7, #100]
 8445 0210 4FEA1242 		lsr	r2, r2, #16
 8446 0214 D2B2     		uxtb	r2, r2
 8447 0216 1A70     		strb	r2, [r3, #0]
 8448 0218 BB6E     		ldr	r3, [r7, #104]
 8449 021a 03F11503 		add	r3, r3, #21
 8450 021e 7A6E     		ldr	r2, [r7, #100]
 8451 0220 4FEA1242 		lsr	r2, r2, #16
 8452 0224 92B2     		uxth	r2, r2
 8453 0226 4FEA1222 		lsr	r2, r2, #8
 8454 022a 92B2     		uxth	r2, r2
 8455 022c D2B2     		uxtb	r2, r2
 8456 022e 1A70     		strb	r2, [r3, #0]
3516:../Dave/Generated/src/FATFS002/Src/ff.c **** 									djn.fs->wflag = 1;
 8457              		.loc 1 3516 0 discriminator 3
 8458 0230 FB6A     		ldr	r3, [r7, #44]
 8459 0232 4FF00102 		mov	r2, #1
 8460 0236 1A71     		strb	r2, [r3, #4]
 8461              	.L476:
3517:../Dave/Generated/src/FATFS002/Src/ff.c **** 								}
3518:../Dave/Generated/src/FATFS002/Src/ff.c **** 							}
3519:../Dave/Generated/src/FATFS002/Src/ff.c **** 						}
3520:../Dave/Generated/src/FATFS002/Src/ff.c **** 						if (res == FR_OK) {
 8462              		.loc 1 3520 0
 8463 0238 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 8464 023c 002B     		cmp	r3, #0
 8465 023e 12D1     		bne	.L472
3521:../Dave/Generated/src/FATFS002/Src/ff.c **** 							res = dir_remove(&djo);		/* Remove old entry */
 8466              		.loc 1 3521 0
 8467 0240 07F14803 		add	r3, r7, #72
 8468 0244 1846     		mov	r0, r3
 8469 0246 FFF7FEFF 		bl	dir_remove
 8470 024a 0346     		mov	r3, r0
 8471 024c 87F86F30 		strb	r3, [r7, #111]
3522:../Dave/Generated/src/FATFS002/Src/ff.c **** 							if (res == FR_OK)
 8472              		.loc 1 3522 0
 8473 0250 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 8474 0254 002B     		cmp	r3, #0
 8475 0256 06D1     		bne	.L472
3523:../Dave/Generated/src/FATFS002/Src/ff.c **** 								res = sync(djo.fs);
 8476              		.loc 1 3523 0
 8477 0258 BB6C     		ldr	r3, [r7, #72]
 8478 025a 1846     		mov	r0, r3
 8479 025c FFF7FEFF 		bl	sync
 8480 0260 0346     		mov	r3, r0
 8481 0262 87F86F30 		strb	r3, [r7, #111]
 8482              	.L472:
3524:../Dave/Generated/src/FATFS002/Src/ff.c **** 						}
3525:../Dave/Generated/src/FATFS002/Src/ff.c **** 					}
3526:../Dave/Generated/src/FATFS002/Src/ff.c **** /* End critical section */
3527:../Dave/Generated/src/FATFS002/Src/ff.c **** 				}
3528:../Dave/Generated/src/FATFS002/Src/ff.c **** 			}
3529:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
3530:../Dave/Generated/src/FATFS002/Src/ff.c **** 		FREE_BUF();
3531:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
3532:../Dave/Generated/src/FATFS002/Src/ff.c **** 	LEAVE_FF(djo.fs, res);
 8483              		.loc 1 3532 0
 8484 0266 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
3533:../Dave/Generated/src/FATFS002/Src/ff.c **** }
 8485              		.loc 1 3533 0
 8486 026a 1846     		mov	r0, r3
 8487 026c 07F17007 		add	r7, r7, #112
 8488 0270 BD46     		mov	sp, r7
 8489 0272 80BD     		pop	{r7, pc}
 8490              		.cfi_endproc
 8491              	.LFE41:
 8493              		.section	.rodata
 8494 000f 00       		.align	2
 8495              	.LC1:
 8496 0010 EBFE904D 		.ascii	"\353\376\220MSDOS5.0\000"
 8496      53444F53 
 8496      352E3000 
 8497              		.align	2
 8498              	.LC2:
 8499 001c 4E4F204E 		.ascii	"NO NAME    FAT32   \000"
 8499      414D4520 
 8499      20202046 
 8499      41543332 
 8499      20202000 
 8500              		.align	2
 8501              	.LC3:
 8502 0030 4E4F204E 		.ascii	"NO NAME    FAT     \000"
 8502      414D4520 
 8502      20202046 
 8502      41542020 
 8502      20202000 
 8503              		.section	.text.f_mkfs,"ax",%progbits
 8504              		.align	2
 8505              		.global	f_mkfs
 8506              		.thumb
 8507              		.thumb_func
 8509              	f_mkfs:
 8510              	.LFB42:
3534:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3535:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif /* !_FS_READONLY */
3536:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif /* _FS_MINIMIZE == 0 */
3537:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif /* _FS_MINIMIZE <= 1 */
3538:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif /* _FS_MINIMIZE <= 2 */
3539:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3540:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3541:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3542:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
3543:../Dave/Generated/src/FATFS002/Src/ff.c **** /* Forward data to the stream directly (available on only tiny cfg)      */
3544:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
3545:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _USE_FORWARD && _FS_TINY
3546:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3547:../Dave/Generated/src/FATFS002/Src/ff.c **** FRESULT f_forward (
3548:../Dave/Generated/src/FATFS002/Src/ff.c **** 	FIL *fp, 						/* Pointer to the file object */
3549:../Dave/Generated/src/FATFS002/Src/ff.c **** 	UINT (*func)(const BYTE*,UINT),	/* Pointer to the streaming function */
3550:../Dave/Generated/src/FATFS002/Src/ff.c **** 	UINT btr,						/* Number of bytes to forward */
3551:../Dave/Generated/src/FATFS002/Src/ff.c **** 	UINT *bf						/* Pointer to number of bytes forwarded */
3552:../Dave/Generated/src/FATFS002/Src/ff.c **** )
3553:../Dave/Generated/src/FATFS002/Src/ff.c **** {
3554:../Dave/Generated/src/FATFS002/Src/ff.c **** 	FRESULT res;
3555:../Dave/Generated/src/FATFS002/Src/ff.c **** 	DWORD remain, clst, sect;
3556:../Dave/Generated/src/FATFS002/Src/ff.c **** 	UINT rcnt;
3557:../Dave/Generated/src/FATFS002/Src/ff.c **** 	BYTE csect;
3558:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3559:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3560:../Dave/Generated/src/FATFS002/Src/ff.c **** 	*bf = 0;	/* Initialize byte counter */
3561:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3562:../Dave/Generated/src/FATFS002/Src/ff.c **** 	res = validate(fp->fs, fp->id);					/* Check validity of the object */
3563:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (res != FR_OK) LEAVE_FF(fp->fs, res);
3564:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (fp->flag & FA__ERROR)						/* Check error flag */
3565:../Dave/Generated/src/FATFS002/Src/ff.c **** 		LEAVE_FF(fp->fs, FR_INT_ERR);
3566:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (!(fp->flag & FA_READ))						/* Check access mode */
3567:../Dave/Generated/src/FATFS002/Src/ff.c **** 		LEAVE_FF(fp->fs, FR_DENIED);
3568:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3569:../Dave/Generated/src/FATFS002/Src/ff.c **** 	remain = fp->fsize - fp->fptr;
3570:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (btr > remain) btr = (UINT)remain;			/* Truncate btr by remaining bytes */
3571:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3572:../Dave/Generated/src/FATFS002/Src/ff.c **** 	for ( ;  btr && (*func)(0, 0);					/* Repeat until all data transferred or stream becomes busy */
3573:../Dave/Generated/src/FATFS002/Src/ff.c **** 		fp->fptr += rcnt, *bf += rcnt, btr -= rcnt) {
3574:../Dave/Generated/src/FATFS002/Src/ff.c **** 		csect = (BYTE)(fp->fptr / SS(fp->fs) & (fp->fs->csize - 1));	/* Sector offset in the cluster */
3575:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if ((fp->fptr % SS(fp->fs)) == 0) {			/* On the sector boundary? */
3576:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (!csect) {							/* On the cluster boundary? */
3577:../Dave/Generated/src/FATFS002/Src/ff.c **** 				clst = (fp->fptr == 0) ?			/* On the top of the file? */
3578:../Dave/Generated/src/FATFS002/Src/ff.c **** 					fp->sclust : get_fat(fp->fs, fp->clust);
3579:../Dave/Generated/src/FATFS002/Src/ff.c **** 				if (clst <= 1) ABORT(fp->fs, FR_INT_ERR);
3580:../Dave/Generated/src/FATFS002/Src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
3581:../Dave/Generated/src/FATFS002/Src/ff.c **** 				fp->clust = clst;					/* Update current cluster */
3582:../Dave/Generated/src/FATFS002/Src/ff.c **** 			}
3583:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
3584:../Dave/Generated/src/FATFS002/Src/ff.c **** 		sect = clust2sect(fp->fs, fp->clust);		/* Get current data sector */
3585:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (!sect) ABORT(fp->fs, FR_INT_ERR);
3586:../Dave/Generated/src/FATFS002/Src/ff.c **** 		sect += csect;
3587:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (move_window(fp->fs, sect))				/* Move sector window */
3588:../Dave/Generated/src/FATFS002/Src/ff.c **** 			ABORT(fp->fs, FR_DISK_ERR);
3589:../Dave/Generated/src/FATFS002/Src/ff.c **** 		fp->dsect = sect;
3590:../Dave/Generated/src/FATFS002/Src/ff.c **** 		rcnt = SS(fp->fs) - (WORD)(fp->fptr % SS(fp->fs));	/* Forward data from sector window */
3591:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (rcnt > btr) rcnt = btr;
3592:../Dave/Generated/src/FATFS002/Src/ff.c **** 		rcnt = (*func)(&fp->fs->win[(WORD)fp->fptr % SS(fp->fs)], rcnt);
3593:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (!rcnt) ABORT(fp->fs, FR_INT_ERR);
3594:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
3595:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3596:../Dave/Generated/src/FATFS002/Src/ff.c **** 	LEAVE_FF(fp->fs, FR_OK);
3597:../Dave/Generated/src/FATFS002/Src/ff.c **** }
3598:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif /* _USE_FORWARD */
3599:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3600:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3601:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3602:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _USE_MKFS && !_FS_READONLY
3603:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
3604:../Dave/Generated/src/FATFS002/Src/ff.c **** /* Create File System on the Drive                                       */
3605:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
3606:../Dave/Generated/src/FATFS002/Src/ff.c **** #define N_ROOTDIR	512		/* Number of root dir entries for FAT12/16 */
3607:../Dave/Generated/src/FATFS002/Src/ff.c **** #define N_FATS		1		/* Number of FAT copies (1 or 2) */
3608:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3609:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3610:../Dave/Generated/src/FATFS002/Src/ff.c **** FRESULT f_mkfs (
3611:../Dave/Generated/src/FATFS002/Src/ff.c **** 	BYTE drv,		/* Logical drive number */
3612:../Dave/Generated/src/FATFS002/Src/ff.c **** 	BYTE sfd,		/* Partitioning rule 0:FDISK, 1:SFD */
3613:../Dave/Generated/src/FATFS002/Src/ff.c **** 	UINT au			/* Allocation unit size [bytes] */
3614:../Dave/Generated/src/FATFS002/Src/ff.c **** )
3615:../Dave/Generated/src/FATFS002/Src/ff.c **** {
 8511              		.loc 1 3615 0
 8512              		.cfi_startproc
 8513              		@ args = 0, pretend = 0, frame = 88
 8514              		@ frame_needed = 1, uses_anonymous_args = 0
 8515 0000 80B5     		push	{r7, lr}
 8516              	.LCFI126:
 8517              		.cfi_def_cfa_offset 8
 8518              		.cfi_offset 7, -8
 8519              		.cfi_offset 14, -4
 8520 0002 96B0     		sub	sp, sp, #88
 8521              	.LCFI127:
 8522              		.cfi_def_cfa_offset 96
 8523 0004 00AF     		add	r7, sp, #0
 8524              	.LCFI128:
 8525              		.cfi_def_cfa_register 7
 8526 0006 0B46     		mov	r3, r1
 8527 0008 3A60     		str	r2, [r7, #0]
 8528 000a 0246     		mov	r2, r0
 8529 000c FA71     		strb	r2, [r7, #7]
 8530 000e BB71     		strb	r3, [r7, #6]
3616:../Dave/Generated/src/FATFS002/Src/ff.c **** 	static const WORD vst[] = { 1024,   512,  256,  128,   64,    32,   16,    8,    4,    2,   0};
3617:../Dave/Generated/src/FATFS002/Src/ff.c **** 	static const WORD cst[] = {32768, 16384, 8192, 4096, 2048, 16384, 8192, 4096, 2048, 1024, 512};
3618:../Dave/Generated/src/FATFS002/Src/ff.c **** 	BYTE fmt, md, sys, *tbl, pdrv, part;
3619:../Dave/Generated/src/FATFS002/Src/ff.c **** 	DWORD n_clst, vs, n, wsect;
3620:../Dave/Generated/src/FATFS002/Src/ff.c **** 	UINT i;
3621:../Dave/Generated/src/FATFS002/Src/ff.c **** 	DWORD b_vol, b_fat, b_dir, b_data;	/* LBA */
3622:../Dave/Generated/src/FATFS002/Src/ff.c **** 	DWORD n_vol, n_rsv, n_fat, n_dir;	/* Size */
3623:../Dave/Generated/src/FATFS002/Src/ff.c **** 	FATFS *fs;
3624:../Dave/Generated/src/FATFS002/Src/ff.c **** 	DSTATUS stat;
3625:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3626:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3627:../Dave/Generated/src/FATFS002/Src/ff.c **** 	/* Check mounted drive and clear work area */
3628:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (drv >= _VOLUMES) return FR_INVALID_DRIVE;
 8531              		.loc 1 3628 0
 8532 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 8533 0012 012B     		cmp	r3, #1
 8534 0014 03D9     		bls	.L483
 8535              		.loc 1 3628 0 is_stmt 0 discriminator 1
 8536 0016 4FF00B03 		mov	r3, #11
 8537 001a 00F0C3BD 		b	.L547
 8538              	.L483:
3629:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (sfd > 1) return FR_INVALID_PARAMETER;
 8539              		.loc 1 3629 0 is_stmt 1
 8540 001e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 8541 0020 012B     		cmp	r3, #1
 8542 0022 03D9     		bls	.L485
 8543              		.loc 1 3629 0 is_stmt 0 discriminator 1
 8544 0024 4FF01303 		mov	r3, #19
 8545 0028 00F0BCBD 		b	.L547
 8546              	.L485:
3630:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (au & (au - 1)) return FR_INVALID_PARAMETER;
 8547              		.loc 1 3630 0 is_stmt 1
 8548 002c 3B68     		ldr	r3, [r7, #0]
 8549 002e 03F1FF32 		add	r2, r3, #-1
 8550 0032 3B68     		ldr	r3, [r7, #0]
 8551 0034 1340     		ands	r3, r3, r2
 8552 0036 002B     		cmp	r3, #0
 8553 0038 03D0     		beq	.L486
 8554              		.loc 1 3630 0 is_stmt 0 discriminator 1
 8555 003a 4FF01303 		mov	r3, #19
 8556 003e 00F0B1BD 		b	.L547
 8557              	.L486:
3631:../Dave/Generated/src/FATFS002/Src/ff.c **** 	fs = FatFs[drv];
 8558              		.loc 1 3631 0 is_stmt 1
 8559 0042 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 8560 0044 40F20003 		movw	r3, #:lower16:FatFs
 8561 0048 C0F20003 		movt	r3, #:upper16:FatFs
 8562 004c 53F82230 		ldr	r3, [r3, r2, lsl #2]
 8563 0050 BB63     		str	r3, [r7, #56]
3632:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (!fs) return FR_NOT_ENABLED;
 8564              		.loc 1 3632 0
 8565 0052 BB6B     		ldr	r3, [r7, #56]
 8566 0054 002B     		cmp	r3, #0
 8567 0056 03D1     		bne	.L487
 8568              		.loc 1 3632 0 is_stmt 0 discriminator 1
 8569 0058 4FF00C03 		mov	r3, #12
 8570 005c 00F0A2BD 		b	.L547
 8571              	.L487:
3633:../Dave/Generated/src/FATFS002/Src/ff.c **** 	fs->fs_type = 0;
 8572              		.loc 1 3633 0 is_stmt 1
 8573 0060 BB6B     		ldr	r3, [r7, #56]
 8574 0062 4FF00002 		mov	r2, #0
 8575 0066 1A70     		strb	r2, [r3, #0]
3634:../Dave/Generated/src/FATFS002/Src/ff.c **** 	pdrv = LD2PD(drv);	/* Physical drive */
 8576              		.loc 1 3634 0
 8577 0068 FB79     		ldrb	r3, [r7, #7]
 8578 006a 87F83730 		strb	r3, [r7, #55]
3635:../Dave/Generated/src/FATFS002/Src/ff.c **** 	part = LD2PT(drv);	/* Partition (0:auto detect, 1-4:get from partition table)*/
 8579              		.loc 1 3635 0
 8580 006e 4FF00003 		mov	r3, #0
 8581 0072 87F83630 		strb	r3, [r7, #54]
3636:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3637:../Dave/Generated/src/FATFS002/Src/ff.c **** 	/* Get disk statics */
3638:../Dave/Generated/src/FATFS002/Src/ff.c **** 	stat = disk_initialize(pdrv);
 8582              		.loc 1 3638 0
 8583 0076 97F83730 		ldrb	r3, [r7, #55]	@ zero_extendqisi2
 8584 007a 1846     		mov	r0, r3
 8585 007c FFF7FEFF 		bl	disk_initialize
 8586 0080 0346     		mov	r3, r0
 8587 0082 87F83530 		strb	r3, [r7, #53]
3639:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (stat & STA_NOINIT) return FR_NOT_READY;
 8588              		.loc 1 3639 0
 8589 0086 97F83530 		ldrb	r3, [r7, #53]	@ zero_extendqisi2
 8590 008a 03F00103 		and	r3, r3, #1
 8591 008e 002B     		cmp	r3, #0
 8592 0090 03D0     		beq	.L488
 8593              		.loc 1 3639 0 is_stmt 0 discriminator 1
 8594 0092 4FF00303 		mov	r3, #3
 8595 0096 00F085BD 		b	.L547
 8596              	.L488:
3640:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (stat & STA_PROTECT) return FR_WRITE_PROTECTED;
 8597              		.loc 1 3640 0 is_stmt 1
 8598 009a 97F83530 		ldrb	r3, [r7, #53]	@ zero_extendqisi2
 8599 009e 03F00403 		and	r3, r3, #4
 8600 00a2 002B     		cmp	r3, #0
 8601 00a4 03D0     		beq	.L489
 8602              		.loc 1 3640 0 is_stmt 0 discriminator 1
 8603 00a6 4FF00A03 		mov	r3, #10
 8604 00aa 00F07BBD 		b	.L547
 8605              	.L489:
3641:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _MAX_SS != 512					/* Get disk sector size */
3642:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (disk_ioctl(pdrv, GET_SECTOR_SIZE, &SS(fs)) != RES_OK || SS(fs) > _MAX_SS)
3643:../Dave/Generated/src/FATFS002/Src/ff.c **** 		return FR_DISK_ERR;
3644:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
3645:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (_MULTI_PARTITION && part) {
3646:../Dave/Generated/src/FATFS002/Src/ff.c **** 		/* Get partition information from partition table in the MBR */
3647:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (disk_read(pdrv, fs->win, 0, 1) != RES_OK) return FR_DISK_ERR;
3648:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (LD_WORD(fs->win+BS_55AA) != 0xAA55) return FR_MKFS_ABORTED;
3649:../Dave/Generated/src/FATFS002/Src/ff.c **** 		tbl = &fs->win[MBR_Table + (part - 1) * SZ_PTE];
3650:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (!tbl[4]) return FR_MKFS_ABORTED;	/* No partition? */
3651:../Dave/Generated/src/FATFS002/Src/ff.c **** 		b_vol = LD_DWORD(tbl+8);	/* Volume start sector */
3652:../Dave/Generated/src/FATFS002/Src/ff.c **** 		n_vol = LD_DWORD(tbl+12);	/* Volume size */
3653:../Dave/Generated/src/FATFS002/Src/ff.c **** 	} else {
3654:../Dave/Generated/src/FATFS002/Src/ff.c **** 		/* Create a partition in this function */
3655:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (disk_ioctl(pdrv, GET_SECTOR_COUNT, &n_vol) != RES_OK || n_vol < 128)
 8606              		.loc 1 3655 0 is_stmt 1
 8607 00ae 97F83720 		ldrb	r2, [r7, #55]	@ zero_extendqisi2
 8608 00b2 07F11403 		add	r3, r7, #20
 8609 00b6 1046     		mov	r0, r2
 8610 00b8 4FF00101 		mov	r1, #1
 8611 00bc 1A46     		mov	r2, r3
 8612 00be FFF7FEFF 		bl	disk_ioctl
 8613 00c2 0346     		mov	r3, r0
 8614 00c4 002B     		cmp	r3, #0
 8615 00c6 02D1     		bne	.L490
 8616              		.loc 1 3655 0 is_stmt 0 discriminator 1
 8617 00c8 7B69     		ldr	r3, [r7, #20]
 8618 00ca 7F2B     		cmp	r3, #127
 8619 00cc 03D8     		bhi	.L491
 8620              	.L490:
3656:../Dave/Generated/src/FATFS002/Src/ff.c **** 			return FR_DISK_ERR;
 8621              		.loc 1 3656 0 is_stmt 1
 8622 00ce 4FF00103 		mov	r3, #1
 8623 00d2 00F067BD 		b	.L547
 8624              	.L491:
3657:../Dave/Generated/src/FATFS002/Src/ff.c **** 		b_vol = (sfd) ? 0 : 63;		/* Volume start sector */
 8625              		.loc 1 3657 0
 8626 00d6 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 8627 00d8 002B     		cmp	r3, #0
 8628 00da 02D0     		beq	.L492
 8629              		.loc 1 3657 0 is_stmt 0 discriminator 1
 8630 00dc 4FF00003 		mov	r3, #0
 8631 00e0 01E0     		b	.L493
 8632              	.L492:
 8633              		.loc 1 3657 0 discriminator 2
 8634 00e2 4FF03F03 		mov	r3, #63
 8635              	.L493:
 8636              		.loc 1 3657 0 discriminator 3
 8637 00e6 3B63     		str	r3, [r7, #48]
3658:../Dave/Generated/src/FATFS002/Src/ff.c **** 		n_vol -= b_vol;				/* Volume size */
 8638              		.loc 1 3658 0 is_stmt 1 discriminator 3
 8639 00e8 7A69     		ldr	r2, [r7, #20]
 8640 00ea 3B6B     		ldr	r3, [r7, #48]
 8641 00ec D31A     		subs	r3, r2, r3
 8642 00ee 7B61     		str	r3, [r7, #20]
3659:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
3660:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3661:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (!au) {				/* AU auto selection */
 8643              		.loc 1 3661 0 discriminator 3
 8644 00f0 3B68     		ldr	r3, [r7, #0]
 8645 00f2 002B     		cmp	r3, #0
 8646 00f4 24D1     		bne	.L494
3662:../Dave/Generated/src/FATFS002/Src/ff.c **** 		vs = n_vol / (2000 / (SS(fs) / 512));
 8647              		.loc 1 3662 0
 8648 00f6 7A69     		ldr	r2, [r7, #20]
 8649 00f8 44F6D353 		movw	r3, #19923
 8650 00fc C1F26203 		movt	r3, 4194
 8651 0100 A3FB0213 		umull	r1, r3, r3, r2
 8652 0104 4FEAD313 		lsr	r3, r3, #7
 8653 0108 FB62     		str	r3, [r7, #44]
3663:../Dave/Generated/src/FATFS002/Src/ff.c **** 		for (i = 0; vs < vst[i]; i++) ;
 8654              		.loc 1 3663 0
 8655 010a 4FF00003 		mov	r3, #0
 8656 010e FB64     		str	r3, [r7, #76]
 8657 0110 03E0     		b	.L495
 8658              	.L496:
 8659              		.loc 1 3663 0 is_stmt 0 discriminator 2
 8660 0112 FB6C     		ldr	r3, [r7, #76]
 8661 0114 03F10103 		add	r3, r3, #1
 8662 0118 FB64     		str	r3, [r7, #76]
 8663              	.L495:
 8664              		.loc 1 3663 0 discriminator 1
 8665 011a 40F20003 		movw	r3, #:lower16:vst.4665
 8666 011e C0F20003 		movt	r3, #:upper16:vst.4665
 8667 0122 FA6C     		ldr	r2, [r7, #76]
 8668 0124 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 8669 0128 1A46     		mov	r2, r3
 8670 012a FB6A     		ldr	r3, [r7, #44]
 8671 012c 9A42     		cmp	r2, r3
 8672 012e F0D8     		bhi	.L496
3664:../Dave/Generated/src/FATFS002/Src/ff.c **** 		au = cst[i];
 8673              		.loc 1 3664 0 is_stmt 1
 8674 0130 40F20003 		movw	r3, #:lower16:cst.4666
 8675 0134 C0F20003 		movt	r3, #:upper16:cst.4666
 8676 0138 FA6C     		ldr	r2, [r7, #76]
 8677 013a 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 8678 013e 3B60     		str	r3, [r7, #0]
 8679              	.L494:
3665:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
3666:../Dave/Generated/src/FATFS002/Src/ff.c **** 	au /= SS(fs);		/* Number of sectors per cluster */
 8680              		.loc 1 3666 0
 8681 0140 3B68     		ldr	r3, [r7, #0]
 8682 0142 4FEA5323 		lsr	r3, r3, #9
 8683 0146 3B60     		str	r3, [r7, #0]
3667:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (au == 0) au = 1;
 8684              		.loc 1 3667 0
 8685 0148 3B68     		ldr	r3, [r7, #0]
 8686 014a 002B     		cmp	r3, #0
 8687 014c 02D1     		bne	.L497
 8688              		.loc 1 3667 0 is_stmt 0 discriminator 1
 8689 014e 4FF00103 		mov	r3, #1
 8690 0152 3B60     		str	r3, [r7, #0]
 8691              	.L497:
3668:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (au > 128) au = 128;
 8692              		.loc 1 3668 0 is_stmt 1
 8693 0154 3B68     		ldr	r3, [r7, #0]
 8694 0156 802B     		cmp	r3, #128
 8695 0158 02D9     		bls	.L498
 8696              		.loc 1 3668 0 is_stmt 0 discriminator 1
 8697 015a 4FF08003 		mov	r3, #128
 8698 015e 3B60     		str	r3, [r7, #0]
 8699              	.L498:
3669:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3670:../Dave/Generated/src/FATFS002/Src/ff.c **** 	/* Pre-compute number of clusters and FAT syb-type */
3671:../Dave/Generated/src/FATFS002/Src/ff.c **** 	n_clst = n_vol / au;
 8700              		.loc 1 3671 0 is_stmt 1
 8701 0160 7A69     		ldr	r2, [r7, #20]
 8702 0162 3B68     		ldr	r3, [r7, #0]
 8703 0164 B2FBF3F3 		udiv	r3, r2, r3
 8704 0168 BB62     		str	r3, [r7, #40]
3672:../Dave/Generated/src/FATFS002/Src/ff.c **** 	fmt = FS_FAT12;
 8705              		.loc 1 3672 0
 8706 016a 4FF00103 		mov	r3, #1
 8707 016e 87F85730 		strb	r3, [r7, #87]
3673:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (n_clst >= MIN_FAT16) fmt = FS_FAT16;
 8708              		.loc 1 3673 0
 8709 0172 BA6A     		ldr	r2, [r7, #40]
 8710 0174 40F6F573 		movw	r3, #4085
 8711 0178 9A42     		cmp	r2, r3
 8712 017a 03D9     		bls	.L499
 8713              		.loc 1 3673 0 is_stmt 0 discriminator 1
 8714 017c 4FF00203 		mov	r3, #2
 8715 0180 87F85730 		strb	r3, [r7, #87]
 8716              	.L499:
3674:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (n_clst >= MIN_FAT32) fmt = FS_FAT32;
 8717              		.loc 1 3674 0 is_stmt 1
 8718 0184 BA6A     		ldr	r2, [r7, #40]
 8719 0186 4FF6F573 		movw	r3, #65525
 8720 018a 9A42     		cmp	r2, r3
 8721 018c 03D9     		bls	.L500
 8722              		.loc 1 3674 0 is_stmt 0 discriminator 1
 8723 018e 4FF00303 		mov	r3, #3
 8724 0192 87F85730 		strb	r3, [r7, #87]
 8725              	.L500:
3675:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3676:../Dave/Generated/src/FATFS002/Src/ff.c **** 	/* Determine offset and size of FAT structure */
3677:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (fmt == FS_FAT32) {
 8726              		.loc 1 3677 0 is_stmt 1
 8727 0196 97F85730 		ldrb	r3, [r7, #87]	@ zero_extendqisi2
 8728 019a 032B     		cmp	r3, #3
 8729 019c 10D1     		bne	.L501
3678:../Dave/Generated/src/FATFS002/Src/ff.c **** 		n_fat = ((n_clst * 4) + 8 + SS(fs) - 1) / SS(fs);
 8730              		.loc 1 3678 0
 8731 019e BB6A     		ldr	r3, [r7, #40]
 8732 01a0 03F18203 		add	r3, r3, #130
 8733 01a4 4FEA8303 		lsl	r3, r3, #2
 8734 01a8 03F1FF33 		add	r3, r3, #-1
 8735 01ac 4FEA5323 		lsr	r3, r3, #9
 8736 01b0 3B64     		str	r3, [r7, #64]
3679:../Dave/Generated/src/FATFS002/Src/ff.c **** 		n_rsv = 32;
 8737              		.loc 1 3679 0
 8738 01b2 4FF02003 		mov	r3, #32
 8739 01b6 7B64     		str	r3, [r7, #68]
3680:../Dave/Generated/src/FATFS002/Src/ff.c **** 		n_dir = 0;
 8740              		.loc 1 3680 0
 8741 01b8 4FF00003 		mov	r3, #0
 8742 01bc FB63     		str	r3, [r7, #60]
 8743 01be 21E0     		b	.L502
 8744              	.L501:
3681:../Dave/Generated/src/FATFS002/Src/ff.c **** 	} else {
3682:../Dave/Generated/src/FATFS002/Src/ff.c **** 		n_fat = (fmt == FS_FAT12) ? (n_clst * 3 + 1) / 2 + 3 : (n_clst * 2) + 4;
 8745              		.loc 1 3682 0
 8746 01c0 97F85730 		ldrb	r3, [r7, #87]	@ zero_extendqisi2
 8747 01c4 012B     		cmp	r3, #1
 8748 01c6 0BD1     		bne	.L503
 8749              		.loc 1 3682 0 is_stmt 0 discriminator 1
 8750 01c8 BA6A     		ldr	r2, [r7, #40]
 8751 01ca 1346     		mov	r3, r2
 8752 01cc 4FEA4303 		lsl	r3, r3, #1
 8753 01d0 9B18     		adds	r3, r3, r2
 8754 01d2 03F10103 		add	r3, r3, #1
 8755 01d6 4FEA5303 		lsr	r3, r3, #1
 8756 01da 03F10303 		add	r3, r3, #3
 8757 01de 04E0     		b	.L504
 8758              	.L503:
 8759              		.loc 1 3682 0 discriminator 2
 8760 01e0 BB6A     		ldr	r3, [r7, #40]
 8761 01e2 03F10203 		add	r3, r3, #2
 8762 01e6 4FEA4303 		lsl	r3, r3, #1
 8763              	.L504:
 8764              		.loc 1 3682 0 discriminator 3
 8765 01ea 3B64     		str	r3, [r7, #64]
3683:../Dave/Generated/src/FATFS002/Src/ff.c **** 		n_fat = (n_fat + SS(fs) - 1) / SS(fs);
 8766              		.loc 1 3683 0 is_stmt 1 discriminator 3
 8767 01ec 3B6C     		ldr	r3, [r7, #64]
 8768 01ee 03F2FF13 		addw	r3, r3, #511
 8769 01f2 4FEA5323 		lsr	r3, r3, #9
 8770 01f6 3B64     		str	r3, [r7, #64]
3684:../Dave/Generated/src/FATFS002/Src/ff.c **** 		n_rsv = 1;
 8771              		.loc 1 3684 0 discriminator 3
 8772 01f8 4FF00103 		mov	r3, #1
 8773 01fc 7B64     		str	r3, [r7, #68]
3685:../Dave/Generated/src/FATFS002/Src/ff.c **** 		n_dir = (DWORD)N_ROOTDIR * SZ_DIR / SS(fs);
 8774              		.loc 1 3685 0 discriminator 3
 8775 01fe 4FF02003 		mov	r3, #32
 8776 0202 FB63     		str	r3, [r7, #60]
 8777              	.L502:
3686:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
3687:../Dave/Generated/src/FATFS002/Src/ff.c **** 	b_fat = b_vol + n_rsv;				/* FAT area start sector */
 8778              		.loc 1 3687 0
 8779 0204 3A6B     		ldr	r2, [r7, #48]
 8780 0206 7B6C     		ldr	r3, [r7, #68]
 8781 0208 D318     		adds	r3, r2, r3
 8782 020a BB64     		str	r3, [r7, #72]
3688:../Dave/Generated/src/FATFS002/Src/ff.c **** 	b_dir = b_fat + n_fat * N_FATS;		/* Directory area start sector */
 8783              		.loc 1 3688 0
 8784 020c BA6C     		ldr	r2, [r7, #72]
 8785 020e 3B6C     		ldr	r3, [r7, #64]
 8786 0210 D318     		adds	r3, r2, r3
 8787 0212 7B62     		str	r3, [r7, #36]
3689:../Dave/Generated/src/FATFS002/Src/ff.c **** 	b_data = b_dir + n_dir;				/* Data area start sector */
 8788              		.loc 1 3689 0
 8789 0214 7A6A     		ldr	r2, [r7, #36]
 8790 0216 FB6B     		ldr	r3, [r7, #60]
 8791 0218 D318     		adds	r3, r2, r3
 8792 021a 3B62     		str	r3, [r7, #32]
3690:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (n_vol < b_data + au - b_vol) return FR_MKFS_ABORTED;	/* Too small volume */
 8793              		.loc 1 3690 0
 8794 021c 3A6A     		ldr	r2, [r7, #32]
 8795 021e 3B68     		ldr	r3, [r7, #0]
 8796 0220 D218     		adds	r2, r2, r3
 8797 0222 3B6B     		ldr	r3, [r7, #48]
 8798 0224 D21A     		subs	r2, r2, r3
 8799 0226 7B69     		ldr	r3, [r7, #20]
 8800 0228 9A42     		cmp	r2, r3
 8801 022a 03D9     		bls	.L505
 8802              		.loc 1 3690 0 is_stmt 0 discriminator 1
 8803 022c 4FF00E03 		mov	r3, #14
 8804 0230 00F0B8BC 		b	.L547
 8805              	.L505:
3691:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3692:../Dave/Generated/src/FATFS002/Src/ff.c **** 	/* Align data start sector to erase block boundary (for flash memory media) */
3693:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (disk_ioctl(pdrv, GET_BLOCK_SIZE, &n) != RES_OK || !n || n > 32768) n = 1;
 8806              		.loc 1 3693 0 is_stmt 1
 8807 0234 97F83720 		ldrb	r2, [r7, #55]	@ zero_extendqisi2
 8808 0238 07F11803 		add	r3, r7, #24
 8809 023c 1046     		mov	r0, r2
 8810 023e 4FF00301 		mov	r1, #3
 8811 0242 1A46     		mov	r2, r3
 8812 0244 FFF7FEFF 		bl	disk_ioctl
 8813 0248 0346     		mov	r3, r0
 8814 024a 002B     		cmp	r3, #0
 8815 024c 06D1     		bne	.L506
 8816              		.loc 1 3693 0 is_stmt 0 discriminator 2
 8817 024e BB69     		ldr	r3, [r7, #24]
 8818 0250 002B     		cmp	r3, #0
 8819 0252 03D0     		beq	.L506
 8820              		.loc 1 3693 0 discriminator 1
 8821 0254 BB69     		ldr	r3, [r7, #24]
 8822 0256 B3F5004F 		cmp	r3, #32768
 8823 025a 02D9     		bls	.L507
 8824              	.L506:
 8825 025c 4FF00103 		mov	r3, #1
 8826 0260 BB61     		str	r3, [r7, #24]
 8827              	.L507:
3694:../Dave/Generated/src/FATFS002/Src/ff.c **** 	n = (b_data + n - 1) & ~(n - 1);	/* Next nearest erase block from current data start */
 8828              		.loc 1 3694 0 is_stmt 1
 8829 0262 BA69     		ldr	r2, [r7, #24]
 8830 0264 3B6A     		ldr	r3, [r7, #32]
 8831 0266 D318     		adds	r3, r2, r3
 8832 0268 03F1FF32 		add	r2, r3, #-1
 8833 026c BB69     		ldr	r3, [r7, #24]
 8834 026e C3F10003 		rsb	r3, r3, #0
 8835 0272 1340     		ands	r3, r3, r2
 8836 0274 BB61     		str	r3, [r7, #24]
3695:../Dave/Generated/src/FATFS002/Src/ff.c **** 	n = (n - b_data) / N_FATS;
 8837              		.loc 1 3695 0
 8838 0276 BA69     		ldr	r2, [r7, #24]
 8839 0278 3B6A     		ldr	r3, [r7, #32]
 8840 027a D31A     		subs	r3, r2, r3
 8841 027c BB61     		str	r3, [r7, #24]
3696:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (fmt == FS_FAT32) {		/* FAT32: Move FAT offset */
 8842              		.loc 1 3696 0
 8843 027e 97F85730 		ldrb	r3, [r7, #87]	@ zero_extendqisi2
 8844 0282 032B     		cmp	r3, #3
 8845 0284 08D1     		bne	.L508
3697:../Dave/Generated/src/FATFS002/Src/ff.c **** 		n_rsv += n;
 8846              		.loc 1 3697 0
 8847 0286 BB69     		ldr	r3, [r7, #24]
 8848 0288 7A6C     		ldr	r2, [r7, #68]
 8849 028a D318     		adds	r3, r2, r3
 8850 028c 7B64     		str	r3, [r7, #68]
3698:../Dave/Generated/src/FATFS002/Src/ff.c **** 		b_fat += n;
 8851              		.loc 1 3698 0
 8852 028e BB69     		ldr	r3, [r7, #24]
 8853 0290 BA6C     		ldr	r2, [r7, #72]
 8854 0292 D318     		adds	r3, r2, r3
 8855 0294 BB64     		str	r3, [r7, #72]
 8856 0296 03E0     		b	.L509
 8857              	.L508:
3699:../Dave/Generated/src/FATFS002/Src/ff.c **** 	} else {					/* FAT12/16: Expand FAT size */
3700:../Dave/Generated/src/FATFS002/Src/ff.c **** 		n_fat += n;
 8858              		.loc 1 3700 0
 8859 0298 BB69     		ldr	r3, [r7, #24]
 8860 029a 3A6C     		ldr	r2, [r7, #64]
 8861 029c D318     		adds	r3, r2, r3
 8862 029e 3B64     		str	r3, [r7, #64]
 8863              	.L509:
3701:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
3702:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3703:../Dave/Generated/src/FATFS002/Src/ff.c **** 	/* Determine number of clusters and final check of validity of the FAT sub-type */
3704:../Dave/Generated/src/FATFS002/Src/ff.c **** 	n_clst = (n_vol - n_rsv - n_fat * N_FATS - n_dir) / au;
 8864              		.loc 1 3704 0
 8865 02a0 7A69     		ldr	r2, [r7, #20]
 8866 02a2 7B6C     		ldr	r3, [r7, #68]
 8867 02a4 D21A     		subs	r2, r2, r3
 8868 02a6 3B6C     		ldr	r3, [r7, #64]
 8869 02a8 D21A     		subs	r2, r2, r3
 8870 02aa FB6B     		ldr	r3, [r7, #60]
 8871 02ac D21A     		subs	r2, r2, r3
 8872 02ae 3B68     		ldr	r3, [r7, #0]
 8873 02b0 B2FBF3F3 		udiv	r3, r2, r3
 8874 02b4 BB62     		str	r3, [r7, #40]
3705:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (   (fmt == FS_FAT16 && n_clst < MIN_FAT16)
 8875              		.loc 1 3705 0
 8876 02b6 97F85730 		ldrb	r3, [r7, #87]	@ zero_extendqisi2
 8877 02ba 022B     		cmp	r3, #2
 8878 02bc 04D1     		bne	.L510
 8879              		.loc 1 3705 0 is_stmt 0 discriminator 1
 8880 02be BA6A     		ldr	r2, [r7, #40]
 8881 02c0 40F6F573 		movw	r3, #4085
 8882 02c4 9A42     		cmp	r2, r3
 8883 02c6 08D9     		bls	.L511
 8884              	.L510:
3706:../Dave/Generated/src/FATFS002/Src/ff.c **** 		|| (fmt == FS_FAT32 && n_clst < MIN_FAT32))
 8885              		.loc 1 3706 0 is_stmt 1
 8886 02c8 97F85730 		ldrb	r3, [r7, #87]	@ zero_extendqisi2
 8887 02cc 032B     		cmp	r3, #3
 8888 02ce 08D1     		bne	.L512
 8889              		.loc 1 3706 0 is_stmt 0 discriminator 1
 8890 02d0 BA6A     		ldr	r2, [r7, #40]
 8891 02d2 4FF6F573 		movw	r3, #65525
 8892 02d6 9A42     		cmp	r2, r3
 8893 02d8 03D8     		bhi	.L512
 8894              	.L511:
3707:../Dave/Generated/src/FATFS002/Src/ff.c **** 		return FR_MKFS_ABORTED;
 8895              		.loc 1 3707 0 is_stmt 1
 8896 02da 4FF00E03 		mov	r3, #14
 8897 02de 00F061BC 		b	.L547
 8898              	.L512:
3708:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3709:../Dave/Generated/src/FATFS002/Src/ff.c **** 	switch (fmt) {	/* Determine system ID for partition table */
 8899              		.loc 1 3709 0
 8900 02e2 97F85730 		ldrb	r3, [r7, #87]	@ zero_extendqisi2
 8901 02e6 012B     		cmp	r3, #1
 8902 02e8 02D0     		beq	.L514
 8903 02ea 022B     		cmp	r3, #2
 8904 02ec 05D0     		beq	.L515
 8905 02ee 11E0     		b	.L548
 8906              	.L514:
3710:../Dave/Generated/src/FATFS002/Src/ff.c **** 	case FS_FAT12:	sys = 0x01; break;
 8907              		.loc 1 3710 0
 8908 02f0 4FF00103 		mov	r3, #1
 8909 02f4 87F85530 		strb	r3, [r7, #85]
 8910 02f8 10E0     		b	.L516
 8911              	.L515:
3711:../Dave/Generated/src/FATFS002/Src/ff.c **** 	case FS_FAT16:	sys = (n_vol < 0x10000) ? 0x04 : 0x06; break;
 8912              		.loc 1 3711 0
 8913 02fa 7A69     		ldr	r2, [r7, #20]
 8914 02fc 4FF6FF73 		movw	r3, #65535
 8915 0300 9A42     		cmp	r2, r3
 8916 0302 02D8     		bhi	.L517
 8917              		.loc 1 3711 0 is_stmt 0 discriminator 1
 8918 0304 4FF00403 		mov	r3, #4
 8919 0308 01E0     		b	.L518
 8920              	.L517:
 8921              		.loc 1 3711 0 discriminator 2
 8922 030a 4FF00603 		mov	r3, #6
 8923              	.L518:
 8924              		.loc 1 3711 0 discriminator 3
 8925 030e 87F85530 		strb	r3, [r7, #85]
 8926 0312 03E0     		b	.L516
 8927              	.L548:
3712:../Dave/Generated/src/FATFS002/Src/ff.c **** 	default: 		sys = 0x0C;
 8928              		.loc 1 3712 0 is_stmt 1
 8929 0314 4FF00C03 		mov	r3, #12
 8930 0318 87F85530 		strb	r3, [r7, #85]
 8931              	.L516:
3713:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
3714:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3715:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (_MULTI_PARTITION && part) {
3716:../Dave/Generated/src/FATFS002/Src/ff.c **** 		/* Update system ID in the partition table */
3717:../Dave/Generated/src/FATFS002/Src/ff.c **** 		tbl = &fs->win[MBR_Table + (part - 1) * SZ_PTE];
3718:../Dave/Generated/src/FATFS002/Src/ff.c **** 		tbl[4] = sys;
3719:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (disk_write(pdrv, fs->win, 0, 1) != RES_OK) return FR_DISK_ERR;
3720:../Dave/Generated/src/FATFS002/Src/ff.c **** 		md = 0xF8;
3721:../Dave/Generated/src/FATFS002/Src/ff.c **** 	} else {
3722:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (sfd) {	/* No patition table (SFD) */
 8932              		.loc 1 3722 0
 8933 031c BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 8934 031e 002B     		cmp	r3, #0
 8935 0320 04D0     		beq	.L519
3723:../Dave/Generated/src/FATFS002/Src/ff.c **** 			md = 0xF0;
 8936              		.loc 1 3723 0
 8937 0322 4FF0F003 		mov	r3, #240
 8938 0326 87F85630 		strb	r3, [r7, #86]
 8939 032a A5E0     		b	.L520
 8940              	.L519:
3724:../Dave/Generated/src/FATFS002/Src/ff.c **** 		} else {	/* Create partition table (FDISK) */
3725:../Dave/Generated/src/FATFS002/Src/ff.c **** 			mem_set(fs->win, 0, SS(fs));
 8941              		.loc 1 3725 0
 8942 032c BB6B     		ldr	r3, [r7, #56]
 8943 032e 03F13403 		add	r3, r3, #52
 8944 0332 1846     		mov	r0, r3
 8945 0334 4FF00001 		mov	r1, #0
 8946 0338 4FF40072 		mov	r2, #512
 8947 033c FFF7FEFF 		bl	mem_set
3726:../Dave/Generated/src/FATFS002/Src/ff.c **** 			tbl = fs->win+MBR_Table;	/* Create partiton table for single partition in the drive */
 8948              		.loc 1 3726 0
 8949 0340 BB6B     		ldr	r3, [r7, #56]
 8950 0342 03F5F973 		add	r3, r3, #498
 8951 0346 FB61     		str	r3, [r7, #28]
3727:../Dave/Generated/src/FATFS002/Src/ff.c **** 			tbl[1] = 1;						/* Partition start head */
 8952              		.loc 1 3727 0
 8953 0348 FB69     		ldr	r3, [r7, #28]
 8954 034a 03F10103 		add	r3, r3, #1
 8955 034e 4FF00102 		mov	r2, #1
 8956 0352 1A70     		strb	r2, [r3, #0]
3728:../Dave/Generated/src/FATFS002/Src/ff.c **** 			tbl[2] = 1;						/* Partition start sector */
 8957              		.loc 1 3728 0
 8958 0354 FB69     		ldr	r3, [r7, #28]
 8959 0356 03F10203 		add	r3, r3, #2
 8960 035a 4FF00102 		mov	r2, #1
 8961 035e 1A70     		strb	r2, [r3, #0]
3729:../Dave/Generated/src/FATFS002/Src/ff.c **** 			tbl[3] = 0;						/* Partition start cylinder */
 8962              		.loc 1 3729 0
 8963 0360 FB69     		ldr	r3, [r7, #28]
 8964 0362 03F10303 		add	r3, r3, #3
 8965 0366 4FF00002 		mov	r2, #0
 8966 036a 1A70     		strb	r2, [r3, #0]
3730:../Dave/Generated/src/FATFS002/Src/ff.c **** 			tbl[4] = sys;					/* System type */
 8967              		.loc 1 3730 0
 8968 036c FB69     		ldr	r3, [r7, #28]
 8969 036e 03F10403 		add	r3, r3, #4
 8970 0372 97F85520 		ldrb	r2, [r7, #85]
 8971 0376 1A70     		strb	r2, [r3, #0]
3731:../Dave/Generated/src/FATFS002/Src/ff.c **** 			tbl[5] = 254;					/* Partition end head */
 8972              		.loc 1 3731 0
 8973 0378 FB69     		ldr	r3, [r7, #28]
 8974 037a 03F10503 		add	r3, r3, #5
 8975 037e 4FF0FE02 		mov	r2, #254
 8976 0382 1A70     		strb	r2, [r3, #0]
3732:../Dave/Generated/src/FATFS002/Src/ff.c **** 			n = (b_vol + n_vol) / 63 / 255;
 8977              		.loc 1 3732 0
 8978 0384 7A69     		ldr	r2, [r7, #20]
 8979 0386 3B6B     		ldr	r3, [r7, #48]
 8980 0388 D218     		adds	r2, r2, r3
 8981 038a 45F25B63 		movw	r3, #22107
 8982 038e C0F21553 		movt	r3, 1301
 8983 0392 A3FB0213 		umull	r1, r3, r3, r2
 8984 0396 D21A     		subs	r2, r2, r3
 8985 0398 4FEA5202 		lsr	r2, r2, #1
 8986 039c 9B18     		adds	r3, r3, r2
 8987 039e 4FEA5333 		lsr	r3, r3, #13
 8988 03a2 BB61     		str	r3, [r7, #24]
3733:../Dave/Generated/src/FATFS002/Src/ff.c **** 			tbl[6] = (BYTE)((n >> 2) | 63);	/* Partiiton end sector */
 8989              		.loc 1 3733 0
 8990 03a4 FB69     		ldr	r3, [r7, #28]
 8991 03a6 03F10603 		add	r3, r3, #6
 8992 03aa BA69     		ldr	r2, [r7, #24]
 8993 03ac 4FEA9202 		lsr	r2, r2, #2
 8994 03b0 D2B2     		uxtb	r2, r2
 8995 03b2 42F03F02 		orr	r2, r2, #63
 8996 03b6 D2B2     		uxtb	r2, r2
 8997 03b8 1A70     		strb	r2, [r3, #0]
3734:../Dave/Generated/src/FATFS002/Src/ff.c **** 			tbl[7] = (BYTE)n;				/* End cylinder */
 8998              		.loc 1 3734 0
 8999 03ba FB69     		ldr	r3, [r7, #28]
 9000 03bc 03F10703 		add	r3, r3, #7
 9001 03c0 BA69     		ldr	r2, [r7, #24]
 9002 03c2 D2B2     		uxtb	r2, r2
 9003 03c4 1A70     		strb	r2, [r3, #0]
3735:../Dave/Generated/src/FATFS002/Src/ff.c **** 			ST_DWORD(tbl+8, 63);			/* Partition start in LBA */
 9004              		.loc 1 3735 0
 9005 03c6 FB69     		ldr	r3, [r7, #28]
 9006 03c8 03F10803 		add	r3, r3, #8
 9007 03cc 4FF03F02 		mov	r2, #63
 9008 03d0 1A70     		strb	r2, [r3, #0]
 9009 03d2 FB69     		ldr	r3, [r7, #28]
 9010 03d4 03F10903 		add	r3, r3, #9
 9011 03d8 4FF00002 		mov	r2, #0
 9012 03dc 1A70     		strb	r2, [r3, #0]
 9013 03de FB69     		ldr	r3, [r7, #28]
 9014 03e0 03F10A03 		add	r3, r3, #10
 9015 03e4 4FF00002 		mov	r2, #0
 9016 03e8 1A70     		strb	r2, [r3, #0]
 9017 03ea FB69     		ldr	r3, [r7, #28]
 9018 03ec 03F10B03 		add	r3, r3, #11
 9019 03f0 4FF00002 		mov	r2, #0
 9020 03f4 1A70     		strb	r2, [r3, #0]
3736:../Dave/Generated/src/FATFS002/Src/ff.c **** 			ST_DWORD(tbl+12, n_vol);		/* Partition size in LBA */
 9021              		.loc 1 3736 0
 9022 03f6 FB69     		ldr	r3, [r7, #28]
 9023 03f8 03F10C03 		add	r3, r3, #12
 9024 03fc 7A69     		ldr	r2, [r7, #20]
 9025 03fe D2B2     		uxtb	r2, r2
 9026 0400 1A70     		strb	r2, [r3, #0]
 9027 0402 FB69     		ldr	r3, [r7, #28]
 9028 0404 03F10D03 		add	r3, r3, #13
 9029 0408 7A69     		ldr	r2, [r7, #20]
 9030 040a 92B2     		uxth	r2, r2
 9031 040c 4FEA1222 		lsr	r2, r2, #8
 9032 0410 92B2     		uxth	r2, r2
 9033 0412 D2B2     		uxtb	r2, r2
 9034 0414 1A70     		strb	r2, [r3, #0]
 9035 0416 FB69     		ldr	r3, [r7, #28]
 9036 0418 03F10E03 		add	r3, r3, #14
 9037 041c 7A69     		ldr	r2, [r7, #20]
 9038 041e 4FEA1242 		lsr	r2, r2, #16
 9039 0422 D2B2     		uxtb	r2, r2
 9040 0424 1A70     		strb	r2, [r3, #0]
 9041 0426 FB69     		ldr	r3, [r7, #28]
 9042 0428 03F10F03 		add	r3, r3, #15
 9043 042c 7A69     		ldr	r2, [r7, #20]
 9044 042e 4FEA1262 		lsr	r2, r2, #24
 9045 0432 D2B2     		uxtb	r2, r2
 9046 0434 1A70     		strb	r2, [r3, #0]
3737:../Dave/Generated/src/FATFS002/Src/ff.c **** 			ST_WORD(fs->win+BS_55AA, 0xAA55);	/* MBR signature */
 9047              		.loc 1 3737 0
 9048 0436 BB6B     		ldr	r3, [r7, #56]
 9049 0438 4FF05502 		mov	r2, #85
 9050 043c 83F83222 		strb	r2, [r3, #562]
 9051 0440 BB6B     		ldr	r3, [r7, #56]
 9052 0442 4FF0AA02 		mov	r2, #170
 9053 0446 83F83322 		strb	r2, [r3, #563]
3738:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (disk_write(pdrv, fs->win, 0, 1) != RES_OK)	/* Write it to the MBR sector */
 9054              		.loc 1 3738 0
 9055 044a BB6B     		ldr	r3, [r7, #56]
 9056 044c 03F13403 		add	r3, r3, #52
 9057 0450 97F83720 		ldrb	r2, [r7, #55]	@ zero_extendqisi2
 9058 0454 1046     		mov	r0, r2
 9059 0456 1946     		mov	r1, r3
 9060 0458 4FF00002 		mov	r2, #0
 9061 045c 4FF00103 		mov	r3, #1
 9062 0460 FFF7FEFF 		bl	disk_write
 9063 0464 0346     		mov	r3, r0
 9064 0466 002B     		cmp	r3, #0
 9065 0468 02D0     		beq	.L521
3739:../Dave/Generated/src/FATFS002/Src/ff.c **** 				return FR_DISK_ERR;
 9066              		.loc 1 3739 0
 9067 046a 4FF00103 		mov	r3, #1
 9068 046e 99E3     		b	.L547
 9069              	.L521:
3740:../Dave/Generated/src/FATFS002/Src/ff.c **** 			md = 0xF8;
 9070              		.loc 1 3740 0
 9071 0470 4FF0F803 		mov	r3, #248
 9072 0474 87F85630 		strb	r3, [r7, #86]
 9073              	.L520:
3741:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
3742:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
3743:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3744:../Dave/Generated/src/FATFS002/Src/ff.c **** 	/* Create BPB in the VBR */
3745:../Dave/Generated/src/FATFS002/Src/ff.c **** 	tbl = fs->win;							/* Clear sector */
 9074              		.loc 1 3745 0
 9075 0478 BB6B     		ldr	r3, [r7, #56]
 9076 047a 03F13403 		add	r3, r3, #52
 9077 047e FB61     		str	r3, [r7, #28]
3746:../Dave/Generated/src/FATFS002/Src/ff.c **** 	mem_set(tbl, 0, SS(fs));
 9078              		.loc 1 3746 0
 9079 0480 F869     		ldr	r0, [r7, #28]
 9080 0482 4FF00001 		mov	r1, #0
 9081 0486 4FF40072 		mov	r2, #512
 9082 048a FFF7FEFF 		bl	mem_set
3747:../Dave/Generated/src/FATFS002/Src/ff.c **** 	mem_cpy(tbl, "\xEB\xFE\x90" "MSDOS5.0", 11);/* Boot jump code, OEM name */
 9083              		.loc 1 3747 0
 9084 048e F869     		ldr	r0, [r7, #28]
 9085 0490 40F20001 		movw	r1, #:lower16:.LC1
 9086 0494 C0F20001 		movt	r1, #:upper16:.LC1
 9087 0498 4FF00B02 		mov	r2, #11
 9088 049c FFF7FEFF 		bl	mem_cpy
3748:../Dave/Generated/src/FATFS002/Src/ff.c **** 	i = SS(fs);								/* Sector size */
 9089              		.loc 1 3748 0
 9090 04a0 4FF40073 		mov	r3, #512
 9091 04a4 FB64     		str	r3, [r7, #76]
3749:../Dave/Generated/src/FATFS002/Src/ff.c **** 	ST_WORD(tbl+BPB_BytsPerSec, i);
 9092              		.loc 1 3749 0
 9093 04a6 FB69     		ldr	r3, [r7, #28]
 9094 04a8 03F10B03 		add	r3, r3, #11
 9095 04ac FA6C     		ldr	r2, [r7, #76]
 9096 04ae D2B2     		uxtb	r2, r2
 9097 04b0 1A70     		strb	r2, [r3, #0]
 9098 04b2 FB69     		ldr	r3, [r7, #28]
 9099 04b4 03F10C03 		add	r3, r3, #12
 9100 04b8 FA6C     		ldr	r2, [r7, #76]
 9101 04ba 92B2     		uxth	r2, r2
 9102 04bc 4FEA1222 		lsr	r2, r2, #8
 9103 04c0 92B2     		uxth	r2, r2
 9104 04c2 D2B2     		uxtb	r2, r2
 9105 04c4 1A70     		strb	r2, [r3, #0]
3750:../Dave/Generated/src/FATFS002/Src/ff.c **** 	tbl[BPB_SecPerClus] = (BYTE)au;			/* Sectors per cluster */
 9106              		.loc 1 3750 0
 9107 04c6 FB69     		ldr	r3, [r7, #28]
 9108 04c8 03F10D03 		add	r3, r3, #13
 9109 04cc 3A68     		ldr	r2, [r7, #0]
 9110 04ce D2B2     		uxtb	r2, r2
 9111 04d0 1A70     		strb	r2, [r3, #0]
3751:../Dave/Generated/src/FATFS002/Src/ff.c **** 	ST_WORD(tbl+BPB_RsvdSecCnt, n_rsv);		/* Reserved sectors */
 9112              		.loc 1 3751 0
 9113 04d2 FB69     		ldr	r3, [r7, #28]
 9114 04d4 03F10E03 		add	r3, r3, #14
 9115 04d8 7A6C     		ldr	r2, [r7, #68]
 9116 04da D2B2     		uxtb	r2, r2
 9117 04dc 1A70     		strb	r2, [r3, #0]
 9118 04de FB69     		ldr	r3, [r7, #28]
 9119 04e0 03F10F03 		add	r3, r3, #15
 9120 04e4 7A6C     		ldr	r2, [r7, #68]
 9121 04e6 92B2     		uxth	r2, r2
 9122 04e8 4FEA1222 		lsr	r2, r2, #8
 9123 04ec 92B2     		uxth	r2, r2
 9124 04ee D2B2     		uxtb	r2, r2
 9125 04f0 1A70     		strb	r2, [r3, #0]
3752:../Dave/Generated/src/FATFS002/Src/ff.c **** 	tbl[BPB_NumFATs] = N_FATS;				/* Number of FATs */
 9126              		.loc 1 3752 0
 9127 04f2 FB69     		ldr	r3, [r7, #28]
 9128 04f4 03F11003 		add	r3, r3, #16
 9129 04f8 4FF00102 		mov	r2, #1
 9130 04fc 1A70     		strb	r2, [r3, #0]
3753:../Dave/Generated/src/FATFS002/Src/ff.c **** 	i = (fmt == FS_FAT32) ? 0 : N_ROOTDIR;	/* Number of rootdir entries */
 9131              		.loc 1 3753 0
 9132 04fe 97F85730 		ldrb	r3, [r7, #87]	@ zero_extendqisi2
 9133 0502 032B     		cmp	r3, #3
 9134 0504 02D1     		bne	.L522
 9135              		.loc 1 3753 0 is_stmt 0 discriminator 1
 9136 0506 4FF00003 		mov	r3, #0
 9137 050a 01E0     		b	.L523
 9138              	.L522:
 9139              		.loc 1 3753 0 discriminator 2
 9140 050c 4FF40073 		mov	r3, #512
 9141              	.L523:
 9142              		.loc 1 3753 0 discriminator 3
 9143 0510 FB64     		str	r3, [r7, #76]
3754:../Dave/Generated/src/FATFS002/Src/ff.c **** 	ST_WORD(tbl+BPB_RootEntCnt, i);
 9144              		.loc 1 3754 0 is_stmt 1 discriminator 3
 9145 0512 FB69     		ldr	r3, [r7, #28]
 9146 0514 03F11103 		add	r3, r3, #17
 9147 0518 FA6C     		ldr	r2, [r7, #76]
 9148 051a D2B2     		uxtb	r2, r2
 9149 051c 1A70     		strb	r2, [r3, #0]
 9150 051e FB69     		ldr	r3, [r7, #28]
 9151 0520 03F11203 		add	r3, r3, #18
 9152 0524 FA6C     		ldr	r2, [r7, #76]
 9153 0526 92B2     		uxth	r2, r2
 9154 0528 4FEA1222 		lsr	r2, r2, #8
 9155 052c 92B2     		uxth	r2, r2
 9156 052e D2B2     		uxtb	r2, r2
 9157 0530 1A70     		strb	r2, [r3, #0]
3755:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (n_vol < 0x10000) {					/* Number of total sectors */
 9158              		.loc 1 3755 0 discriminator 3
 9159 0532 7A69     		ldr	r2, [r7, #20]
 9160 0534 4FF6FF73 		movw	r3, #65535
 9161 0538 9A42     		cmp	r2, r3
 9162 053a 10D8     		bhi	.L524
3756:../Dave/Generated/src/FATFS002/Src/ff.c **** 		ST_WORD(tbl+BPB_TotSec16, n_vol);
 9163              		.loc 1 3756 0
 9164 053c FB69     		ldr	r3, [r7, #28]
 9165 053e 03F11303 		add	r3, r3, #19
 9166 0542 7A69     		ldr	r2, [r7, #20]
 9167 0544 D2B2     		uxtb	r2, r2
 9168 0546 1A70     		strb	r2, [r3, #0]
 9169 0548 FB69     		ldr	r3, [r7, #28]
 9170 054a 03F11403 		add	r3, r3, #20
 9171 054e 7A69     		ldr	r2, [r7, #20]
 9172 0550 92B2     		uxth	r2, r2
 9173 0552 4FEA1222 		lsr	r2, r2, #8
 9174 0556 92B2     		uxth	r2, r2
 9175 0558 D2B2     		uxtb	r2, r2
 9176 055a 1A70     		strb	r2, [r3, #0]
 9177 055c 1FE0     		b	.L525
 9178              	.L524:
3757:../Dave/Generated/src/FATFS002/Src/ff.c **** 	} else {
3758:../Dave/Generated/src/FATFS002/Src/ff.c **** 		ST_DWORD(tbl+BPB_TotSec32, n_vol);
 9179              		.loc 1 3758 0
 9180 055e FB69     		ldr	r3, [r7, #28]
 9181 0560 03F12003 		add	r3, r3, #32
 9182 0564 7A69     		ldr	r2, [r7, #20]
 9183 0566 D2B2     		uxtb	r2, r2
 9184 0568 1A70     		strb	r2, [r3, #0]
 9185 056a FB69     		ldr	r3, [r7, #28]
 9186 056c 03F12103 		add	r3, r3, #33
 9187 0570 7A69     		ldr	r2, [r7, #20]
 9188 0572 92B2     		uxth	r2, r2
 9189 0574 4FEA1222 		lsr	r2, r2, #8
 9190 0578 92B2     		uxth	r2, r2
 9191 057a D2B2     		uxtb	r2, r2
 9192 057c 1A70     		strb	r2, [r3, #0]
 9193 057e FB69     		ldr	r3, [r7, #28]
 9194 0580 03F12203 		add	r3, r3, #34
 9195 0584 7A69     		ldr	r2, [r7, #20]
 9196 0586 4FEA1242 		lsr	r2, r2, #16
 9197 058a D2B2     		uxtb	r2, r2
 9198 058c 1A70     		strb	r2, [r3, #0]
 9199 058e FB69     		ldr	r3, [r7, #28]
 9200 0590 03F12303 		add	r3, r3, #35
 9201 0594 7A69     		ldr	r2, [r7, #20]
 9202 0596 4FEA1262 		lsr	r2, r2, #24
 9203 059a D2B2     		uxtb	r2, r2
 9204 059c 1A70     		strb	r2, [r3, #0]
 9205              	.L525:
3759:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
3760:../Dave/Generated/src/FATFS002/Src/ff.c **** 	tbl[BPB_Media] = md;					/* Media descriptor */
 9206              		.loc 1 3760 0
 9207 059e FB69     		ldr	r3, [r7, #28]
 9208 05a0 03F11503 		add	r3, r3, #21
 9209 05a4 97F85620 		ldrb	r2, [r7, #86]
 9210 05a8 1A70     		strb	r2, [r3, #0]
3761:../Dave/Generated/src/FATFS002/Src/ff.c **** 	ST_WORD(tbl+BPB_SecPerTrk, 63);			/* Number of sectors per track */
 9211              		.loc 1 3761 0
 9212 05aa FB69     		ldr	r3, [r7, #28]
 9213 05ac 03F11803 		add	r3, r3, #24
 9214 05b0 4FF03F02 		mov	r2, #63
 9215 05b4 1A70     		strb	r2, [r3, #0]
 9216 05b6 FB69     		ldr	r3, [r7, #28]
 9217 05b8 03F11903 		add	r3, r3, #25
 9218 05bc 4FF00002 		mov	r2, #0
 9219 05c0 1A70     		strb	r2, [r3, #0]
3762:../Dave/Generated/src/FATFS002/Src/ff.c **** 	ST_WORD(tbl+BPB_NumHeads, 255);			/* Number of heads */
 9220              		.loc 1 3762 0
 9221 05c2 FB69     		ldr	r3, [r7, #28]
 9222 05c4 03F11A03 		add	r3, r3, #26
 9223 05c8 4FF0FF02 		mov	r2, #255
 9224 05cc 1A70     		strb	r2, [r3, #0]
 9225 05ce FB69     		ldr	r3, [r7, #28]
 9226 05d0 03F11B03 		add	r3, r3, #27
 9227 05d4 4FF00002 		mov	r2, #0
 9228 05d8 1A70     		strb	r2, [r3, #0]
3763:../Dave/Generated/src/FATFS002/Src/ff.c **** 	ST_DWORD(tbl+BPB_HiddSec, b_vol);		/* Hidden sectors */
 9229              		.loc 1 3763 0
 9230 05da FB69     		ldr	r3, [r7, #28]
 9231 05dc 03F11C03 		add	r3, r3, #28
 9232 05e0 3A6B     		ldr	r2, [r7, #48]
 9233 05e2 D2B2     		uxtb	r2, r2
 9234 05e4 1A70     		strb	r2, [r3, #0]
 9235 05e6 FB69     		ldr	r3, [r7, #28]
 9236 05e8 03F11D03 		add	r3, r3, #29
 9237 05ec 3A6B     		ldr	r2, [r7, #48]
 9238 05ee 92B2     		uxth	r2, r2
 9239 05f0 4FEA1222 		lsr	r2, r2, #8
 9240 05f4 92B2     		uxth	r2, r2
 9241 05f6 D2B2     		uxtb	r2, r2
 9242 05f8 1A70     		strb	r2, [r3, #0]
 9243 05fa FB69     		ldr	r3, [r7, #28]
 9244 05fc 03F11E03 		add	r3, r3, #30
 9245 0600 3A6B     		ldr	r2, [r7, #48]
 9246 0602 4FEA1242 		lsr	r2, r2, #16
 9247 0606 D2B2     		uxtb	r2, r2
 9248 0608 1A70     		strb	r2, [r3, #0]
 9249 060a FB69     		ldr	r3, [r7, #28]
 9250 060c 03F11F03 		add	r3, r3, #31
 9251 0610 3A6B     		ldr	r2, [r7, #48]
 9252 0612 4FEA1262 		lsr	r2, r2, #24
 9253 0616 D2B2     		uxtb	r2, r2
 9254 0618 1A70     		strb	r2, [r3, #0]
3764:../Dave/Generated/src/FATFS002/Src/ff.c **** 	n = get_fattime();						/* Use current time as VSN */
 9255              		.loc 1 3764 0
 9256 061a FFF7FEFF 		bl	get_fattime
 9257 061e 0346     		mov	r3, r0
 9258 0620 BB61     		str	r3, [r7, #24]
3765:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (fmt == FS_FAT32) {
 9259              		.loc 1 3765 0
 9260 0622 97F85730 		ldrb	r3, [r7, #87]	@ zero_extendqisi2
 9261 0626 032B     		cmp	r3, #3
 9262 0628 40F08980 		bne	.L526
3766:../Dave/Generated/src/FATFS002/Src/ff.c **** 		ST_DWORD(tbl+BS_VolID32, n);		/* VSN */
 9263              		.loc 1 3766 0
 9264 062c FB69     		ldr	r3, [r7, #28]
 9265 062e 03F14303 		add	r3, r3, #67
 9266 0632 BA69     		ldr	r2, [r7, #24]
 9267 0634 D2B2     		uxtb	r2, r2
 9268 0636 1A70     		strb	r2, [r3, #0]
 9269 0638 FB69     		ldr	r3, [r7, #28]
 9270 063a 03F14403 		add	r3, r3, #68
 9271 063e BA69     		ldr	r2, [r7, #24]
 9272 0640 92B2     		uxth	r2, r2
 9273 0642 4FEA1222 		lsr	r2, r2, #8
 9274 0646 92B2     		uxth	r2, r2
 9275 0648 D2B2     		uxtb	r2, r2
 9276 064a 1A70     		strb	r2, [r3, #0]
 9277 064c FB69     		ldr	r3, [r7, #28]
 9278 064e 03F14503 		add	r3, r3, #69
 9279 0652 BA69     		ldr	r2, [r7, #24]
 9280 0654 4FEA1242 		lsr	r2, r2, #16
 9281 0658 D2B2     		uxtb	r2, r2
 9282 065a 1A70     		strb	r2, [r3, #0]
 9283 065c FB69     		ldr	r3, [r7, #28]
 9284 065e 03F14603 		add	r3, r3, #70
 9285 0662 BA69     		ldr	r2, [r7, #24]
 9286 0664 4FEA1262 		lsr	r2, r2, #24
 9287 0668 D2B2     		uxtb	r2, r2
 9288 066a 1A70     		strb	r2, [r3, #0]
3767:../Dave/Generated/src/FATFS002/Src/ff.c **** 		ST_DWORD(tbl+BPB_FATSz32, n_fat);	/* Number of sectors per FAT */
 9289              		.loc 1 3767 0
 9290 066c FB69     		ldr	r3, [r7, #28]
 9291 066e 03F12403 		add	r3, r3, #36
 9292 0672 3A6C     		ldr	r2, [r7, #64]
 9293 0674 D2B2     		uxtb	r2, r2
 9294 0676 1A70     		strb	r2, [r3, #0]
 9295 0678 FB69     		ldr	r3, [r7, #28]
 9296 067a 03F12503 		add	r3, r3, #37
 9297 067e 3A6C     		ldr	r2, [r7, #64]
 9298 0680 92B2     		uxth	r2, r2
 9299 0682 4FEA1222 		lsr	r2, r2, #8
 9300 0686 92B2     		uxth	r2, r2
 9301 0688 D2B2     		uxtb	r2, r2
 9302 068a 1A70     		strb	r2, [r3, #0]
 9303 068c FB69     		ldr	r3, [r7, #28]
 9304 068e 03F12603 		add	r3, r3, #38
 9305 0692 3A6C     		ldr	r2, [r7, #64]
 9306 0694 4FEA1242 		lsr	r2, r2, #16
 9307 0698 D2B2     		uxtb	r2, r2
 9308 069a 1A70     		strb	r2, [r3, #0]
 9309 069c FB69     		ldr	r3, [r7, #28]
 9310 069e 03F12703 		add	r3, r3, #39
 9311 06a2 3A6C     		ldr	r2, [r7, #64]
 9312 06a4 4FEA1262 		lsr	r2, r2, #24
 9313 06a8 D2B2     		uxtb	r2, r2
 9314 06aa 1A70     		strb	r2, [r3, #0]
3768:../Dave/Generated/src/FATFS002/Src/ff.c **** 		ST_DWORD(tbl+BPB_RootClus, 2);		/* Root directory start cluster (2) */
 9315              		.loc 1 3768 0
 9316 06ac FB69     		ldr	r3, [r7, #28]
 9317 06ae 03F12C03 		add	r3, r3, #44
 9318 06b2 4FF00202 		mov	r2, #2
 9319 06b6 1A70     		strb	r2, [r3, #0]
 9320 06b8 FB69     		ldr	r3, [r7, #28]
 9321 06ba 03F12D03 		add	r3, r3, #45
 9322 06be 4FF00002 		mov	r2, #0
 9323 06c2 1A70     		strb	r2, [r3, #0]
 9324 06c4 FB69     		ldr	r3, [r7, #28]
 9325 06c6 03F12E03 		add	r3, r3, #46
 9326 06ca 4FF00002 		mov	r2, #0
 9327 06ce 1A70     		strb	r2, [r3, #0]
 9328 06d0 FB69     		ldr	r3, [r7, #28]
 9329 06d2 03F12F03 		add	r3, r3, #47
 9330 06d6 4FF00002 		mov	r2, #0
 9331 06da 1A70     		strb	r2, [r3, #0]
3769:../Dave/Generated/src/FATFS002/Src/ff.c **** 		ST_WORD(tbl+BPB_FSInfo, 1);			/* FSInfo record offset (VBR+1) */
 9332              		.loc 1 3769 0
 9333 06dc FB69     		ldr	r3, [r7, #28]
 9334 06de 03F13003 		add	r3, r3, #48
 9335 06e2 4FF00102 		mov	r2, #1
 9336 06e6 1A70     		strb	r2, [r3, #0]
 9337 06e8 FB69     		ldr	r3, [r7, #28]
 9338 06ea 03F13103 		add	r3, r3, #49
 9339 06ee 4FF00002 		mov	r2, #0
 9340 06f2 1A70     		strb	r2, [r3, #0]
3770:../Dave/Generated/src/FATFS002/Src/ff.c **** 		ST_WORD(tbl+BPB_BkBootSec, 6);		/* Backup boot record offset (VBR+6) */
 9341              		.loc 1 3770 0
 9342 06f4 FB69     		ldr	r3, [r7, #28]
 9343 06f6 03F13203 		add	r3, r3, #50
 9344 06fa 4FF00602 		mov	r2, #6
 9345 06fe 1A70     		strb	r2, [r3, #0]
 9346 0700 FB69     		ldr	r3, [r7, #28]
 9347 0702 03F13303 		add	r3, r3, #51
 9348 0706 4FF00002 		mov	r2, #0
 9349 070a 1A70     		strb	r2, [r3, #0]
3771:../Dave/Generated/src/FATFS002/Src/ff.c **** 		tbl[BS_DrvNum32] = 0x80;			/* Drive number */
 9350              		.loc 1 3771 0
 9351 070c FB69     		ldr	r3, [r7, #28]
 9352 070e 03F14003 		add	r3, r3, #64
 9353 0712 4FF08002 		mov	r2, #128
 9354 0716 1A70     		strb	r2, [r3, #0]
3772:../Dave/Generated/src/FATFS002/Src/ff.c **** 		tbl[BS_BootSig32] = 0x29;			/* Extended boot signature */
 9355              		.loc 1 3772 0
 9356 0718 FB69     		ldr	r3, [r7, #28]
 9357 071a 03F14203 		add	r3, r3, #66
 9358 071e 4FF02902 		mov	r2, #41
 9359 0722 1A70     		strb	r2, [r3, #0]
3773:../Dave/Generated/src/FATFS002/Src/ff.c **** 		mem_cpy(tbl+BS_VolLab32, "NO NAME    " "FAT32   ", 19);	/* Volume label, FAT signature */
 9360              		.loc 1 3773 0
 9361 0724 FB69     		ldr	r3, [r7, #28]
 9362 0726 03F14703 		add	r3, r3, #71
 9363 072a 1846     		mov	r0, r3
 9364 072c 40F20001 		movw	r1, #:lower16:.LC2
 9365 0730 C0F20001 		movt	r1, #:upper16:.LC2
 9366 0734 4FF01302 		mov	r2, #19
 9367 0738 FFF7FEFF 		bl	mem_cpy
 9368 073c 47E0     		b	.L527
 9369              	.L526:
3774:../Dave/Generated/src/FATFS002/Src/ff.c **** 	} else {
3775:../Dave/Generated/src/FATFS002/Src/ff.c **** 		ST_DWORD(tbl+BS_VolID, n);			/* VSN */
 9370              		.loc 1 3775 0
 9371 073e FB69     		ldr	r3, [r7, #28]
 9372 0740 03F12703 		add	r3, r3, #39
 9373 0744 BA69     		ldr	r2, [r7, #24]
 9374 0746 D2B2     		uxtb	r2, r2
 9375 0748 1A70     		strb	r2, [r3, #0]
 9376 074a FB69     		ldr	r3, [r7, #28]
 9377 074c 03F12803 		add	r3, r3, #40
 9378 0750 BA69     		ldr	r2, [r7, #24]
 9379 0752 92B2     		uxth	r2, r2
 9380 0754 4FEA1222 		lsr	r2, r2, #8
 9381 0758 92B2     		uxth	r2, r2
 9382 075a D2B2     		uxtb	r2, r2
 9383 075c 1A70     		strb	r2, [r3, #0]
 9384 075e FB69     		ldr	r3, [r7, #28]
 9385 0760 03F12903 		add	r3, r3, #41
 9386 0764 BA69     		ldr	r2, [r7, #24]
 9387 0766 4FEA1242 		lsr	r2, r2, #16
 9388 076a D2B2     		uxtb	r2, r2
 9389 076c 1A70     		strb	r2, [r3, #0]
 9390 076e FB69     		ldr	r3, [r7, #28]
 9391 0770 03F12A03 		add	r3, r3, #42
 9392 0774 BA69     		ldr	r2, [r7, #24]
 9393 0776 4FEA1262 		lsr	r2, r2, #24
 9394 077a D2B2     		uxtb	r2, r2
 9395 077c 1A70     		strb	r2, [r3, #0]
3776:../Dave/Generated/src/FATFS002/Src/ff.c **** 		ST_WORD(tbl+BPB_FATSz16, n_fat);	/* Number of sectors per FAT */
 9396              		.loc 1 3776 0
 9397 077e FB69     		ldr	r3, [r7, #28]
 9398 0780 03F11603 		add	r3, r3, #22
 9399 0784 3A6C     		ldr	r2, [r7, #64]
 9400 0786 D2B2     		uxtb	r2, r2
 9401 0788 1A70     		strb	r2, [r3, #0]
 9402 078a FB69     		ldr	r3, [r7, #28]
 9403 078c 03F11703 		add	r3, r3, #23
 9404 0790 3A6C     		ldr	r2, [r7, #64]
 9405 0792 92B2     		uxth	r2, r2
 9406 0794 4FEA1222 		lsr	r2, r2, #8
 9407 0798 92B2     		uxth	r2, r2
 9408 079a D2B2     		uxtb	r2, r2
 9409 079c 1A70     		strb	r2, [r3, #0]
3777:../Dave/Generated/src/FATFS002/Src/ff.c **** 		tbl[BS_DrvNum] = 0x80;				/* Drive number */
 9410              		.loc 1 3777 0
 9411 079e FB69     		ldr	r3, [r7, #28]
 9412 07a0 03F12403 		add	r3, r3, #36
 9413 07a4 4FF08002 		mov	r2, #128
 9414 07a8 1A70     		strb	r2, [r3, #0]
3778:../Dave/Generated/src/FATFS002/Src/ff.c **** 		tbl[BS_BootSig] = 0x29;				/* Extended boot signature */
 9415              		.loc 1 3778 0
 9416 07aa FB69     		ldr	r3, [r7, #28]
 9417 07ac 03F12603 		add	r3, r3, #38
 9418 07b0 4FF02902 		mov	r2, #41
 9419 07b4 1A70     		strb	r2, [r3, #0]
3779:../Dave/Generated/src/FATFS002/Src/ff.c **** 		mem_cpy(tbl+BS_VolLab, "NO NAME    " "FAT     ", 19);	/* Volume label, FAT signature */
 9420              		.loc 1 3779 0
 9421 07b6 FB69     		ldr	r3, [r7, #28]
 9422 07b8 03F12B03 		add	r3, r3, #43
 9423 07bc 1846     		mov	r0, r3
 9424 07be 40F20001 		movw	r1, #:lower16:.LC3
 9425 07c2 C0F20001 		movt	r1, #:upper16:.LC3
 9426 07c6 4FF01302 		mov	r2, #19
 9427 07ca FFF7FEFF 		bl	mem_cpy
 9428              	.L527:
3780:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
3781:../Dave/Generated/src/FATFS002/Src/ff.c **** 	ST_WORD(tbl+BS_55AA, 0xAA55);			/* Signature (Offset is fixed here regardless of sector size) */
 9429              		.loc 1 3781 0
 9430 07ce FB69     		ldr	r3, [r7, #28]
 9431 07d0 03F5FF73 		add	r3, r3, #510
 9432 07d4 4FF05502 		mov	r2, #85
 9433 07d8 1A70     		strb	r2, [r3, #0]
 9434 07da FB69     		ldr	r3, [r7, #28]
 9435 07dc 03F2FF13 		addw	r3, r3, #511
 9436 07e0 4FF0AA02 		mov	r2, #170
 9437 07e4 1A70     		strb	r2, [r3, #0]
3782:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (disk_write(pdrv, tbl, b_vol, 1) != RES_OK)	/* Write it to the VBR sector */
 9438              		.loc 1 3782 0
 9439 07e6 97F83730 		ldrb	r3, [r7, #55]	@ zero_extendqisi2
 9440 07ea 1846     		mov	r0, r3
 9441 07ec F969     		ldr	r1, [r7, #28]
 9442 07ee 3A6B     		ldr	r2, [r7, #48]
 9443 07f0 4FF00103 		mov	r3, #1
 9444 07f4 FFF7FEFF 		bl	disk_write
 9445 07f8 0346     		mov	r3, r0
 9446 07fa 002B     		cmp	r3, #0
 9447 07fc 02D0     		beq	.L528
3783:../Dave/Generated/src/FATFS002/Src/ff.c **** 		return FR_DISK_ERR;
 9448              		.loc 1 3783 0
 9449 07fe 4FF00103 		mov	r3, #1
 9450 0802 CFE1     		b	.L547
 9451              	.L528:
3784:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (fmt == FS_FAT32)							/* Write backup VBR if needed (VBR+6) */
 9452              		.loc 1 3784 0
 9453 0804 97F85730 		ldrb	r3, [r7, #87]	@ zero_extendqisi2
 9454 0808 032B     		cmp	r3, #3
 9455 080a 0BD1     		bne	.L529
3785:../Dave/Generated/src/FATFS002/Src/ff.c **** 		disk_write(pdrv, tbl, b_vol + 6, 1);
 9456              		.loc 1 3785 0
 9457 080c 3B6B     		ldr	r3, [r7, #48]
 9458 080e 03F10603 		add	r3, r3, #6
 9459 0812 97F83720 		ldrb	r2, [r7, #55]	@ zero_extendqisi2
 9460 0816 1046     		mov	r0, r2
 9461 0818 F969     		ldr	r1, [r7, #28]
 9462 081a 1A46     		mov	r2, r3
 9463 081c 4FF00103 		mov	r3, #1
 9464 0820 FFF7FEFF 		bl	disk_write
 9465              	.L529:
3786:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3787:../Dave/Generated/src/FATFS002/Src/ff.c **** 	/* Initialize FAT area */
3788:../Dave/Generated/src/FATFS002/Src/ff.c **** 	wsect = b_fat;
 9466              		.loc 1 3788 0
 9467 0824 BB6C     		ldr	r3, [r7, #72]
 9468 0826 3B65     		str	r3, [r7, #80]
3789:../Dave/Generated/src/FATFS002/Src/ff.c **** 	for (i = 0; i < N_FATS; i++) {		/* Initialize each FAT copy */
 9469              		.loc 1 3789 0
 9470 0828 4FF00003 		mov	r3, #0
 9471 082c FB64     		str	r3, [r7, #76]
 9472 082e CBE0     		b	.L530
 9473              	.L539:
3790:../Dave/Generated/src/FATFS002/Src/ff.c **** 		mem_set(tbl, 0, SS(fs));			/* 1st sector of the FAT  */
 9474              		.loc 1 3790 0
 9475 0830 F869     		ldr	r0, [r7, #28]
 9476 0832 4FF00001 		mov	r1, #0
 9477 0836 4FF40072 		mov	r2, #512
 9478 083a FFF7FEFF 		bl	mem_set
3791:../Dave/Generated/src/FATFS002/Src/ff.c **** 		n = md;								/* Media descriptor byte */
 9479              		.loc 1 3791 0
 9480 083e 97F85630 		ldrb	r3, [r7, #86]	@ zero_extendqisi2
 9481 0842 BB61     		str	r3, [r7, #24]
3792:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (fmt != FS_FAT32) {
 9482              		.loc 1 3792 0
 9483 0844 97F85730 		ldrb	r3, [r7, #87]	@ zero_extendqisi2
 9484 0848 032B     		cmp	r3, #3
 9485 084a 2CD0     		beq	.L531
3793:../Dave/Generated/src/FATFS002/Src/ff.c **** 			n |= (fmt == FS_FAT12) ? 0x00FFFF00 : 0xFFFFFF00;
 9486              		.loc 1 3793 0
 9487 084c 97F85730 		ldrb	r3, [r7, #87]	@ zero_extendqisi2
 9488 0850 012B     		cmp	r3, #1
 9489 0852 04D1     		bne	.L532
 9490              		.loc 1 3793 0 is_stmt 0 discriminator 1
 9491 0854 4FF47F43 		mov	r3, #65280
 9492 0858 C0F2FF03 		movt	r3, 255
 9493 085c 01E0     		b	.L533
 9494              	.L532:
 9495              		.loc 1 3793 0 discriminator 2
 9496 085e 6FF0FF03 		mvn	r3, #255
 9497              	.L533:
 9498              		.loc 1 3793 0 discriminator 3
 9499 0862 BA69     		ldr	r2, [r7, #24]
 9500 0864 1343     		orrs	r3, r3, r2
 9501 0866 BB61     		str	r3, [r7, #24]
3794:../Dave/Generated/src/FATFS002/Src/ff.c **** 			ST_DWORD(tbl+0, n);				/* Reserve cluster #0-1 (FAT12/16) */
 9502              		.loc 1 3794 0 is_stmt 1 discriminator 3
 9503 0868 BB69     		ldr	r3, [r7, #24]
 9504 086a DAB2     		uxtb	r2, r3
 9505 086c FB69     		ldr	r3, [r7, #28]
 9506 086e 1A70     		strb	r2, [r3, #0]
 9507 0870 FB69     		ldr	r3, [r7, #28]
 9508 0872 03F10103 		add	r3, r3, #1
 9509 0876 BA69     		ldr	r2, [r7, #24]
 9510 0878 92B2     		uxth	r2, r2
 9511 087a 4FEA1222 		lsr	r2, r2, #8
 9512 087e 92B2     		uxth	r2, r2
 9513 0880 D2B2     		uxtb	r2, r2
 9514 0882 1A70     		strb	r2, [r3, #0]
 9515 0884 FB69     		ldr	r3, [r7, #28]
 9516 0886 03F10203 		add	r3, r3, #2
 9517 088a BA69     		ldr	r2, [r7, #24]
 9518 088c 4FEA1242 		lsr	r2, r2, #16
 9519 0890 D2B2     		uxtb	r2, r2
 9520 0892 1A70     		strb	r2, [r3, #0]
 9521 0894 FB69     		ldr	r3, [r7, #28]
 9522 0896 03F10303 		add	r3, r3, #3
 9523 089a BA69     		ldr	r2, [r7, #24]
 9524 089c 4FEA1262 		lsr	r2, r2, #24
 9525 08a0 D2B2     		uxtb	r2, r2
 9526 08a2 1A70     		strb	r2, [r3, #0]
 9527 08a4 51E0     		b	.L534
 9528              	.L531:
3795:../Dave/Generated/src/FATFS002/Src/ff.c **** 		} else {
3796:../Dave/Generated/src/FATFS002/Src/ff.c **** 			n |= 0xFFFFFF00;
 9529              		.loc 1 3796 0
 9530 08a6 BB69     		ldr	r3, [r7, #24]
 9531 08a8 63F0FF03 		orn	r3, r3, #255
 9532 08ac BB61     		str	r3, [r7, #24]
3797:../Dave/Generated/src/FATFS002/Src/ff.c **** 			ST_DWORD(tbl+0, n);				/* Reserve cluster #0-1 (FAT32) */
 9533              		.loc 1 3797 0
 9534 08ae BB69     		ldr	r3, [r7, #24]
 9535 08b0 DAB2     		uxtb	r2, r3
 9536 08b2 FB69     		ldr	r3, [r7, #28]
 9537 08b4 1A70     		strb	r2, [r3, #0]
 9538 08b6 FB69     		ldr	r3, [r7, #28]
 9539 08b8 03F10103 		add	r3, r3, #1
 9540 08bc BA69     		ldr	r2, [r7, #24]
 9541 08be 92B2     		uxth	r2, r2
 9542 08c0 4FEA1222 		lsr	r2, r2, #8
 9543 08c4 92B2     		uxth	r2, r2
 9544 08c6 D2B2     		uxtb	r2, r2
 9545 08c8 1A70     		strb	r2, [r3, #0]
 9546 08ca FB69     		ldr	r3, [r7, #28]
 9547 08cc 03F10203 		add	r3, r3, #2
 9548 08d0 BA69     		ldr	r2, [r7, #24]
 9549 08d2 4FEA1242 		lsr	r2, r2, #16
 9550 08d6 D2B2     		uxtb	r2, r2
 9551 08d8 1A70     		strb	r2, [r3, #0]
 9552 08da FB69     		ldr	r3, [r7, #28]
 9553 08dc 03F10303 		add	r3, r3, #3
 9554 08e0 BA69     		ldr	r2, [r7, #24]
 9555 08e2 4FEA1262 		lsr	r2, r2, #24
 9556 08e6 D2B2     		uxtb	r2, r2
 9557 08e8 1A70     		strb	r2, [r3, #0]
3798:../Dave/Generated/src/FATFS002/Src/ff.c **** 			ST_DWORD(tbl+4, 0xFFFFFFFF);
 9558              		.loc 1 3798 0
 9559 08ea FB69     		ldr	r3, [r7, #28]
 9560 08ec 03F10403 		add	r3, r3, #4
 9561 08f0 4FF0FF02 		mov	r2, #255
 9562 08f4 1A70     		strb	r2, [r3, #0]
 9563 08f6 FB69     		ldr	r3, [r7, #28]
 9564 08f8 03F10503 		add	r3, r3, #5
 9565 08fc 4FF0FF02 		mov	r2, #255
 9566 0900 1A70     		strb	r2, [r3, #0]
 9567 0902 FB69     		ldr	r3, [r7, #28]
 9568 0904 03F10603 		add	r3, r3, #6
 9569 0908 4FF0FF02 		mov	r2, #255
 9570 090c 1A70     		strb	r2, [r3, #0]
 9571 090e FB69     		ldr	r3, [r7, #28]
 9572 0910 03F10703 		add	r3, r3, #7
 9573 0914 4FF0FF02 		mov	r2, #255
 9574 0918 1A70     		strb	r2, [r3, #0]
3799:../Dave/Generated/src/FATFS002/Src/ff.c **** 			ST_DWORD(tbl+8, 0x0FFFFFFF);	/* Reserve cluster #2 for root dir */
 9575              		.loc 1 3799 0
 9576 091a FB69     		ldr	r3, [r7, #28]
 9577 091c 03F10803 		add	r3, r3, #8
 9578 0920 4FF0FF02 		mov	r2, #255
 9579 0924 1A70     		strb	r2, [r3, #0]
 9580 0926 FB69     		ldr	r3, [r7, #28]
 9581 0928 03F10903 		add	r3, r3, #9
 9582 092c 4FF0FF02 		mov	r2, #255
 9583 0930 1A70     		strb	r2, [r3, #0]
 9584 0932 FB69     		ldr	r3, [r7, #28]
 9585 0934 03F10A03 		add	r3, r3, #10
 9586 0938 4FF0FF02 		mov	r2, #255
 9587 093c 1A70     		strb	r2, [r3, #0]
 9588 093e FB69     		ldr	r3, [r7, #28]
 9589 0940 03F10B03 		add	r3, r3, #11
 9590 0944 4FF00F02 		mov	r2, #15
 9591 0948 1A70     		strb	r2, [r3, #0]
 9592              	.L534:
3800:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
3801:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (disk_write(pdrv, tbl, wsect++, 1) != RES_OK)
 9593              		.loc 1 3801 0
 9594 094a 3B6D     		ldr	r3, [r7, #80]
 9595 094c 3A6D     		ldr	r2, [r7, #80]
 9596 094e 02F10102 		add	r2, r2, #1
 9597 0952 3A65     		str	r2, [r7, #80]
 9598 0954 97F83720 		ldrb	r2, [r7, #55]	@ zero_extendqisi2
 9599 0958 1046     		mov	r0, r2
 9600 095a F969     		ldr	r1, [r7, #28]
 9601 095c 1A46     		mov	r2, r3
 9602 095e 4FF00103 		mov	r3, #1
 9603 0962 FFF7FEFF 		bl	disk_write
 9604 0966 0346     		mov	r3, r0
 9605 0968 002B     		cmp	r3, #0
 9606 096a 02D0     		beq	.L535
3802:../Dave/Generated/src/FATFS002/Src/ff.c **** 			return FR_DISK_ERR;
 9607              		.loc 1 3802 0
 9608 096c 4FF00103 		mov	r3, #1
 9609 0970 18E1     		b	.L547
 9610              	.L535:
3803:../Dave/Generated/src/FATFS002/Src/ff.c **** 		mem_set(tbl, 0, SS(fs));			/* Fill following FAT entries with zero */
 9611              		.loc 1 3803 0
 9612 0972 F869     		ldr	r0, [r7, #28]
 9613 0974 4FF00001 		mov	r1, #0
 9614 0978 4FF40072 		mov	r2, #512
 9615 097c FFF7FEFF 		bl	mem_set
3804:../Dave/Generated/src/FATFS002/Src/ff.c **** 		for (n = 1; n < n_fat; n++) {		/* This loop may take a time on FAT32 volume due to many single se
 9616              		.loc 1 3804 0
 9617 0980 4FF00103 		mov	r3, #1
 9618 0984 BB61     		str	r3, [r7, #24]
 9619 0986 17E0     		b	.L536
 9620              	.L538:
3805:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (disk_write(pdrv, tbl, wsect++, 1) != RES_OK)
 9621              		.loc 1 3805 0
 9622 0988 3B6D     		ldr	r3, [r7, #80]
 9623 098a 3A6D     		ldr	r2, [r7, #80]
 9624 098c 02F10102 		add	r2, r2, #1
 9625 0990 3A65     		str	r2, [r7, #80]
 9626 0992 97F83720 		ldrb	r2, [r7, #55]	@ zero_extendqisi2
 9627 0996 1046     		mov	r0, r2
 9628 0998 F969     		ldr	r1, [r7, #28]
 9629 099a 1A46     		mov	r2, r3
 9630 099c 4FF00103 		mov	r3, #1
 9631 09a0 FFF7FEFF 		bl	disk_write
 9632 09a4 0346     		mov	r3, r0
 9633 09a6 002B     		cmp	r3, #0
 9634 09a8 02D0     		beq	.L537
3806:../Dave/Generated/src/FATFS002/Src/ff.c **** 				return FR_DISK_ERR;
 9635              		.loc 1 3806 0
 9636 09aa 4FF00103 		mov	r3, #1
 9637 09ae F9E0     		b	.L547
 9638              	.L537:
3804:../Dave/Generated/src/FATFS002/Src/ff.c **** 		for (n = 1; n < n_fat; n++) {		/* This loop may take a time on FAT32 volume due to many single se
 9639              		.loc 1 3804 0
 9640 09b0 BB69     		ldr	r3, [r7, #24]
 9641 09b2 03F10103 		add	r3, r3, #1
 9642 09b6 BB61     		str	r3, [r7, #24]
 9643              	.L536:
3804:../Dave/Generated/src/FATFS002/Src/ff.c **** 		for (n = 1; n < n_fat; n++) {		/* This loop may take a time on FAT32 volume due to many single se
 9644              		.loc 1 3804 0 is_stmt 0 discriminator 1
 9645 09b8 BA69     		ldr	r2, [r7, #24]
 9646 09ba 3B6C     		ldr	r3, [r7, #64]
 9647 09bc 9A42     		cmp	r2, r3
 9648 09be E3D3     		bcc	.L538
3789:../Dave/Generated/src/FATFS002/Src/ff.c **** 	for (i = 0; i < N_FATS; i++) {		/* Initialize each FAT copy */
 9649              		.loc 1 3789 0 is_stmt 1
 9650 09c0 FB6C     		ldr	r3, [r7, #76]
 9651 09c2 03F10103 		add	r3, r3, #1
 9652 09c6 FB64     		str	r3, [r7, #76]
 9653              	.L530:
3789:../Dave/Generated/src/FATFS002/Src/ff.c **** 	for (i = 0; i < N_FATS; i++) {		/* Initialize each FAT copy */
 9654              		.loc 1 3789 0 is_stmt 0 discriminator 1
 9655 09c8 FB6C     		ldr	r3, [r7, #76]
 9656 09ca 002B     		cmp	r3, #0
 9657 09cc 3FF430AF 		beq	.L539
3807:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
3808:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
3809:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3810:../Dave/Generated/src/FATFS002/Src/ff.c **** 	/* Initialize root directory */
3811:../Dave/Generated/src/FATFS002/Src/ff.c **** 	i = (fmt == FS_FAT32) ? au : n_dir;
 9658              		.loc 1 3811 0 is_stmt 1
 9659 09d0 97F85730 		ldrb	r3, [r7, #87]	@ zero_extendqisi2
 9660 09d4 032B     		cmp	r3, #3
 9661 09d6 01D1     		bne	.L540
 9662              		.loc 1 3811 0 is_stmt 0 discriminator 1
 9663 09d8 3B68     		ldr	r3, [r7, #0]
 9664 09da 00E0     		b	.L541
 9665              	.L540:
 9666              		.loc 1 3811 0 discriminator 2
 9667 09dc FB6B     		ldr	r3, [r7, #60]
 9668              	.L541:
 9669              		.loc 1 3811 0 discriminator 3
 9670 09de FB64     		str	r3, [r7, #76]
 9671              	.L543:
3812:../Dave/Generated/src/FATFS002/Src/ff.c **** 	do {
3813:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (disk_write(pdrv, tbl, wsect++, 1) != RES_OK)
 9672              		.loc 1 3813 0 is_stmt 1
 9673 09e0 3B6D     		ldr	r3, [r7, #80]
 9674 09e2 3A6D     		ldr	r2, [r7, #80]
 9675 09e4 02F10102 		add	r2, r2, #1
 9676 09e8 3A65     		str	r2, [r7, #80]
 9677 09ea 97F83720 		ldrb	r2, [r7, #55]	@ zero_extendqisi2
 9678 09ee 1046     		mov	r0, r2
 9679 09f0 F969     		ldr	r1, [r7, #28]
 9680 09f2 1A46     		mov	r2, r3
 9681 09f4 4FF00103 		mov	r3, #1
 9682 09f8 FFF7FEFF 		bl	disk_write
 9683 09fc 0346     		mov	r3, r0
 9684 09fe 002B     		cmp	r3, #0
 9685 0a00 02D0     		beq	.L542
3814:../Dave/Generated/src/FATFS002/Src/ff.c **** 			return FR_DISK_ERR;
 9686              		.loc 1 3814 0
 9687 0a02 4FF00103 		mov	r3, #1
 9688 0a06 CDE0     		b	.L547
 9689              	.L542:
3815:../Dave/Generated/src/FATFS002/Src/ff.c **** 	} while (--i);
 9690              		.loc 1 3815 0
 9691 0a08 FB6C     		ldr	r3, [r7, #76]
 9692 0a0a 03F1FF33 		add	r3, r3, #-1
 9693 0a0e FB64     		str	r3, [r7, #76]
 9694 0a10 FB6C     		ldr	r3, [r7, #76]
 9695 0a12 002B     		cmp	r3, #0
 9696 0a14 E4D1     		bne	.L543
 9697              	.LBB6:
3816:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3817:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _USE_ERASE	/* Erase data area if needed */
3818:../Dave/Generated/src/FATFS002/Src/ff.c **** 	{
3819:../Dave/Generated/src/FATFS002/Src/ff.c **** 		DWORD eb[2];
3820:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3821:../Dave/Generated/src/FATFS002/Src/ff.c **** 		eb[0] = wsect; eb[1] = wsect + (n_clst - ((fmt == FS_FAT32) ? 1 : 0)) * au - 1;
 9698              		.loc 1 3821 0
 9699 0a16 3B6D     		ldr	r3, [r7, #80]
 9700 0a18 FB60     		str	r3, [r7, #12]
 9701 0a1a 97F85730 		ldrb	r3, [r7, #87]	@ zero_extendqisi2
 9702 0a1e 032B     		cmp	r3, #3
 9703 0a20 02D1     		bne	.L544
 9704              		.loc 1 3821 0 is_stmt 0 discriminator 1
 9705 0a22 4FF00103 		mov	r3, #1
 9706 0a26 01E0     		b	.L545
 9707              	.L544:
 9708              		.loc 1 3821 0 discriminator 2
 9709 0a28 4FF00003 		mov	r3, #0
 9710              	.L545:
 9711              		.loc 1 3821 0 discriminator 3
 9712 0a2c BA6A     		ldr	r2, [r7, #40]
 9713 0a2e D31A     		subs	r3, r2, r3
 9714 0a30 3A68     		ldr	r2, [r7, #0]
 9715 0a32 02FB03F2 		mul	r2, r2, r3
 9716 0a36 3B6D     		ldr	r3, [r7, #80]
 9717 0a38 D318     		adds	r3, r2, r3
 9718 0a3a 03F1FF33 		add	r3, r3, #-1
 9719 0a3e 3B61     		str	r3, [r7, #16]
3822:../Dave/Generated/src/FATFS002/Src/ff.c **** 		disk_ioctl(pdrv, CTRL_ERASE_SECTOR, eb);
 9720              		.loc 1 3822 0 is_stmt 1 discriminator 3
 9721 0a40 97F83720 		ldrb	r2, [r7, #55]	@ zero_extendqisi2
 9722 0a44 07F10C03 		add	r3, r7, #12
 9723 0a48 1046     		mov	r0, r2
 9724 0a4a 4FF00401 		mov	r1, #4
 9725 0a4e 1A46     		mov	r2, r3
 9726 0a50 FFF7FEFF 		bl	disk_ioctl
 9727              	.LBE6:
3823:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
3824:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
3825:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3826:../Dave/Generated/src/FATFS002/Src/ff.c **** 	/* Create FSInfo if needed */
3827:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (fmt == FS_FAT32) {
 9728              		.loc 1 3827 0 discriminator 3
 9729 0a54 97F85730 		ldrb	r3, [r7, #87]	@ zero_extendqisi2
 9730 0a58 032B     		cmp	r3, #3
 9731 0a5a 40F09480 		bne	.L546
3828:../Dave/Generated/src/FATFS002/Src/ff.c **** 		ST_DWORD(tbl+FSI_LeadSig, 0x41615252);
 9732              		.loc 1 3828 0
 9733 0a5e FB69     		ldr	r3, [r7, #28]
 9734 0a60 4FF05202 		mov	r2, #82
 9735 0a64 1A70     		strb	r2, [r3, #0]
 9736 0a66 FB69     		ldr	r3, [r7, #28]
 9737 0a68 03F10103 		add	r3, r3, #1
 9738 0a6c 4FF05202 		mov	r2, #82
 9739 0a70 1A70     		strb	r2, [r3, #0]
 9740 0a72 FB69     		ldr	r3, [r7, #28]
 9741 0a74 03F10203 		add	r3, r3, #2
 9742 0a78 4FF06102 		mov	r2, #97
 9743 0a7c 1A70     		strb	r2, [r3, #0]
 9744 0a7e FB69     		ldr	r3, [r7, #28]
 9745 0a80 03F10303 		add	r3, r3, #3
 9746 0a84 4FF04102 		mov	r2, #65
 9747 0a88 1A70     		strb	r2, [r3, #0]
3829:../Dave/Generated/src/FATFS002/Src/ff.c **** 		ST_DWORD(tbl+FSI_StrucSig, 0x61417272);
 9748              		.loc 1 3829 0
 9749 0a8a FB69     		ldr	r3, [r7, #28]
 9750 0a8c 03F5F273 		add	r3, r3, #484
 9751 0a90 4FF07202 		mov	r2, #114
 9752 0a94 1A70     		strb	r2, [r3, #0]
 9753 0a96 FB69     		ldr	r3, [r7, #28]
 9754 0a98 03F2E513 		addw	r3, r3, #485
 9755 0a9c 4FF07202 		mov	r2, #114
 9756 0aa0 1A70     		strb	r2, [r3, #0]
 9757 0aa2 FB69     		ldr	r3, [r7, #28]
 9758 0aa4 03F5F373 		add	r3, r3, #486
 9759 0aa8 4FF04102 		mov	r2, #65
 9760 0aac 1A70     		strb	r2, [r3, #0]
 9761 0aae FB69     		ldr	r3, [r7, #28]
 9762 0ab0 03F2E713 		addw	r3, r3, #487
 9763 0ab4 4FF06102 		mov	r2, #97
 9764 0ab8 1A70     		strb	r2, [r3, #0]
3830:../Dave/Generated/src/FATFS002/Src/ff.c **** 		ST_DWORD(tbl+FSI_Free_Count, n_clst - 1);	/* Number of free clusters */
 9765              		.loc 1 3830 0
 9766 0aba FB69     		ldr	r3, [r7, #28]
 9767 0abc 03F5F473 		add	r3, r3, #488
 9768 0ac0 BA6A     		ldr	r2, [r7, #40]
 9769 0ac2 D2B2     		uxtb	r2, r2
 9770 0ac4 02F1FF32 		add	r2, r2, #-1
 9771 0ac8 D2B2     		uxtb	r2, r2
 9772 0aca 1A70     		strb	r2, [r3, #0]
 9773 0acc FB69     		ldr	r3, [r7, #28]
 9774 0ace 03F2E913 		addw	r3, r3, #489
 9775 0ad2 BA6A     		ldr	r2, [r7, #40]
 9776 0ad4 92B2     		uxth	r2, r2
 9777 0ad6 02F1FF32 		add	r2, r2, #-1
 9778 0ada 92B2     		uxth	r2, r2
 9779 0adc 4FEA1222 		lsr	r2, r2, #8
 9780 0ae0 92B2     		uxth	r2, r2
 9781 0ae2 D2B2     		uxtb	r2, r2
 9782 0ae4 1A70     		strb	r2, [r3, #0]
 9783 0ae6 FB69     		ldr	r3, [r7, #28]
 9784 0ae8 03F5F573 		add	r3, r3, #490
 9785 0aec BA6A     		ldr	r2, [r7, #40]
 9786 0aee 02F1FF32 		add	r2, r2, #-1
 9787 0af2 4FEA1242 		lsr	r2, r2, #16
 9788 0af6 D2B2     		uxtb	r2, r2
 9789 0af8 1A70     		strb	r2, [r3, #0]
 9790 0afa FB69     		ldr	r3, [r7, #28]
 9791 0afc 03F2EB13 		addw	r3, r3, #491
 9792 0b00 BA6A     		ldr	r2, [r7, #40]
 9793 0b02 02F1FF32 		add	r2, r2, #-1
 9794 0b06 4FEA1262 		lsr	r2, r2, #24
 9795 0b0a D2B2     		uxtb	r2, r2
 9796 0b0c 1A70     		strb	r2, [r3, #0]
3831:../Dave/Generated/src/FATFS002/Src/ff.c **** 		ST_DWORD(tbl+FSI_Nxt_Free, 2);				/* Last allocated cluster# */
 9797              		.loc 1 3831 0
 9798 0b0e FB69     		ldr	r3, [r7, #28]
 9799 0b10 03F5F673 		add	r3, r3, #492
 9800 0b14 4FF00202 		mov	r2, #2
 9801 0b18 1A70     		strb	r2, [r3, #0]
 9802 0b1a FB69     		ldr	r3, [r7, #28]
 9803 0b1c 03F2ED13 		addw	r3, r3, #493
 9804 0b20 4FF00002 		mov	r2, #0
 9805 0b24 1A70     		strb	r2, [r3, #0]
 9806 0b26 FB69     		ldr	r3, [r7, #28]
 9807 0b28 03F5F773 		add	r3, r3, #494
 9808 0b2c 4FF00002 		mov	r2, #0
 9809 0b30 1A70     		strb	r2, [r3, #0]
 9810 0b32 FB69     		ldr	r3, [r7, #28]
 9811 0b34 03F2EF13 		addw	r3, r3, #495
 9812 0b38 4FF00002 		mov	r2, #0
 9813 0b3c 1A70     		strb	r2, [r3, #0]
3832:../Dave/Generated/src/FATFS002/Src/ff.c **** 		ST_WORD(tbl+BS_55AA, 0xAA55);
 9814              		.loc 1 3832 0
 9815 0b3e FB69     		ldr	r3, [r7, #28]
 9816 0b40 03F5FF73 		add	r3, r3, #510
 9817 0b44 4FF05502 		mov	r2, #85
 9818 0b48 1A70     		strb	r2, [r3, #0]
 9819 0b4a FB69     		ldr	r3, [r7, #28]
 9820 0b4c 03F2FF13 		addw	r3, r3, #511
 9821 0b50 4FF0AA02 		mov	r2, #170
 9822 0b54 1A70     		strb	r2, [r3, #0]
3833:../Dave/Generated/src/FATFS002/Src/ff.c **** 		disk_write(pdrv, tbl, b_vol + 1, 1);	/* Write original (VBR+1) */
 9823              		.loc 1 3833 0
 9824 0b56 3B6B     		ldr	r3, [r7, #48]
 9825 0b58 03F10103 		add	r3, r3, #1
 9826 0b5c 97F83720 		ldrb	r2, [r7, #55]	@ zero_extendqisi2
 9827 0b60 1046     		mov	r0, r2
 9828 0b62 F969     		ldr	r1, [r7, #28]
 9829 0b64 1A46     		mov	r2, r3
 9830 0b66 4FF00103 		mov	r3, #1
 9831 0b6a FFF7FEFF 		bl	disk_write
3834:../Dave/Generated/src/FATFS002/Src/ff.c **** 		disk_write(pdrv, tbl, b_vol + 7, 1);	/* Write backup (VBR+7) */
 9832              		.loc 1 3834 0
 9833 0b6e 3B6B     		ldr	r3, [r7, #48]
 9834 0b70 03F10703 		add	r3, r3, #7
 9835 0b74 97F83720 		ldrb	r2, [r7, #55]	@ zero_extendqisi2
 9836 0b78 1046     		mov	r0, r2
 9837 0b7a F969     		ldr	r1, [r7, #28]
 9838 0b7c 1A46     		mov	r2, r3
 9839 0b7e 4FF00103 		mov	r3, #1
 9840 0b82 FFF7FEFF 		bl	disk_write
 9841              	.L546:
3835:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
3836:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3837:../Dave/Generated/src/FATFS002/Src/ff.c **** 	return (disk_ioctl(pdrv, CTRL_SYNC, 0) == RES_OK) ? FR_OK : FR_DISK_ERR;
 9842              		.loc 1 3837 0
 9843 0b86 97F83730 		ldrb	r3, [r7, #55]	@ zero_extendqisi2
 9844 0b8a 1846     		mov	r0, r3
 9845 0b8c 4FF00001 		mov	r1, #0
 9846 0b90 4FF00002 		mov	r2, #0
 9847 0b94 FFF7FEFF 		bl	disk_ioctl
 9848 0b98 0346     		mov	r3, r0
 9849 0b9a 002B     		cmp	r3, #0
 9850 0b9c 0CBF     		ite	eq
 9851 0b9e 0023     		moveq	r3, #0
 9852 0ba0 0123     		movne	r3, #1
 9853 0ba2 DBB2     		uxtb	r3, r3
 9854              	.L547:
3838:../Dave/Generated/src/FATFS002/Src/ff.c **** }
 9855              		.loc 1 3838 0
 9856 0ba4 1846     		mov	r0, r3
 9857 0ba6 07F15807 		add	r7, r7, #88
 9858 0baa BD46     		mov	sp, r7
 9859 0bac 80BD     		pop	{r7, pc}
 9860              		.cfi_endproc
 9861              	.LFE42:
 9863 0bae 00BF     		.section	.text.f_gets,"ax",%progbits
 9864              		.align	2
 9865              		.global	f_gets
 9866              		.thumb
 9867              		.thumb_func
 9869              	f_gets:
 9870              	.LFB43:
3839:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3840:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3841:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _MULTI_PARTITION == 2
3842:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
3843:../Dave/Generated/src/FATFS002/Src/ff.c **** /* Divide Physical Drive                                                 */
3844:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
3845:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3846:../Dave/Generated/src/FATFS002/Src/ff.c **** FRESULT f_fdisk (
3847:../Dave/Generated/src/FATFS002/Src/ff.c **** 	BYTE pdrv,			/* Physical drive number */
3848:../Dave/Generated/src/FATFS002/Src/ff.c **** 	const DWORD szt[],	/* Pointer to the size table for each partitions */
3849:../Dave/Generated/src/FATFS002/Src/ff.c **** 	void* work			/* Pointer to the working buffer */
3850:../Dave/Generated/src/FATFS002/Src/ff.c **** )
3851:../Dave/Generated/src/FATFS002/Src/ff.c **** {
3852:../Dave/Generated/src/FATFS002/Src/ff.c **** 	UINT i, n, sz_cyl, tot_cyl, b_cyl, e_cyl, p_cyl;
3853:../Dave/Generated/src/FATFS002/Src/ff.c **** 	BYTE s_hd, e_hd, *p, *buf = (BYTE*)work;
3854:../Dave/Generated/src/FATFS002/Src/ff.c **** 	DSTATUS stat;
3855:../Dave/Generated/src/FATFS002/Src/ff.c **** 	DWORD sz_disk, sz_part, s_part;
3856:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3857:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3858:../Dave/Generated/src/FATFS002/Src/ff.c **** 	stat = disk_initialize(pdrv);
3859:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (stat & STA_NOINIT) return FR_NOT_READY;
3860:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (stat & STA_PROTECT) return FR_WRITE_PROTECTED;
3861:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (disk_ioctl(pdrv, GET_SECTOR_COUNT, &sz_disk)) return FR_DISK_ERR;
3862:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3863:../Dave/Generated/src/FATFS002/Src/ff.c **** 	/* Determine CHS in the table regardless of the drive geometry */
3864:../Dave/Generated/src/FATFS002/Src/ff.c **** 	for (n = 16; n < 256 && sz_disk / n / 63 > 1024; n *= 2) ;
3865:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (n == 256) n--;
3866:../Dave/Generated/src/FATFS002/Src/ff.c **** 	e_hd = n - 1;
3867:../Dave/Generated/src/FATFS002/Src/ff.c **** 	sz_cyl = 63 * n;
3868:../Dave/Generated/src/FATFS002/Src/ff.c **** 	tot_cyl = sz_disk / sz_cyl;
3869:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3870:../Dave/Generated/src/FATFS002/Src/ff.c **** 	/* Create partition table */
3871:../Dave/Generated/src/FATFS002/Src/ff.c **** 	mem_set(buf, 0, _MAX_SS);
3872:../Dave/Generated/src/FATFS002/Src/ff.c **** 	p = buf + MBR_Table; b_cyl = 0;
3873:../Dave/Generated/src/FATFS002/Src/ff.c **** 	for (i = 0; i < 4; i++, p += SZ_PTE) {
3874:../Dave/Generated/src/FATFS002/Src/ff.c **** 		p_cyl = (szt[i] <= 100) ? (DWORD)tot_cyl * szt[i] / 100 : szt[i] / sz_cyl;
3875:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (!p_cyl) continue;
3876:../Dave/Generated/src/FATFS002/Src/ff.c **** 		s_part = (DWORD)sz_cyl * b_cyl;
3877:../Dave/Generated/src/FATFS002/Src/ff.c **** 		sz_part = (DWORD)sz_cyl * p_cyl;
3878:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (i == 0) {	/* Exclude first track of cylinder 0 */
3879:../Dave/Generated/src/FATFS002/Src/ff.c **** 			s_hd = 1;
3880:../Dave/Generated/src/FATFS002/Src/ff.c **** 			s_part += 63; sz_part -= 63;
3881:../Dave/Generated/src/FATFS002/Src/ff.c **** 		} else {
3882:../Dave/Generated/src/FATFS002/Src/ff.c **** 			s_hd = 0;
3883:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
3884:../Dave/Generated/src/FATFS002/Src/ff.c **** 		e_cyl = b_cyl + p_cyl - 1;
3885:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (e_cyl >= tot_cyl) return FR_INVALID_PARAMETER;
3886:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3887:../Dave/Generated/src/FATFS002/Src/ff.c **** 		/* Set partition table */
3888:../Dave/Generated/src/FATFS002/Src/ff.c **** 		p[1] = s_hd;						/* Start head */
3889:../Dave/Generated/src/FATFS002/Src/ff.c **** 		p[2] = (BYTE)((b_cyl >> 2) + 1);	/* Start sector */
3890:../Dave/Generated/src/FATFS002/Src/ff.c **** 		p[3] = (BYTE)b_cyl;					/* Start cylinder */
3891:../Dave/Generated/src/FATFS002/Src/ff.c **** 		p[4] = 0x06;						/* System type (temporary setting) */
3892:../Dave/Generated/src/FATFS002/Src/ff.c **** 		p[5] = e_hd;						/* End head */
3893:../Dave/Generated/src/FATFS002/Src/ff.c **** 		p[6] = (BYTE)((e_cyl >> 2) + 63);	/* End sector */
3894:../Dave/Generated/src/FATFS002/Src/ff.c **** 		p[7] = (BYTE)e_cyl;					/* End cylinder */
3895:../Dave/Generated/src/FATFS002/Src/ff.c **** 		ST_DWORD(p + 8, s_part);			/* Start sector in LBA */
3896:../Dave/Generated/src/FATFS002/Src/ff.c **** 		ST_DWORD(p + 12, sz_part);			/* Partition size */
3897:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3898:../Dave/Generated/src/FATFS002/Src/ff.c **** 		/* Next partition */
3899:../Dave/Generated/src/FATFS002/Src/ff.c **** 		b_cyl += p_cyl;
3900:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
3901:../Dave/Generated/src/FATFS002/Src/ff.c **** 	ST_WORD(p, 0xAA55);
3902:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3903:../Dave/Generated/src/FATFS002/Src/ff.c **** 	/* Write it to the MBR */
3904:../Dave/Generated/src/FATFS002/Src/ff.c **** 	return (disk_write(pdrv, buf, 0, 1) || disk_ioctl(pdrv, CTRL_SYNC, 0)) ? FR_DISK_ERR : FR_OK;
3905:../Dave/Generated/src/FATFS002/Src/ff.c **** }
3906:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3907:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3908:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif /* _MULTI_PARTITION == 2 */
3909:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif /* _USE_MKFS && !_FS_READONLY */
3910:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3911:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3912:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3913:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3914:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _USE_STRFUNC
3915:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
3916:../Dave/Generated/src/FATFS002/Src/ff.c **** /* Get a string from the file                                            */
3917:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
3918:../Dave/Generated/src/FATFS002/Src/ff.c **** TCHAR* f_gets (
3919:../Dave/Generated/src/FATFS002/Src/ff.c **** 	TCHAR* buff,	/* Pointer to the string buffer to read */
3920:../Dave/Generated/src/FATFS002/Src/ff.c **** 	int len,		/* Size of string buffer (characters) */
3921:../Dave/Generated/src/FATFS002/Src/ff.c **** 	FIL* fil		/* Pointer to the file object */
3922:../Dave/Generated/src/FATFS002/Src/ff.c **** )
3923:../Dave/Generated/src/FATFS002/Src/ff.c **** {
 9871              		.loc 1 3923 0
 9872              		.cfi_startproc
 9873              		@ args = 0, pretend = 0, frame = 32
 9874              		@ frame_needed = 1, uses_anonymous_args = 0
 9875 0000 80B5     		push	{r7, lr}
 9876              	.LCFI129:
 9877              		.cfi_def_cfa_offset 8
 9878              		.cfi_offset 7, -8
 9879              		.cfi_offset 14, -4
 9880 0002 88B0     		sub	sp, sp, #32
 9881              	.LCFI130:
 9882              		.cfi_def_cfa_offset 40
 9883 0004 00AF     		add	r7, sp, #0
 9884              	.LCFI131:
 9885              		.cfi_def_cfa_register 7
 9886 0006 F860     		str	r0, [r7, #12]
 9887 0008 B960     		str	r1, [r7, #8]
 9888 000a 7A60     		str	r2, [r7, #4]
3924:../Dave/Generated/src/FATFS002/Src/ff.c **** 	int n = 0;
 9889              		.loc 1 3924 0
 9890 000c 4FF00003 		mov	r3, #0
 9891 0010 FB61     		str	r3, [r7, #28]
3925:../Dave/Generated/src/FATFS002/Src/ff.c **** 	TCHAR c, *p = buff;
 9892              		.loc 1 3925 0
 9893 0012 FB68     		ldr	r3, [r7, #12]
 9894 0014 BB61     		str	r3, [r7, #24]
3926:../Dave/Generated/src/FATFS002/Src/ff.c **** 	BYTE s[2];
3927:../Dave/Generated/src/FATFS002/Src/ff.c **** 	UINT rc;
3928:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3929:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3930:../Dave/Generated/src/FATFS002/Src/ff.c **** 	while (n < len - 1) {			/* Read bytes until buffer gets filled */
 9895              		.loc 1 3930 0
 9896 0016 1CE0     		b	.L550
 9897              	.L553:
3931:../Dave/Generated/src/FATFS002/Src/ff.c **** 		f_read(fil, s, 1, &rc);
 9898              		.loc 1 3931 0
 9899 0018 07F11402 		add	r2, r7, #20
 9900 001c 07F11003 		add	r3, r7, #16
 9901 0020 7868     		ldr	r0, [r7, #4]
 9902 0022 1146     		mov	r1, r2
 9903 0024 4FF00102 		mov	r2, #1
 9904 0028 FFF7FEFF 		bl	f_read
3932:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (rc != 1) break;			/* Break on EOF or error */
 9905              		.loc 1 3932 0
 9906 002c 3B69     		ldr	r3, [r7, #16]
 9907 002e 012B     		cmp	r3, #1
 9908 0030 16D1     		bne	.L557
 9909              	.L551:
3933:../Dave/Generated/src/FATFS002/Src/ff.c **** 		c = s[0];
 9910              		.loc 1 3933 0
 9911 0032 3B7D     		ldrb	r3, [r7, #20]
 9912 0034 FB75     		strb	r3, [r7, #23]
3934:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _LFN_UNICODE					/* Read a character in UTF-8 encoding */
3935:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (c >= 0x80) {
3936:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (c < 0xC0) continue;	/* Skip stray trailer */
3937:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (c < 0xE0) {			/* Two-byte sequense */
3938:../Dave/Generated/src/FATFS002/Src/ff.c **** 				f_read(fil, s, 1, &rc);
3939:../Dave/Generated/src/FATFS002/Src/ff.c **** 				if (rc != 1) break;
3940:../Dave/Generated/src/FATFS002/Src/ff.c **** 				c = ((c & 0x1F) << 6) | (s[0] & 0x3F);
3941:../Dave/Generated/src/FATFS002/Src/ff.c **** 				if (c < 0x80) c = '?';
3942:../Dave/Generated/src/FATFS002/Src/ff.c **** 			} else {
3943:../Dave/Generated/src/FATFS002/Src/ff.c **** 				if (c < 0xF0) {		/* Three-byte sequense */
3944:../Dave/Generated/src/FATFS002/Src/ff.c **** 					f_read(fil, s, 2, &rc);
3945:../Dave/Generated/src/FATFS002/Src/ff.c **** 					if (rc != 2) break;
3946:../Dave/Generated/src/FATFS002/Src/ff.c **** 					c = (c << 12) | ((s[0] & 0x3F) << 6) | (s[1] & 0x3F);
3947:../Dave/Generated/src/FATFS002/Src/ff.c **** 					if (c < 0x800) c = '?';
3948:../Dave/Generated/src/FATFS002/Src/ff.c **** 				} else {			/* Reject four-byte sequense */
3949:../Dave/Generated/src/FATFS002/Src/ff.c **** 					c = '?';
3950:../Dave/Generated/src/FATFS002/Src/ff.c **** 				}
3951:../Dave/Generated/src/FATFS002/Src/ff.c **** 			}
3952:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
3953:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
3954:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _USE_STRFUNC >= 2
3955:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (c == '\r') continue;	/* Strip '\r' */
3956:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
3957:../Dave/Generated/src/FATFS002/Src/ff.c **** 		*p++ = c;
 9913              		.loc 1 3957 0
 9914 0036 BB69     		ldr	r3, [r7, #24]
 9915 0038 FA7D     		ldrb	r2, [r7, #23]
 9916 003a 1A70     		strb	r2, [r3, #0]
 9917 003c BB69     		ldr	r3, [r7, #24]
 9918 003e 03F10103 		add	r3, r3, #1
 9919 0042 BB61     		str	r3, [r7, #24]
3958:../Dave/Generated/src/FATFS002/Src/ff.c **** 		n++;
 9920              		.loc 1 3958 0
 9921 0044 FB69     		ldr	r3, [r7, #28]
 9922 0046 03F10103 		add	r3, r3, #1
 9923 004a FB61     		str	r3, [r7, #28]
3959:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (c == '\n') break;		/* Break on EOL */
 9924              		.loc 1 3959 0
 9925 004c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9926 004e 0A2B     		cmp	r3, #10
 9927 0050 08D0     		beq	.L558
 9928              	.L550:
3930:../Dave/Generated/src/FATFS002/Src/ff.c **** 	while (n < len - 1) {			/* Read bytes until buffer gets filled */
 9929              		.loc 1 3930 0 discriminator 1
 9930 0052 BB68     		ldr	r3, [r7, #8]
 9931 0054 03F1FF32 		add	r2, r3, #-1
 9932 0058 FB69     		ldr	r3, [r7, #28]
 9933 005a 9A42     		cmp	r2, r3
 9934 005c DCDC     		bgt	.L553
 9935 005e 02E0     		b	.L552
 9936              	.L557:
3932:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (rc != 1) break;			/* Break on EOF or error */
 9937              		.loc 1 3932 0
 9938 0060 00BF     		nop
 9939 0062 00E0     		b	.L552
 9940              	.L558:
 9941              		.loc 1 3959 0
 9942 0064 00BF     		nop
 9943              	.L552:
3960:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
3961:../Dave/Generated/src/FATFS002/Src/ff.c **** 	*p = 0;
 9944              		.loc 1 3961 0
 9945 0066 BB69     		ldr	r3, [r7, #24]
 9946 0068 4FF00002 		mov	r2, #0
 9947 006c 1A70     		strb	r2, [r3, #0]
3962:../Dave/Generated/src/FATFS002/Src/ff.c **** 	return n ? buff : 0;			/* When no data read (eof or error), return with error. */
 9948              		.loc 1 3962 0
 9949 006e FB69     		ldr	r3, [r7, #28]
 9950 0070 002B     		cmp	r3, #0
 9951 0072 01D0     		beq	.L554
 9952              		.loc 1 3962 0 is_stmt 0 discriminator 1
 9953 0074 FB68     		ldr	r3, [r7, #12]
 9954 0076 01E0     		b	.L555
 9955              	.L554:
 9956              		.loc 1 3962 0 discriminator 2
 9957 0078 4FF00003 		mov	r3, #0
 9958              	.L555:
3963:../Dave/Generated/src/FATFS002/Src/ff.c **** }
 9959              		.loc 1 3963 0 is_stmt 1 discriminator 3
 9960 007c 1846     		mov	r0, r3
 9961 007e 07F12007 		add	r7, r7, #32
 9962 0082 BD46     		mov	sp, r7
 9963 0084 80BD     		pop	{r7, pc}
 9964              		.cfi_endproc
 9965              	.LFE43:
 9967 0086 00BF     		.section	.text.f_putc,"ax",%progbits
 9968              		.align	2
 9969              		.global	f_putc
 9970              		.thumb
 9971              		.thumb_func
 9973              	f_putc:
 9974              	.LFB44:
3964:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3965:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3966:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3967:../Dave/Generated/src/FATFS002/Src/ff.c **** #if !_FS_READONLY
3968:../Dave/Generated/src/FATFS002/Src/ff.c **** #include <stdarg.h>
3969:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
3970:../Dave/Generated/src/FATFS002/Src/ff.c **** /* Put a character to the file                                           */
3971:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
3972:../Dave/Generated/src/FATFS002/Src/ff.c **** int f_putc (
3973:../Dave/Generated/src/FATFS002/Src/ff.c **** 	TCHAR c,	/* A character to be output */
3974:../Dave/Generated/src/FATFS002/Src/ff.c **** 	FIL* fil	/* Pointer to the file object */
3975:../Dave/Generated/src/FATFS002/Src/ff.c **** )
3976:../Dave/Generated/src/FATFS002/Src/ff.c **** {
 9975              		.loc 1 3976 0
 9976              		.cfi_startproc
 9977              		@ args = 0, pretend = 0, frame = 24
 9978              		@ frame_needed = 1, uses_anonymous_args = 0
 9979 0000 80B5     		push	{r7, lr}
 9980              	.LCFI132:
 9981              		.cfi_def_cfa_offset 8
 9982              		.cfi_offset 7, -8
 9983              		.cfi_offset 14, -4
 9984 0002 86B0     		sub	sp, sp, #24
 9985              	.LCFI133:
 9986              		.cfi_def_cfa_offset 32
 9987 0004 00AF     		add	r7, sp, #0
 9988              	.LCFI134:
 9989              		.cfi_def_cfa_register 7
 9990 0006 0346     		mov	r3, r0
 9991 0008 3960     		str	r1, [r7, #0]
 9992 000a FB71     		strb	r3, [r7, #7]
3977:../Dave/Generated/src/FATFS002/Src/ff.c **** 	UINT bw, btw;
3978:../Dave/Generated/src/FATFS002/Src/ff.c **** 	BYTE s[3];
3979:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3980:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3981:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _USE_STRFUNC >= 2
3982:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (c == '\n') f_putc ('\r', fil);	/* LF -> CRLF conversion */
3983:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
3984:../Dave/Generated/src/FATFS002/Src/ff.c **** 
3985:../Dave/Generated/src/FATFS002/Src/ff.c **** #if _LFN_UNICODE	/* Write the character in UTF-8 encoding */
3986:../Dave/Generated/src/FATFS002/Src/ff.c **** 	if (c < 0x80) {			/* 7-bit */
3987:../Dave/Generated/src/FATFS002/Src/ff.c **** 		s[0] = (BYTE)c;
3988:../Dave/Generated/src/FATFS002/Src/ff.c **** 		btw = 1;
3989:../Dave/Generated/src/FATFS002/Src/ff.c **** 	} else {
3990:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (c < 0x800) {	/* 11-bit */
3991:../Dave/Generated/src/FATFS002/Src/ff.c **** 			s[0] = (BYTE)(0xC0 | (c >> 6));
3992:../Dave/Generated/src/FATFS002/Src/ff.c **** 			s[1] = (BYTE)(0x80 | (c & 0x3F));
3993:../Dave/Generated/src/FATFS002/Src/ff.c **** 			btw = 2;
3994:../Dave/Generated/src/FATFS002/Src/ff.c **** 		} else {			/* 16-bit */
3995:../Dave/Generated/src/FATFS002/Src/ff.c **** 			s[0] = (BYTE)(0xE0 | (c >> 12));
3996:../Dave/Generated/src/FATFS002/Src/ff.c **** 			s[1] = (BYTE)(0x80 | ((c >> 6) & 0x3F));
3997:../Dave/Generated/src/FATFS002/Src/ff.c **** 			s[2] = (BYTE)(0x80 | (c & 0x3F));
3998:../Dave/Generated/src/FATFS002/Src/ff.c **** 			btw = 3;
3999:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
4000:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
4001:../Dave/Generated/src/FATFS002/Src/ff.c **** #else				/* Write the character without conversion */
4002:../Dave/Generated/src/FATFS002/Src/ff.c **** 	s[0] = (BYTE)c;
 9993              		.loc 1 4002 0
 9994 000c FB79     		ldrb	r3, [r7, #7]
 9995 000e 3B73     		strb	r3, [r7, #12]
4003:../Dave/Generated/src/FATFS002/Src/ff.c **** 	btw = 1;
 9996              		.loc 1 4003 0
 9997 0010 4FF00103 		mov	r3, #1
 9998 0014 7B61     		str	r3, [r7, #20]
4004:../Dave/Generated/src/FATFS002/Src/ff.c **** #endif
4005:../Dave/Generated/src/FATFS002/Src/ff.c **** 	f_write(fil, s, btw, &bw);		/* Write the char to the file */
 9999              		.loc 1 4005 0
 10000 0016 07F10C02 		add	r2, r7, #12
 10001 001a 07F11003 		add	r3, r7, #16
 10002 001e 3868     		ldr	r0, [r7, #0]
 10003 0020 1146     		mov	r1, r2
 10004 0022 7A69     		ldr	r2, [r7, #20]
 10005 0024 FFF7FEFF 		bl	f_write
4006:../Dave/Generated/src/FATFS002/Src/ff.c **** 	return (bw == btw) ? 1 : EOF;	/* Return the result */
 10006              		.loc 1 4006 0
 10007 0028 3A69     		ldr	r2, [r7, #16]
 10008 002a 7B69     		ldr	r3, [r7, #20]
 10009 002c 9A42     		cmp	r2, r3
 10010 002e 02D1     		bne	.L560
 10011              		.loc 1 4006 0 is_stmt 0 discriminator 1
 10012 0030 4FF00103 		mov	r3, #1
 10013 0034 01E0     		b	.L561
 10014              	.L560:
 10015              		.loc 1 4006 0 discriminator 2
 10016 0036 4FF0FF33 		mov	r3, #-1
 10017              	.L561:
4007:../Dave/Generated/src/FATFS002/Src/ff.c **** }
 10018              		.loc 1 4007 0 is_stmt 1 discriminator 3
 10019 003a 1846     		mov	r0, r3
 10020 003c 07F11807 		add	r7, r7, #24
 10021 0040 BD46     		mov	sp, r7
 10022 0042 80BD     		pop	{r7, pc}
 10023              		.cfi_endproc
 10024              	.LFE44:
 10026              		.section	.text.f_puts,"ax",%progbits
 10027              		.align	2
 10028              		.global	f_puts
 10029              		.thumb
 10030              		.thumb_func
 10032              	f_puts:
 10033              	.LFB45:
4008:../Dave/Generated/src/FATFS002/Src/ff.c **** 
4009:../Dave/Generated/src/FATFS002/Src/ff.c **** 
4010:../Dave/Generated/src/FATFS002/Src/ff.c **** 
4011:../Dave/Generated/src/FATFS002/Src/ff.c **** 
4012:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
4013:../Dave/Generated/src/FATFS002/Src/ff.c **** /* Put a string to the file                                              */
4014:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
4015:../Dave/Generated/src/FATFS002/Src/ff.c **** int f_puts (
4016:../Dave/Generated/src/FATFS002/Src/ff.c **** 	const TCHAR* str,	/* Pointer to the string to be output */
4017:../Dave/Generated/src/FATFS002/Src/ff.c **** 	FIL* fil			/* Pointer to the file object */
4018:../Dave/Generated/src/FATFS002/Src/ff.c **** )
4019:../Dave/Generated/src/FATFS002/Src/ff.c **** {
 10034              		.loc 1 4019 0
 10035              		.cfi_startproc
 10036              		@ args = 0, pretend = 0, frame = 16
 10037              		@ frame_needed = 1, uses_anonymous_args = 0
 10038 0000 80B5     		push	{r7, lr}
 10039              	.LCFI135:
 10040              		.cfi_def_cfa_offset 8
 10041              		.cfi_offset 7, -8
 10042              		.cfi_offset 14, -4
 10043 0002 84B0     		sub	sp, sp, #16
 10044              	.LCFI136:
 10045              		.cfi_def_cfa_offset 24
 10046 0004 00AF     		add	r7, sp, #0
 10047              	.LCFI137:
 10048              		.cfi_def_cfa_register 7
 10049 0006 7860     		str	r0, [r7, #4]
 10050 0008 3960     		str	r1, [r7, #0]
4020:../Dave/Generated/src/FATFS002/Src/ff.c **** 	int n;
4021:../Dave/Generated/src/FATFS002/Src/ff.c **** 
4022:../Dave/Generated/src/FATFS002/Src/ff.c **** 
4023:../Dave/Generated/src/FATFS002/Src/ff.c **** 	for (n = 0; *str; str++, n++) {
 10051              		.loc 1 4023 0
 10052 000a 4FF00003 		mov	r3, #0
 10053 000e FB60     		str	r3, [r7, #12]
 10054 0010 14E0     		b	.L564
 10055              	.L567:
4024:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (f_putc(*str, fil) == EOF) return EOF;
 10056              		.loc 1 4024 0
 10057 0012 7B68     		ldr	r3, [r7, #4]
 10058 0014 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 10059 0016 1846     		mov	r0, r3
 10060 0018 3968     		ldr	r1, [r7, #0]
 10061 001a FFF7FEFF 		bl	f_putc
 10062 001e 0346     		mov	r3, r0
 10063 0020 B3F1FF3F 		cmp	r3, #-1
 10064 0024 02D1     		bne	.L565
 10065              		.loc 1 4024 0 is_stmt 0 discriminator 1
 10066 0026 4FF0FF33 		mov	r3, #-1
 10067 002a 0CE0     		b	.L566
 10068              	.L565:
4023:../Dave/Generated/src/FATFS002/Src/ff.c **** 	for (n = 0; *str; str++, n++) {
 10069              		.loc 1 4023 0 is_stmt 1
 10070 002c 7B68     		ldr	r3, [r7, #4]
 10071 002e 03F10103 		add	r3, r3, #1
 10072 0032 7B60     		str	r3, [r7, #4]
 10073 0034 FB68     		ldr	r3, [r7, #12]
 10074 0036 03F10103 		add	r3, r3, #1
 10075 003a FB60     		str	r3, [r7, #12]
 10076              	.L564:
4023:../Dave/Generated/src/FATFS002/Src/ff.c **** 	for (n = 0; *str; str++, n++) {
 10077              		.loc 1 4023 0 is_stmt 0 discriminator 1
 10078 003c 7B68     		ldr	r3, [r7, #4]
 10079 003e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 10080 0040 002B     		cmp	r3, #0
 10081 0042 E6D1     		bne	.L567
4025:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
4026:../Dave/Generated/src/FATFS002/Src/ff.c **** 	return n;
 10082              		.loc 1 4026 0 is_stmt 1
 10083 0044 FB68     		ldr	r3, [r7, #12]
 10084              	.L566:
4027:../Dave/Generated/src/FATFS002/Src/ff.c **** }
 10085              		.loc 1 4027 0
 10086 0046 1846     		mov	r0, r3
 10087 0048 07F11007 		add	r7, r7, #16
 10088 004c BD46     		mov	sp, r7
 10089 004e 80BD     		pop	{r7, pc}
 10090              		.cfi_endproc
 10091              	.LFE45:
 10093              		.section	.text.f_printf,"ax",%progbits
 10094              		.align	2
 10095              		.global	f_printf
 10096              		.thumb
 10097              		.thumb_func
 10099              	f_printf:
 10100              	.LFB46:
4028:../Dave/Generated/src/FATFS002/Src/ff.c **** 
4029:../Dave/Generated/src/FATFS002/Src/ff.c **** 
4030:../Dave/Generated/src/FATFS002/Src/ff.c **** 
4031:../Dave/Generated/src/FATFS002/Src/ff.c **** 
4032:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
4033:../Dave/Generated/src/FATFS002/Src/ff.c **** /* Put a formatted string to the file                                    */
4034:../Dave/Generated/src/FATFS002/Src/ff.c **** /*-----------------------------------------------------------------------*/
4035:../Dave/Generated/src/FATFS002/Src/ff.c **** int f_printf (
4036:../Dave/Generated/src/FATFS002/Src/ff.c **** 	FIL* fil,			/* Pointer to the file object */
4037:../Dave/Generated/src/FATFS002/Src/ff.c **** 	const TCHAR* str,	/* Pointer to the format string */
4038:../Dave/Generated/src/FATFS002/Src/ff.c **** 	...					/* Optional arguments... */
4039:../Dave/Generated/src/FATFS002/Src/ff.c **** )
4040:../Dave/Generated/src/FATFS002/Src/ff.c **** {
 10101              		.loc 1 4040 0
 10102              		.cfi_startproc
 10103              		@ args = 4, pretend = 12, frame = 72
 10104              		@ frame_needed = 1, uses_anonymous_args = 1
 10105 0000 0EB4     		push	{r1, r2, r3}
 10106              	.LCFI138:
 10107              		.cfi_def_cfa_offset 12
 10108              		.cfi_offset 1, -12
 10109              		.cfi_offset 2, -8
 10110              		.cfi_offset 3, -4
 10111 0002 80B5     		push	{r7, lr}
 10112              	.LCFI139:
 10113              		.cfi_def_cfa_offset 20
 10114              		.cfi_offset 7, -20
 10115              		.cfi_offset 14, -16
 10116 0004 93B0     		sub	sp, sp, #76
 10117              	.LCFI140:
 10118              		.cfi_def_cfa_offset 96
 10119 0006 00AF     		add	r7, sp, #0
 10120              	.LCFI141:
 10121              		.cfi_def_cfa_register 7
 10122 0008 7860     		str	r0, [r7, #4]
4041:../Dave/Generated/src/FATFS002/Src/ff.c **** 	va_list arp;
4042:../Dave/Generated/src/FATFS002/Src/ff.c **** 	BYTE f, r;
4043:../Dave/Generated/src/FATFS002/Src/ff.c **** 	UINT i, j, w;
4044:../Dave/Generated/src/FATFS002/Src/ff.c **** 	ULONG v;
4045:../Dave/Generated/src/FATFS002/Src/ff.c **** 	TCHAR c, d, s[16], *p;
4046:../Dave/Generated/src/FATFS002/Src/ff.c **** 	int res, chc, cc;
4047:../Dave/Generated/src/FATFS002/Src/ff.c **** 
4048:../Dave/Generated/src/FATFS002/Src/ff.c **** 
4049:../Dave/Generated/src/FATFS002/Src/ff.c **** 	va_start(arp, str);
 10123              		.loc 1 4049 0
 10124 000a 07F15803 		add	r3, r7, #88
 10125 000e FB61     		str	r3, [r7, #28]
4050:../Dave/Generated/src/FATFS002/Src/ff.c **** 
4051:../Dave/Generated/src/FATFS002/Src/ff.c **** 	for (cc = res = 0; cc != EOF; res += cc) {
 10126              		.loc 1 4051 0
 10127 0010 4FF00003 		mov	r3, #0
 10128 0014 FB62     		str	r3, [r7, #44]
 10129 0016 FB6A     		ldr	r3, [r7, #44]
 10130 0018 7B62     		str	r3, [r7, #36]
 10131 001a 3EE2     		b	.L569
 10132              	.L619:
4052:../Dave/Generated/src/FATFS002/Src/ff.c **** 		c = *str++;
 10133              		.loc 1 4052 0
 10134 001c 7B6D     		ldr	r3, [r7, #84]
 10135 001e 1B78     		ldrb	r3, [r3, #0]
 10136 0020 87F83330 		strb	r3, [r7, #51]
 10137 0024 7B6D     		ldr	r3, [r7, #84]
 10138 0026 03F10103 		add	r3, r3, #1
 10139 002a 7B65     		str	r3, [r7, #84]
4053:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (c == 0) break;			/* End of string */
 10140              		.loc 1 4053 0
 10141 002c 97F83330 		ldrb	r3, [r7, #51]	@ zero_extendqisi2
 10142 0030 002B     		cmp	r3, #0
 10143 0032 00F03882 		beq	.L623
 10144              	.L570:
4054:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (c != '%') {				/* Non escape character */
 10145              		.loc 1 4054 0
 10146 0036 97F83330 		ldrb	r3, [r7, #51]	@ zero_extendqisi2
 10147 003a 252B     		cmp	r3, #37
 10148 003c 0FD0     		beq	.L572
4055:../Dave/Generated/src/FATFS002/Src/ff.c **** 			cc = f_putc(c, fil);
 10149              		.loc 1 4055 0
 10150 003e 97F83330 		ldrb	r3, [r7, #51]	@ zero_extendqisi2
 10151 0042 1846     		mov	r0, r3
 10152 0044 7968     		ldr	r1, [r7, #4]
 10153 0046 FFF7FEFF 		bl	f_putc
 10154 004a 7862     		str	r0, [r7, #36]
4056:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (cc != EOF) cc = 1;
 10155              		.loc 1 4056 0
 10156 004c 7B6A     		ldr	r3, [r7, #36]
 10157 004e B3F1FF3F 		cmp	r3, #-1
 10158 0052 00F01B82 		beq	.L624
 10159              		.loc 1 4056 0 is_stmt 0 discriminator 1
 10160 0056 4FF00103 		mov	r3, #1
 10161 005a 7B62     		str	r3, [r7, #36]
4057:../Dave/Generated/src/FATFS002/Src/ff.c **** 			continue;
 10162              		.loc 1 4057 0 is_stmt 1 discriminator 1
 10163 005c 16E2     		b	.L624
 10164              	.L572:
4058:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
4059:../Dave/Generated/src/FATFS002/Src/ff.c **** 		w = f = 0;
 10165              		.loc 1 4059 0
 10166 005e 4FF00003 		mov	r3, #0
 10167 0062 87F84730 		strb	r3, [r7, #71]
 10168 0066 4FF00003 		mov	r3, #0
 10169 006a BB63     		str	r3, [r7, #56]
4060:../Dave/Generated/src/FATFS002/Src/ff.c **** 		c = *str++;
 10170              		.loc 1 4060 0
 10171 006c 7B6D     		ldr	r3, [r7, #84]
 10172 006e 1B78     		ldrb	r3, [r3, #0]
 10173 0070 87F83330 		strb	r3, [r7, #51]
 10174 0074 7B6D     		ldr	r3, [r7, #84]
 10175 0076 03F10103 		add	r3, r3, #1
 10176 007a 7B65     		str	r3, [r7, #84]
4061:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (c == '0') {				/* Flag: '0' padding */
 10177              		.loc 1 4061 0
 10178 007c 97F83330 		ldrb	r3, [r7, #51]	@ zero_extendqisi2
 10179 0080 302B     		cmp	r3, #48
 10180 0082 0CD1     		bne	.L575
4062:../Dave/Generated/src/FATFS002/Src/ff.c **** 			f = 1; c = *str++;
 10181              		.loc 1 4062 0
 10182 0084 4FF00103 		mov	r3, #1
 10183 0088 87F84730 		strb	r3, [r7, #71]
 10184 008c 7B6D     		ldr	r3, [r7, #84]
 10185 008e 1B78     		ldrb	r3, [r3, #0]
 10186 0090 87F83330 		strb	r3, [r7, #51]
 10187 0094 7B6D     		ldr	r3, [r7, #84]
 10188 0096 03F10103 		add	r3, r3, #1
 10189 009a 7B65     		str	r3, [r7, #84]
4063:../Dave/Generated/src/FATFS002/Src/ff.c **** 		} else {
4064:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (c == '-') {			/* Flag: left justified */
4065:../Dave/Generated/src/FATFS002/Src/ff.c **** 				f = 2; c = *str++;
4066:../Dave/Generated/src/FATFS002/Src/ff.c **** 			}
4067:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
4068:../Dave/Generated/src/FATFS002/Src/ff.c **** 		while (IsDigit(c)) {		/* Precision */
 10190              		.loc 1 4068 0
 10191 009c 26E0     		b	.L577
 10192              	.L575:
4064:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (c == '-') {			/* Flag: left justified */
 10193              		.loc 1 4064 0
 10194 009e 97F83330 		ldrb	r3, [r7, #51]	@ zero_extendqisi2
 10195 00a2 2D2B     		cmp	r3, #45
 10196 00a4 22D1     		bne	.L577
4065:../Dave/Generated/src/FATFS002/Src/ff.c **** 				f = 2; c = *str++;
 10197              		.loc 1 4065 0
 10198 00a6 4FF00203 		mov	r3, #2
 10199 00aa 87F84730 		strb	r3, [r7, #71]
 10200 00ae 7B6D     		ldr	r3, [r7, #84]
 10201 00b0 1B78     		ldrb	r3, [r3, #0]
 10202 00b2 87F83330 		strb	r3, [r7, #51]
 10203 00b6 7B6D     		ldr	r3, [r7, #84]
 10204 00b8 03F10103 		add	r3, r3, #1
 10205 00bc 7B65     		str	r3, [r7, #84]
 10206              		.loc 1 4068 0
 10207 00be 15E0     		b	.L577
 10208              	.L579:
4069:../Dave/Generated/src/FATFS002/Src/ff.c **** 			w = w * 10 + c - '0';
 10209              		.loc 1 4069 0
 10210 00c0 BA6B     		ldr	r2, [r7, #56]
 10211 00c2 1346     		mov	r3, r2
 10212 00c4 4FEA8303 		lsl	r3, r3, #2
 10213 00c8 9B18     		adds	r3, r3, r2
 10214 00ca 4FEA4303 		lsl	r3, r3, #1
 10215 00ce 1A46     		mov	r2, r3
 10216 00d0 97F83330 		ldrb	r3, [r7, #51]	@ zero_extendqisi2
 10217 00d4 D318     		adds	r3, r2, r3
 10218 00d6 A3F13003 		sub	r3, r3, #48
 10219 00da BB63     		str	r3, [r7, #56]
4070:../Dave/Generated/src/FATFS002/Src/ff.c **** 			c = *str++;
 10220              		.loc 1 4070 0
 10221 00dc 7B6D     		ldr	r3, [r7, #84]
 10222 00de 1B78     		ldrb	r3, [r3, #0]
 10223 00e0 87F83330 		strb	r3, [r7, #51]
 10224 00e4 7B6D     		ldr	r3, [r7, #84]
 10225 00e6 03F10103 		add	r3, r3, #1
 10226 00ea 7B65     		str	r3, [r7, #84]
 10227              	.L577:
4068:../Dave/Generated/src/FATFS002/Src/ff.c **** 		while (IsDigit(c)) {		/* Precision */
 10228              		.loc 1 4068 0 discriminator 1
 10229 00ec 97F83330 		ldrb	r3, [r7, #51]	@ zero_extendqisi2
 10230 00f0 2F2B     		cmp	r3, #47
 10231 00f2 03D9     		bls	.L578
4068:../Dave/Generated/src/FATFS002/Src/ff.c **** 		while (IsDigit(c)) {		/* Precision */
 10232              		.loc 1 4068 0 is_stmt 0 discriminator 2
 10233 00f4 97F83330 		ldrb	r3, [r7, #51]	@ zero_extendqisi2
 10234 00f8 392B     		cmp	r3, #57
 10235 00fa E1D9     		bls	.L579
 10236              	.L578:
4071:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
4072:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (c == 'l' || c == 'L') {	/* Prefix: Size is long int */
 10237              		.loc 1 4072 0 is_stmt 1
 10238 00fc 97F83330 		ldrb	r3, [r7, #51]	@ zero_extendqisi2
 10239 0100 6C2B     		cmp	r3, #108
 10240 0102 03D0     		beq	.L580
 10241              		.loc 1 4072 0 is_stmt 0 discriminator 1
 10242 0104 97F83330 		ldrb	r3, [r7, #51]	@ zero_extendqisi2
 10243 0108 4C2B     		cmp	r3, #76
 10244 010a 0DD1     		bne	.L581
 10245              	.L580:
4073:../Dave/Generated/src/FATFS002/Src/ff.c **** 			f |= 4; c = *str++;
 10246              		.loc 1 4073 0 is_stmt 1
 10247 010c 97F84730 		ldrb	r3, [r7, #71]
 10248 0110 43F00403 		orr	r3, r3, #4
 10249 0114 87F84730 		strb	r3, [r7, #71]
 10250 0118 7B6D     		ldr	r3, [r7, #84]
 10251 011a 1B78     		ldrb	r3, [r3, #0]
 10252 011c 87F83330 		strb	r3, [r7, #51]
 10253 0120 7B6D     		ldr	r3, [r7, #84]
 10254 0122 03F10103 		add	r3, r3, #1
 10255 0126 7B65     		str	r3, [r7, #84]
 10256              	.L581:
4074:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
4075:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (!c) break;
 10257              		.loc 1 4075 0
 10258 0128 97F83330 		ldrb	r3, [r7, #51]	@ zero_extendqisi2
 10259 012c 002B     		cmp	r3, #0
 10260 012e 00F0BC81 		beq	.L625
 10261              	.L582:
4076:../Dave/Generated/src/FATFS002/Src/ff.c **** 		d = c;
 10262              		.loc 1 4076 0
 10263 0132 97F83330 		ldrb	r3, [r7, #51]
 10264 0136 87F83230 		strb	r3, [r7, #50]
4077:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (IsLower(d)) d -= 0x20;
 10265              		.loc 1 4077 0
 10266 013a 97F83230 		ldrb	r3, [r7, #50]	@ zero_extendqisi2
 10267 013e 602B     		cmp	r3, #96
 10268 0140 09D9     		bls	.L583
 10269              		.loc 1 4077 0 is_stmt 0 discriminator 1
 10270 0142 97F83230 		ldrb	r3, [r7, #50]	@ zero_extendqisi2
 10271 0146 7A2B     		cmp	r3, #122
 10272 0148 05D8     		bhi	.L583
 10273 014a 97F83230 		ldrb	r3, [r7, #50]
 10274 014e A3F12003 		sub	r3, r3, #32
 10275 0152 87F83230 		strb	r3, [r7, #50]
 10276              	.L583:
4078:../Dave/Generated/src/FATFS002/Src/ff.c **** 		switch (d) {				/* Type is... */
 10277              		.loc 1 4078 0 is_stmt 1
 10278 0156 97F83230 		ldrb	r3, [r7, #50]	@ zero_extendqisi2
 10279 015a A3F14203 		sub	r3, r3, #66
 10280 015e 162B     		cmp	r3, #22
 10281 0160 00F2B080 		bhi	.L584
 10282 0164 01A2     		adr	r2, .L591
 10283 0166 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 10284 016a 00BF     		.align	2
 10285              	.L591:
 10286 016c 9D020000 		.word	.L585+1
 10287 0170 85020000 		.word	.L586+1
 10288 0174 B1020000 		.word	.L587+1
 10289 0178 C5020000 		.word	.L584+1
 10290 017c C5020000 		.word	.L584+1
 10291 0180 C5020000 		.word	.L584+1
 10292 0184 C5020000 		.word	.L584+1
 10293 0188 C5020000 		.word	.L584+1
 10294 018c C5020000 		.word	.L584+1
 10295 0190 C5020000 		.word	.L584+1
 10296 0194 C5020000 		.word	.L584+1
 10297 0198 C5020000 		.word	.L584+1
 10298 019c C5020000 		.word	.L584+1
 10299 01a0 A7020000 		.word	.L588+1
 10300 01a4 C5020000 		.word	.L584+1
 10301 01a8 C5020000 		.word	.L584+1
 10302 01ac C5020000 		.word	.L584+1
 10303 01b0 C9010000 		.word	.L589+1
 10304 01b4 C5020000 		.word	.L584+1
 10305 01b8 B1020000 		.word	.L587+1
 10306 01bc C5020000 		.word	.L584+1
 10307 01c0 C5020000 		.word	.L584+1
 10308 01c4 BB020000 		.word	.L590+1
 10309              	.L589:
4079:../Dave/Generated/src/FATFS002/Src/ff.c **** 		case 'S' :					/* String */
4080:../Dave/Generated/src/FATFS002/Src/ff.c **** 			p = va_arg(arp, TCHAR*);
 10310              		.loc 1 4080 0
 10311 01c8 FB69     		ldr	r3, [r7, #28]
 10312 01ca 03F10402 		add	r2, r3, #4
 10313 01ce FA61     		str	r2, [r7, #28]
 10314 01d0 1B68     		ldr	r3, [r3, #0]
 10315 01d2 3B62     		str	r3, [r7, #32]
4081:../Dave/Generated/src/FATFS002/Src/ff.c **** 			for (j = 0; p[j]; j++) ;
 10316              		.loc 1 4081 0
 10317 01d4 4FF00003 		mov	r3, #0
 10318 01d8 FB63     		str	r3, [r7, #60]
 10319 01da 03E0     		b	.L592
 10320              	.L593:
 10321              		.loc 1 4081 0 is_stmt 0 discriminator 2
 10322 01dc FB6B     		ldr	r3, [r7, #60]
 10323 01de 03F10103 		add	r3, r3, #1
 10324 01e2 FB63     		str	r3, [r7, #60]
 10325              	.L592:
 10326              		.loc 1 4081 0 discriminator 1
 10327 01e4 3A6A     		ldr	r2, [r7, #32]
 10328 01e6 FB6B     		ldr	r3, [r7, #60]
 10329 01e8 D318     		adds	r3, r2, r3
 10330 01ea 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 10331 01ec 002B     		cmp	r3, #0
 10332 01ee F5D1     		bne	.L593
4082:../Dave/Generated/src/FATFS002/Src/ff.c **** 			chc = 0;
 10333              		.loc 1 4082 0 is_stmt 1
 10334 01f0 4FF00003 		mov	r3, #0
 10335 01f4 BB62     		str	r3, [r7, #40]
4083:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (!(f & 2)) {
 10336              		.loc 1 4083 0
 10337 01f6 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 10338 01fa 03F00203 		and	r3, r3, #2
 10339 01fe 002B     		cmp	r3, #0
 10340 0200 17D1     		bne	.L594
4084:../Dave/Generated/src/FATFS002/Src/ff.c **** 				while (j++ < w) chc += (cc = f_putc(' ', fil));
 10341              		.loc 1 4084 0
 10342 0202 09E0     		b	.L595
 10343              	.L596:
 10344              		.loc 1 4084 0 is_stmt 0 discriminator 2
 10345 0204 4FF02000 		mov	r0, #32
 10346 0208 7968     		ldr	r1, [r7, #4]
 10347 020a FFF7FEFF 		bl	f_putc
 10348 020e 7862     		str	r0, [r7, #36]
 10349 0210 BA6A     		ldr	r2, [r7, #40]
 10350 0212 7B6A     		ldr	r3, [r7, #36]
 10351 0214 D318     		adds	r3, r2, r3
 10352 0216 BB62     		str	r3, [r7, #40]
 10353              	.L595:
 10354              		.loc 1 4084 0 discriminator 1
 10355 0218 FA6B     		ldr	r2, [r7, #60]
 10356 021a BB6B     		ldr	r3, [r7, #56]
 10357 021c 9A42     		cmp	r2, r3
 10358 021e 2CBF     		ite	cs
 10359 0220 0023     		movcs	r3, #0
 10360 0222 0123     		movcc	r3, #1
 10361 0224 DBB2     		uxtb	r3, r3
 10362 0226 FA6B     		ldr	r2, [r7, #60]
 10363 0228 02F10102 		add	r2, r2, #1
 10364 022c FA63     		str	r2, [r7, #60]
 10365 022e 002B     		cmp	r3, #0
 10366 0230 E8D1     		bne	.L596
 10367              	.L594:
4085:../Dave/Generated/src/FATFS002/Src/ff.c **** 			}
4086:../Dave/Generated/src/FATFS002/Src/ff.c **** 			chc += (cc = f_puts(p, fil));
 10368              		.loc 1 4086 0 is_stmt 1
 10369 0232 386A     		ldr	r0, [r7, #32]
 10370 0234 7968     		ldr	r1, [r7, #4]
 10371 0236 FFF7FEFF 		bl	f_puts
 10372 023a 7862     		str	r0, [r7, #36]
 10373 023c BA6A     		ldr	r2, [r7, #40]
 10374 023e 7B6A     		ldr	r3, [r7, #36]
 10375 0240 D318     		adds	r3, r2, r3
 10376 0242 BB62     		str	r3, [r7, #40]
4087:../Dave/Generated/src/FATFS002/Src/ff.c **** 			while (j++ < w) chc += (cc = f_putc(' ', fil));
 10377              		.loc 1 4087 0
 10378 0244 09E0     		b	.L597
 10379              	.L598:
 10380              		.loc 1 4087 0 is_stmt 0 discriminator 2
 10381 0246 4FF02000 		mov	r0, #32
 10382 024a 7968     		ldr	r1, [r7, #4]
 10383 024c FFF7FEFF 		bl	f_putc
 10384 0250 7862     		str	r0, [r7, #36]
 10385 0252 BA6A     		ldr	r2, [r7, #40]
 10386 0254 7B6A     		ldr	r3, [r7, #36]
 10387 0256 D318     		adds	r3, r2, r3
 10388 0258 BB62     		str	r3, [r7, #40]
 10389              	.L597:
 10390              		.loc 1 4087 0 discriminator 1
 10391 025a FA6B     		ldr	r2, [r7, #60]
 10392 025c BB6B     		ldr	r3, [r7, #56]
 10393 025e 9A42     		cmp	r2, r3
 10394 0260 2CBF     		ite	cs
 10395 0262 0023     		movcs	r3, #0
 10396 0264 0123     		movcc	r3, #1
 10397 0266 DBB2     		uxtb	r3, r3
 10398 0268 FA6B     		ldr	r2, [r7, #60]
 10399 026a 02F10102 		add	r2, r2, #1
 10400 026e FA63     		str	r2, [r7, #60]
 10401 0270 002B     		cmp	r3, #0
 10402 0272 E8D1     		bne	.L598
4088:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (cc != EOF) cc = chc;
 10403              		.loc 1 4088 0 is_stmt 1
 10404 0274 7B6A     		ldr	r3, [r7, #36]
 10405 0276 B3F1FF3F 		cmp	r3, #-1
 10406 027a 00F00981 		beq	.L626
 10407              		.loc 1 4088 0 is_stmt 0 discriminator 1
 10408 027e BB6A     		ldr	r3, [r7, #40]
 10409 0280 7B62     		str	r3, [r7, #36]
4089:../Dave/Generated/src/FATFS002/Src/ff.c **** 			continue;
 10410              		.loc 1 4089 0 is_stmt 1 discriminator 1
 10411 0282 05E1     		b	.L626
 10412              	.L586:
4090:../Dave/Generated/src/FATFS002/Src/ff.c **** 		case 'C' :					/* Character */
4091:../Dave/Generated/src/FATFS002/Src/ff.c **** 			cc = f_putc((TCHAR)va_arg(arp, int), fil); continue;
 10413              		.loc 1 4091 0
 10414 0284 FB69     		ldr	r3, [r7, #28]
 10415 0286 03F10402 		add	r2, r3, #4
 10416 028a FA61     		str	r2, [r7, #28]
 10417 028c 1B68     		ldr	r3, [r3, #0]
 10418 028e DBB2     		uxtb	r3, r3
 10419 0290 1846     		mov	r0, r3
 10420 0292 7968     		ldr	r1, [r7, #4]
 10421 0294 FFF7FEFF 		bl	f_putc
 10422 0298 7862     		str	r0, [r7, #36]
 10423 029a FAE0     		b	.L574
 10424              	.L585:
4092:../Dave/Generated/src/FATFS002/Src/ff.c **** 		case 'B' :					/* Binary */
4093:../Dave/Generated/src/FATFS002/Src/ff.c **** 			r = 2; break;
 10425              		.loc 1 4093 0
 10426 029c 4FF00203 		mov	r3, #2
 10427 02a0 87F84630 		strb	r3, [r7, #70]
 10428 02a4 16E0     		b	.L600
 10429              	.L588:
4094:../Dave/Generated/src/FATFS002/Src/ff.c **** 		case 'O' :					/* Octal */
4095:../Dave/Generated/src/FATFS002/Src/ff.c **** 			r = 8; break;
 10430              		.loc 1 4095 0
 10431 02a6 4FF00803 		mov	r3, #8
 10432 02aa 87F84630 		strb	r3, [r7, #70]
 10433 02ae 11E0     		b	.L600
 10434              	.L587:
4096:../Dave/Generated/src/FATFS002/Src/ff.c **** 		case 'D' :					/* Signed decimal */
4097:../Dave/Generated/src/FATFS002/Src/ff.c **** 		case 'U' :					/* Unsigned decimal */
4098:../Dave/Generated/src/FATFS002/Src/ff.c **** 			r = 10; break;
 10435              		.loc 1 4098 0
 10436 02b0 4FF00A03 		mov	r3, #10
 10437 02b4 87F84630 		strb	r3, [r7, #70]
 10438 02b8 0CE0     		b	.L600
 10439              	.L590:
4099:../Dave/Generated/src/FATFS002/Src/ff.c **** 		case 'X' :					/* Hexdecimal */
4100:../Dave/Generated/src/FATFS002/Src/ff.c **** 			r = 16; break;
 10440              		.loc 1 4100 0
 10441 02ba 4FF01003 		mov	r3, #16
 10442 02be 87F84630 		strb	r3, [r7, #70]
 10443 02c2 07E0     		b	.L600
 10444              	.L584:
4101:../Dave/Generated/src/FATFS002/Src/ff.c **** 		default:					/* Unknown type (passthrough) */
4102:../Dave/Generated/src/FATFS002/Src/ff.c **** 			cc = f_putc(c, fil); continue;
 10445              		.loc 1 4102 0
 10446 02c4 97F83330 		ldrb	r3, [r7, #51]	@ zero_extendqisi2
 10447 02c8 1846     		mov	r0, r3
 10448 02ca 7968     		ldr	r1, [r7, #4]
 10449 02cc FFF7FEFF 		bl	f_putc
 10450 02d0 7862     		str	r0, [r7, #36]
 10451 02d2 DEE0     		b	.L574
 10452              	.L600:
4103:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
4104:../Dave/Generated/src/FATFS002/Src/ff.c **** 
4105:../Dave/Generated/src/FATFS002/Src/ff.c **** 		/* Get an argument and put it in numeral */
4106:../Dave/Generated/src/FATFS002/Src/ff.c **** 		v = (f & 4) ? (ULONG)va_arg(arp, long) : ((d == 'D') ? (ULONG)(long)va_arg(arp, int) : (ULONG)va_
 10453              		.loc 1 4106 0
 10454 02d4 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 10455 02d8 03F00403 		and	r3, r3, #4
 10456 02dc 002B     		cmp	r3, #0
 10457 02de 05D0     		beq	.L601
 10458              		.loc 1 4106 0 is_stmt 0 discriminator 1
 10459 02e0 FB69     		ldr	r3, [r7, #28]
 10460 02e2 03F10402 		add	r2, r3, #4
 10461 02e6 FA61     		str	r2, [r7, #28]
 10462 02e8 1B68     		ldr	r3, [r3, #0]
 10463 02ea 0EE0     		b	.L602
 10464              	.L601:
 10465              		.loc 1 4106 0 discriminator 2
 10466 02ec 97F83230 		ldrb	r3, [r7, #50]	@ zero_extendqisi2
 10467 02f0 442B     		cmp	r3, #68
 10468 02f2 05D1     		bne	.L603
 10469              		.loc 1 4106 0 discriminator 1
 10470 02f4 FB69     		ldr	r3, [r7, #28]
 10471 02f6 03F10402 		add	r2, r3, #4
 10472 02fa FA61     		str	r2, [r7, #28]
 10473 02fc 1B68     		ldr	r3, [r3, #0]
 10474 02fe 04E0     		b	.L604
 10475              	.L603:
 10476              		.loc 1 4106 0 discriminator 2
 10477 0300 FB69     		ldr	r3, [r7, #28]
 10478 0302 03F10402 		add	r2, r3, #4
 10479 0306 FA61     		str	r2, [r7, #28]
 10480 0308 1B68     		ldr	r3, [r3, #0]
 10481              	.L604:
 10482              	.L602:
 10483              		.loc 1 4106 0 discriminator 3
 10484 030a 7B63     		str	r3, [r7, #52]
4107:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (d == 'D' && (v & 0x80000000)) {
 10485              		.loc 1 4107 0 is_stmt 1 discriminator 3
 10486 030c 97F83230 		ldrb	r3, [r7, #50]	@ zero_extendqisi2
 10487 0310 442B     		cmp	r3, #68
 10488 0312 0CD1     		bne	.L605
 10489              		.loc 1 4107 0 is_stmt 0 discriminator 1
 10490 0314 7B6B     		ldr	r3, [r7, #52]
 10491 0316 002B     		cmp	r3, #0
 10492 0318 09DA     		bge	.L605
4108:../Dave/Generated/src/FATFS002/Src/ff.c **** 			v = 0 - v;
 10493              		.loc 1 4108 0 is_stmt 1
 10494 031a 7B6B     		ldr	r3, [r7, #52]
 10495 031c C3F10003 		rsb	r3, r3, #0
 10496 0320 7B63     		str	r3, [r7, #52]
4109:../Dave/Generated/src/FATFS002/Src/ff.c **** 			f |= 8;
 10497              		.loc 1 4109 0
 10498 0322 97F84730 		ldrb	r3, [r7, #71]
 10499 0326 43F00803 		orr	r3, r3, #8
 10500 032a 87F84730 		strb	r3, [r7, #71]
 10501              	.L605:
4110:../Dave/Generated/src/FATFS002/Src/ff.c **** 		}
4111:../Dave/Generated/src/FATFS002/Src/ff.c **** 		i = 0;
 10502              		.loc 1 4111 0
 10503 032e 4FF00003 		mov	r3, #0
 10504 0332 3B64     		str	r3, [r7, #64]
 10505              	.L610:
4112:../Dave/Generated/src/FATFS002/Src/ff.c **** 		do {
4113:../Dave/Generated/src/FATFS002/Src/ff.c **** 			d = (TCHAR)(v % r); v /= r;
 10506              		.loc 1 4113 0
 10507 0334 97F84620 		ldrb	r2, [r7, #70]	@ zero_extendqisi2
 10508 0338 7B6B     		ldr	r3, [r7, #52]
 10509 033a B3FBF2F1 		udiv	r1, r3, r2
 10510 033e 02FB01F2 		mul	r2, r2, r1
 10511 0342 9B1A     		subs	r3, r3, r2
 10512 0344 87F83230 		strb	r3, [r7, #50]
 10513 0348 97F84630 		ldrb	r3, [r7, #70]	@ zero_extendqisi2
 10514 034c 7A6B     		ldr	r2, [r7, #52]
 10515 034e B2FBF3F3 		udiv	r3, r2, r3
 10516 0352 7B63     		str	r3, [r7, #52]
4114:../Dave/Generated/src/FATFS002/Src/ff.c **** 			if (d > 9) d += (c == 'x') ? 0x27 : 0x07;
 10517              		.loc 1 4114 0
 10518 0354 97F83230 		ldrb	r3, [r7, #50]	@ zero_extendqisi2
 10519 0358 092B     		cmp	r3, #9
 10520 035a 0DD9     		bls	.L606
 10521              		.loc 1 4114 0 is_stmt 0 discriminator 1
 10522 035c 97F83330 		ldrb	r3, [r7, #51]	@ zero_extendqisi2
 10523 0360 782B     		cmp	r3, #120
 10524 0362 02D1     		bne	.L607
 10525 0364 4FF02703 		mov	r3, #39
 10526 0368 01E0     		b	.L608
 10527              	.L607:
 10528              		.loc 1 4114 0 discriminator 2
 10529 036a 4FF00703 		mov	r3, #7
 10530              	.L608:
 10531              		.loc 1 4114 0 discriminator 3
 10532 036e 97F83220 		ldrb	r2, [r7, #50]
 10533 0372 9B18     		adds	r3, r3, r2
 10534 0374 87F83230 		strb	r3, [r7, #50]
 10535              	.L606:
4115:../Dave/Generated/src/FATFS002/Src/ff.c **** 			s[i++] = d + '0';
 10536              		.loc 1 4115 0 is_stmt 1
 10537 0378 97F83230 		ldrb	r3, [r7, #50]
 10538 037c 03F13003 		add	r3, r3, #48
 10539 0380 DAB2     		uxtb	r2, r3
 10540 0382 07F10C01 		add	r1, r7, #12
 10541 0386 3B6C     		ldr	r3, [r7, #64]
 10542 0388 CB18     		adds	r3, r1, r3
 10543 038a 1A70     		strb	r2, [r3, #0]
 10544 038c 3B6C     		ldr	r3, [r7, #64]
 10545 038e 03F10103 		add	r3, r3, #1
 10546 0392 3B64     		str	r3, [r7, #64]
4116:../Dave/Generated/src/FATFS002/Src/ff.c **** 		} while (v && i < sizeof(s) / sizeof(s[0]));
 10547              		.loc 1 4116 0
 10548 0394 7B6B     		ldr	r3, [r7, #52]
 10549 0396 002B     		cmp	r3, #0
 10550 0398 02D0     		beq	.L609
 10551              		.loc 1 4116 0 is_stmt 0 discriminator 1
 10552 039a 3B6C     		ldr	r3, [r7, #64]
 10553 039c 0F2B     		cmp	r3, #15
 10554 039e C9D9     		bls	.L610
 10555              	.L609:
4117:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (f & 8) s[i++] = '-';
 10556              		.loc 1 4117 0 is_stmt 1
 10557 03a0 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 10558 03a4 03F00803 		and	r3, r3, #8
 10559 03a8 002B     		cmp	r3, #0
 10560 03aa 0AD0     		beq	.L611
 10561              		.loc 1 4117 0 is_stmt 0 discriminator 1
 10562 03ac 07F10C02 		add	r2, r7, #12
 10563 03b0 3B6C     		ldr	r3, [r7, #64]
 10564 03b2 D318     		adds	r3, r2, r3
 10565 03b4 4FF02D02 		mov	r2, #45
 10566 03b8 1A70     		strb	r2, [r3, #0]
 10567 03ba 3B6C     		ldr	r3, [r7, #64]
 10568 03bc 03F10103 		add	r3, r3, #1
 10569 03c0 3B64     		str	r3, [r7, #64]
 10570              	.L611:
4118:../Dave/Generated/src/FATFS002/Src/ff.c **** 		j = i; d = (f & 1) ? '0' : ' ';
 10571              		.loc 1 4118 0 is_stmt 1
 10572 03c2 3B6C     		ldr	r3, [r7, #64]
 10573 03c4 FB63     		str	r3, [r7, #60]
 10574 03c6 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 10575 03ca 03F00103 		and	r3, r3, #1
 10576 03ce 002B     		cmp	r3, #0
 10577 03d0 02D0     		beq	.L612
 10578              		.loc 1 4118 0 is_stmt 0 discriminator 1
 10579 03d2 4FF03003 		mov	r3, #48
 10580 03d6 01E0     		b	.L613
 10581              	.L612:
 10582              		.loc 1 4118 0 discriminator 2
 10583 03d8 4FF02003 		mov	r3, #32
 10584              	.L613:
 10585              		.loc 1 4118 0 discriminator 3
 10586 03dc 87F83230 		strb	r3, [r7, #50]
4119:../Dave/Generated/src/FATFS002/Src/ff.c **** 		res = 0;
 10587              		.loc 1 4119 0 is_stmt 1 discriminator 3
 10588 03e0 4FF00003 		mov	r3, #0
 10589 03e4 FB62     		str	r3, [r7, #44]
4120:../Dave/Generated/src/FATFS002/Src/ff.c **** 		while (!(f & 2) && j++ < w) res += (cc = f_putc(d, fil));
 10590              		.loc 1 4120 0 discriminator 3
 10591 03e6 0AE0     		b	.L614
 10592              	.L616:
 10593              		.loc 1 4120 0 is_stmt 0 discriminator 1
 10594 03e8 97F83230 		ldrb	r3, [r7, #50]	@ zero_extendqisi2
 10595 03ec 1846     		mov	r0, r3
 10596 03ee 7968     		ldr	r1, [r7, #4]
 10597 03f0 FFF7FEFF 		bl	f_putc
 10598 03f4 7862     		str	r0, [r7, #36]
 10599 03f6 FA6A     		ldr	r2, [r7, #44]
 10600 03f8 7B6A     		ldr	r3, [r7, #36]
 10601 03fa D318     		adds	r3, r2, r3
 10602 03fc FB62     		str	r3, [r7, #44]
 10603              	.L614:
 10604 03fe 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 10605 0402 03F00203 		and	r3, r3, #2
 10606 0406 002B     		cmp	r3, #0
 10607 0408 0CD1     		bne	.L615
 10608              		.loc 1 4120 0 discriminator 2
 10609 040a FA6B     		ldr	r2, [r7, #60]
 10610 040c BB6B     		ldr	r3, [r7, #56]
 10611 040e 9A42     		cmp	r2, r3
 10612 0410 2CBF     		ite	cs
 10613 0412 0023     		movcs	r3, #0
 10614 0414 0123     		movcc	r3, #1
 10615 0416 DBB2     		uxtb	r3, r3
 10616 0418 FA6B     		ldr	r2, [r7, #60]
 10617 041a 02F10102 		add	r2, r2, #1
 10618 041e FA63     		str	r2, [r7, #60]
 10619 0420 002B     		cmp	r3, #0
 10620 0422 E1D1     		bne	.L616
 10621              	.L615:
4121:../Dave/Generated/src/FATFS002/Src/ff.c **** 		do res += (cc = f_putc(s[--i], fil)); while(i);
 10622              		.loc 1 4121 0 is_stmt 1 discriminator 1
 10623 0424 3B6C     		ldr	r3, [r7, #64]
 10624 0426 03F1FF33 		add	r3, r3, #-1
 10625 042a 3B64     		str	r3, [r7, #64]
 10626 042c 07F10C02 		add	r2, r7, #12
 10627 0430 3B6C     		ldr	r3, [r7, #64]
 10628 0432 D318     		adds	r3, r2, r3
 10629 0434 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 10630 0436 1846     		mov	r0, r3
 10631 0438 7968     		ldr	r1, [r7, #4]
 10632 043a FFF7FEFF 		bl	f_putc
 10633 043e 7862     		str	r0, [r7, #36]
 10634 0440 FA6A     		ldr	r2, [r7, #44]
 10635 0442 7B6A     		ldr	r3, [r7, #36]
 10636 0444 D318     		adds	r3, r2, r3
 10637 0446 FB62     		str	r3, [r7, #44]
 10638 0448 3B6C     		ldr	r3, [r7, #64]
 10639 044a 002B     		cmp	r3, #0
 10640 044c EAD1     		bne	.L615
4122:../Dave/Generated/src/FATFS002/Src/ff.c **** 		while (j++ < w) res += (cc = f_putc(' ', fil));
 10641              		.loc 1 4122 0
 10642 044e 09E0     		b	.L617
 10643              	.L618:
 10644              		.loc 1 4122 0 is_stmt 0 discriminator 2
 10645 0450 4FF02000 		mov	r0, #32
 10646 0454 7968     		ldr	r1, [r7, #4]
 10647 0456 FFF7FEFF 		bl	f_putc
 10648 045a 7862     		str	r0, [r7, #36]
 10649 045c FA6A     		ldr	r2, [r7, #44]
 10650 045e 7B6A     		ldr	r3, [r7, #36]
 10651 0460 D318     		adds	r3, r2, r3
 10652 0462 FB62     		str	r3, [r7, #44]
 10653              	.L617:
 10654              		.loc 1 4122 0 discriminator 1
 10655 0464 FA6B     		ldr	r2, [r7, #60]
 10656 0466 BB6B     		ldr	r3, [r7, #56]
 10657 0468 9A42     		cmp	r2, r3
 10658 046a 2CBF     		ite	cs
 10659 046c 0023     		movcs	r3, #0
 10660 046e 0123     		movcc	r3, #1
 10661 0470 DBB2     		uxtb	r3, r3
 10662 0472 FA6B     		ldr	r2, [r7, #60]
 10663 0474 02F10102 		add	r2, r2, #1
 10664 0478 FA63     		str	r2, [r7, #60]
 10665 047a 002B     		cmp	r3, #0
 10666 047c E8D1     		bne	.L618
4123:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (cc != EOF) cc = res;
 10667              		.loc 1 4123 0 is_stmt 1
 10668 047e 7B6A     		ldr	r3, [r7, #36]
 10669 0480 B3F1FF3F 		cmp	r3, #-1
 10670 0484 05D0     		beq	.L574
 10671              		.loc 1 4123 0 is_stmt 0 discriminator 1
 10672 0486 FB6A     		ldr	r3, [r7, #44]
 10673 0488 7B62     		str	r3, [r7, #36]
 10674 048a 02E0     		b	.L574
 10675              	.L624:
4057:../Dave/Generated/src/FATFS002/Src/ff.c **** 			continue;
 10676              		.loc 1 4057 0 is_stmt 1
 10677 048c 00BF     		nop
 10678 048e 00E0     		b	.L574
 10679              	.L626:
4089:../Dave/Generated/src/FATFS002/Src/ff.c **** 			continue;
 10680              		.loc 1 4089 0
 10681 0490 00BF     		nop
 10682              	.L574:
4051:../Dave/Generated/src/FATFS002/Src/ff.c **** 	for (cc = res = 0; cc != EOF; res += cc) {
 10683              		.loc 1 4051 0
 10684 0492 FA6A     		ldr	r2, [r7, #44]
 10685 0494 7B6A     		ldr	r3, [r7, #36]
 10686 0496 D318     		adds	r3, r2, r3
 10687 0498 FB62     		str	r3, [r7, #44]
 10688              	.L569:
4051:../Dave/Generated/src/FATFS002/Src/ff.c **** 	for (cc = res = 0; cc != EOF; res += cc) {
 10689              		.loc 1 4051 0 is_stmt 0 discriminator 1
 10690 049a 7B6A     		ldr	r3, [r7, #36]
 10691 049c B3F1FF3F 		cmp	r3, #-1
 10692 04a0 7FF4BCAD 		bne	.L619
 10693 04a4 02E0     		b	.L571
 10694              	.L623:
4053:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (c == 0) break;			/* End of string */
 10695              		.loc 1 4053 0 is_stmt 1
 10696 04a6 00BF     		nop
 10697 04a8 00E0     		b	.L571
 10698              	.L625:
4075:../Dave/Generated/src/FATFS002/Src/ff.c **** 		if (!c) break;
 10699              		.loc 1 4075 0
 10700 04aa 00BF     		nop
 10701              	.L571:
4124:../Dave/Generated/src/FATFS002/Src/ff.c **** 	}
4125:../Dave/Generated/src/FATFS002/Src/ff.c **** 
4126:../Dave/Generated/src/FATFS002/Src/ff.c **** 	va_end(arp);
4127:../Dave/Generated/src/FATFS002/Src/ff.c **** 	return (cc == EOF) ? cc : res;
 10702              		.loc 1 4127 0
 10703 04ac 7B6A     		ldr	r3, [r7, #36]
 10704 04ae B3F1FF3F 		cmp	r3, #-1
 10705 04b2 01D1     		bne	.L620
 10706              		.loc 1 4127 0 is_stmt 0 discriminator 1
 10707 04b4 7B6A     		ldr	r3, [r7, #36]
 10708 04b6 00E0     		b	.L621
 10709              	.L620:
 10710              		.loc 1 4127 0 discriminator 2
 10711 04b8 FB6A     		ldr	r3, [r7, #44]
 10712              	.L621:
4128:../Dave/Generated/src/FATFS002/Src/ff.c **** }
 10713              		.loc 1 4128 0 is_stmt 1 discriminator 3
 10714 04ba 1846     		mov	r0, r3
 10715 04bc 07F14C07 		add	r7, r7, #76
 10716 04c0 BD46     		mov	sp, r7
 10717 04c2 BDE88040 		pop	{r7, lr}
 10718 04c6 03B0     		add	sp, sp, #12
 10719 04c8 7047     		bx	lr
 10720              		.cfi_endproc
 10721              	.LFE46:
 10723 04ca 00BF     		.section	.rodata
 10724              		.align	2
 10727              	vst.4665:
 10728 0044 0004     		.short	1024
 10729 0046 0002     		.short	512
 10730 0048 0001     		.short	256
 10731 004a 8000     		.short	128
 10732 004c 4000     		.short	64
 10733 004e 2000     		.short	32
 10734 0050 1000     		.short	16
 10735 0052 0800     		.short	8
 10736 0054 0400     		.short	4
 10737 0056 0200     		.short	2
 10738 0058 0000     		.short	0
 10739 005a 0000     		.align	2
 10742              	cst.4666:
 10743 005c 0080     		.short	-32768
 10744 005e 0040     		.short	16384
 10745 0060 0020     		.short	8192
 10746 0062 0010     		.short	4096
 10747 0064 0008     		.short	2048
 10748 0066 0040     		.short	16384
 10749 0068 0020     		.short	8192
 10750 006a 0010     		.short	4096
 10751 006c 0008     		.short	2048
 10752 006e 0004     		.short	1024
 10753 0070 0002     		.short	512
 10754 0072 0000     		.align	2
 10757              	excvt.4415:
 10758 0074 80       		.byte	-128
 10759 0075 81       		.byte	-127
 10760 0076 82       		.byte	-126
 10761 0077 83       		.byte	-125
 10762 0078 84       		.byte	-124
 10763 0079 85       		.byte	-123
 10764 007a 86       		.byte	-122
 10765 007b 87       		.byte	-121
 10766 007c 88       		.byte	-120
 10767 007d 89       		.byte	-119
 10768 007e 8A       		.byte	-118
 10769 007f 8B       		.byte	-117
 10770 0080 8C       		.byte	-116
 10771 0081 8D       		.byte	-115
 10772 0082 8E       		.byte	-114
 10773 0083 8F       		.byte	-113
 10774 0084 90       		.byte	-112
 10775 0085 91       		.byte	-111
 10776 0086 92       		.byte	-110
 10777 0087 93       		.byte	-109
 10778 0088 94       		.byte	-108
 10779 0089 95       		.byte	-107
 10780 008a 96       		.byte	-106
 10781 008b 97       		.byte	-105
 10782 008c 98       		.byte	-104
 10783 008d 99       		.byte	-103
 10784 008e AD       		.byte	-83
 10785 008f 9B       		.byte	-101
 10786 0090 8C       		.byte	-116
 10787 0091 9D       		.byte	-99
 10788 0092 AE       		.byte	-82
 10789 0093 9F       		.byte	-97
 10790 0094 A0       		.byte	-96
 10791 0095 21       		.byte	33
 10792 0096 A2       		.byte	-94
 10793 0097 A3       		.byte	-93
 10794 0098 A4       		.byte	-92
 10795 0099 A5       		.byte	-91
 10796 009a A6       		.byte	-90
 10797 009b A7       		.byte	-89
 10798 009c A8       		.byte	-88
 10799 009d A9       		.byte	-87
 10800 009e AA       		.byte	-86
 10801 009f AB       		.byte	-85
 10802 00a0 AC       		.byte	-84
 10803 00a1 AD       		.byte	-83
 10804 00a2 AE       		.byte	-82
 10805 00a3 AF       		.byte	-81
 10806 00a4 B0       		.byte	-80
 10807 00a5 B1       		.byte	-79
 10808 00a6 B2       		.byte	-78
 10809 00a7 B3       		.byte	-77
 10810 00a8 B4       		.byte	-76
 10811 00a9 B5       		.byte	-75
 10812 00aa B6       		.byte	-74
 10813 00ab B7       		.byte	-73
 10814 00ac B8       		.byte	-72
 10815 00ad B9       		.byte	-71
 10816 00ae BA       		.byte	-70
 10817 00af BB       		.byte	-69
 10818 00b0 BC       		.byte	-68
 10819 00b1 BD       		.byte	-67
 10820 00b2 BE       		.byte	-66
 10821 00b3 BF       		.byte	-65
 10822 00b4 C0       		.byte	-64
 10823 00b5 C1       		.byte	-63
 10824 00b6 C2       		.byte	-62
 10825 00b7 C3       		.byte	-61
 10826 00b8 C4       		.byte	-60
 10827 00b9 C5       		.byte	-59
 10828 00ba C6       		.byte	-58
 10829 00bb C7       		.byte	-57
 10830 00bc C8       		.byte	-56
 10831 00bd C9       		.byte	-55
 10832 00be CA       		.byte	-54
 10833 00bf CB       		.byte	-53
 10834 00c0 CC       		.byte	-52
 10835 00c1 CD       		.byte	-51
 10836 00c2 CE       		.byte	-50
 10837 00c3 CF       		.byte	-49
 10838 00c4 D0       		.byte	-48
 10839 00c5 D1       		.byte	-47
 10840 00c6 D2       		.byte	-46
 10841 00c7 D3       		.byte	-45
 10842 00c8 D4       		.byte	-44
 10843 00c9 D5       		.byte	-43
 10844 00ca D6       		.byte	-42
 10845 00cb D7       		.byte	-41
 10846 00cc D8       		.byte	-40
 10847 00cd D9       		.byte	-39
 10848 00ce DA       		.byte	-38
 10849 00cf DB       		.byte	-37
 10850 00d0 DC       		.byte	-36
 10851 00d1 DD       		.byte	-35
 10852 00d2 DE       		.byte	-34
 10853 00d3 DF       		.byte	-33
 10854 00d4 C0       		.byte	-64
 10855 00d5 C1       		.byte	-63
 10856 00d6 C2       		.byte	-62
 10857 00d7 C3       		.byte	-61
 10858 00d8 C4       		.byte	-60
 10859 00d9 C5       		.byte	-59
 10860 00da C6       		.byte	-58
 10861 00db C7       		.byte	-57
 10862 00dc C8       		.byte	-56
 10863 00dd C9       		.byte	-55
 10864 00de CA       		.byte	-54
 10865 00df CB       		.byte	-53
 10866 00e0 CC       		.byte	-52
 10867 00e1 CD       		.byte	-51
 10868 00e2 CE       		.byte	-50
 10869 00e3 CF       		.byte	-49
 10870 00e4 D0       		.byte	-48
 10871 00e5 D1       		.byte	-47
 10872 00e6 D2       		.byte	-46
 10873 00e7 D3       		.byte	-45
 10874 00e8 D4       		.byte	-44
 10875 00e9 D5       		.byte	-43
 10876 00ea D6       		.byte	-42
 10877 00eb F7       		.byte	-9
 10878 00ec D8       		.byte	-40
 10879 00ed D9       		.byte	-39
 10880 00ee DA       		.byte	-38
 10881 00ef DB       		.byte	-37
 10882 00f0 DC       		.byte	-36
 10883 00f1 DD       		.byte	-35
 10884 00f2 DE       		.byte	-34
 10885 00f3 9F       		.byte	-97
 10886              		.text
 10887              	.Letext0:
 10888              		.file 2 "../Dave/Generated/src/FATFS002/Src/../../../inc/FATFS004/integer.h"
 10889              		.file 3 "../Dave/Generated/src/FATFS002/Src/ff.h"
 10890              		.file 4 "../Dave/Generated/src/FATFS002/Src/../../../inc/FATFS004/diskio.h"
 10891              		.file 5 "c:\\dave-3.1.10\\arm-gcc\\bin\\../lib/gcc/arm-none-eabi/4.7.4/include/stdarg.h"
 10892              		.file 6 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:00000000 ff.c
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:20     .bss:00000000 $d
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:21     .bss:00000000 FatFs
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:24     .bss:00000008 Fsid
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:26     .bss:0000000a CurrVol
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:29     .text.mem_cpy:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:33     .text.mem_cpy:00000000 mem_cpy
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:96     .text.mem_set:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:100    .text.mem_set:00000000 mem_set
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:156    .text.mem_cmp:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:160    .text.mem_cmp:00000000 mem_cmp
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:238    .text.chk_chr:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:242    .text.chk_chr:00000000 chk_chr
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:294    .text.move_window:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:298    .text.move_window:00000000 move_window
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:433    .text.sync:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:437    .text.sync:00000000 sync
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:613    .text.clust2sect:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:618    .text.clust2sect:00000000 clust2sect
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:671    .text.get_fat:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:676    .text.get_fat:00000000 get_fat
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:901    .text.put_fat:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:906    .text.put_fat:00000000 put_fat
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:1231   .text.remove_chain:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:1235   .text.remove_chain:00000000 remove_chain
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:1408   .text.create_chain:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:1412   .text.create_chain:00000000 create_chain
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:1621   .text.dir_sdi:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:1625   .text.dir_sdi:00000000 dir_sdi
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:1808   .text.dir_next:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:1812   .text.dir_next:00000000 dir_next
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:2089   .text.dir_find:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:2093   .text.dir_find:00000000 dir_find
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:2206   .text.dir_read:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:2210   .text.dir_read:00000000 dir_read
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:2327   .text.dir_register:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:2331   .text.dir_register:00000000 dir_register
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:2454   .text.dir_remove:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:2458   .text.dir_remove:00000000 dir_remove
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:2524   .rodata:00000000 $d
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:2525   .rodata:00000000 .LC0
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:2528   .text.create_name:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:2532   .text.create_name:00000000 create_name
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:10757  .rodata:00000074 excvt.4415
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:2877   .text.get_fileinfo:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:2881   .text.get_fileinfo:00000000 get_fileinfo
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:3080   .text.follow_path:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:3084   .text.follow_path:00000000 follow_path
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:3291   .text.check_fs:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:3295   .text.check_fs:00000000 check_fs
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:3409   .text.chk_mounted:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:3413   .text.chk_mounted:00000000 chk_mounted
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:4159   .text.validate:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:4163   .text.validate:00000000 validate
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:4227   .text.f_mount:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:4232   .text.f_mount:00000000 f_mount
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:4303   .text.f_open:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:4308   .text.f_open:00000000 f_open
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:4712   .text.f_read:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:4717   .text.f_read:00000000 f_read
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:5135   .text.f_write:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:5140   .text.f_write:00000000 f_write
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:5615   .text.f_sync:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:5620   .text.f_sync:00000000 f_sync
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:5843   .text.f_close:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:5848   .text.f_close:00000000 f_close
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:5891   .text.f_chdrive:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:5896   .text.f_chdrive:00000000 f_chdrive
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:5941   .text.f_chdir:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:5946   .text.f_chdir:00000000 f_chdir
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:6061   .text.f_lseek:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:6066   .text.f_lseek:00000000 f_lseek
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:6493   .text.f_opendir:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:6498   .text.f_opendir:00000000 f_opendir
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:6631   .text.f_readdir:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:6636   .text.f_readdir:00000000 f_readdir
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:6739   .text.f_stat:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:6744   .text.f_stat:00000000 f_stat
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:6817   .text.f_getfree:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:6822   .text.f_getfree:00000000 f_getfree
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:7088   .text.f_truncate:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:7093   .text.f_truncate:00000000 f_truncate
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:7277   .text.f_unlink:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:7282   .text.f_unlink:00000000 f_unlink
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:7510   .text.f_mkdir:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:7515   .text.f_mkdir:00000000 f_mkdir
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:7933   .text.f_chmod:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:7938   .text.f_chmod:00000000 f_chmod
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:8059   .text.f_utime:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:8064   .text.f_utime:00000000 f_utime
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:8190   .text.f_rename:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:8195   .text.f_rename:00000000 f_rename
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:8495   .rodata:00000010 .LC1
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:8498   .rodata:0000001c .LC2
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:8501   .rodata:00000030 .LC3
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:8504   .text.f_mkfs:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:8509   .text.f_mkfs:00000000 f_mkfs
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:10727  .rodata:00000044 vst.4665
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:10742  .rodata:0000005c cst.4666
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:9864   .text.f_gets:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:9869   .text.f_gets:00000000 f_gets
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:9968   .text.f_putc:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:9973   .text.f_putc:00000000 f_putc
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:10027  .text.f_puts:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:10032  .text.f_puts:00000000 f_puts
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:10094  .text.f_printf:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:10099  .text.f_printf:00000000 f_printf
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:10286  .text.f_printf:0000016c $d
C:\Users\Mihai\AppData\Local\Temp\ccw7BAyP.s:10311  .text.f_printf:000001c8 $t
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.1791a5ae2e936ca1033c1c44be394cc7
                           .group:00000000 wm4.ffconf.h.57.4ab321a2116d35ff7f28236ac31fad7c
                           .group:00000000 wm4.ff.h.82.1b1ab5c32a859e524326eadfaf1be919
                           .group:00000000 wm4.diskio.h.7.93a3c8131d08770c060b04d2180fd09a
                           .group:00000000 wm4.diskio.h.42.a863614abe78d56d18ed7cb292d0028d
                           .group:00000000 wm4.stdarg.h.31.b70f21342353634f7b44d85f85f13832

UNDEFINED SYMBOLS
disk_write
disk_read
disk_ioctl
disk_status
disk_initialize
get_fattime
