   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"ADCCH001.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.ADCCH001_lInit,"ax",%progbits
  20              		.align	2
  21              		.thumb
  22              		.thumb_func
  24              	ADCCH001_lInit:
  25              	.LFB112:
  26              		.file 1 "../Dave/Generated/src/ADCCH001/ADCCH001.c"
   1:../Dave/Generated/src/ADCCH001/ADCCH001.c **** /*******************************************************************************
   2:../Dave/Generated/src/ADCCH001/ADCCH001.c **** **  DAVE App Name : ADCCH001       App Version: 1.0.4               
   3:../Dave/Generated/src/ADCCH001/ADCCH001.c **** **  This file is generated by DAVE, User modification to this file will be    **
   4:../Dave/Generated/src/ADCCH001/ADCCH001.c **** **  overwritten at the next code generation.                                  **
   5:../Dave/Generated/src/ADCCH001/ADCCH001.c **** *******************************************************************************/
   6:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
   7:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
   8:../Dave/Generated/src/ADCCH001/ADCCH001.c **** /*CODE_BLOCK_BEGIN[ADCCH001.c]*/
   9:../Dave/Generated/src/ADCCH001/ADCCH001.c **** /*******************************************************************************
  10:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  Copyright (c) 2011, Infineon Technologies AG                                 **
  11:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  All rights reserved.                                                         **
  12:../Dave/Generated/src/ADCCH001/ADCCH001.c ****                                                                               **
  13:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  Redistribution and use in source and binary forms, with or without           **
  14:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  modification,are permitted provided that the following conditions are met:   **
  15:../Dave/Generated/src/ADCCH001/ADCCH001.c ****                                                                               **
  16:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  *Redistributions of source code must retain the above copyright notice,      **
  17:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  this list of conditions and the following disclaimer.                        **
  18:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  *Redistributions in binary form must reproduce the above copyright notice,   **
  19:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  this list of conditions and the following disclaimer in the documentation    **
  20:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  and/or other materials provided with the distribution.                       **
  21:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  *Neither the name of the copyright holders nor the names of its contributors **
  22:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  may be used to endorse or promote products derived from this software without**
  23:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  specific prior written permission.                                           **
  24:../Dave/Generated/src/ADCCH001/ADCCH001.c ****                                                                               **
  25:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"  **
  26:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE    **
  27:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE   **
  28:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  ARE  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE   **
  29:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  LIABLE  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR         **
  30:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF         **
  31:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  SUBSTITUTE GOODS OR  SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS    **
  32:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN      **
  33:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)       **
  34:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE   **
  35:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  POSSIBILITY OF SUCH DAMAGE.                                                  **
  36:../Dave/Generated/src/ADCCH001/ADCCH001.c ****                                                                               **
  37:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  To improve the quality of the software, users are encouraged to share        **
  38:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  modifications, enhancements or bug fixes with Infineon Technologies AG       **
  39:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  dave@infineon.com).                                                          **
  40:../Dave/Generated/src/ADCCH001/ADCCH001.c ****                                                                               **
  41:../Dave/Generated/src/ADCCH001/ADCCH001.c **** ********************************************************************************
  42:../Dave/Generated/src/ADCCH001/ADCCH001.c **** **                                                                            **
  43:../Dave/Generated/src/ADCCH001/ADCCH001.c **** **                                                                            **
  44:../Dave/Generated/src/ADCCH001/ADCCH001.c **** ** PLATFORM : Infineon XMC4500 Series                                         **
  45:../Dave/Generated/src/ADCCH001/ADCCH001.c **** **                                                                            **
  46:../Dave/Generated/src/ADCCH001/ADCCH001.c **** ** COMPILER : Compiler Independent                                            **
  47:../Dave/Generated/src/ADCCH001/ADCCH001.c **** **                                                                            **
  48:../Dave/Generated/src/ADCCH001/ADCCH001.c **** ** AUTHOR   : DAVE App Developer                                              **
  49:../Dave/Generated/src/ADCCH001/ADCCH001.c **** **                                                                            **
  50:../Dave/Generated/src/ADCCH001/ADCCH001.c **** ** MAY BE CHANGED BY USER [yes/no]: Yes                                       **
  51:../Dave/Generated/src/ADCCH001/ADCCH001.c **** **                                                                            **
  52:../Dave/Generated/src/ADCCH001/ADCCH001.c **** ** MODIFICATION DATE : 8 August 2012                                        **
  53:../Dave/Generated/src/ADCCH001/ADCCH001.c **** **                                                                            **
  54:../Dave/Generated/src/ADCCH001/ADCCH001.c **** *******************************************************************************/
  55:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
  56:../Dave/Generated/src/ADCCH001/ADCCH001.c **** /*******************************************************************************
  57:../Dave/Generated/src/ADCCH001/ADCCH001.c **** **                       Author(s) Identity                                   **
  58:../Dave/Generated/src/ADCCH001/ADCCH001.c **** ********************************************************************************
  59:../Dave/Generated/src/ADCCH001/ADCCH001.c **** **                                                                            **
  60:../Dave/Generated/src/ADCCH001/ADCCH001.c **** ** Initials     Name                                                          **
  61:../Dave/Generated/src/ADCCH001/ADCCH001.c **** ** ---------------------------------------------------------------------------**
  62:../Dave/Generated/src/ADCCH001/ADCCH001.c **** ** PM           DAVE App Developer                                            **
  63:../Dave/Generated/src/ADCCH001/ADCCH001.c **** *******************************************************************************/
  64:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
  65:../Dave/Generated/src/ADCCH001/ADCCH001.c **** /**
  66:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  * @file ADCCH001.c
  67:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  *
  68:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  * @brief   This file contains the implementation of all public and private functions of the
  69:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  *          ADCCH001 App.   
  70:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  */
  71:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
  72:../Dave/Generated/src/ADCCH001/ADCCH001.c **** /*******************************************************************************
  73:../Dave/Generated/src/ADCCH001/ADCCH001.c **** **                      Include Files                                         **
  74:../Dave/Generated/src/ADCCH001/ADCCH001.c **** *******************************************************************************/
  75:../Dave/Generated/src/ADCCH001/ADCCH001.c **** #include <DAVE3.h>
  76:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
  77:../Dave/Generated/src/ADCCH001/ADCCH001.c **** /**
  78:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  * @cond INTERNAL_DOCS
  79:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  */
  80:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
  81:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
  82:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
  83:../Dave/Generated/src/ADCCH001/ADCCH001.c **** /*************************************************************************
  84:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  *                 Private Function declarations
  85:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  ***************************************************************************/
  86:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
  87:../Dave/Generated/src/ADCCH001/ADCCH001.c **** /**
  88:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  * @brief This function initializes ADC channel and result registers \n
  89:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  * @param[in] HandlePtr Handle of the ADCCH001 App
  90:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  * @return void
  91:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  * <BR>
  92:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  *
  93:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  * <b>Reentrancy:  Yes</b><BR>
  94:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  * <b>Sync/Async:  Synchronous</b><BR>
  95:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  */
  96:../Dave/Generated/src/ADCCH001/ADCCH001.c **** static void ADCCH001_lInit(const ADCCH001_HandleType* HandlePtr);
  97:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
  98:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
  99:../Dave/Generated/src/ADCCH001/ADCCH001.c **** /********************************************************************************
 100:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  *                 LOCAL FUNCTIONS DEFINITIONS
 101:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  **********************************************************************************/
 102:../Dave/Generated/src/ADCCH001/ADCCH001.c **** /**
 103:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  * This function initializes ADC channel and result registers as per UI configurations. 
 104:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  */
 105:../Dave/Generated/src/ADCCH001/ADCCH001.c **** static void ADCCH001_lInit(const ADCCH001_HandleType* HandlePtr)
 106:../Dave/Generated/src/ADCCH001/ADCCH001.c **** {
  27              		.loc 1 106 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 16
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
  36 0002 85B0     		sub	sp, sp, #20
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 24
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 7860     		str	r0, [r7, #4]
 107:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   VADC_G_TypeDef* GroupPtr = HandlePtr->ADCGrPtr;
  43              		.loc 1 107 0
  44 0008 7B68     		ldr	r3, [r7, #4]
  45 000a 1B68     		ldr	r3, [r3, #0]
  46 000c BB60     		str	r3, [r7, #8]
 108:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   uint8_t Index = (uint8_t)0;
  47              		.loc 1 108 0
  48 000e 4FF00003 		mov	r3, #0
  49 0012 FB73     		strb	r3, [r7, #15]
 109:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   FUNCTION_ENTRY(GID_ADCCH001, (uint32_t)ADCCH001_FUN_ENTRY);
 110:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 111:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   if((HandlePtr->DynamicHandlePtr->State == ADCCH001_UNINITIALIZED))
  50              		.loc 1 111 0
  51 0014 7B68     		ldr	r3, [r7, #4]
  52 0016 5B68     		ldr	r3, [r3, #4]
  53 0018 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
  54 001a 002B     		cmp	r3, #0
  55 001c 40F05881 		bne	.L1
 112:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   {
 113:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     /* Priority Channel */
 114:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     WR_REG( GroupPtr->CHASS, 
  56              		.loc 1 114 0
  57 0020 7B68     		ldr	r3, [r7, #4]
  58 0022 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
  59 0024 1A46     		mov	r2, r3
  60 0026 7B68     		ldr	r3, [r7, #4]
  61 0028 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
  62 002a 02FA03F2 		lsl	r2, r2, r3
  63 002e 7B68     		ldr	r3, [r7, #4]
  64 0030 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
  65 0032 4FF00101 		mov	r1, #1
  66 0036 01FA03F3 		lsl	r3, r1, r3
  67 003a 1A40     		ands	r2, r2, r3
  68 003c BB68     		ldr	r3, [r7, #8]
  69 003e D3F88810 		ldr	r1, [r3, #136]
  70 0042 7B68     		ldr	r3, [r7, #4]
  71 0044 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
  72 0046 4FF00100 		mov	r0, #1
  73 004a 00FA03F3 		lsl	r3, r0, r3
  74 004e 6FEA0303 		mvn	r3, r3
  75 0052 0B40     		ands	r3, r3, r1
  76 0054 1A43     		orrs	r2, r2, r3
  77 0056 BB68     		ldr	r3, [r7, #8]
  78 0058 C3F88820 		str	r2, [r3, #136]
 115:../Dave/Generated/src/ADCCH001/ADCCH001.c ****             ((uint32_t)0x01 << HandlePtr->kChannelNo),
 116:../Dave/Generated/src/ADCCH001/ADCCH001.c ****             HandlePtr->kChannelNo,
 117:../Dave/Generated/src/ADCCH001/ADCCH001.c ****             (uint32_t)HandlePtr->kPrioChannel
 118:../Dave/Generated/src/ADCCH001/ADCCH001.c ****            );    
 119:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     /* Input class */
 120:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     WR_REG( GroupPtr->CHCTR[HandlePtr->kChannelNo],
  79              		.loc 1 120 0
  80 005c 7B68     		ldr	r3, [r7, #4]
  81 005e 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
  82 0060 1A46     		mov	r2, r3
  83 0062 7B68     		ldr	r3, [r7, #4]
  84 0064 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
  85 0066 03F00301 		and	r1, r3, #3
  86 006a 7B68     		ldr	r3, [r7, #4]
  87 006c 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
  88 006e 1846     		mov	r0, r3
  89 0070 BB68     		ldr	r3, [r7, #8]
  90 0072 00F18000 		add	r0, r0, #128
  91 0076 53F82030 		ldr	r3, [r3, r0, lsl #2]
  92 007a 23F00303 		bic	r3, r3, #3
  93 007e 1943     		orrs	r1, r1, r3
  94 0080 BB68     		ldr	r3, [r7, #8]
  95 0082 02F18002 		add	r2, r2, #128
  96 0086 43F82210 		str	r1, [r3, r2, lsl #2]
 121:../Dave/Generated/src/ADCCH001/ADCCH001.c ****             VADC_G_CHCTR_ICLSEL_Msk,
 122:../Dave/Generated/src/ADCCH001/ADCCH001.c ****             VADC_G_CHCTR_ICLSEL_Pos,
 123:../Dave/Generated/src/ADCCH001/ADCCH001.c ****             (uint32_t)HandlePtr->kIpClassSel
 124:../Dave/Generated/src/ADCCH001/ADCCH001.c ****            );
 125:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     /* Channel event mode */
 126:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     WR_REG( GroupPtr->CHCTR[HandlePtr->kChannelNo],
  97              		.loc 1 126 0
  98 008a 7B68     		ldr	r3, [r7, #4]
  99 008c 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 100 008e 1A46     		mov	r2, r3
 101 0090 7B68     		ldr	r3, [r7, #4]
 102 0092 DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 103 0094 4FEA0323 		lsl	r3, r3, #8
 104 0098 03F44071 		and	r1, r3, #768
 105 009c 7B68     		ldr	r3, [r7, #4]
 106 009e 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 107 00a0 1846     		mov	r0, r3
 108 00a2 BB68     		ldr	r3, [r7, #8]
 109 00a4 00F18000 		add	r0, r0, #128
 110 00a8 53F82030 		ldr	r3, [r3, r0, lsl #2]
 111 00ac 23F44073 		bic	r3, r3, #768
 112 00b0 1943     		orrs	r1, r1, r3
 113 00b2 BB68     		ldr	r3, [r7, #8]
 114 00b4 02F18002 		add	r2, r2, #128
 115 00b8 43F82210 		str	r1, [r3, r2, lsl #2]
 127:../Dave/Generated/src/ADCCH001/ADCCH001.c ****             VADC_G_CHCTR_CHEVMODE_Msk,
 128:../Dave/Generated/src/ADCCH001/ADCCH001.c ****             VADC_G_CHCTR_CHEVMODE_Pos,
 129:../Dave/Generated/src/ADCCH001/ADCCH001.c ****             (uint32_t)HandlePtr->kChEvtmode
 130:../Dave/Generated/src/ADCCH001/ADCCH001.c ****            );    
 131:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     /* reference input selection */
 132:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     WR_REG( GroupPtr->CHCTR[HandlePtr->kChannelNo],
 116              		.loc 1 132 0
 117 00bc 7B68     		ldr	r3, [r7, #4]
 118 00be 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 119 00c0 1A46     		mov	r2, r3
 120 00c2 7B68     		ldr	r3, [r7, #4]
 121 00c4 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 122 00c6 4FEAC323 		lsl	r3, r3, #11
 123 00ca 03F40061 		and	r1, r3, #2048
 124 00ce 7B68     		ldr	r3, [r7, #4]
 125 00d0 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 126 00d2 1846     		mov	r0, r3
 127 00d4 BB68     		ldr	r3, [r7, #8]
 128 00d6 00F18000 		add	r0, r0, #128
 129 00da 53F82030 		ldr	r3, [r3, r0, lsl #2]
 130 00de 23F40063 		bic	r3, r3, #2048
 131 00e2 1943     		orrs	r1, r1, r3
 132 00e4 BB68     		ldr	r3, [r7, #8]
 133 00e6 02F18002 		add	r2, r2, #128
 134 00ea 43F82210 		str	r1, [r3, r2, lsl #2]
 133:../Dave/Generated/src/ADCCH001/ADCCH001.c ****             VADC_G_CHCTR_REFSEL_Msk,
 134:../Dave/Generated/src/ADCCH001/ADCCH001.c ****             VADC_G_CHCTR_REFSEL_Pos,
 135:../Dave/Generated/src/ADCCH001/ADCCH001.c ****             (uint32_t)HandlePtr->kRefInput
 136:../Dave/Generated/src/ADCCH001/ADCCH001.c ****            );
 137:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     /* XMC4500: EMUXCSS is not present.  */
 138:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     if(HandlePtr->kExtMuxControl == (uint8_t)1)
 135              		.loc 1 138 0
 136 00ee 7B68     		ldr	r3, [r7, #4]
 137 00f0 5B7D     		ldrb	r3, [r3, #21]	@ zero_extendqisi2
 138 00f2 012B     		cmp	r3, #1
 139 00f4 0ED1     		bne	.L3
 139:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     {
 140:../Dave/Generated/src/ADCCH001/ADCCH001.c ****       /*WR_REG( GroupPtr->EMUXCTR,
 141:../Dave/Generated/src/ADCCH001/ADCCH001.c ****               VADC_G_EMUXCTR_EMXCSS_Msk,
 142:../Dave/Generated/src/ADCCH001/ADCCH001.c ****               VADC_G_EMUXCTR_EMXCSS_Pos,
 143:../Dave/Generated/src/ADCCH001/ADCCH001.c ****               (0x01)
 144:../Dave/Generated/src/ADCCH001/ADCCH001.c ****              );     */
 145:../Dave/Generated/src/ADCCH001/ADCCH001.c ****       WR_REG( GroupPtr->EMUXCTR,
 140              		.loc 1 145 0
 141 00f6 7B68     		ldr	r3, [r7, #4]
 142 00f8 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 143 00fa 4FEA0343 		lsl	r3, r3, #16
 144 00fe 03F4F812 		and	r2, r3, #2031616
 145 0102 BB68     		ldr	r3, [r7, #8]
 146 0104 D3F8F031 		ldr	r3, [r3, #496]
 147 0108 23F4F813 		bic	r3, r3, #2031616
 148 010c 1A43     		orrs	r2, r2, r3
 149 010e BB68     		ldr	r3, [r7, #8]
 150 0110 C3F8F021 		str	r2, [r3, #496]
 151              	.L3:
 146:../Dave/Generated/src/ADCCH001/ADCCH001.c ****               VADC_G_EMUXCTR_EMUXCH_Msk,
 147:../Dave/Generated/src/ADCCH001/ADCCH001.c ****               VADC_G_EMUXCTR_EMUXCH_Pos,
 148:../Dave/Generated/src/ADCCH001/ADCCH001.c ****               (uint32_t)(HandlePtr->kChannelNo)
 149:../Dave/Generated/src/ADCCH001/ADCCH001.c ****              );  
 150:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     }
 151:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     /*Configure result registers if Fast Compare Mode is not selected */
 152:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     if(HandlePtr->kCompareMode == (uint8_t)0)
 152              		.loc 1 152 0
 153 0114 7B68     		ldr	r3, [r7, #4]
 154 0116 DB7D     		ldrb	r3, [r3, #23]	@ zero_extendqisi2
 155 0118 002B     		cmp	r3, #0
 156 011a 40F09E80 		bne	.L4
 153:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     {
 154:../Dave/Generated/src/ADCCH001/ADCCH001.c ****       /* Upper and Lower Boundary Select */ 
 155:../Dave/Generated/src/ADCCH001/ADCCH001.c ****       WR_REG( GroupPtr->CHCTR[HandlePtr->kChannelNo],
 157              		.loc 1 155 0
 158 011e 7B68     		ldr	r3, [r7, #4]
 159 0120 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 160 0122 1A46     		mov	r2, r3
 161 0124 7B68     		ldr	r3, [r7, #4]
 162 0126 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 163 0128 4FEA0313 		lsl	r3, r3, #4
 164 012c D9B2     		uxtb	r1, r3
 165 012e 7B68     		ldr	r3, [r7, #4]
 166 0130 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 167 0132 1846     		mov	r0, r3
 168 0134 BB68     		ldr	r3, [r7, #8]
 169 0136 00F18000 		add	r0, r0, #128
 170 013a 53F82030 		ldr	r3, [r3, r0, lsl #2]
 171 013e 23F0F003 		bic	r3, r3, #240
 172 0142 1943     		orrs	r1, r1, r3
 173 0144 BB68     		ldr	r3, [r7, #8]
 174 0146 02F18002 		add	r2, r2, #128
 175 014a 43F82210 		str	r1, [r3, r2, lsl #2]
 156:../Dave/Generated/src/ADCCH001/ADCCH001.c ****               ((uint32_t)0xF << VADC_G_CHCTR_BNDSELL_Pos),
 157:../Dave/Generated/src/ADCCH001/ADCCH001.c ****               VADC_G_CHCTR_BNDSELL_Pos,
 158:../Dave/Generated/src/ADCCH001/ADCCH001.c ****               (uint32_t)HandlePtr->kBoundarySel
 159:../Dave/Generated/src/ADCCH001/ADCCH001.c ****              ); 
 160:../Dave/Generated/src/ADCCH001/ADCCH001.c ****       /*Result Alignment */
 161:../Dave/Generated/src/ADCCH001/ADCCH001.c ****       WR_REG( GroupPtr->CHCTR[HandlePtr->kChannelNo],
 176              		.loc 1 161 0
 177 014e 7B68     		ldr	r3, [r7, #4]
 178 0150 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 179 0152 1A46     		mov	r2, r3
 180 0154 7B68     		ldr	r3, [r7, #4]
 181 0156 5B7B     		ldrb	r3, [r3, #13]	@ zero_extendqisi2
 182 0158 4FEA4353 		lsl	r3, r3, #21
 183 015c 03F40011 		and	r1, r3, #2097152
 184 0160 7B68     		ldr	r3, [r7, #4]
 185 0162 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 186 0164 1846     		mov	r0, r3
 187 0166 BB68     		ldr	r3, [r7, #8]
 188 0168 00F18000 		add	r0, r0, #128
 189 016c 53F82030 		ldr	r3, [r3, r0, lsl #2]
 190 0170 23F40013 		bic	r3, r3, #2097152
 191 0174 1943     		orrs	r1, r1, r3
 192 0176 BB68     		ldr	r3, [r7, #8]
 193 0178 02F18002 		add	r2, r2, #128
 194 017c 43F82210 		str	r1, [r3, r2, lsl #2]
 162:../Dave/Generated/src/ADCCH001/ADCCH001.c ****               VADC_G_CHCTR_RESPOS_Msk,
 163:../Dave/Generated/src/ADCCH001/ADCCH001.c ****               VADC_G_CHCTR_RESPOS_Pos,
 164:../Dave/Generated/src/ADCCH001/ADCCH001.c ****               (uint32_t)HandlePtr->kResultControl
 165:../Dave/Generated/src/ADCCH001/ADCCH001.c ****              );
 166:../Dave/Generated/src/ADCCH001/ADCCH001.c ****       /* Data modification mode */
 167:../Dave/Generated/src/ADCCH001/ADCCH001.c ****       WR_REG( GroupPtr->RCR[HandlePtr->kStartResultRegNo],
 195              		.loc 1 167 0
 196 0180 7B68     		ldr	r3, [r7, #4]
 197 0182 DB7C     		ldrb	r3, [r3, #19]	@ zero_extendqisi2
 198 0184 1A46     		mov	r2, r3
 199 0186 7B68     		ldr	r3, [r7, #4]
 200 0188 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
 201 018a 4FEA0343 		lsl	r3, r3, #16
 202 018e 03F47C11 		and	r1, r3, #4128768
 203 0192 7B68     		ldr	r3, [r7, #4]
 204 0194 DB7C     		ldrb	r3, [r3, #19]	@ zero_extendqisi2
 205 0196 1846     		mov	r0, r3
 206 0198 BB68     		ldr	r3, [r7, #8]
 207 019a 00F1A000 		add	r0, r0, #160
 208 019e 53F82030 		ldr	r3, [r3, r0, lsl #2]
 209 01a2 23F47C13 		bic	r3, r3, #4128768
 210 01a6 1943     		orrs	r1, r1, r3
 211 01a8 BB68     		ldr	r3, [r7, #8]
 212 01aa 02F1A002 		add	r2, r2, #160
 213 01ae 43F82210 		str	r1, [r3, r2, lsl #2]
 168:../Dave/Generated/src/ADCCH001/ADCCH001.c ****               ((uint32_t)0x3F << VADC_G_RCR_DRCTR_Pos),
 169:../Dave/Generated/src/ADCCH001/ADCCH001.c ****               VADC_G_RCR_DRCTR_Pos,
 170:../Dave/Generated/src/ADCCH001/ADCCH001.c ****               (uint32_t)HandlePtr->kDataModification
 171:../Dave/Generated/src/ADCCH001/ADCCH001.c ****              );
 172:../Dave/Generated/src/ADCCH001/ADCCH001.c ****       /* Wait for read mode */
 173:../Dave/Generated/src/ADCCH001/ADCCH001.c ****       WR_REG( GroupPtr->RCR[HandlePtr->kStartResultRegNo],
 214              		.loc 1 173 0
 215 01b2 7B68     		ldr	r3, [r7, #4]
 216 01b4 DB7C     		ldrb	r3, [r3, #19]	@ zero_extendqisi2
 217 01b6 1A46     		mov	r2, r3
 218 01b8 7B68     		ldr	r3, [r7, #4]
 219 01ba DB7B     		ldrb	r3, [r3, #15]	@ zero_extendqisi2
 220 01bc 4FEA0363 		lsl	r3, r3, #24
 221 01c0 03F08071 		and	r1, r3, #16777216
 222 01c4 7B68     		ldr	r3, [r7, #4]
 223 01c6 DB7C     		ldrb	r3, [r3, #19]	@ zero_extendqisi2
 224 01c8 1846     		mov	r0, r3
 225 01ca BB68     		ldr	r3, [r7, #8]
 226 01cc 00F1A000 		add	r0, r0, #160
 227 01d0 53F82030 		ldr	r3, [r3, r0, lsl #2]
 228 01d4 23F08073 		bic	r3, r3, #16777216
 229 01d8 1943     		orrs	r1, r1, r3
 230 01da BB68     		ldr	r3, [r7, #8]
 231 01dc 02F1A002 		add	r2, r2, #160
 232 01e0 43F82210 		str	r1, [r3, r2, lsl #2]
 174:../Dave/Generated/src/ADCCH001/ADCCH001.c ****               VADC_G_RCR_WFR_Msk,
 175:../Dave/Generated/src/ADCCH001/ADCCH001.c ****               VADC_G_RCR_WFR_Pos,
 176:../Dave/Generated/src/ADCCH001/ADCCH001.c ****               (uint32_t)HandlePtr->kWaitForRead
 177:../Dave/Generated/src/ADCCH001/ADCCH001.c ****              );
 178:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   /* result interrupt */    
 179:../Dave/Generated/src/ADCCH001/ADCCH001.c ****       WR_REG( GroupPtr->RCR[HandlePtr->kEndResultRegNo],
 233              		.loc 1 179 0
 234 01e4 7B68     		ldr	r3, [r7, #4]
 235 01e6 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 236 01e8 1A46     		mov	r2, r3
 237 01ea 7B68     		ldr	r3, [r7, #4]
 238 01ec 5B7C     		ldrb	r3, [r3, #17]	@ zero_extendqisi2
 239 01ee 4FEAC371 		lsl	r1, r3, #31
 240 01f2 7B68     		ldr	r3, [r7, #4]
 241 01f4 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 242 01f6 1846     		mov	r0, r3
 243 01f8 BB68     		ldr	r3, [r7, #8]
 244 01fa 00F1A000 		add	r0, r0, #160
 245 01fe 53F82030 		ldr	r3, [r3, r0, lsl #2]
 246 0202 23F00043 		bic	r3, r3, #-2147483648
 247 0206 1943     		orrs	r1, r1, r3
 248 0208 BB68     		ldr	r3, [r7, #8]
 249 020a 02F1A002 		add	r2, r2, #160
 250 020e 43F82210 		str	r1, [r3, r2, lsl #2]
 180:../Dave/Generated/src/ADCCH001/ADCCH001.c ****               VADC_G_RCR_SRGEN_Msk,
 181:../Dave/Generated/src/ADCCH001/ADCCH001.c ****               VADC_G_RCR_SRGEN_Pos,
 182:../Dave/Generated/src/ADCCH001/ADCCH001.c ****               (uint32_t)HandlePtr->kResultEvtEnable
 183:../Dave/Generated/src/ADCCH001/ADCCH001.c ****              );
 184:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   /* Setting FEN bit in all result registers except start result register */    
 185:../Dave/Generated/src/ADCCH001/ADCCH001.c ****       if(HandlePtr->kFIFOEnable == (uint8_t)1)
 251              		.loc 1 185 0
 252 0212 7B68     		ldr	r3, [r7, #4]
 253 0214 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 254 0216 012B     		cmp	r3, #1
 255 0218 37D1     		bne	.L5
 186:../Dave/Generated/src/ADCCH001/ADCCH001.c ****       {
 187:../Dave/Generated/src/ADCCH001/ADCCH001.c ****         for(Index = (HandlePtr->kEndResultRegNo); Index <= (HandlePtr->kStartResultRegNo -(uint8_t)
 256              		.loc 1 187 0
 257 021a 7B68     		ldr	r3, [r7, #4]
 258 021c 1B7D     		ldrb	r3, [r3, #20]
 259 021e FB73     		strb	r3, [r7, #15]
 260 0220 13E0     		b	.L6
 261              	.L7:
 188:../Dave/Generated/src/ADCCH001/ADCCH001.c ****         {
 189:../Dave/Generated/src/ADCCH001/ADCCH001.c ****            WR_REG( GroupPtr->RCR[Index],
 262              		.loc 1 189 0 discriminator 2
 263 0222 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 264 0224 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 265 0226 BB68     		ldr	r3, [r7, #8]
 266 0228 01F1A001 		add	r1, r1, #160
 267 022c 53F82130 		ldr	r3, [r3, r1, lsl #2]
 268 0230 23F0C063 		bic	r3, r3, #100663296
 269 0234 43F00071 		orr	r1, r3, #33554432
 270 0238 BB68     		ldr	r3, [r7, #8]
 271 023a 02F1A002 		add	r2, r2, #160
 272 023e 43F82210 		str	r1, [r3, r2, lsl #2]
 187:../Dave/Generated/src/ADCCH001/ADCCH001.c ****         for(Index = (HandlePtr->kEndResultRegNo); Index <= (HandlePtr->kStartResultRegNo -(uint8_t)
 273              		.loc 1 187 0 discriminator 2
 274 0242 FB7B     		ldrb	r3, [r7, #15]
 275 0244 03F10103 		add	r3, r3, #1
 276 0248 FB73     		strb	r3, [r7, #15]
 277              	.L6:
 187:../Dave/Generated/src/ADCCH001/ADCCH001.c ****         for(Index = (HandlePtr->kEndResultRegNo); Index <= (HandlePtr->kStartResultRegNo -(uint8_t)
 278              		.loc 1 187 0 is_stmt 0 discriminator 1
 279 024a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 280 024c 7B68     		ldr	r3, [r7, #4]
 281 024e DB7C     		ldrb	r3, [r3, #19]	@ zero_extendqisi2
 282 0250 03F1FF33 		add	r3, r3, #-1
 283 0254 9A42     		cmp	r2, r3
 284 0256 E4DD     		ble	.L7
 187:../Dave/Generated/src/ADCCH001/ADCCH001.c ****         for(Index = (HandlePtr->kEndResultRegNo); Index <= (HandlePtr->kStartResultRegNo -(uint8_t)
 285              		.loc 1 187 0
 286 0258 17E0     		b	.L5
 287              	.L4:
 190:../Dave/Generated/src/ADCCH001/ADCCH001.c ****                    VADC_G_RCR_FEN_Msk,
 191:../Dave/Generated/src/ADCCH001/ADCCH001.c ****                    VADC_G_RCR_FEN_Pos,
 192:../Dave/Generated/src/ADCCH001/ADCCH001.c ****                    (uint32_t)0x1
 193:../Dave/Generated/src/ADCCH001/ADCCH001.c ****                  );
 194:../Dave/Generated/src/ADCCH001/ADCCH001.c ****         }
 195:../Dave/Generated/src/ADCCH001/ADCCH001.c ****       }
 196:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     }
 197:../Dave/Generated/src/ADCCH001/ADCCH001.c **** /* Write compare value in the result register for the Fast Compare Mode */    
 198:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     else
 199:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     {
 200:../Dave/Generated/src/ADCCH001/ADCCH001.c ****       WR_REG( GroupPtr->RES[HandlePtr->kStartResultRegNo],
 288              		.loc 1 200 0 is_stmt 1
 289 025a 7B68     		ldr	r3, [r7, #4]
 290 025c DB7C     		ldrb	r3, [r3, #19]	@ zero_extendqisi2
 291 025e 1A46     		mov	r2, r3
 292 0260 7B68     		ldr	r3, [r7, #4]
 293 0262 1B8B     		ldrh	r3, [r3, #24]
 294 0264 1946     		mov	r1, r3
 295 0266 7B68     		ldr	r3, [r7, #4]
 296 0268 DB7C     		ldrb	r3, [r3, #19]	@ zero_extendqisi2
 297 026a 1846     		mov	r0, r3
 298 026c BB68     		ldr	r3, [r7, #8]
 299 026e 00F1C000 		add	r0, r0, #192
 300 0272 53F82030 		ldr	r3, [r3, r0, lsl #2]
 301 0276 4FEA1343 		lsr	r3, r3, #16
 302 027a 4FEA0343 		lsl	r3, r3, #16
 303 027e 1943     		orrs	r1, r1, r3
 304 0280 BB68     		ldr	r3, [r7, #8]
 305 0282 02F1C002 		add	r2, r2, #192
 306 0286 43F82210 		str	r1, [r3, r2, lsl #2]
 307              	.L5:
 201:../Dave/Generated/src/ADCCH001/ADCCH001.c ****               VADC_G_RES_RESULT_Msk,
 202:../Dave/Generated/src/ADCCH001/ADCCH001.c ****               VADC_G_RES_RESULT_Pos,
 203:../Dave/Generated/src/ADCCH001/ADCCH001.c ****               (uint32_t)(HandlePtr->kResultCompVal)
 204:../Dave/Generated/src/ADCCH001/ADCCH001.c ****             );      
 205:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     }
 206:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     /* Set boundary flag for all the advanced result registers */
 207:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     if(HandlePtr->kBoundaryFlagEnable == (uint8_t)1)
 308              		.loc 1 207 0
 309 028a 7B68     		ldr	r3, [r7, #4]
 310 028c 9B7C     		ldrb	r3, [r3, #18]	@ zero_extendqisi2
 311 028e 012B     		cmp	r3, #1
 312 0290 19D1     		bne	.L8
 208:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     {
 209:../Dave/Generated/src/ADCCH001/ADCCH001.c ****       WR_REG( GroupPtr->BFL,
 313              		.loc 1 209 0
 314 0292 7B68     		ldr	r3, [r7, #4]
 315 0294 DB7C     		ldrb	r3, [r3, #19]	@ zero_extendqisi2
 316 0296 03F11003 		add	r3, r3, #16
 317 029a 4FF00102 		mov	r2, #1
 318 029e 02FA03F2 		lsl	r2, r2, r3
 319 02a2 BB68     		ldr	r3, [r7, #8]
 320 02a4 D3F8C810 		ldr	r1, [r3, #200]
 321 02a8 7B68     		ldr	r3, [r7, #4]
 322 02aa DB7C     		ldrb	r3, [r3, #19]	@ zero_extendqisi2
 323 02ac 03F11003 		add	r3, r3, #16
 324 02b0 4FF00100 		mov	r0, #1
 325 02b4 00FA03F3 		lsl	r3, r0, r3
 326 02b8 6FEA0303 		mvn	r3, r3
 327 02bc 0B40     		ands	r3, r3, r1
 328 02be 1A43     		orrs	r2, r2, r3
 329 02c0 BB68     		ldr	r3, [r7, #8]
 330 02c2 C3F8C820 		str	r2, [r3, #200]
 331              	.L8:
 210:../Dave/Generated/src/ADCCH001/ADCCH001.c ****               ((uint32_t)0x01 << (HandlePtr->kStartResultRegNo + (uint8_t)16)),
 211:../Dave/Generated/src/ADCCH001/ADCCH001.c ****               (HandlePtr->kStartResultRegNo + (uint8_t)16),
 212:../Dave/Generated/src/ADCCH001/ADCCH001.c ****               (uint32_t)(0x1)
 213:../Dave/Generated/src/ADCCH001/ADCCH001.c ****             );
 214:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     }
 215:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     /* change the state to the Initialized */
 216:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     HandlePtr->DynamicHandlePtr->State = ADCCH001_INITIALIZED;
 332              		.loc 1 216 0
 333 02c6 7B68     		ldr	r3, [r7, #4]
 334 02c8 5B68     		ldr	r3, [r3, #4]
 335 02ca 4FF00102 		mov	r2, #1
 336 02ce DA70     		strb	r2, [r3, #3]
 337              	.L1:
 217:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   }
 218:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   else
 219:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   {
 220:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     ERROR(GID_ADCCH001, (uint8_t)ADCCH001_OPERATION_NOT_ALLOWED, 0, (uint8_t*) NULL);    
 221:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   }
 222:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 223:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   FUNCTION_EXIT(GID_ADCCH001, (uint32_t)ADCCH001_FUN_EXIT);  
 224:../Dave/Generated/src/ADCCH001/ADCCH001.c **** }
 338              		.loc 1 224 0
 339 02d0 07F11407 		add	r7, r7, #20
 340 02d4 BD46     		mov	sp, r7
 341 02d6 80BC     		pop	{r7}
 342 02d8 7047     		bx	lr
 343              		.cfi_endproc
 344              	.LFE112:
 346 02da 00BF     		.section	.text.ADCCH001_Init,"ax",%progbits
 347              		.align	2
 348              		.global	ADCCH001_Init
 349              		.thumb
 350              		.thumb_func
 352              	ADCCH001_Init:
 353              	.LFB113:
 225:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 226:../Dave/Generated/src/ADCCH001/ADCCH001.c **** /**************************************************************************************************
 227:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  *                 API DEFINITION
 228:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  **************************************************************************************************
 229:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 230:../Dave/Generated/src/ADCCH001/ADCCH001.c **** /**
 231:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  * This function initializes all instances of the ADCCH001 App
 232:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  */
 233:../Dave/Generated/src/ADCCH001/ADCCH001.c **** void ADCCH001_Init(void)
 234:../Dave/Generated/src/ADCCH001/ADCCH001.c **** {
 354              		.loc 1 234 0
 355              		.cfi_startproc
 356              		@ args = 0, pretend = 0, frame = 0
 357              		@ frame_needed = 1, uses_anonymous_args = 0
 358 0000 80B5     		push	{r7, lr}
 359              	.LCFI3:
 360              		.cfi_def_cfa_offset 8
 361              		.cfi_offset 7, -8
 362              		.cfi_offset 14, -4
 363 0002 00AF     		add	r7, sp, #0
 364              	.LCFI4:
 365              		.cfi_def_cfa_register 7
 235:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   FUNCTION_ENTRY(GID_ADCCH001, (uint32_t)ADCCH001_FUN_ENTRY);  
 236:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   ADCGLOB001_Init();
 366              		.loc 1 236 0
 367 0004 FFF7FEFF 		bl	ADCGLOB001_Init
 237:../Dave/Generated/src/ADCCH001/ADCCH001.c **** /* Call the local function with the handle pointer for each instance */
 238:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   ADCCH001_lInit(&ADCCH001_Handle0);
 368              		.loc 1 238 0
 369 0008 40F20000 		movw	r0, #:lower16:ADCCH001_Handle0
 370 000c C0F20000 		movt	r0, #:upper16:ADCCH001_Handle0
 371 0010 FFF7FEFF 		bl	ADCCH001_lInit
 239:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   FUNCTION_EXIT(GID_ADCCH001, (uint32_t)ADCCH001_FUN_EXIT);  
 240:../Dave/Generated/src/ADCCH001/ADCCH001.c **** }
 372              		.loc 1 240 0
 373 0014 80BD     		pop	{r7, pc}
 374              		.cfi_endproc
 375              	.LFE113:
 377 0016 00BF     		.section	.text.ADCCH001_Deinit,"ax",%progbits
 378              		.align	2
 379              		.global	ADCCH001_Deinit
 380              		.thumb
 381              		.thumb_func
 383              	ADCCH001_Deinit:
 384              	.LFB114:
 241:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 242:../Dave/Generated/src/ADCCH001/ADCCH001.c **** /**
 243:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  * This function resets all the channel and result registers. 
 244:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  */
 245:../Dave/Generated/src/ADCCH001/ADCCH001.c **** status_t ADCCH001_Deinit(const ADCCH001_HandleType* HandlePtr)
 246:../Dave/Generated/src/ADCCH001/ADCCH001.c **** {
 385              		.loc 1 246 0
 386              		.cfi_startproc
 387              		@ args = 0, pretend = 0, frame = 24
 388              		@ frame_needed = 1, uses_anonymous_args = 0
 389              		@ link register save eliminated.
 390 0000 80B4     		push	{r7}
 391              	.LCFI5:
 392              		.cfi_def_cfa_offset 4
 393              		.cfi_offset 7, -4
 394 0002 87B0     		sub	sp, sp, #28
 395              	.LCFI6:
 396              		.cfi_def_cfa_offset 32
 397 0004 00AF     		add	r7, sp, #0
 398              	.LCFI7:
 399              		.cfi_def_cfa_register 7
 400 0006 7860     		str	r0, [r7, #4]
 247:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   VADC_G_TypeDef* GroupPtr = HandlePtr->ADCGrPtr;
 401              		.loc 1 247 0
 402 0008 7B68     		ldr	r3, [r7, #4]
 403 000a 1B68     		ldr	r3, [r3, #0]
 404 000c FB60     		str	r3, [r7, #12]
 248:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   uint8_t Index;
 249:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   status_t Status = (uint32_t)ADCCH001_OPERATION_NOT_ALLOWED;
 405              		.loc 1 249 0
 406 000e 4FF00103 		mov	r3, #1
 407 0012 3B61     		str	r3, [r7, #16]
 250:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   FUNCTION_ENTRY(GID_ADCCH001, (uint32_t)ADCCH001_FUN_ENTRY);
 251:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 252:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   if((HandlePtr->DynamicHandlePtr->State == ADCCH001_INITIALIZED))
 408              		.loc 1 252 0
 409 0014 7B68     		ldr	r3, [r7, #4]
 410 0016 5B68     		ldr	r3, [r3, #4]
 411 0018 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 412 001a 012B     		cmp	r3, #1
 413 001c 4BD1     		bne	.L11
 253:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   {
 254:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     GroupPtr->CHCTR[HandlePtr->kChannelNo] = (uint32_t)0x00;
 414              		.loc 1 254 0
 415 001e 7B68     		ldr	r3, [r7, #4]
 416 0020 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 417 0022 1A46     		mov	r2, r3
 418 0024 FB68     		ldr	r3, [r7, #12]
 419 0026 02F18002 		add	r2, r2, #128
 420 002a 4FF00001 		mov	r1, #0
 421 002e 43F82210 		str	r1, [r3, r2, lsl #2]
 255:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     WR_REG( GroupPtr->EMUXCTR, 
 422              		.loc 1 255 0
 423 0032 FB68     		ldr	r3, [r7, #12]
 424 0034 D3F8F031 		ldr	r3, [r3, #496]
 425 0038 23F4F812 		bic	r2, r3, #2031616
 426 003c FB68     		ldr	r3, [r7, #12]
 427 003e C3F8F021 		str	r2, [r3, #496]
 256:../Dave/Generated/src/ADCCH001/ADCCH001.c ****             VADC_G_EMUXCTR_EMUXCH_Msk,
 257:../Dave/Generated/src/ADCCH001/ADCCH001.c ****             VADC_G_EMUXCTR_EMUXCH_Pos,
 258:../Dave/Generated/src/ADCCH001/ADCCH001.c ****             (uint32_t)0x00
 259:../Dave/Generated/src/ADCCH001/ADCCH001.c ****           );
 260:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   
 261:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     for(Index = (HandlePtr->kEndResultRegNo); Index <= (HandlePtr->kStartResultRegNo); Index++)
 428              		.loc 1 261 0
 429 0042 7B68     		ldr	r3, [r7, #4]
 430 0044 1B7D     		ldrb	r3, [r3, #20]
 431 0046 FB75     		strb	r3, [r7, #23]
 432 0048 13E0     		b	.L12
 433              	.L13:
 262:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     {
 263:../Dave/Generated/src/ADCCH001/ADCCH001.c ****       GroupPtr->RCR[Index] = (uint32_t)0x00;
 434              		.loc 1 263 0 discriminator 2
 435 004a FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 436 004c FB68     		ldr	r3, [r7, #12]
 437 004e 02F1A002 		add	r2, r2, #160
 438 0052 4FF00001 		mov	r1, #0
 439 0056 43F82210 		str	r1, [r3, r2, lsl #2]
 264:../Dave/Generated/src/ADCCH001/ADCCH001.c ****       GroupPtr->RES[Index] = (uint32_t)0x00;
 440              		.loc 1 264 0 discriminator 2
 441 005a FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 442 005c FB68     		ldr	r3, [r7, #12]
 443 005e 02F1C002 		add	r2, r2, #192
 444 0062 4FF00001 		mov	r1, #0
 445 0066 43F82210 		str	r1, [r3, r2, lsl #2]
 261:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     for(Index = (HandlePtr->kEndResultRegNo); Index <= (HandlePtr->kStartResultRegNo); Index++)
 446              		.loc 1 261 0 discriminator 2
 447 006a FB7D     		ldrb	r3, [r7, #23]
 448 006c 03F10103 		add	r3, r3, #1
 449 0070 FB75     		strb	r3, [r7, #23]
 450              	.L12:
 261:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     for(Index = (HandlePtr->kEndResultRegNo); Index <= (HandlePtr->kStartResultRegNo); Index++)
 451              		.loc 1 261 0 is_stmt 0 discriminator 1
 452 0072 7B68     		ldr	r3, [r7, #4]
 453 0074 DB7C     		ldrb	r3, [r3, #19]	@ zero_extendqisi2
 454 0076 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 455 0078 9A42     		cmp	r2, r3
 456 007a E6D9     		bls	.L13
 265:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     }
 266:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     if(HandlePtr->kBoundaryFlagEnable == (uint8_t)1)
 457              		.loc 1 266 0 is_stmt 1
 458 007c 7B68     		ldr	r3, [r7, #4]
 459 007e 9B7C     		ldrb	r3, [r3, #18]	@ zero_extendqisi2
 460 0080 012B     		cmp	r3, #1
 461 0082 10D1     		bne	.L14
 267:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     {
 268:../Dave/Generated/src/ADCCH001/ADCCH001.c ****       CLR_BIT(GroupPtr->BFL, (((uint32_t)16 + (uint32_t)HandlePtr->kStartResultRegNo)));
 462              		.loc 1 268 0
 463 0084 FB68     		ldr	r3, [r7, #12]
 464 0086 D3F8C820 		ldr	r2, [r3, #200]
 465 008a 7B68     		ldr	r3, [r7, #4]
 466 008c DB7C     		ldrb	r3, [r3, #19]	@ zero_extendqisi2
 467 008e 03F11003 		add	r3, r3, #16
 468 0092 4FF00101 		mov	r1, #1
 469 0096 01FA03F3 		lsl	r3, r1, r3
 470 009a 6FEA0303 		mvn	r3, r3
 471 009e 1A40     		ands	r2, r2, r3
 472 00a0 FB68     		ldr	r3, [r7, #12]
 473 00a2 C3F8C820 		str	r2, [r3, #200]
 474              	.L14:
 269:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     }
 270:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     HandlePtr->DynamicHandlePtr->State = ADCCH001_UNINITIALIZED;
 475              		.loc 1 270 0
 476 00a6 7B68     		ldr	r3, [r7, #4]
 477 00a8 5B68     		ldr	r3, [r3, #4]
 478 00aa 4FF00002 		mov	r2, #0
 479 00ae DA70     		strb	r2, [r3, #3]
 271:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     Status = (uint32_t)DAVEApp_SUCCESS;
 480              		.loc 1 271 0
 481 00b0 4FF00003 		mov	r3, #0
 482 00b4 3B61     		str	r3, [r7, #16]
 483              	.L11:
 272:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   }
 273:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   else
 274:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   {
 275:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     ERROR(GID_ADCCH001, (uint8_t)Status, 0, (uint8_t*) NULL);    
 276:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   }
 277:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   FUNCTION_EXIT(GID_ADCCH001, (uint32_t)ADCCH001_FUN_EXIT);  
 278:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   return Status;
 484              		.loc 1 278 0
 485 00b6 3B69     		ldr	r3, [r7, #16]
 279:../Dave/Generated/src/ADCCH001/ADCCH001.c **** }
 486              		.loc 1 279 0
 487 00b8 1846     		mov	r0, r3
 488 00ba 07F11C07 		add	r7, r7, #28
 489 00be BD46     		mov	sp, r7
 490 00c0 80BC     		pop	{r7}
 491 00c2 7047     		bx	lr
 492              		.cfi_endproc
 493              	.LFE114:
 495              		.section	.text.ADCCH001_SetAlias,"ax",%progbits
 496              		.align	2
 497              		.global	ADCCH001_SetAlias
 498              		.thumb
 499              		.thumb_func
 501              	ADCCH001_SetAlias:
 502              	.LFB115:
 280:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 281:../Dave/Generated/src/ADCCH001/ADCCH001.c **** /**
 282:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  * This function assigns the alias channel number
 283:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  */
 284:../Dave/Generated/src/ADCCH001/ADCCH001.c **** status_t ADCCH001_SetAlias(const ADCCH001_HandleType* HandlePtr, uint8_t ChannelNo)
 285:../Dave/Generated/src/ADCCH001/ADCCH001.c **** {
 503              		.loc 1 285 0
 504              		.cfi_startproc
 505              		@ args = 0, pretend = 0, frame = 16
 506              		@ frame_needed = 1, uses_anonymous_args = 0
 507              		@ link register save eliminated.
 508 0000 80B4     		push	{r7}
 509              	.LCFI8:
 510              		.cfi_def_cfa_offset 4
 511              		.cfi_offset 7, -4
 512 0002 85B0     		sub	sp, sp, #20
 513              	.LCFI9:
 514              		.cfi_def_cfa_offset 24
 515 0004 00AF     		add	r7, sp, #0
 516              	.LCFI10:
 517              		.cfi_def_cfa_register 7
 518 0006 7860     		str	r0, [r7, #4]
 519 0008 0B46     		mov	r3, r1
 520 000a FB70     		strb	r3, [r7, #3]
 286:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   status_t Status = (uint32_t)ADCCH001_OPERATION_NOT_ALLOWED;
 521              		.loc 1 286 0
 522 000c 4FF00103 		mov	r3, #1
 523 0010 FB60     		str	r3, [r7, #12]
 287:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   FUNCTION_ENTRY(GID_ADCCH001, (uint32_t)ADCCH001_FUN_ENTRY);
 288:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 289:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   if((ChannelNo > (uint8_t)7))
 524              		.loc 1 289 0
 525 0012 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 526 0014 072B     		cmp	r3, #7
 527 0016 03D9     		bls	.L17
 290:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   {
 291:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     Status = (uint32_t)ADCCH001_INVALID_PARAM;
 528              		.loc 1 291 0
 529 0018 4FF00203 		mov	r3, #2
 530 001c FB60     		str	r3, [r7, #12]
 531 001e 32E0     		b	.L18
 532              	.L17:
 292:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     ERROR(GID_ADCCH001, (uint8_t)ADCCH001_INVALID_PARAM, 0, (uint8_t*) NULL);    
 293:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   }
 294:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   else if((HandlePtr->DynamicHandlePtr->State != ADCCH001_UNINITIALIZED) &&
 533              		.loc 1 294 0
 534 0020 7B68     		ldr	r3, [r7, #4]
 535 0022 5B68     		ldr	r3, [r3, #4]
 536 0024 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 537 0026 002B     		cmp	r3, #0
 538 0028 2DD0     		beq	.L18
 295:../Dave/Generated/src/ADCCH001/ADCCH001.c ****       ((HandlePtr->kChannelNo == (uint8_t)0) || (HandlePtr->kChannelNo == (uint8_t)1)))
 539              		.loc 1 295 0 discriminator 1
 540 002a 7B68     		ldr	r3, [r7, #4]
 541 002c 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 294:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   else if((HandlePtr->DynamicHandlePtr->State != ADCCH001_UNINITIALIZED) &&
 542              		.loc 1 294 0 discriminator 1
 543 002e 002B     		cmp	r3, #0
 544 0030 03D0     		beq	.L19
 545              		.loc 1 295 0
 546 0032 7B68     		ldr	r3, [r7, #4]
 547 0034 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 548 0036 012B     		cmp	r3, #1
 549 0038 25D1     		bne	.L18
 550              	.L19:
 296:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   {
 297:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     HandlePtr->ADCGrPtr->ALIAS &= ~((uint32_t)0x1F << (HandlePtr->kChannelNo * (uint8_t)8));
 551              		.loc 1 297 0
 552 003a 7B68     		ldr	r3, [r7, #4]
 553 003c 1B68     		ldr	r3, [r3, #0]
 554 003e 7A68     		ldr	r2, [r7, #4]
 555 0040 1268     		ldr	r2, [r2, #0]
 556 0042 D2F8B010 		ldr	r1, [r2, #176]
 557 0046 7A68     		ldr	r2, [r7, #4]
 558 0048 927D     		ldrb	r2, [r2, #22]	@ zero_extendqisi2
 559 004a 4FEAC202 		lsl	r2, r2, #3
 560 004e 4FF01F00 		mov	r0, #31
 561 0052 00FA02F2 		lsl	r2, r0, r2
 562 0056 6FEA0202 		mvn	r2, r2
 563 005a 0A40     		ands	r2, r2, r1
 564 005c C3F8B020 		str	r2, [r3, #176]
 298:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     HandlePtr->ADCGrPtr->ALIAS |= ((uint32_t)ChannelNo << (HandlePtr->kChannelNo * (uint8_t)8));
 565              		.loc 1 298 0
 566 0060 7B68     		ldr	r3, [r7, #4]
 567 0062 1B68     		ldr	r3, [r3, #0]
 568 0064 7A68     		ldr	r2, [r7, #4]
 569 0066 1268     		ldr	r2, [r2, #0]
 570 0068 D2F8B010 		ldr	r1, [r2, #176]
 571 006c F878     		ldrb	r0, [r7, #3]	@ zero_extendqisi2
 572 006e 7A68     		ldr	r2, [r7, #4]
 573 0070 927D     		ldrb	r2, [r2, #22]	@ zero_extendqisi2
 574 0072 4FEAC202 		lsl	r2, r2, #3
 575 0076 00FA02F2 		lsl	r2, r0, r2
 576 007a 0A43     		orrs	r2, r2, r1
 577 007c C3F8B020 		str	r2, [r3, #176]
 299:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     Status = (uint32_t)DAVEApp_SUCCESS;
 578              		.loc 1 299 0
 579 0080 4FF00003 		mov	r3, #0
 580 0084 FB60     		str	r3, [r7, #12]
 581              	.L18:
 300:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   }
 301:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   else
 302:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   {
 303:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     ERROR(GID_ADCCH001, (uint8_t)Status, 0, (uint8_t*) NULL);  
 304:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   }
 305:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 306:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   FUNCTION_EXIT(GID_ADCCH001, (uint32_t)ADCCH001_FUN_EXIT);  
 307:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   return Status;
 582              		.loc 1 307 0
 583 0086 FB68     		ldr	r3, [r7, #12]
 308:../Dave/Generated/src/ADCCH001/ADCCH001.c **** }
 584              		.loc 1 308 0
 585 0088 1846     		mov	r0, r3
 586 008a 07F11407 		add	r7, r7, #20
 587 008e BD46     		mov	sp, r7
 588 0090 80BC     		pop	{r7}
 589 0092 7047     		bx	lr
 590              		.cfi_endproc
 591              	.LFE115:
 593              		.section	.text.ADCCH001_EnableBoundaryFlag,"ax",%progbits
 594              		.align	2
 595              		.global	ADCCH001_EnableBoundaryFlag
 596              		.thumb
 597              		.thumb_func
 599              	ADCCH001_EnableBoundaryFlag:
 600              	.LFB116:
 309:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 310:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 311:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 312:../Dave/Generated/src/ADCCH001/ADCCH001.c **** /**
 313:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  * This function enables the boundary flag for result register 0, 1, 2 or 3.
 314:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  */
 315:../Dave/Generated/src/ADCCH001/ADCCH001.c **** status_t ADCCH001_EnableBoundaryFlag(const ADCCH001_HandleType* HandlePtr, uint8_t FlagNo)
 316:../Dave/Generated/src/ADCCH001/ADCCH001.c **** {
 601              		.loc 1 316 0
 602              		.cfi_startproc
 603              		@ args = 0, pretend = 0, frame = 16
 604              		@ frame_needed = 1, uses_anonymous_args = 0
 605              		@ link register save eliminated.
 606 0000 80B4     		push	{r7}
 607              	.LCFI11:
 608              		.cfi_def_cfa_offset 4
 609              		.cfi_offset 7, -4
 610 0002 85B0     		sub	sp, sp, #20
 611              	.LCFI12:
 612              		.cfi_def_cfa_offset 24
 613 0004 00AF     		add	r7, sp, #0
 614              	.LCFI13:
 615              		.cfi_def_cfa_register 7
 616 0006 7860     		str	r0, [r7, #4]
 617 0008 0B46     		mov	r3, r1
 618 000a FB70     		strb	r3, [r7, #3]
 317:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   status_t Status = (uint32_t)ADCCH001_OPERATION_NOT_ALLOWED;
 619              		.loc 1 317 0
 620 000c 4FF00103 		mov	r3, #1
 621 0010 FB60     		str	r3, [r7, #12]
 318:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   FUNCTION_ENTRY(GID_ADCCH001, (uint32_t)ADCCH001_FUN_ENTRY);
 319:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 320:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   if((FlagNo > (uint8_t)3))
 622              		.loc 1 320 0
 623 0012 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 624 0014 032B     		cmp	r3, #3
 625 0016 03D9     		bls	.L22
 321:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   {
 322:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     Status = (uint32_t)ADCCH001_INVALID_PARAM;
 626              		.loc 1 322 0
 627 0018 4FF00203 		mov	r3, #2
 628 001c FB60     		str	r3, [r7, #12]
 629 001e 17E0     		b	.L23
 630              	.L22:
 323:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     ERROR(GID_ADCCH001, (uint8_t)ADCCH001_INVALID_PARAM, 0, (uint8_t*) NULL);    
 324:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   }
 325:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   else if((HandlePtr->DynamicHandlePtr->State != ADCCH001_UNINITIALIZED))
 631              		.loc 1 325 0
 632 0020 7B68     		ldr	r3, [r7, #4]
 633 0022 5B68     		ldr	r3, [r3, #4]
 634 0024 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 635 0026 002B     		cmp	r3, #0
 636 0028 12D0     		beq	.L23
 326:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   {
 327:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     SET_BIT(HandlePtr->ADCGrPtr->BFL, ((uint32_t)FlagNo + (uint32_t)16));
 637              		.loc 1 327 0
 638 002a 7B68     		ldr	r3, [r7, #4]
 639 002c 1B68     		ldr	r3, [r3, #0]
 640 002e 7A68     		ldr	r2, [r7, #4]
 641 0030 1268     		ldr	r2, [r2, #0]
 642 0032 D2F8C810 		ldr	r1, [r2, #200]
 643 0036 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 644 0038 02F11002 		add	r2, r2, #16
 645 003c 4FF00100 		mov	r0, #1
 646 0040 00FA02F2 		lsl	r2, r0, r2
 647 0044 0A43     		orrs	r2, r2, r1
 648 0046 C3F8C820 		str	r2, [r3, #200]
 328:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     Status = (uint32_t)DAVEApp_SUCCESS;
 649              		.loc 1 328 0
 650 004a 4FF00003 		mov	r3, #0
 651 004e FB60     		str	r3, [r7, #12]
 652              	.L23:
 329:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   }
 330:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   else
 331:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   {
 332:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     ERROR(GID_ADCCH001, (uint8_t)Status, 0, (uint8_t*) NULL);  
 333:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   }
 334:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 335:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   FUNCTION_EXIT(GID_ADCCH001, (uint32_t)ADCCH001_FUN_EXIT);  
 336:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   return Status;
 653              		.loc 1 336 0
 654 0050 FB68     		ldr	r3, [r7, #12]
 337:../Dave/Generated/src/ADCCH001/ADCCH001.c **** }
 655              		.loc 1 337 0
 656 0052 1846     		mov	r0, r3
 657 0054 07F11407 		add	r7, r7, #20
 658 0058 BD46     		mov	sp, r7
 659 005a 80BC     		pop	{r7}
 660 005c 7047     		bx	lr
 661              		.cfi_endproc
 662              	.LFE116:
 664 005e 00BF     		.section	.text.ADCCH001_DisableBoundaryFlag,"ax",%progbits
 665              		.align	2
 666              		.global	ADCCH001_DisableBoundaryFlag
 667              		.thumb
 668              		.thumb_func
 670              	ADCCH001_DisableBoundaryFlag:
 671              	.LFB117:
 338:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 339:../Dave/Generated/src/ADCCH001/ADCCH001.c **** /**
 340:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  * This function disables the boundary flag for result register 0, 1, 2 or 3.
 341:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  */
 342:../Dave/Generated/src/ADCCH001/ADCCH001.c **** status_t ADCCH001_DisableBoundaryFlag(const ADCCH001_HandleType* HandlePtr, uint8_t FlagNo)
 343:../Dave/Generated/src/ADCCH001/ADCCH001.c **** {
 672              		.loc 1 343 0
 673              		.cfi_startproc
 674              		@ args = 0, pretend = 0, frame = 16
 675              		@ frame_needed = 1, uses_anonymous_args = 0
 676              		@ link register save eliminated.
 677 0000 80B4     		push	{r7}
 678              	.LCFI14:
 679              		.cfi_def_cfa_offset 4
 680              		.cfi_offset 7, -4
 681 0002 85B0     		sub	sp, sp, #20
 682              	.LCFI15:
 683              		.cfi_def_cfa_offset 24
 684 0004 00AF     		add	r7, sp, #0
 685              	.LCFI16:
 686              		.cfi_def_cfa_register 7
 687 0006 7860     		str	r0, [r7, #4]
 688 0008 0B46     		mov	r3, r1
 689 000a FB70     		strb	r3, [r7, #3]
 344:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   status_t Status = (uint32_t)ADCCH001_OPERATION_NOT_ALLOWED;
 690              		.loc 1 344 0
 691 000c 4FF00103 		mov	r3, #1
 692 0010 FB60     		str	r3, [r7, #12]
 345:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   FUNCTION_ENTRY(GID_ADCCH001, (uint32_t)ADCCH001_FUN_ENTRY);
 346:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   
 347:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   if((FlagNo > (uint8_t)3))
 693              		.loc 1 347 0
 694 0012 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 695 0014 032B     		cmp	r3, #3
 696 0016 03D9     		bls	.L26
 348:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   {
 349:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     Status = (uint32_t)ADCCH001_INVALID_PARAM;
 697              		.loc 1 349 0
 698 0018 4FF00203 		mov	r3, #2
 699 001c FB60     		str	r3, [r7, #12]
 700 001e 19E0     		b	.L27
 701              	.L26:
 350:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     ERROR(GID_ADCCH001, (uint8_t)ADCCH001_INVALID_PARAM, 0, (uint8_t*) NULL);    
 351:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   }
 352:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   else if((HandlePtr->DynamicHandlePtr->State != ADCCH001_UNINITIALIZED))
 702              		.loc 1 352 0
 703 0020 7B68     		ldr	r3, [r7, #4]
 704 0022 5B68     		ldr	r3, [r3, #4]
 705 0024 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 706 0026 002B     		cmp	r3, #0
 707 0028 14D0     		beq	.L27
 353:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   {
 354:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     CLR_BIT(HandlePtr->ADCGrPtr->BFL, ((uint32_t)FlagNo + (uint32_t)16));
 708              		.loc 1 354 0
 709 002a 7B68     		ldr	r3, [r7, #4]
 710 002c 1B68     		ldr	r3, [r3, #0]
 711 002e 7A68     		ldr	r2, [r7, #4]
 712 0030 1268     		ldr	r2, [r2, #0]
 713 0032 D2F8C810 		ldr	r1, [r2, #200]
 714 0036 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 715 0038 02F11002 		add	r2, r2, #16
 716 003c 4FF00100 		mov	r0, #1
 717 0040 00FA02F2 		lsl	r2, r0, r2
 718 0044 6FEA0202 		mvn	r2, r2
 719 0048 0A40     		ands	r2, r2, r1
 720 004a C3F8C820 		str	r2, [r3, #200]
 355:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     Status = (uint32_t)DAVEApp_SUCCESS;
 721              		.loc 1 355 0
 722 004e 4FF00003 		mov	r3, #0
 723 0052 FB60     		str	r3, [r7, #12]
 724              	.L27:
 356:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   }
 357:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   else
 358:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   {
 359:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     ERROR(GID_ADCCH001, (uint8_t)Status, 0, (uint8_t*) NULL);  
 360:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   }
 361:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 362:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   FUNCTION_EXIT(GID_ADCCH001, (uint32_t)ADCCH001_FUN_EXIT);  
 363:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   return Status;  
 725              		.loc 1 363 0
 726 0054 FB68     		ldr	r3, [r7, #12]
 364:../Dave/Generated/src/ADCCH001/ADCCH001.c **** }
 727              		.loc 1 364 0
 728 0056 1846     		mov	r0, r3
 729 0058 07F11407 		add	r7, r7, #20
 730 005c BD46     		mov	sp, r7
 731 005e 80BC     		pop	{r7}
 732 0060 7047     		bx	lr
 733              		.cfi_endproc
 734              	.LFE117:
 736 0062 00BF     		.section	.text.ADCCH001_SelectInputClass,"ax",%progbits
 737              		.align	2
 738              		.global	ADCCH001_SelectInputClass
 739              		.thumb
 740              		.thumb_func
 742              	ADCCH001_SelectInputClass:
 743              	.LFB118:
 365:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 366:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 367:../Dave/Generated/src/ADCCH001/ADCCH001.c **** /**
 368:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  * This function selects the input class for the channel. 
 369:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  */
 370:../Dave/Generated/src/ADCCH001/ADCCH001.c **** status_t ADCCH001_SelectInputClass(const ADCCH001_HandleType* HandlePtr, ADCCH001_InputClassType Cl
 371:../Dave/Generated/src/ADCCH001/ADCCH001.c **** {
 744              		.loc 1 371 0
 745              		.cfi_startproc
 746              		@ args = 0, pretend = 0, frame = 16
 747              		@ frame_needed = 1, uses_anonymous_args = 0
 748              		@ link register save eliminated.
 749 0000 90B4     		push	{r4, r7}
 750              	.LCFI17:
 751              		.cfi_def_cfa_offset 8
 752              		.cfi_offset 4, -8
 753              		.cfi_offset 7, -4
 754 0002 84B0     		sub	sp, sp, #16
 755              	.LCFI18:
 756              		.cfi_def_cfa_offset 24
 757 0004 00AF     		add	r7, sp, #0
 758              	.LCFI19:
 759              		.cfi_def_cfa_register 7
 760 0006 7860     		str	r0, [r7, #4]
 761 0008 0B46     		mov	r3, r1
 762 000a FB70     		strb	r3, [r7, #3]
 372:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   status_t Status = (uint32_t)ADCCH001_OPERATION_NOT_ALLOWED;
 763              		.loc 1 372 0
 764 000c 4FF00103 		mov	r3, #1
 765 0010 FB60     		str	r3, [r7, #12]
 373:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   FUNCTION_ENTRY(GID_ADCCH001, (uint32_t)ADCCH001_FUN_ENTRY);
 374:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   
 375:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   if((Class > (ADCCH001_InputClassType)3))
 766              		.loc 1 375 0
 767 0012 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 768 0014 032B     		cmp	r3, #3
 769 0016 03D9     		bls	.L30
 376:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   {
 377:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     Status = (uint32_t)ADCCH001_INVALID_PARAM;
 770              		.loc 1 377 0
 771 0018 4FF00203 		mov	r3, #2
 772 001c FB60     		str	r3, [r7, #12]
 773 001e 21E0     		b	.L31
 774              	.L30:
 378:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     ERROR(GID_ADCCH001, (uint8_t)ADCCH001_INVALID_PARAM, 0, (uint8_t*) NULL);    
 379:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   }  
 380:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   else if((HandlePtr->DynamicHandlePtr->State != ADCCH001_UNINITIALIZED) && 
 775              		.loc 1 380 0
 776 0020 7B68     		ldr	r3, [r7, #4]
 777 0022 5B68     		ldr	r3, [r3, #4]
 778 0024 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 779 0026 002B     		cmp	r3, #0
 780 0028 1CD0     		beq	.L31
 381:../Dave/Generated/src/ADCCH001/ADCCH001.c ****       (HandlePtr->kCompareMode == (uint8_t)0))
 781              		.loc 1 381 0 discriminator 1
 782 002a 7B68     		ldr	r3, [r7, #4]
 783 002c DB7D     		ldrb	r3, [r3, #23]	@ zero_extendqisi2
 380:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   else if((HandlePtr->DynamicHandlePtr->State != ADCCH001_UNINITIALIZED) && 
 784              		.loc 1 380 0 discriminator 1
 785 002e 002B     		cmp	r3, #0
 786 0030 18D1     		bne	.L31
 382:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   {
 383:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     WR_REG( HandlePtr->ADCGrPtr->CHCTR[HandlePtr->kChannelNo], 
 787              		.loc 1 383 0
 788 0032 7B68     		ldr	r3, [r7, #4]
 789 0034 1B68     		ldr	r3, [r3, #0]
 790 0036 7A68     		ldr	r2, [r7, #4]
 791 0038 927D     		ldrb	r2, [r2, #22]	@ zero_extendqisi2
 792 003a F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 793 003c 01F00300 		and	r0, r1, #3
 794 0040 7968     		ldr	r1, [r7, #4]
 795 0042 0968     		ldr	r1, [r1, #0]
 796 0044 7C68     		ldr	r4, [r7, #4]
 797 0046 A47D     		ldrb	r4, [r4, #22]	@ zero_extendqisi2
 798 0048 04F18004 		add	r4, r4, #128
 799 004c 51F82410 		ldr	r1, [r1, r4, lsl #2]
 800 0050 21F00301 		bic	r1, r1, #3
 801 0054 0143     		orrs	r1, r1, r0
 802 0056 02F18002 		add	r2, r2, #128
 803 005a 43F82210 		str	r1, [r3, r2, lsl #2]
 384:../Dave/Generated/src/ADCCH001/ADCCH001.c ****             VADC_G_CHCTR_ICLSEL_Msk,
 385:../Dave/Generated/src/ADCCH001/ADCCH001.c ****             VADC_G_CHCTR_ICLSEL_Pos,
 386:../Dave/Generated/src/ADCCH001/ADCCH001.c ****             (uint32_t)Class
 387:../Dave/Generated/src/ADCCH001/ADCCH001.c ****            );
 388:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     Status = (uint32_t)DAVEApp_SUCCESS;
 804              		.loc 1 388 0
 805 005e 4FF00003 		mov	r3, #0
 806 0062 FB60     		str	r3, [r7, #12]
 807              	.L31:
 389:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   }
 390:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   else
 391:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   {
 392:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     ERROR(GID_ADCCH001, (uint8_t)Status, 0, (uint8_t*) NULL);    
 393:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   }
 394:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 395:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   FUNCTION_EXIT(GID_ADCCH001, (uint32_t)ADCCH001_FUN_EXIT);  
 396:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   return Status;
 808              		.loc 1 396 0
 809 0064 FB68     		ldr	r3, [r7, #12]
 397:../Dave/Generated/src/ADCCH001/ADCCH001.c **** }
 810              		.loc 1 397 0
 811 0066 1846     		mov	r0, r3
 812 0068 07F11007 		add	r7, r7, #16
 813 006c BD46     		mov	sp, r7
 814 006e 90BC     		pop	{r4, r7}
 815 0070 7047     		bx	lr
 816              		.cfi_endproc
 817              	.LFE118:
 819 0072 00BF     		.section	.text.ADCCH001_SelectChEvtMode,"ax",%progbits
 820              		.align	2
 821              		.global	ADCCH001_SelectChEvtMode
 822              		.thumb
 823              		.thumb_func
 825              	ADCCH001_SelectChEvtMode:
 826              	.LFB119:
 398:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 399:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 400:../Dave/Generated/src/ADCCH001/ADCCH001.c **** /**
 401:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  * This function configures the channel event mode to generate the channel interrupt
 402:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  */
 403:../Dave/Generated/src/ADCCH001/ADCCH001.c **** status_t ADCCH001_SelectChEvtMode(const ADCCH001_HandleType* HandlePtr, ADCCH001_ChanEvtModeType Mo
 404:../Dave/Generated/src/ADCCH001/ADCCH001.c **** {
 827              		.loc 1 404 0
 828              		.cfi_startproc
 829              		@ args = 0, pretend = 0, frame = 16
 830              		@ frame_needed = 1, uses_anonymous_args = 0
 831              		@ link register save eliminated.
 832 0000 90B4     		push	{r4, r7}
 833              	.LCFI20:
 834              		.cfi_def_cfa_offset 8
 835              		.cfi_offset 4, -8
 836              		.cfi_offset 7, -4
 837 0002 84B0     		sub	sp, sp, #16
 838              	.LCFI21:
 839              		.cfi_def_cfa_offset 24
 840 0004 00AF     		add	r7, sp, #0
 841              	.LCFI22:
 842              		.cfi_def_cfa_register 7
 843 0006 7860     		str	r0, [r7, #4]
 844 0008 0B46     		mov	r3, r1
 845 000a FB70     		strb	r3, [r7, #3]
 405:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   status_t Status = (uint32_t)ADCCH001_OPERATION_NOT_ALLOWED;
 846              		.loc 1 405 0
 847 000c 4FF00103 		mov	r3, #1
 848 0010 FB60     		str	r3, [r7, #12]
 406:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   FUNCTION_ENTRY(GID_ADCCH001, (uint32_t)ADCCH001_FUN_ENTRY);
 407:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 408:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   if((Mode > (ADCCH001_ChanEvtModeType)3))
 849              		.loc 1 408 0
 850 0012 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 851 0014 032B     		cmp	r3, #3
 852 0016 03D9     		bls	.L34
 409:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   {
 410:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     Status = (uint32_t)ADCCH001_INVALID_PARAM;
 853              		.loc 1 410 0
 854 0018 4FF00203 		mov	r3, #2
 855 001c FB60     		str	r3, [r7, #12]
 856 001e 1FE0     		b	.L35
 857              	.L34:
 411:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     ERROR(GID_ADCCH001, (uint8_t)ADCCH001_INVALID_PARAM, 0, (uint8_t*) NULL);    
 412:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   }   
 413:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   else if(HandlePtr->DynamicHandlePtr->State != ADCCH001_UNINITIALIZED)
 858              		.loc 1 413 0
 859 0020 7B68     		ldr	r3, [r7, #4]
 860 0022 5B68     		ldr	r3, [r3, #4]
 861 0024 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 862 0026 002B     		cmp	r3, #0
 863 0028 1AD0     		beq	.L35
 414:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   {
 415:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     WR_REG( HandlePtr->ADCGrPtr->CHCTR[HandlePtr->kChannelNo], 
 864              		.loc 1 415 0
 865 002a 7B68     		ldr	r3, [r7, #4]
 866 002c 1B68     		ldr	r3, [r3, #0]
 867 002e 7A68     		ldr	r2, [r7, #4]
 868 0030 927D     		ldrb	r2, [r2, #22]	@ zero_extendqisi2
 869 0032 F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 870 0034 4FEA0121 		lsl	r1, r1, #8
 871 0038 01F44070 		and	r0, r1, #768
 872 003c 7968     		ldr	r1, [r7, #4]
 873 003e 0968     		ldr	r1, [r1, #0]
 874 0040 7C68     		ldr	r4, [r7, #4]
 875 0042 A47D     		ldrb	r4, [r4, #22]	@ zero_extendqisi2
 876 0044 04F18004 		add	r4, r4, #128
 877 0048 51F82410 		ldr	r1, [r1, r4, lsl #2]
 878 004c 21F44071 		bic	r1, r1, #768
 879 0050 0143     		orrs	r1, r1, r0
 880 0052 02F18002 		add	r2, r2, #128
 881 0056 43F82210 		str	r1, [r3, r2, lsl #2]
 416:../Dave/Generated/src/ADCCH001/ADCCH001.c ****             VADC_G_CHCTR_CHEVMODE_Msk,
 417:../Dave/Generated/src/ADCCH001/ADCCH001.c ****             VADC_G_CHCTR_CHEVMODE_Pos,
 418:../Dave/Generated/src/ADCCH001/ADCCH001.c ****             (uint32_t)Mode
 419:../Dave/Generated/src/ADCCH001/ADCCH001.c ****           );
 420:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     Status = (uint32_t)DAVEApp_SUCCESS;
 882              		.loc 1 420 0
 883 005a 4FF00003 		mov	r3, #0
 884 005e FB60     		str	r3, [r7, #12]
 885              	.L35:
 421:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   }
 422:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   else
 423:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   {
 424:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     ERROR(GID_ADCCH001, (uint8_t)Status, 0, (uint8_t*) NULL);    
 425:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   }
 426:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 427:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   FUNCTION_EXIT(GID_ADCCH001, (uint32_t)ADCCH001_FUN_EXIT);  
 428:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   return Status;
 886              		.loc 1 428 0
 887 0060 FB68     		ldr	r3, [r7, #12]
 429:../Dave/Generated/src/ADCCH001/ADCCH001.c **** }
 888              		.loc 1 429 0
 889 0062 1846     		mov	r0, r3
 890 0064 07F11007 		add	r7, r7, #16
 891 0068 BD46     		mov	sp, r7
 892 006a 90BC     		pop	{r4, r7}
 893 006c 7047     		bx	lr
 894              		.cfi_endproc
 895              	.LFE119:
 897 006e 00BF     		.section	.text.ADCCH001_SelectUpperBoundary,"ax",%progbits
 898              		.align	2
 899              		.global	ADCCH001_SelectUpperBoundary
 900              		.thumb
 901              		.thumb_func
 903              	ADCCH001_SelectUpperBoundary:
 904              	.LFB120:
 430:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 431:../Dave/Generated/src/ADCCH001/ADCCH001.c **** /**
 432:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  * This function selects the upper boundary for limit checking function. 
 433:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  * This is the upper delta for Fast Compare Mode.
 434:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  */
 435:../Dave/Generated/src/ADCCH001/ADCCH001.c **** status_t ADCCH001_SelectUpperBoundary(const ADCCH001_HandleType* HandlePtr, ADCCH001_BoundaryType U
 436:../Dave/Generated/src/ADCCH001/ADCCH001.c **** {
 905              		.loc 1 436 0
 906              		.cfi_startproc
 907              		@ args = 0, pretend = 0, frame = 16
 908              		@ frame_needed = 1, uses_anonymous_args = 0
 909              		@ link register save eliminated.
 910 0000 90B4     		push	{r4, r7}
 911              	.LCFI23:
 912              		.cfi_def_cfa_offset 8
 913              		.cfi_offset 4, -8
 914              		.cfi_offset 7, -4
 915 0002 84B0     		sub	sp, sp, #16
 916              	.LCFI24:
 917              		.cfi_def_cfa_offset 24
 918 0004 00AF     		add	r7, sp, #0
 919              	.LCFI25:
 920              		.cfi_def_cfa_register 7
 921 0006 7860     		str	r0, [r7, #4]
 922 0008 0B46     		mov	r3, r1
 923 000a FB70     		strb	r3, [r7, #3]
 437:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   status_t Status = (uint32_t)ADCCH001_OPERATION_NOT_ALLOWED;
 924              		.loc 1 437 0
 925 000c 4FF00103 		mov	r3, #1
 926 0010 FB60     		str	r3, [r7, #12]
 438:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   FUNCTION_ENTRY(GID_ADCCH001, (uint32_t)ADCCH001_FUN_ENTRY);
 439:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 440:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   if((UBoundary > (ADCCH001_BoundaryType)3))
 927              		.loc 1 440 0
 928 0012 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 929 0014 032B     		cmp	r3, #3
 930 0016 03D9     		bls	.L38
 441:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   {
 442:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     Status = (uint32_t)ADCCH001_INVALID_PARAM;
 931              		.loc 1 442 0
 932 0018 4FF00203 		mov	r3, #2
 933 001c FB60     		str	r3, [r7, #12]
 934 001e 22E0     		b	.L39
 935              	.L38:
 443:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     ERROR(GID_ADCCH001, (uint8_t)ADCCH001_INVALID_PARAM, 0, (uint8_t*) NULL);    
 444:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   }   
 445:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   else if((HandlePtr->DynamicHandlePtr->State != ADCCH001_UNINITIALIZED) &&
 936              		.loc 1 445 0
 937 0020 7B68     		ldr	r3, [r7, #4]
 938 0022 5B68     		ldr	r3, [r3, #4]
 939 0024 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 940 0026 002B     		cmp	r3, #0
 941 0028 1DD0     		beq	.L39
 446:../Dave/Generated/src/ADCCH001/ADCCH001.c ****       (HandlePtr->kCompareMode == (uint8_t)0))
 942              		.loc 1 446 0 discriminator 1
 943 002a 7B68     		ldr	r3, [r7, #4]
 944 002c DB7D     		ldrb	r3, [r3, #23]	@ zero_extendqisi2
 445:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   else if((HandlePtr->DynamicHandlePtr->State != ADCCH001_UNINITIALIZED) &&
 945              		.loc 1 445 0 discriminator 1
 946 002e 002B     		cmp	r3, #0
 947 0030 19D1     		bne	.L39
 447:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   {
 448:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     WR_REG( HandlePtr->ADCGrPtr->CHCTR[HandlePtr->kChannelNo], 
 948              		.loc 1 448 0
 949 0032 7B68     		ldr	r3, [r7, #4]
 950 0034 1B68     		ldr	r3, [r3, #0]
 951 0036 7A68     		ldr	r2, [r7, #4]
 952 0038 927D     		ldrb	r2, [r2, #22]	@ zero_extendqisi2
 953 003a F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 954 003c 4FEA8111 		lsl	r1, r1, #6
 955 0040 C8B2     		uxtb	r0, r1
 956 0042 7968     		ldr	r1, [r7, #4]
 957 0044 0968     		ldr	r1, [r1, #0]
 958 0046 7C68     		ldr	r4, [r7, #4]
 959 0048 A47D     		ldrb	r4, [r4, #22]	@ zero_extendqisi2
 960 004a 04F18004 		add	r4, r4, #128
 961 004e 51F82410 		ldr	r1, [r1, r4, lsl #2]
 962 0052 21F0C001 		bic	r1, r1, #192
 963 0056 0143     		orrs	r1, r1, r0
 964 0058 02F18002 		add	r2, r2, #128
 965 005c 43F82210 		str	r1, [r3, r2, lsl #2]
 449:../Dave/Generated/src/ADCCH001/ADCCH001.c ****             VADC_G_CHCTR_BNDSELU_Msk,
 450:../Dave/Generated/src/ADCCH001/ADCCH001.c ****             VADC_G_CHCTR_BNDSELU_Pos,
 451:../Dave/Generated/src/ADCCH001/ADCCH001.c ****             (uint32_t)UBoundary
 452:../Dave/Generated/src/ADCCH001/ADCCH001.c ****           );
 453:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     Status = (uint32_t)DAVEApp_SUCCESS;
 966              		.loc 1 453 0
 967 0060 4FF00003 		mov	r3, #0
 968 0064 FB60     		str	r3, [r7, #12]
 969              	.L39:
 454:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   }
 455:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   else
 456:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   {
 457:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     ERROR(GID_ADCCH001, (uint8_t)Status, 0, (uint8_t*) NULL);    
 458:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   }
 459:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 460:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   FUNCTION_EXIT(GID_ADCCH001, (uint32_t)ADCCH001_FUN_EXIT); 
 461:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   return Status;
 970              		.loc 1 461 0
 971 0066 FB68     		ldr	r3, [r7, #12]
 462:../Dave/Generated/src/ADCCH001/ADCCH001.c **** }
 972              		.loc 1 462 0
 973 0068 1846     		mov	r0, r3
 974 006a 07F11007 		add	r7, r7, #16
 975 006e BD46     		mov	sp, r7
 976 0070 90BC     		pop	{r4, r7}
 977 0072 7047     		bx	lr
 978              		.cfi_endproc
 979              	.LFE120:
 981              		.section	.text.ADCCH001_SelectLowerBoundary,"ax",%progbits
 982              		.align	2
 983              		.global	ADCCH001_SelectLowerBoundary
 984              		.thumb
 985              		.thumb_func
 987              	ADCCH001_SelectLowerBoundary:
 988              	.LFB121:
 463:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 464:../Dave/Generated/src/ADCCH001/ADCCH001.c **** /**
 465:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  * This function selects the lower boundary for limit checking function. 
 466:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  * This is the lower delta for Fast Compare Mode.
 467:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  */
 468:../Dave/Generated/src/ADCCH001/ADCCH001.c **** status_t ADCCH001_SelectLowerBoundary(const ADCCH001_HandleType* HandlePtr, ADCCH001_BoundaryType L
 469:../Dave/Generated/src/ADCCH001/ADCCH001.c **** {
 989              		.loc 1 469 0
 990              		.cfi_startproc
 991              		@ args = 0, pretend = 0, frame = 16
 992              		@ frame_needed = 1, uses_anonymous_args = 0
 993              		@ link register save eliminated.
 994 0000 90B4     		push	{r4, r7}
 995              	.LCFI26:
 996              		.cfi_def_cfa_offset 8
 997              		.cfi_offset 4, -8
 998              		.cfi_offset 7, -4
 999 0002 84B0     		sub	sp, sp, #16
 1000              	.LCFI27:
 1001              		.cfi_def_cfa_offset 24
 1002 0004 00AF     		add	r7, sp, #0
 1003              	.LCFI28:
 1004              		.cfi_def_cfa_register 7
 1005 0006 7860     		str	r0, [r7, #4]
 1006 0008 0B46     		mov	r3, r1
 1007 000a FB70     		strb	r3, [r7, #3]
 470:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   status_t Status = (uint32_t)ADCCH001_OPERATION_NOT_ALLOWED;
 1008              		.loc 1 470 0
 1009 000c 4FF00103 		mov	r3, #1
 1010 0010 FB60     		str	r3, [r7, #12]
 471:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   FUNCTION_ENTRY(GID_ADCCH001, (uint32_t)ADCCH001_FUN_ENTRY);
 472:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 473:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   if((LBoundary > (ADCCH001_BoundaryType)3))
 1011              		.loc 1 473 0
 1012 0012 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1013 0014 032B     		cmp	r3, #3
 1014 0016 03D9     		bls	.L42
 474:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   {
 475:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     Status = (uint32_t)ADCCH001_INVALID_PARAM;
 1015              		.loc 1 475 0
 1016 0018 4FF00203 		mov	r3, #2
 1017 001c FB60     		str	r3, [r7, #12]
 1018 001e 23E0     		b	.L43
 1019              	.L42:
 476:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     ERROR(GID_ADCCH001, (uint8_t)ADCCH001_INVALID_PARAM, 0, (uint8_t*) NULL);    
 477:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   }   
 478:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   else if((HandlePtr->DynamicHandlePtr->State != ADCCH001_UNINITIALIZED) &&
 1020              		.loc 1 478 0
 1021 0020 7B68     		ldr	r3, [r7, #4]
 1022 0022 5B68     		ldr	r3, [r3, #4]
 1023 0024 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1024 0026 002B     		cmp	r3, #0
 1025 0028 1ED0     		beq	.L43
 479:../Dave/Generated/src/ADCCH001/ADCCH001.c ****       (HandlePtr->kCompareMode == (uint8_t)0))
 1026              		.loc 1 479 0 discriminator 1
 1027 002a 7B68     		ldr	r3, [r7, #4]
 1028 002c DB7D     		ldrb	r3, [r3, #23]	@ zero_extendqisi2
 478:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   else if((HandlePtr->DynamicHandlePtr->State != ADCCH001_UNINITIALIZED) &&
 1029              		.loc 1 478 0 discriminator 1
 1030 002e 002B     		cmp	r3, #0
 1031 0030 1AD1     		bne	.L43
 480:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   {
 481:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     WR_REG( HandlePtr->ADCGrPtr->CHCTR[HandlePtr->kChannelNo], 
 1032              		.loc 1 481 0
 1033 0032 7B68     		ldr	r3, [r7, #4]
 1034 0034 1B68     		ldr	r3, [r3, #0]
 1035 0036 7A68     		ldr	r2, [r7, #4]
 1036 0038 927D     		ldrb	r2, [r2, #22]	@ zero_extendqisi2
 1037 003a F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 1038 003c 4FEA0111 		lsl	r1, r1, #4
 1039 0040 01F03000 		and	r0, r1, #48
 1040 0044 7968     		ldr	r1, [r7, #4]
 1041 0046 0968     		ldr	r1, [r1, #0]
 1042 0048 7C68     		ldr	r4, [r7, #4]
 1043 004a A47D     		ldrb	r4, [r4, #22]	@ zero_extendqisi2
 1044 004c 04F18004 		add	r4, r4, #128
 1045 0050 51F82410 		ldr	r1, [r1, r4, lsl #2]
 1046 0054 21F03001 		bic	r1, r1, #48
 1047 0058 0143     		orrs	r1, r1, r0
 1048 005a 02F18002 		add	r2, r2, #128
 1049 005e 43F82210 		str	r1, [r3, r2, lsl #2]
 482:../Dave/Generated/src/ADCCH001/ADCCH001.c ****             VADC_G_CHCTR_BNDSELL_Msk,
 483:../Dave/Generated/src/ADCCH001/ADCCH001.c ****             VADC_G_CHCTR_BNDSELL_Pos,
 484:../Dave/Generated/src/ADCCH001/ADCCH001.c ****             (uint32_t)LBoundary
 485:../Dave/Generated/src/ADCCH001/ADCCH001.c ****           );
 486:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     Status = (uint32_t)DAVEApp_SUCCESS;
 1050              		.loc 1 486 0
 1051 0062 4FF00003 		mov	r3, #0
 1052 0066 FB60     		str	r3, [r7, #12]
 1053              	.L43:
 487:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   }
 488:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   else
 489:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   {
 490:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     ERROR(GID_ADCCH001, (uint8_t)Status, 0, (uint8_t*) NULL);    
 491:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   }
 492:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 493:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   FUNCTION_EXIT(GID_ADCCH001, (uint32_t)ADCCH001_FUN_EXIT);  
 494:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   return Status;
 1054              		.loc 1 494 0
 1055 0068 FB68     		ldr	r3, [r7, #12]
 495:../Dave/Generated/src/ADCCH001/ADCCH001.c **** }
 1056              		.loc 1 495 0
 1057 006a 1846     		mov	r0, r3
 1058 006c 07F11007 		add	r7, r7, #16
 1059 0070 BD46     		mov	sp, r7
 1060 0072 90BC     		pop	{r4, r7}
 1061 0074 7047     		bx	lr
 1062              		.cfi_endproc
 1063              	.LFE121:
 1065 0076 00BF     		.section	.text.ADCCH001_GetResult,"ax",%progbits
 1066              		.align	2
 1067              		.global	ADCCH001_GetResult
 1068              		.thumb
 1069              		.thumb_func
 1071              	ADCCH001_GetResult:
 1072              	.LFB122:
 496:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 497:../Dave/Generated/src/ADCCH001/ADCCH001.c **** /**
 498:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  * This function returns the result of the normal mode ADC conversion. 
 499:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  */
 500:../Dave/Generated/src/ADCCH001/ADCCH001.c **** status_t ADCCH001_GetResult(const ADCCH001_HandleType* HandlePtr, uint16_t* ResultPtr)
 501:../Dave/Generated/src/ADCCH001/ADCCH001.c **** {
 1073              		.loc 1 501 0
 1074              		.cfi_startproc
 1075              		@ args = 0, pretend = 0, frame = 24
 1076              		@ frame_needed = 1, uses_anonymous_args = 0
 1077              		@ link register save eliminated.
 1078 0000 80B4     		push	{r7}
 1079              	.LCFI29:
 1080              		.cfi_def_cfa_offset 4
 1081              		.cfi_offset 7, -4
 1082 0002 87B0     		sub	sp, sp, #28
 1083              	.LCFI30:
 1084              		.cfi_def_cfa_offset 32
 1085 0004 00AF     		add	r7, sp, #0
 1086              	.LCFI31:
 1087              		.cfi_def_cfa_register 7
 1088 0006 7860     		str	r0, [r7, #4]
 1089 0008 3960     		str	r1, [r7, #0]
 502:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   status_t Status = (uint32_t)ADCCH001_OPERATION_NOT_ALLOWED;
 1090              		.loc 1 502 0
 1091 000a 4FF00103 		mov	r3, #1
 1092 000e 7B61     		str	r3, [r7, #20]
 503:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   VADC_G_TypeDef* GroupPtr = HandlePtr->ADCGrPtr;
 1093              		.loc 1 503 0
 1094 0010 7B68     		ldr	r3, [r7, #4]
 1095 0012 1B68     		ldr	r3, [r3, #0]
 1096 0014 3B61     		str	r3, [r7, #16]
 504:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   uint32_t TempResult;
 505:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   FUNCTION_ENTRY(GID_ADCCH001, (uint32_t)ADCCH001_FUN_ENTRY);
 506:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 507:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   if((HandlePtr->DynamicHandlePtr->State != ADCCH001_UNINITIALIZED) &&
 1097              		.loc 1 507 0
 1098 0016 7B68     		ldr	r3, [r7, #4]
 1099 0018 5B68     		ldr	r3, [r3, #4]
 1100 001a DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1101 001c 002B     		cmp	r3, #0
 1102 001e 27D0     		beq	.L46
 508:../Dave/Generated/src/ADCCH001/ADCCH001.c ****       (HandlePtr->kCompareMode == (uint8_t)0))
 1103              		.loc 1 508 0 discriminator 1
 1104 0020 7B68     		ldr	r3, [r7, #4]
 1105 0022 DB7D     		ldrb	r3, [r3, #23]	@ zero_extendqisi2
 507:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   if((HandlePtr->DynamicHandlePtr->State != ADCCH001_UNINITIALIZED) &&
 1106              		.loc 1 507 0 discriminator 1
 1107 0024 002B     		cmp	r3, #0
 1108 0026 23D1     		bne	.L46
 509:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   {
 510:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     TempResult = GroupPtr->RES[HandlePtr->kEndResultRegNo];
 1109              		.loc 1 510 0
 1110 0028 7B68     		ldr	r3, [r7, #4]
 1111 002a 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 1112 002c 1A46     		mov	r2, r3
 1113 002e 3B69     		ldr	r3, [r7, #16]
 1114 0030 02F1C002 		add	r2, r2, #192
 1115 0034 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1116 0038 FB60     		str	r3, [r7, #12]
 511:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     /* If valid flag is set */
 512:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     if(((TempResult & VADC_G_RES_VF_Msk) >> VADC_G_RES_VF_Pos) == (uint32_t)1)
 1117              		.loc 1 512 0
 1118 003a FB68     		ldr	r3, [r7, #12]
 1119 003c 4FEAD373 		lsr	r3, r3, #31
 1120 0040 012B     		cmp	r3, #1
 1121 0042 0DD1     		bne	.L47
 513:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     {
 514:../Dave/Generated/src/ADCCH001/ADCCH001.c ****       HandlePtr->DynamicHandlePtr->Result = 
 1122              		.loc 1 514 0
 1123 0044 7B68     		ldr	r3, [r7, #4]
 1124 0046 5B68     		ldr	r3, [r3, #4]
 515:../Dave/Generated/src/ADCCH001/ADCCH001.c ****           (uint16_t)(TempResult & VADC_G_RES_RESULT_Msk);
 1125              		.loc 1 515 0
 1126 0048 FA68     		ldr	r2, [r7, #12]
 1127 004a 92B2     		uxth	r2, r2
 514:../Dave/Generated/src/ADCCH001/ADCCH001.c ****       HandlePtr->DynamicHandlePtr->Result = 
 1128              		.loc 1 514 0
 1129 004c 1A80     		strh	r2, [r3, #0]	@ movhi
 516:../Dave/Generated/src/ADCCH001/ADCCH001.c ****       *ResultPtr = HandlePtr->DynamicHandlePtr->Result;
 1130              		.loc 1 516 0
 1131 004e 7B68     		ldr	r3, [r7, #4]
 1132 0050 5B68     		ldr	r3, [r3, #4]
 1133 0052 1A88     		ldrh	r2, [r3, #0]
 1134 0054 3B68     		ldr	r3, [r7, #0]
 1135 0056 1A80     		strh	r2, [r3, #0]	@ movhi
 517:../Dave/Generated/src/ADCCH001/ADCCH001.c ****       Status = (uint32_t)DAVEApp_SUCCESS;
 1136              		.loc 1 517 0
 1137 0058 4FF00003 		mov	r3, #0
 1138 005c 7B61     		str	r3, [r7, #20]
 1139 005e 07E0     		b	.L46
 1140              	.L47:
 518:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     }
 519:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     /* If data is old, then send error as invalid result */
 520:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     else
 521:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     {
 522:../Dave/Generated/src/ADCCH001/ADCCH001.c ****       *ResultPtr = HandlePtr->DynamicHandlePtr->Result;
 1141              		.loc 1 522 0
 1142 0060 7B68     		ldr	r3, [r7, #4]
 1143 0062 5B68     		ldr	r3, [r3, #4]
 1144 0064 1A88     		ldrh	r2, [r3, #0]
 1145 0066 3B68     		ldr	r3, [r7, #0]
 1146 0068 1A80     		strh	r2, [r3, #0]	@ movhi
 523:../Dave/Generated/src/ADCCH001/ADCCH001.c ****       Status = (uint32_t)ADCCH001_INVALID_RESULT;
 1147              		.loc 1 523 0
 1148 006a 4FF00303 		mov	r3, #3
 1149 006e 7B61     		str	r3, [r7, #20]
 1150              	.L46:
 524:../Dave/Generated/src/ADCCH001/ADCCH001.c ****       ERROR(GID_ADCCH001, (uint8_t)Status, 0, (uint8_t*) NULL);
 525:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     }
 526:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   }
 527:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   else
 528:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   {
 529:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     ERROR(GID_ADCCH001, (uint8_t)Status, 0, (uint8_t*) NULL);    
 530:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   }
 531:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 532:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   FUNCTION_EXIT(GID_ADCCH001, (uint32_t)ADCCH001_FUN_EXIT);  
 533:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   return Status;
 1151              		.loc 1 533 0
 1152 0070 7B69     		ldr	r3, [r7, #20]
 534:../Dave/Generated/src/ADCCH001/ADCCH001.c **** }
 1153              		.loc 1 534 0
 1154 0072 1846     		mov	r0, r3
 1155 0074 07F11C07 		add	r7, r7, #28
 1156 0078 BD46     		mov	sp, r7
 1157 007a 80BC     		pop	{r7}
 1158 007c 7047     		bx	lr
 1159              		.cfi_endproc
 1160              	.LFE122:
 1162 007e 00BF     		.section	.text.ADCCH001_GetFastCompareResult,"ax",%progbits
 1163              		.align	2
 1164              		.global	ADCCH001_GetFastCompareResult
 1165              		.thumb
 1166              		.thumb_func
 1168              	ADCCH001_GetFastCompareResult:
 1169              	.LFB123:
 535:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 536:../Dave/Generated/src/ADCCH001/ADCCH001.c **** /**
 537:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  * This function returns the result of the fast compare ADC conversion. 
 538:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  */
 539:../Dave/Generated/src/ADCCH001/ADCCH001.c **** status_t ADCCH001_GetFastCompareResult(const ADCCH001_HandleType* HandlePtr, uint8_t* ResultPtr)
 540:../Dave/Generated/src/ADCCH001/ADCCH001.c **** {
 1170              		.loc 1 540 0
 1171              		.cfi_startproc
 1172              		@ args = 0, pretend = 0, frame = 24
 1173              		@ frame_needed = 1, uses_anonymous_args = 0
 1174              		@ link register save eliminated.
 1175 0000 80B4     		push	{r7}
 1176              	.LCFI32:
 1177              		.cfi_def_cfa_offset 4
 1178              		.cfi_offset 7, -4
 1179 0002 87B0     		sub	sp, sp, #28
 1180              	.LCFI33:
 1181              		.cfi_def_cfa_offset 32
 1182 0004 00AF     		add	r7, sp, #0
 1183              	.LCFI34:
 1184              		.cfi_def_cfa_register 7
 1185 0006 7860     		str	r0, [r7, #4]
 1186 0008 3960     		str	r1, [r7, #0]
 541:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   status_t Status = (uint32_t)ADCCH001_OPERATION_NOT_ALLOWED;
 1187              		.loc 1 541 0
 1188 000a 4FF00103 		mov	r3, #1
 1189 000e 7B61     		str	r3, [r7, #20]
 542:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   VADC_G_TypeDef* GroupPtr = HandlePtr->ADCGrPtr;
 1190              		.loc 1 542 0
 1191 0010 7B68     		ldr	r3, [r7, #4]
 1192 0012 1B68     		ldr	r3, [r3, #0]
 1193 0014 3B61     		str	r3, [r7, #16]
 543:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   uint32_t TempResult;
 544:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   FUNCTION_ENTRY(GID_ADCCH001, (uint32_t)ADCCH001_FUN_ENTRY);
 545:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 546:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   if((HandlePtr->DynamicHandlePtr->State != ADCCH001_UNINITIALIZED) &&
 1194              		.loc 1 546 0
 1195 0016 7B68     		ldr	r3, [r7, #4]
 1196 0018 5B68     		ldr	r3, [r3, #4]
 1197 001a DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1198 001c 002B     		cmp	r3, #0
 1199 001e 2BD0     		beq	.L50
 547:../Dave/Generated/src/ADCCH001/ADCCH001.c ****       (HandlePtr->kCompareMode == (uint8_t)1))
 1200              		.loc 1 547 0 discriminator 1
 1201 0020 7B68     		ldr	r3, [r7, #4]
 1202 0022 DB7D     		ldrb	r3, [r3, #23]	@ zero_extendqisi2
 546:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   if((HandlePtr->DynamicHandlePtr->State != ADCCH001_UNINITIALIZED) &&
 1203              		.loc 1 546 0 discriminator 1
 1204 0024 012B     		cmp	r3, #1
 1205 0026 27D1     		bne	.L50
 548:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   {
 549:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     TempResult = GroupPtr->RES[HandlePtr->kEndResultRegNo];
 1206              		.loc 1 549 0
 1207 0028 7B68     		ldr	r3, [r7, #4]
 1208 002a 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 1209 002c 1A46     		mov	r2, r3
 1210 002e 3B69     		ldr	r3, [r7, #16]
 1211 0030 02F1C002 		add	r2, r2, #192
 1212 0034 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1213 0038 FB60     		str	r3, [r7, #12]
 550:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     /* If valid flag is set */
 551:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     if(((TempResult & VADC_G_RES_VF_Msk) >> VADC_G_RES_VF_Pos) == (uint32_t)1)
 1214              		.loc 1 551 0
 1215 003a FB68     		ldr	r3, [r7, #12]
 1216 003c 4FEAD373 		lsr	r3, r3, #31
 1217 0040 012B     		cmp	r3, #1
 1218 0042 11D1     		bne	.L51
 552:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     {
 553:../Dave/Generated/src/ADCCH001/ADCCH001.c ****       HandlePtr->DynamicHandlePtr->FastCompResult = (uint8_t)RD_REG(TempResult, 
 1219              		.loc 1 553 0
 1220 0044 7B68     		ldr	r3, [r7, #4]
 1221 0046 5B68     		ldr	r3, [r3, #4]
 1222 0048 FA68     		ldr	r2, [r7, #12]
 1223 004a 02F08042 		and	r2, r2, #1073741824
 1224 004e 4FEA9272 		lsr	r2, r2, #30
 1225 0052 D2B2     		uxtb	r2, r2
 1226 0054 9A70     		strb	r2, [r3, #2]
 554:../Dave/Generated/src/ADCCH001/ADCCH001.c ****                                                     VADC_G_RES_FCR_Msk,
 555:../Dave/Generated/src/ADCCH001/ADCCH001.c ****                                                     VADC_G_RES_FCR_Pos
 556:../Dave/Generated/src/ADCCH001/ADCCH001.c ****                                                    );
 557:../Dave/Generated/src/ADCCH001/ADCCH001.c ****       *ResultPtr = HandlePtr->DynamicHandlePtr->FastCompResult;
 1227              		.loc 1 557 0
 1228 0056 7B68     		ldr	r3, [r7, #4]
 1229 0058 5B68     		ldr	r3, [r3, #4]
 1230 005a 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 1231 005c 3B68     		ldr	r3, [r7, #0]
 1232 005e 1A70     		strb	r2, [r3, #0]
 558:../Dave/Generated/src/ADCCH001/ADCCH001.c ****       Status = (uint32_t)DAVEApp_SUCCESS;
 1233              		.loc 1 558 0
 1234 0060 4FF00003 		mov	r3, #0
 1235 0064 7B61     		str	r3, [r7, #20]
 1236 0066 07E0     		b	.L50
 1237              	.L51:
 559:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     }
 560:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     /* If data is old, then send error as invalid result */
 561:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     else
 562:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     {
 563:../Dave/Generated/src/ADCCH001/ADCCH001.c ****       *ResultPtr = HandlePtr->DynamicHandlePtr->FastCompResult;
 1238              		.loc 1 563 0
 1239 0068 7B68     		ldr	r3, [r7, #4]
 1240 006a 5B68     		ldr	r3, [r3, #4]
 1241 006c 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 1242 006e 3B68     		ldr	r3, [r7, #0]
 1243 0070 1A70     		strb	r2, [r3, #0]
 564:../Dave/Generated/src/ADCCH001/ADCCH001.c ****       Status = (uint32_t)ADCCH001_INVALID_RESULT;
 1244              		.loc 1 564 0
 1245 0072 4FF00303 		mov	r3, #3
 1246 0076 7B61     		str	r3, [r7, #20]
 1247              	.L50:
 565:../Dave/Generated/src/ADCCH001/ADCCH001.c ****       ERROR(GID_ADCCH001, (uint8_t)Status, 0, (uint8_t*) NULL);
 566:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     }
 567:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   }
 568:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   else
 569:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   {
 570:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     ERROR(GID_ADCCH001, (uint8_t)Status, 0, (uint8_t*) NULL);    
 571:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   }
 572:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 573:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   FUNCTION_EXIT(GID_ADCCH001, (uint32_t)ADCCH001_FUN_EXIT);  
 574:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   return Status;
 1248              		.loc 1 574 0
 1249 0078 7B69     		ldr	r3, [r7, #20]
 575:../Dave/Generated/src/ADCCH001/ADCCH001.c **** }
 1250              		.loc 1 575 0
 1251 007a 1846     		mov	r0, r3
 1252 007c 07F11C07 		add	r7, r7, #28
 1253 0080 BD46     		mov	sp, r7
 1254 0082 80BC     		pop	{r7}
 1255 0084 7047     		bx	lr
 1256              		.cfi_endproc
 1257              	.LFE123:
 1259 0086 00BF     		.section	.text.ADCCH001_SetCompareValue,"ax",%progbits
 1260              		.align	2
 1261              		.global	ADCCH001_SetCompareValue
 1262              		.thumb
 1263              		.thumb_func
 1265              	ADCCH001_SetCompareValue:
 1266              	.LFB124:
 576:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 577:../Dave/Generated/src/ADCCH001/ADCCH001.c **** /**
 578:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  * This function sets the compare value for the Fast Compare Mode. 
 579:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  * Compare value should 10-bit value.
 580:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  */
 581:../Dave/Generated/src/ADCCH001/ADCCH001.c **** status_t ADCCH001_SetCompareValue(const ADCCH001_HandleType* HandlePtr, uint16_t CompVal)
 582:../Dave/Generated/src/ADCCH001/ADCCH001.c **** {
 1267              		.loc 1 582 0
 1268              		.cfi_startproc
 1269              		@ args = 0, pretend = 0, frame = 16
 1270              		@ frame_needed = 1, uses_anonymous_args = 0
 1271              		@ link register save eliminated.
 1272 0000 90B4     		push	{r4, r7}
 1273              	.LCFI35:
 1274              		.cfi_def_cfa_offset 8
 1275              		.cfi_offset 4, -8
 1276              		.cfi_offset 7, -4
 1277 0002 84B0     		sub	sp, sp, #16
 1278              	.LCFI36:
 1279              		.cfi_def_cfa_offset 24
 1280 0004 00AF     		add	r7, sp, #0
 1281              	.LCFI37:
 1282              		.cfi_def_cfa_register 7
 1283 0006 7860     		str	r0, [r7, #4]
 1284 0008 0B46     		mov	r3, r1
 1285 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 583:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   status_t Status = (uint32_t)ADCCH001_OPERATION_NOT_ALLOWED;
 1286              		.loc 1 583 0
 1287 000c 4FF00103 		mov	r3, #1
 1288 0010 FB60     		str	r3, [r7, #12]
 584:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   FUNCTION_ENTRY(GID_ADCCH001, (uint32_t)ADCCH001_FUN_ENTRY);
 585:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   if(CompVal > (uint16_t)0x3FF)
 1289              		.loc 1 585 0
 1290 0012 7A88     		ldrh	r2, [r7, #2]
 1291 0014 40F2FF33 		movw	r3, #1023
 1292 0018 9A42     		cmp	r2, r3
 1293 001a 03D9     		bls	.L54
 586:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   {
 587:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     Status = (uint32_t)ADCCH001_INVALID_PARAM;
 1294              		.loc 1 587 0
 1295 001c 4FF00203 		mov	r3, #2
 1296 0020 FB60     		str	r3, [r7, #12]
 1297 0022 28E0     		b	.L55
 1298              	.L54:
 588:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     ERROR(GID_ADCCH001, (uint8_t)Status, 0, (uint8_t*) NULL); 
 589:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   }
 590:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   else if((HandlePtr->DynamicHandlePtr->State != ADCCH001_UNINITIALIZED) &&
 1299              		.loc 1 590 0
 1300 0024 7B68     		ldr	r3, [r7, #4]
 1301 0026 5B68     		ldr	r3, [r3, #4]
 1302 0028 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1303 002a 002B     		cmp	r3, #0
 1304 002c 23D0     		beq	.L55
 591:../Dave/Generated/src/ADCCH001/ADCCH001.c ****       ((HandlePtr->kCompareMode == (uint8_t)1)))
 1305              		.loc 1 591 0 discriminator 1
 1306 002e 7B68     		ldr	r3, [r7, #4]
 1307 0030 DB7D     		ldrb	r3, [r3, #23]	@ zero_extendqisi2
 590:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   else if((HandlePtr->DynamicHandlePtr->State != ADCCH001_UNINITIALIZED) &&
 1308              		.loc 1 590 0 discriminator 1
 1309 0032 012B     		cmp	r3, #1
 1310 0034 1FD1     		bne	.L55
 592:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   {
 593:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     WR_REG( HandlePtr->ADCGrPtr->RES[HandlePtr->kStartResultRegNo], 
 1311              		.loc 1 593 0
 1312 0036 7B68     		ldr	r3, [r7, #4]
 1313 0038 1968     		ldr	r1, [r3, #0]
 1314 003a 7B68     		ldr	r3, [r7, #4]
 1315 003c DB7C     		ldrb	r3, [r3, #19]	@ zero_extendqisi2
 1316 003e 1846     		mov	r0, r3
 1317 0040 7B88     		ldrh	r3, [r7, #2]
 1318 0042 4FEA8303 		lsl	r3, r3, #2
 1319 0046 4FEA0342 		lsl	r2, r3, #16
 1320 004a 4FEA1242 		lsr	r2, r2, #16
 1321 004e 7B68     		ldr	r3, [r7, #4]
 1322 0050 1B68     		ldr	r3, [r3, #0]
 1323 0052 7C68     		ldr	r4, [r7, #4]
 1324 0054 E47C     		ldrb	r4, [r4, #19]	@ zero_extendqisi2
 1325 0056 04F1C004 		add	r4, r4, #192
 1326 005a 53F82430 		ldr	r3, [r3, r4, lsl #2]
 1327 005e 4FEA1343 		lsr	r3, r3, #16
 1328 0062 4FEA0343 		lsl	r3, r3, #16
 1329 0066 1A43     		orrs	r2, r2, r3
 1330 0068 00F1C003 		add	r3, r0, #192
 1331 006c 41F82320 		str	r2, [r1, r3, lsl #2]
 594:../Dave/Generated/src/ADCCH001/ADCCH001.c ****             VADC_G_RES_RESULT_Msk,
 595:../Dave/Generated/src/ADCCH001/ADCCH001.c ****             VADC_G_RES_RESULT_Pos,
 596:../Dave/Generated/src/ADCCH001/ADCCH001.c ****             ((uint32_t)CompVal << (uint8_t)2)
 597:../Dave/Generated/src/ADCCH001/ADCCH001.c ****           );
 598:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     Status = (uint32_t)DAVEApp_SUCCESS;
 1332              		.loc 1 598 0
 1333 0070 4FF00003 		mov	r3, #0
 1334 0074 FB60     		str	r3, [r7, #12]
 1335              	.L55:
 599:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   }
 600:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   else
 601:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   {
 602:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     ERROR(GID_ADCCH001, (uint8_t)Status, 0, (uint8_t*) NULL);    
 603:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   }
 604:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 605:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   FUNCTION_EXIT(GID_ADCCH001, (uint32_t)ADCCH001_FUN_EXIT);  
 606:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   return Status;
 1336              		.loc 1 606 0
 1337 0076 FB68     		ldr	r3, [r7, #12]
 607:../Dave/Generated/src/ADCCH001/ADCCH001.c **** }
 1338              		.loc 1 607 0
 1339 0078 1846     		mov	r0, r3
 1340 007a 07F11007 		add	r7, r7, #16
 1341 007e BD46     		mov	sp, r7
 1342 0080 90BC     		pop	{r4, r7}
 1343 0082 7047     		bx	lr
 1344              		.cfi_endproc
 1345              	.LFE124:
 1347              		.section	.text.ADCCH001_EnablePriorityChannel,"ax",%progbits
 1348              		.align	2
 1349              		.global	ADCCH001_EnablePriorityChannel
 1350              		.thumb
 1351              		.thumb_func
 1353              	ADCCH001_EnablePriorityChannel:
 1354              	.LFB125:
 608:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 609:../Dave/Generated/src/ADCCH001/ADCCH001.c **** /**
 610:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  * This function enables the channel as a priority channel. 
 611:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  */
 612:../Dave/Generated/src/ADCCH001/ADCCH001.c **** status_t ADCCH001_EnablePriorityChannel(const ADCCH001_HandleType* HandlePtr)
 613:../Dave/Generated/src/ADCCH001/ADCCH001.c **** {
 1355              		.loc 1 613 0
 1356              		.cfi_startproc
 1357              		@ args = 0, pretend = 0, frame = 16
 1358              		@ frame_needed = 1, uses_anonymous_args = 0
 1359              		@ link register save eliminated.
 1360 0000 80B4     		push	{r7}
 1361              	.LCFI38:
 1362              		.cfi_def_cfa_offset 4
 1363              		.cfi_offset 7, -4
 1364 0002 85B0     		sub	sp, sp, #20
 1365              	.LCFI39:
 1366              		.cfi_def_cfa_offset 24
 1367 0004 00AF     		add	r7, sp, #0
 1368              	.LCFI40:
 1369              		.cfi_def_cfa_register 7
 1370 0006 7860     		str	r0, [r7, #4]
 614:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   status_t Status = (uint32_t)ADCCH001_OPERATION_NOT_ALLOWED;
 1371              		.loc 1 614 0
 1372 0008 4FF00103 		mov	r3, #1
 1373 000c FB60     		str	r3, [r7, #12]
 615:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   FUNCTION_ENTRY(GID_ADCCH001, (uint32_t)ADCCH001_FUN_ENTRY);
 616:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   if((HandlePtr->DynamicHandlePtr->State != ADCCH001_UNINITIALIZED))
 1374              		.loc 1 616 0
 1375 000e 7B68     		ldr	r3, [r7, #4]
 1376 0010 5B68     		ldr	r3, [r3, #4]
 1377 0012 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1378 0014 002B     		cmp	r3, #0
 1379 0016 11D0     		beq	.L58
 617:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   {
 618:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     SET_BIT(HandlePtr->ADCGrPtr->CHASS, (HandlePtr->kChannelNo));
 1380              		.loc 1 618 0
 1381 0018 7B68     		ldr	r3, [r7, #4]
 1382 001a 1B68     		ldr	r3, [r3, #0]
 1383 001c 7A68     		ldr	r2, [r7, #4]
 1384 001e 1268     		ldr	r2, [r2, #0]
 1385 0020 D2F88810 		ldr	r1, [r2, #136]
 1386 0024 7A68     		ldr	r2, [r7, #4]
 1387 0026 927D     		ldrb	r2, [r2, #22]	@ zero_extendqisi2
 1388 0028 4FF00100 		mov	r0, #1
 1389 002c 00FA02F2 		lsl	r2, r0, r2
 1390 0030 0A43     		orrs	r2, r2, r1
 1391 0032 C3F88820 		str	r2, [r3, #136]
 619:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     Status = (uint32_t)DAVEApp_SUCCESS;
 1392              		.loc 1 619 0
 1393 0036 4FF00003 		mov	r3, #0
 1394 003a FB60     		str	r3, [r7, #12]
 1395              	.L58:
 620:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   }
 621:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   else
 622:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   {
 623:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     ERROR(GID_ADCCH001, (uint8_t)Status, 0, (uint8_t*) NULL);    
 624:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   }
 625:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 626:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   FUNCTION_EXIT(GID_ADCCH001, (uint32_t)ADCCH001_FUN_EXIT);  
 627:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   return Status;  
 1396              		.loc 1 627 0
 1397 003c FB68     		ldr	r3, [r7, #12]
 628:../Dave/Generated/src/ADCCH001/ADCCH001.c **** }
 1398              		.loc 1 628 0
 1399 003e 1846     		mov	r0, r3
 1400 0040 07F11407 		add	r7, r7, #20
 1401 0044 BD46     		mov	sp, r7
 1402 0046 80BC     		pop	{r7}
 1403 0048 7047     		bx	lr
 1404              		.cfi_endproc
 1405              	.LFE125:
 1407 004a 00BF     		.section	.text.ADCCH001_DisablePriorityChannel,"ax",%progbits
 1408              		.align	2
 1409              		.global	ADCCH001_DisablePriorityChannel
 1410              		.thumb
 1411              		.thumb_func
 1413              	ADCCH001_DisablePriorityChannel:
 1414              	.LFB126:
 629:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 630:../Dave/Generated/src/ADCCH001/ADCCH001.c **** /**
 631:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  * This function disables the channel as a priority channel. 
 632:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  */
 633:../Dave/Generated/src/ADCCH001/ADCCH001.c **** status_t ADCCH001_DisablePriorityChannel(const ADCCH001_HandleType* HandlePtr)
 634:../Dave/Generated/src/ADCCH001/ADCCH001.c **** {
 1415              		.loc 1 634 0
 1416              		.cfi_startproc
 1417              		@ args = 0, pretend = 0, frame = 16
 1418              		@ frame_needed = 1, uses_anonymous_args = 0
 1419              		@ link register save eliminated.
 1420 0000 80B4     		push	{r7}
 1421              	.LCFI41:
 1422              		.cfi_def_cfa_offset 4
 1423              		.cfi_offset 7, -4
 1424 0002 85B0     		sub	sp, sp, #20
 1425              	.LCFI42:
 1426              		.cfi_def_cfa_offset 24
 1427 0004 00AF     		add	r7, sp, #0
 1428              	.LCFI43:
 1429              		.cfi_def_cfa_register 7
 1430 0006 7860     		str	r0, [r7, #4]
 635:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   status_t Status = (uint32_t)ADCCH001_OPERATION_NOT_ALLOWED;
 1431              		.loc 1 635 0
 1432 0008 4FF00103 		mov	r3, #1
 1433 000c FB60     		str	r3, [r7, #12]
 636:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   FUNCTION_ENTRY(GID_ADCCH001, (uint32_t)ADCCH001_FUN_ENTRY);
 637:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   if((HandlePtr->DynamicHandlePtr->State != ADCCH001_UNINITIALIZED))
 1434              		.loc 1 637 0
 1435 000e 7B68     		ldr	r3, [r7, #4]
 1436 0010 5B68     		ldr	r3, [r3, #4]
 1437 0012 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1438 0014 002B     		cmp	r3, #0
 1439 0016 13D0     		beq	.L61
 638:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   {
 639:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     CLR_BIT(HandlePtr->ADCGrPtr->CHASS, (HandlePtr->kChannelNo));  
 1440              		.loc 1 639 0
 1441 0018 7B68     		ldr	r3, [r7, #4]
 1442 001a 1B68     		ldr	r3, [r3, #0]
 1443 001c 7A68     		ldr	r2, [r7, #4]
 1444 001e 1268     		ldr	r2, [r2, #0]
 1445 0020 D2F88810 		ldr	r1, [r2, #136]
 1446 0024 7A68     		ldr	r2, [r7, #4]
 1447 0026 927D     		ldrb	r2, [r2, #22]	@ zero_extendqisi2
 1448 0028 4FF00100 		mov	r0, #1
 1449 002c 00FA02F2 		lsl	r2, r0, r2
 1450 0030 6FEA0202 		mvn	r2, r2
 1451 0034 0A40     		ands	r2, r2, r1
 1452 0036 C3F88820 		str	r2, [r3, #136]
 640:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     Status = (uint32_t)DAVEApp_SUCCESS;
 1453              		.loc 1 640 0
 1454 003a 4FF00003 		mov	r3, #0
 1455 003e FB60     		str	r3, [r7, #12]
 1456              	.L61:
 641:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   }
 642:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   else
 643:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   {
 644:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     ERROR(GID_ADCCH001, (uint8_t)Status, 0, (uint8_t*) NULL);    
 645:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   }
 646:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 647:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   FUNCTION_EXIT(GID_ADCCH001, (uint32_t)ADCCH001_FUN_EXIT);  
 648:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   return Status;  
 1457              		.loc 1 648 0
 1458 0040 FB68     		ldr	r3, [r7, #12]
 649:../Dave/Generated/src/ADCCH001/ADCCH001.c **** }
 1459              		.loc 1 649 0
 1460 0042 1846     		mov	r0, r3
 1461 0044 07F11407 		add	r7, r7, #20
 1462 0048 BD46     		mov	sp, r7
 1463 004a 80BC     		pop	{r7}
 1464 004c 7047     		bx	lr
 1465              		.cfi_endproc
 1466              	.LFE126:
 1468 004e 00BF     		.section	.text.ADCCH001_EnableResultEvt,"ax",%progbits
 1469              		.align	2
 1470              		.global	ADCCH001_EnableResultEvt
 1471              		.thumb
 1472              		.thumb_func
 1474              	ADCCH001_EnableResultEvt:
 1475              	.LFB127:
 650:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 651:../Dave/Generated/src/ADCCH001/ADCCH001.c **** /**
 652:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  * This function enables the  Result event. 
 653:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  */
 654:../Dave/Generated/src/ADCCH001/ADCCH001.c **** status_t ADCCH001_EnableResultEvt(const ADCCH001_HandleType* HandlePtr)
 655:../Dave/Generated/src/ADCCH001/ADCCH001.c **** {
 1476              		.loc 1 655 0
 1477              		.cfi_startproc
 1478              		@ args = 0, pretend = 0, frame = 16
 1479              		@ frame_needed = 1, uses_anonymous_args = 0
 1480              		@ link register save eliminated.
 1481 0000 80B4     		push	{r7}
 1482              	.LCFI44:
 1483              		.cfi_def_cfa_offset 4
 1484              		.cfi_offset 7, -4
 1485 0002 85B0     		sub	sp, sp, #20
 1486              	.LCFI45:
 1487              		.cfi_def_cfa_offset 24
 1488 0004 00AF     		add	r7, sp, #0
 1489              	.LCFI46:
 1490              		.cfi_def_cfa_register 7
 1491 0006 7860     		str	r0, [r7, #4]
 656:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   status_t Status = (uint32_t)ADCCH001_OPERATION_NOT_ALLOWED;
 1492              		.loc 1 656 0
 1493 0008 4FF00103 		mov	r3, #1
 1494 000c FB60     		str	r3, [r7, #12]
 657:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   FUNCTION_ENTRY(GID_ADCCH001, (uint32_t)ADCCH001_FUN_ENTRY);
 658:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   if((HandlePtr->DynamicHandlePtr->State != ADCCH001_UNINITIALIZED) &&
 1495              		.loc 1 658 0
 1496 000e 7B68     		ldr	r3, [r7, #4]
 1497 0010 5B68     		ldr	r3, [r3, #4]
 1498 0012 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1499 0014 002B     		cmp	r3, #0
 1500 0016 18D0     		beq	.L64
 659:../Dave/Generated/src/ADCCH001/ADCCH001.c ****       (HandlePtr->kCompareMode == (uint8_t)0))
 1501              		.loc 1 659 0 discriminator 1
 1502 0018 7B68     		ldr	r3, [r7, #4]
 1503 001a DB7D     		ldrb	r3, [r3, #23]	@ zero_extendqisi2
 658:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   if((HandlePtr->DynamicHandlePtr->State != ADCCH001_UNINITIALIZED) &&
 1504              		.loc 1 658 0 discriminator 1
 1505 001c 002B     		cmp	r3, #0
 1506 001e 14D1     		bne	.L64
 660:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   {
 661:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     SET_BIT( HandlePtr->ADCGrPtr->RCR[HandlePtr->kEndResultRegNo],
 1507              		.loc 1 661 0
 1508 0020 7B68     		ldr	r3, [r7, #4]
 1509 0022 1B68     		ldr	r3, [r3, #0]
 1510 0024 7A68     		ldr	r2, [r7, #4]
 1511 0026 127D     		ldrb	r2, [r2, #20]	@ zero_extendqisi2
 1512 0028 7968     		ldr	r1, [r7, #4]
 1513 002a 0968     		ldr	r1, [r1, #0]
 1514 002c 7868     		ldr	r0, [r7, #4]
 1515 002e 007D     		ldrb	r0, [r0, #20]	@ zero_extendqisi2
 1516 0030 00F1A000 		add	r0, r0, #160
 1517 0034 51F82010 		ldr	r1, [r1, r0, lsl #2]
 1518 0038 41F00041 		orr	r1, r1, #-2147483648
 1519 003c 02F1A002 		add	r2, r2, #160
 1520 0040 43F82210 		str	r1, [r3, r2, lsl #2]
 662:../Dave/Generated/src/ADCCH001/ADCCH001.c ****              VADC_G_RCR_SRGEN_Pos
 663:../Dave/Generated/src/ADCCH001/ADCCH001.c ****            );
 664:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     Status = (uint32_t)DAVEApp_SUCCESS;
 1521              		.loc 1 664 0
 1522 0044 4FF00003 		mov	r3, #0
 1523 0048 FB60     		str	r3, [r7, #12]
 1524              	.L64:
 665:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   }
 666:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   else
 667:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   {
 668:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     ERROR(GID_ADCCH001, (uint8_t)Status, 0, (uint8_t*) NULL);    
 669:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   }
 670:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 671:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   FUNCTION_EXIT(GID_ADCCH001, (uint32_t)ADCCH001_FUN_EXIT);  
 672:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   return Status;
 1525              		.loc 1 672 0
 1526 004a FB68     		ldr	r3, [r7, #12]
 673:../Dave/Generated/src/ADCCH001/ADCCH001.c **** }
 1527              		.loc 1 673 0
 1528 004c 1846     		mov	r0, r3
 1529 004e 07F11407 		add	r7, r7, #20
 1530 0052 BD46     		mov	sp, r7
 1531 0054 80BC     		pop	{r7}
 1532 0056 7047     		bx	lr
 1533              		.cfi_endproc
 1534              	.LFE127:
 1536              		.section	.text.ADCCH001_DisableResultEvt,"ax",%progbits
 1537              		.align	2
 1538              		.global	ADCCH001_DisableResultEvt
 1539              		.thumb
 1540              		.thumb_func
 1542              	ADCCH001_DisableResultEvt:
 1543              	.LFB128:
 674:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 675:../Dave/Generated/src/ADCCH001/ADCCH001.c **** /**
 676:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  * This function disables the  Result event. 
 677:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  */
 678:../Dave/Generated/src/ADCCH001/ADCCH001.c **** status_t ADCCH001_DisableResultEvt(const ADCCH001_HandleType* HandlePtr)
 679:../Dave/Generated/src/ADCCH001/ADCCH001.c **** {
 1544              		.loc 1 679 0
 1545              		.cfi_startproc
 1546              		@ args = 0, pretend = 0, frame = 16
 1547              		@ frame_needed = 1, uses_anonymous_args = 0
 1548              		@ link register save eliminated.
 1549 0000 80B4     		push	{r7}
 1550              	.LCFI47:
 1551              		.cfi_def_cfa_offset 4
 1552              		.cfi_offset 7, -4
 1553 0002 85B0     		sub	sp, sp, #20
 1554              	.LCFI48:
 1555              		.cfi_def_cfa_offset 24
 1556 0004 00AF     		add	r7, sp, #0
 1557              	.LCFI49:
 1558              		.cfi_def_cfa_register 7
 1559 0006 7860     		str	r0, [r7, #4]
 680:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   status_t Status = (uint32_t)ADCCH001_OPERATION_NOT_ALLOWED;
 1560              		.loc 1 680 0
 1561 0008 4FF00103 		mov	r3, #1
 1562 000c FB60     		str	r3, [r7, #12]
 681:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   FUNCTION_ENTRY(GID_ADCCH001, (uint32_t)ADCCH001_FUN_ENTRY);
 682:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   if((HandlePtr->DynamicHandlePtr->State != ADCCH001_UNINITIALIZED) &&
 1563              		.loc 1 682 0
 1564 000e 7B68     		ldr	r3, [r7, #4]
 1565 0010 5B68     		ldr	r3, [r3, #4]
 1566 0012 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1567 0014 002B     		cmp	r3, #0
 1568 0016 18D0     		beq	.L67
 683:../Dave/Generated/src/ADCCH001/ADCCH001.c ****       (HandlePtr->kCompareMode == (uint8_t)0))
 1569              		.loc 1 683 0 discriminator 1
 1570 0018 7B68     		ldr	r3, [r7, #4]
 1571 001a DB7D     		ldrb	r3, [r3, #23]	@ zero_extendqisi2
 682:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   if((HandlePtr->DynamicHandlePtr->State != ADCCH001_UNINITIALIZED) &&
 1572              		.loc 1 682 0 discriminator 1
 1573 001c 002B     		cmp	r3, #0
 1574 001e 14D1     		bne	.L67
 684:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   {
 685:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     CLR_BIT( HandlePtr->ADCGrPtr->RCR[HandlePtr->kEndResultRegNo],
 1575              		.loc 1 685 0
 1576 0020 7B68     		ldr	r3, [r7, #4]
 1577 0022 1B68     		ldr	r3, [r3, #0]
 1578 0024 7A68     		ldr	r2, [r7, #4]
 1579 0026 127D     		ldrb	r2, [r2, #20]	@ zero_extendqisi2
 1580 0028 7968     		ldr	r1, [r7, #4]
 1581 002a 0968     		ldr	r1, [r1, #0]
 1582 002c 7868     		ldr	r0, [r7, #4]
 1583 002e 007D     		ldrb	r0, [r0, #20]	@ zero_extendqisi2
 1584 0030 00F1A000 		add	r0, r0, #160
 1585 0034 51F82010 		ldr	r1, [r1, r0, lsl #2]
 1586 0038 21F00041 		bic	r1, r1, #-2147483648
 1587 003c 02F1A002 		add	r2, r2, #160
 1588 0040 43F82210 		str	r1, [r3, r2, lsl #2]
 686:../Dave/Generated/src/ADCCH001/ADCCH001.c ****              VADC_G_RCR_SRGEN_Pos
 687:../Dave/Generated/src/ADCCH001/ADCCH001.c ****            );
 688:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     Status = (uint32_t)DAVEApp_SUCCESS;
 1589              		.loc 1 688 0
 1590 0044 4FF00003 		mov	r3, #0
 1591 0048 FB60     		str	r3, [r7, #12]
 1592              	.L67:
 689:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   }
 690:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   else
 691:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   {
 692:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     ERROR(GID_ADCCH001, (uint8_t)Status, 0, (uint8_t*) NULL);    
 693:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   }
 694:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 695:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   FUNCTION_EXIT(GID_ADCCH001, (uint32_t)ADCCH001_FUN_EXIT);  
 696:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   return Status;
 1593              		.loc 1 696 0
 1594 004a FB68     		ldr	r3, [r7, #12]
 697:../Dave/Generated/src/ADCCH001/ADCCH001.c **** }
 1595              		.loc 1 697 0
 1596 004c 1846     		mov	r0, r3
 1597 004e 07F11407 		add	r7, r7, #20
 1598 0052 BD46     		mov	sp, r7
 1599 0054 80BC     		pop	{r7}
 1600 0056 7047     		bx	lr
 1601              		.cfi_endproc
 1602              	.LFE128:
 1604              		.section	.text.ADCCH001_GetResultEvtFlag,"ax",%progbits
 1605              		.align	2
 1606              		.global	ADCCH001_GetResultEvtFlag
 1607              		.thumb
 1608              		.thumb_func
 1610              	ADCCH001_GetResultEvtFlag:
 1611              	.LFB129:
 698:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 699:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 700:../Dave/Generated/src/ADCCH001/ADCCH001.c **** /**
 701:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  * This function checks whether Result event flag is set.
 702:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  */
 703:../Dave/Generated/src/ADCCH001/ADCCH001.c **** status_t ADCCH001_GetResultEvtFlag(const ADCCH001_HandleType* HandlePtr, uint8_t* EvtStatus)
 704:../Dave/Generated/src/ADCCH001/ADCCH001.c **** {
 1612              		.loc 1 704 0
 1613              		.cfi_startproc
 1614              		@ args = 0, pretend = 0, frame = 16
 1615              		@ frame_needed = 1, uses_anonymous_args = 0
 1616              		@ link register save eliminated.
 1617 0000 80B4     		push	{r7}
 1618              	.LCFI50:
 1619              		.cfi_def_cfa_offset 4
 1620              		.cfi_offset 7, -4
 1621 0002 85B0     		sub	sp, sp, #20
 1622              	.LCFI51:
 1623              		.cfi_def_cfa_offset 24
 1624 0004 00AF     		add	r7, sp, #0
 1625              	.LCFI52:
 1626              		.cfi_def_cfa_register 7
 1627 0006 7860     		str	r0, [r7, #4]
 1628 0008 3960     		str	r1, [r7, #0]
 705:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 706:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   status_t Status = (uint32_t)ADCCH001_OPERATION_NOT_ALLOWED;
 1629              		.loc 1 706 0
 1630 000a 4FF00103 		mov	r3, #1
 1631 000e FB60     		str	r3, [r7, #12]
 707:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   FUNCTION_ENTRY(GID_ADCCH001, (uint32_t)ADCCH001_FUN_ENTRY);
 708:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   if((HandlePtr->DynamicHandlePtr->State != ADCCH001_UNINITIALIZED) &&
 1632              		.loc 1 708 0
 1633 0010 7B68     		ldr	r3, [r7, #4]
 1634 0012 5B68     		ldr	r3, [r3, #4]
 1635 0014 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1636 0016 002B     		cmp	r3, #0
 1637 0018 18D0     		beq	.L70
 709:../Dave/Generated/src/ADCCH001/ADCCH001.c ****       (HandlePtr->kCompareMode == (uint8_t)0))
 1638              		.loc 1 709 0 discriminator 1
 1639 001a 7B68     		ldr	r3, [r7, #4]
 1640 001c DB7D     		ldrb	r3, [r3, #23]	@ zero_extendqisi2
 708:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   if((HandlePtr->DynamicHandlePtr->State != ADCCH001_UNINITIALIZED) &&
 1641              		.loc 1 708 0 discriminator 1
 1642 001e 002B     		cmp	r3, #0
 1643 0020 14D1     		bne	.L70
 710:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   {
 711:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     *EvtStatus = (uint8_t)RD_REG( HandlePtr->ADCGrPtr->REFLAG, 
 1644              		.loc 1 711 0
 1645 0022 7B68     		ldr	r3, [r7, #4]
 1646 0024 1B68     		ldr	r3, [r3, #0]
 1647 0026 D3F88421 		ldr	r2, [r3, #388]
 1648 002a 7B68     		ldr	r3, [r7, #4]
 1649 002c 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 1650 002e 4FF00101 		mov	r1, #1
 1651 0032 01FA03F3 		lsl	r3, r1, r3
 1652 0036 1A40     		ands	r2, r2, r3
 1653 0038 7B68     		ldr	r3, [r7, #4]
 1654 003a 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 1655 003c 22FA03F3 		lsr	r3, r2, r3
 1656 0040 DAB2     		uxtb	r2, r3
 1657 0042 3B68     		ldr	r3, [r7, #0]
 1658 0044 1A70     		strb	r2, [r3, #0]
 712:../Dave/Generated/src/ADCCH001/ADCCH001.c ****                         ((uint32_t)0x01 << HandlePtr->kEndResultRegNo), 
 713:../Dave/Generated/src/ADCCH001/ADCCH001.c ****                         (uint32_t)HandlePtr->kEndResultRegNo
 714:../Dave/Generated/src/ADCCH001/ADCCH001.c ****                  );
 715:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     Status = (uint32_t)DAVEApp_SUCCESS;
 1659              		.loc 1 715 0
 1660 0046 4FF00003 		mov	r3, #0
 1661 004a FB60     		str	r3, [r7, #12]
 1662              	.L70:
 716:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   }
 717:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   else
 718:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   {
 719:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     ERROR(GID_ADCCH001, (uint8_t)Status, 0, (uint8_t*) NULL);    
 720:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   }
 721:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 722:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   FUNCTION_EXIT(GID_ADCCH001, (uint32_t)ADCCH001_FUN_EXIT);  
 723:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   return Status;
 1663              		.loc 1 723 0
 1664 004c FB68     		ldr	r3, [r7, #12]
 724:../Dave/Generated/src/ADCCH001/ADCCH001.c **** }
 1665              		.loc 1 724 0
 1666 004e 1846     		mov	r0, r3
 1667 0050 07F11407 		add	r7, r7, #20
 1668 0054 BD46     		mov	sp, r7
 1669 0056 80BC     		pop	{r7}
 1670 0058 7047     		bx	lr
 1671              		.cfi_endproc
 1672              	.LFE129:
 1674 005a 00BF     		.section	.text.ADCCH001_GetChannelEvtFlag,"ax",%progbits
 1675              		.align	2
 1676              		.global	ADCCH001_GetChannelEvtFlag
 1677              		.thumb
 1678              		.thumb_func
 1680              	ADCCH001_GetChannelEvtFlag:
 1681              	.LFB130:
 725:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 726:../Dave/Generated/src/ADCCH001/ADCCH001.c **** /**
 727:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  * This function checks whether Channel event flag is set.
 728:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  */
 729:../Dave/Generated/src/ADCCH001/ADCCH001.c **** status_t ADCCH001_GetChannelEvtFlag(const ADCCH001_HandleType* HandlePtr, uint8_t* EvtStatus)
 730:../Dave/Generated/src/ADCCH001/ADCCH001.c **** {
 1682              		.loc 1 730 0
 1683              		.cfi_startproc
 1684              		@ args = 0, pretend = 0, frame = 16
 1685              		@ frame_needed = 1, uses_anonymous_args = 0
 1686              		@ link register save eliminated.
 1687 0000 80B4     		push	{r7}
 1688              	.LCFI53:
 1689              		.cfi_def_cfa_offset 4
 1690              		.cfi_offset 7, -4
 1691 0002 85B0     		sub	sp, sp, #20
 1692              	.LCFI54:
 1693              		.cfi_def_cfa_offset 24
 1694 0004 00AF     		add	r7, sp, #0
 1695              	.LCFI55:
 1696              		.cfi_def_cfa_register 7
 1697 0006 7860     		str	r0, [r7, #4]
 1698 0008 3960     		str	r1, [r7, #0]
 731:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   status_t Status = (uint32_t)ADCCH001_OPERATION_NOT_ALLOWED;
 1699              		.loc 1 731 0
 1700 000a 4FF00103 		mov	r3, #1
 1701 000e FB60     		str	r3, [r7, #12]
 732:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   FUNCTION_ENTRY(GID_ADCCH001, (uint32_t)ADCCH001_FUN_ENTRY);
 733:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   if(HandlePtr->DynamicHandlePtr->State != ADCCH001_UNINITIALIZED)
 1702              		.loc 1 733 0
 1703 0010 7B68     		ldr	r3, [r7, #4]
 1704 0012 5B68     		ldr	r3, [r3, #4]
 1705 0014 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1706 0016 002B     		cmp	r3, #0
 1707 0018 14D0     		beq	.L73
 734:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   {
 735:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     *EvtStatus = (uint8_t)RD_REG(HandlePtr->ADCGrPtr->CEFLAG, 
 1708              		.loc 1 735 0
 1709 001a 7B68     		ldr	r3, [r7, #4]
 1710 001c 1B68     		ldr	r3, [r3, #0]
 1711 001e D3F88021 		ldr	r2, [r3, #384]
 1712 0022 7B68     		ldr	r3, [r7, #4]
 1713 0024 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 1714 0026 4FF00101 		mov	r1, #1
 1715 002a 01FA03F3 		lsl	r3, r1, r3
 1716 002e 1A40     		ands	r2, r2, r3
 1717 0030 7B68     		ldr	r3, [r7, #4]
 1718 0032 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 1719 0034 22FA03F3 		lsr	r3, r2, r3
 1720 0038 DAB2     		uxtb	r2, r3
 1721 003a 3B68     		ldr	r3, [r7, #0]
 1722 003c 1A70     		strb	r2, [r3, #0]
 736:../Dave/Generated/src/ADCCH001/ADCCH001.c ****                         ((uint32_t)0x01 << HandlePtr->kChannelNo), 
 737:../Dave/Generated/src/ADCCH001/ADCCH001.c ****                         (uint32_t)HandlePtr->kChannelNo
 738:../Dave/Generated/src/ADCCH001/ADCCH001.c ****                  );
 739:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     Status = (uint32_t)DAVEApp_SUCCESS;
 1723              		.loc 1 739 0
 1724 003e 4FF00003 		mov	r3, #0
 1725 0042 FB60     		str	r3, [r7, #12]
 1726              	.L73:
 740:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   }
 741:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   else
 742:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   {
 743:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     ERROR(GID_ADCCH001, (uint8_t)Status, 0, (uint8_t*) NULL);    
 744:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   }
 745:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 746:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   FUNCTION_EXIT(GID_ADCCH001, (uint32_t)ADCCH001_FUN_EXIT);  
 747:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   return Status;
 1727              		.loc 1 747 0
 1728 0044 FB68     		ldr	r3, [r7, #12]
 748:../Dave/Generated/src/ADCCH001/ADCCH001.c **** }
 1729              		.loc 1 748 0
 1730 0046 1846     		mov	r0, r3
 1731 0048 07F11407 		add	r7, r7, #20
 1732 004c BD46     		mov	sp, r7
 1733 004e 80BC     		pop	{r7}
 1734 0050 7047     		bx	lr
 1735              		.cfi_endproc
 1736              	.LFE130:
 1738 0052 00BF     		.section	.text.ADCCH001_SetResultEvtFlag,"ax",%progbits
 1739              		.align	2
 1740              		.global	ADCCH001_SetResultEvtFlag
 1741              		.thumb
 1742              		.thumb_func
 1744              	ADCCH001_SetResultEvtFlag:
 1745              	.LFB131:
 749:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 750:../Dave/Generated/src/ADCCH001/ADCCH001.c **** /**
 751:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  * This will set the result event flag through software.
 752:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  */
 753:../Dave/Generated/src/ADCCH001/ADCCH001.c **** status_t ADCCH001_SetResultEvtFlag(const ADCCH001_HandleType* HandlePtr)
 754:../Dave/Generated/src/ADCCH001/ADCCH001.c **** {
 1746              		.loc 1 754 0
 1747              		.cfi_startproc
 1748              		@ args = 0, pretend = 0, frame = 16
 1749              		@ frame_needed = 1, uses_anonymous_args = 0
 1750              		@ link register save eliminated.
 1751 0000 80B4     		push	{r7}
 1752              	.LCFI56:
 1753              		.cfi_def_cfa_offset 4
 1754              		.cfi_offset 7, -4
 1755 0002 85B0     		sub	sp, sp, #20
 1756              	.LCFI57:
 1757              		.cfi_def_cfa_offset 24
 1758 0004 00AF     		add	r7, sp, #0
 1759              	.LCFI58:
 1760              		.cfi_def_cfa_register 7
 1761 0006 7860     		str	r0, [r7, #4]
 755:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   status_t Status = (uint32_t)ADCCH001_OPERATION_NOT_ALLOWED;
 1762              		.loc 1 755 0
 1763 0008 4FF00103 		mov	r3, #1
 1764 000c FB60     		str	r3, [r7, #12]
 756:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   FUNCTION_ENTRY(GID_ADCCH001, (uint32_t)ADCCH001_FUN_ENTRY);
 757:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   if((HandlePtr->DynamicHandlePtr->State != ADCCH001_UNINITIALIZED) &&
 1765              		.loc 1 757 0
 1766 000e 7B68     		ldr	r3, [r7, #4]
 1767 0010 5B68     		ldr	r3, [r3, #4]
 1768 0012 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1769 0014 002B     		cmp	r3, #0
 1770 0016 15D0     		beq	.L76
 758:../Dave/Generated/src/ADCCH001/ADCCH001.c ****       (HandlePtr->kCompareMode == (uint8_t)0))
 1771              		.loc 1 758 0 discriminator 1
 1772 0018 7B68     		ldr	r3, [r7, #4]
 1773 001a DB7D     		ldrb	r3, [r3, #23]	@ zero_extendqisi2
 757:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   if((HandlePtr->DynamicHandlePtr->State != ADCCH001_UNINITIALIZED) &&
 1774              		.loc 1 757 0 discriminator 1
 1775 001c 002B     		cmp	r3, #0
 1776 001e 11D1     		bne	.L76
 759:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   {
 760:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     SET_BIT( HandlePtr->ADCGrPtr->REFLAG, 
 1777              		.loc 1 760 0
 1778 0020 7B68     		ldr	r3, [r7, #4]
 1779 0022 1B68     		ldr	r3, [r3, #0]
 1780 0024 7A68     		ldr	r2, [r7, #4]
 1781 0026 1268     		ldr	r2, [r2, #0]
 1782 0028 D2F88411 		ldr	r1, [r2, #388]
 1783 002c 7A68     		ldr	r2, [r7, #4]
 1784 002e 127D     		ldrb	r2, [r2, #20]	@ zero_extendqisi2
 1785 0030 4FF00100 		mov	r0, #1
 1786 0034 00FA02F2 		lsl	r2, r0, r2
 1787 0038 0A43     		orrs	r2, r2, r1
 1788 003a C3F88421 		str	r2, [r3, #388]
 761:../Dave/Generated/src/ADCCH001/ADCCH001.c ****              HandlePtr->kEndResultRegNo
 762:../Dave/Generated/src/ADCCH001/ADCCH001.c ****            );
 763:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     Status = (uint32_t)DAVEApp_SUCCESS;
 1789              		.loc 1 763 0
 1790 003e 4FF00003 		mov	r3, #0
 1791 0042 FB60     		str	r3, [r7, #12]
 1792              	.L76:
 764:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   }
 765:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   else
 766:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   {
 767:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     ERROR(GID_ADCCH001, (uint8_t)Status, 0, (uint8_t*) NULL);    
 768:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   }
 769:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 770:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   FUNCTION_EXIT(GID_ADCCH001, (uint32_t)ADCCH001_FUN_EXIT);  
 771:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   return Status;
 1793              		.loc 1 771 0
 1794 0044 FB68     		ldr	r3, [r7, #12]
 772:../Dave/Generated/src/ADCCH001/ADCCH001.c **** }
 1795              		.loc 1 772 0
 1796 0046 1846     		mov	r0, r3
 1797 0048 07F11407 		add	r7, r7, #20
 1798 004c BD46     		mov	sp, r7
 1799 004e 80BC     		pop	{r7}
 1800 0050 7047     		bx	lr
 1801              		.cfi_endproc
 1802              	.LFE131:
 1804 0052 00BF     		.section	.text.ADCCH001_SetChannelEvtFlag,"ax",%progbits
 1805              		.align	2
 1806              		.global	ADCCH001_SetChannelEvtFlag
 1807              		.thumb
 1808              		.thumb_func
 1810              	ADCCH001_SetChannelEvtFlag:
 1811              	.LFB132:
 773:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 774:../Dave/Generated/src/ADCCH001/ADCCH001.c **** /**
 775:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  * This will set the channel event flagv through software
 776:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  */
 777:../Dave/Generated/src/ADCCH001/ADCCH001.c **** status_t ADCCH001_SetChannelEvtFlag(const ADCCH001_HandleType* HandlePtr)
 778:../Dave/Generated/src/ADCCH001/ADCCH001.c **** {
 1812              		.loc 1 778 0
 1813              		.cfi_startproc
 1814              		@ args = 0, pretend = 0, frame = 16
 1815              		@ frame_needed = 1, uses_anonymous_args = 0
 1816              		@ link register save eliminated.
 1817 0000 80B4     		push	{r7}
 1818              	.LCFI59:
 1819              		.cfi_def_cfa_offset 4
 1820              		.cfi_offset 7, -4
 1821 0002 85B0     		sub	sp, sp, #20
 1822              	.LCFI60:
 1823              		.cfi_def_cfa_offset 24
 1824 0004 00AF     		add	r7, sp, #0
 1825              	.LCFI61:
 1826              		.cfi_def_cfa_register 7
 1827 0006 7860     		str	r0, [r7, #4]
 779:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   status_t Status = (uint32_t)ADCCH001_OPERATION_NOT_ALLOWED;
 1828              		.loc 1 779 0
 1829 0008 4FF00103 		mov	r3, #1
 1830 000c FB60     		str	r3, [r7, #12]
 780:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   FUNCTION_ENTRY(GID_ADCCH001, (uint32_t)ADCCH001_FUN_ENTRY);
 781:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   if(HandlePtr->DynamicHandlePtr->State != ADCCH001_UNINITIALIZED)
 1831              		.loc 1 781 0
 1832 000e 7B68     		ldr	r3, [r7, #4]
 1833 0010 5B68     		ldr	r3, [r3, #4]
 1834 0012 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1835 0014 002B     		cmp	r3, #0
 1836 0016 11D0     		beq	.L79
 782:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   {
 783:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     SET_BIT( HandlePtr->ADCGrPtr->CEFLAG, 
 1837              		.loc 1 783 0
 1838 0018 7B68     		ldr	r3, [r7, #4]
 1839 001a 1B68     		ldr	r3, [r3, #0]
 1840 001c 7A68     		ldr	r2, [r7, #4]
 1841 001e 1268     		ldr	r2, [r2, #0]
 1842 0020 D2F88011 		ldr	r1, [r2, #384]
 1843 0024 7A68     		ldr	r2, [r7, #4]
 1844 0026 927D     		ldrb	r2, [r2, #22]	@ zero_extendqisi2
 1845 0028 4FF00100 		mov	r0, #1
 1846 002c 00FA02F2 		lsl	r2, r0, r2
 1847 0030 0A43     		orrs	r2, r2, r1
 1848 0032 C3F88021 		str	r2, [r3, #384]
 784:../Dave/Generated/src/ADCCH001/ADCCH001.c ****              HandlePtr->kChannelNo
 785:../Dave/Generated/src/ADCCH001/ADCCH001.c ****            );
 786:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     Status = (uint32_t)DAVEApp_SUCCESS;
 1849              		.loc 1 786 0
 1850 0036 4FF00003 		mov	r3, #0
 1851 003a FB60     		str	r3, [r7, #12]
 1852              	.L79:
 787:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   }
 788:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   else
 789:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   {
 790:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     ERROR(GID_ADCCH001, (uint8_t)Status, 0, (uint8_t*) NULL);    
 791:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   }
 792:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 793:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   FUNCTION_EXIT(GID_ADCCH001, (uint32_t)ADCCH001_FUN_EXIT);  
 794:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   return Status;
 1853              		.loc 1 794 0
 1854 003c FB68     		ldr	r3, [r7, #12]
 795:../Dave/Generated/src/ADCCH001/ADCCH001.c **** }
 1855              		.loc 1 795 0
 1856 003e 1846     		mov	r0, r3
 1857 0040 07F11407 		add	r7, r7, #20
 1858 0044 BD46     		mov	sp, r7
 1859 0046 80BC     		pop	{r7}
 1860 0048 7047     		bx	lr
 1861              		.cfi_endproc
 1862              	.LFE132:
 1864 004a 00BF     		.section	.text.ADCCH001_ClearResultEvtFlag,"ax",%progbits
 1865              		.align	2
 1866              		.global	ADCCH001_ClearResultEvtFlag
 1867              		.thumb
 1868              		.thumb_func
 1870              	ADCCH001_ClearResultEvtFlag:
 1871              	.LFB133:
 796:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 797:../Dave/Generated/src/ADCCH001/ADCCH001.c **** /**
 798:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  * This will clear the pending result event flag
 799:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  */
 800:../Dave/Generated/src/ADCCH001/ADCCH001.c **** status_t ADCCH001_ClearResultEvtFlag(const ADCCH001_HandleType* HandlePtr)
 801:../Dave/Generated/src/ADCCH001/ADCCH001.c **** {
 1872              		.loc 1 801 0
 1873              		.cfi_startproc
 1874              		@ args = 0, pretend = 0, frame = 16
 1875              		@ frame_needed = 1, uses_anonymous_args = 0
 1876              		@ link register save eliminated.
 1877 0000 80B4     		push	{r7}
 1878              	.LCFI62:
 1879              		.cfi_def_cfa_offset 4
 1880              		.cfi_offset 7, -4
 1881 0002 85B0     		sub	sp, sp, #20
 1882              	.LCFI63:
 1883              		.cfi_def_cfa_offset 24
 1884 0004 00AF     		add	r7, sp, #0
 1885              	.LCFI64:
 1886              		.cfi_def_cfa_register 7
 1887 0006 7860     		str	r0, [r7, #4]
 802:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   status_t Status = (uint32_t)ADCCH001_OPERATION_NOT_ALLOWED;
 1888              		.loc 1 802 0
 1889 0008 4FF00103 		mov	r3, #1
 1890 000c FB60     		str	r3, [r7, #12]
 803:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   FUNCTION_ENTRY(GID_ADCCH001, (uint32_t)ADCCH001_FUN_ENTRY);
 804:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   if((HandlePtr->DynamicHandlePtr->State != ADCCH001_UNINITIALIZED) &&
 1891              		.loc 1 804 0
 1892 000e 7B68     		ldr	r3, [r7, #4]
 1893 0010 5B68     		ldr	r3, [r3, #4]
 1894 0012 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1895 0014 002B     		cmp	r3, #0
 1896 0016 15D0     		beq	.L82
 805:../Dave/Generated/src/ADCCH001/ADCCH001.c ****       (HandlePtr->kCompareMode == (uint8_t)0))
 1897              		.loc 1 805 0 discriminator 1
 1898 0018 7B68     		ldr	r3, [r7, #4]
 1899 001a DB7D     		ldrb	r3, [r3, #23]	@ zero_extendqisi2
 804:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   if((HandlePtr->DynamicHandlePtr->State != ADCCH001_UNINITIALIZED) &&
 1900              		.loc 1 804 0 discriminator 1
 1901 001c 002B     		cmp	r3, #0
 1902 001e 11D1     		bne	.L82
 806:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   {
 807:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     SET_BIT( HandlePtr->ADCGrPtr->REFCLR, 
 1903              		.loc 1 807 0
 1904 0020 7B68     		ldr	r3, [r7, #4]
 1905 0022 1B68     		ldr	r3, [r3, #0]
 1906 0024 7A68     		ldr	r2, [r7, #4]
 1907 0026 1268     		ldr	r2, [r2, #0]
 1908 0028 D2F89411 		ldr	r1, [r2, #404]
 1909 002c 7A68     		ldr	r2, [r7, #4]
 1910 002e 127D     		ldrb	r2, [r2, #20]	@ zero_extendqisi2
 1911 0030 4FF00100 		mov	r0, #1
 1912 0034 00FA02F2 		lsl	r2, r0, r2
 1913 0038 0A43     		orrs	r2, r2, r1
 1914 003a C3F89421 		str	r2, [r3, #404]
 808:../Dave/Generated/src/ADCCH001/ADCCH001.c ****              HandlePtr->kEndResultRegNo
 809:../Dave/Generated/src/ADCCH001/ADCCH001.c ****            );
 810:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     Status = (uint32_t)DAVEApp_SUCCESS;
 1915              		.loc 1 810 0
 1916 003e 4FF00003 		mov	r3, #0
 1917 0042 FB60     		str	r3, [r7, #12]
 1918              	.L82:
 811:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   }
 812:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   else
 813:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   {
 814:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     ERROR(GID_ADCCH001, (uint8_t)Status, 0, (uint8_t*) NULL);    
 815:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   }
 816:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 817:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   FUNCTION_EXIT(GID_ADCCH001, (uint32_t)ADCCH001_FUN_EXIT);  
 818:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   return Status;
 1919              		.loc 1 818 0
 1920 0044 FB68     		ldr	r3, [r7, #12]
 819:../Dave/Generated/src/ADCCH001/ADCCH001.c **** }
 1921              		.loc 1 819 0
 1922 0046 1846     		mov	r0, r3
 1923 0048 07F11407 		add	r7, r7, #20
 1924 004c BD46     		mov	sp, r7
 1925 004e 80BC     		pop	{r7}
 1926 0050 7047     		bx	lr
 1927              		.cfi_endproc
 1928              	.LFE133:
 1930 0052 00BF     		.section	.text.ADCCH001_ClearChannelEvtFlag,"ax",%progbits
 1931              		.align	2
 1932              		.global	ADCCH001_ClearChannelEvtFlag
 1933              		.thumb
 1934              		.thumb_func
 1936              	ADCCH001_ClearChannelEvtFlag:
 1937              	.LFB134:
 820:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 821:../Dave/Generated/src/ADCCH001/ADCCH001.c **** /**
 822:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  * This will clear the pending channel event flag
 823:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  */
 824:../Dave/Generated/src/ADCCH001/ADCCH001.c **** status_t ADCCH001_ClearChannelEvtFlag(const ADCCH001_HandleType* HandlePtr)
 825:../Dave/Generated/src/ADCCH001/ADCCH001.c **** {
 1938              		.loc 1 825 0
 1939              		.cfi_startproc
 1940              		@ args = 0, pretend = 0, frame = 16
 1941              		@ frame_needed = 1, uses_anonymous_args = 0
 1942              		@ link register save eliminated.
 1943 0000 80B4     		push	{r7}
 1944              	.LCFI65:
 1945              		.cfi_def_cfa_offset 4
 1946              		.cfi_offset 7, -4
 1947 0002 85B0     		sub	sp, sp, #20
 1948              	.LCFI66:
 1949              		.cfi_def_cfa_offset 24
 1950 0004 00AF     		add	r7, sp, #0
 1951              	.LCFI67:
 1952              		.cfi_def_cfa_register 7
 1953 0006 7860     		str	r0, [r7, #4]
 826:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   status_t Status = (uint32_t)ADCCH001_OPERATION_NOT_ALLOWED;
 1954              		.loc 1 826 0
 1955 0008 4FF00103 		mov	r3, #1
 1956 000c FB60     		str	r3, [r7, #12]
 827:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   FUNCTION_ENTRY(GID_ADCCH001, (uint32_t)ADCCH001_FUN_ENTRY);
 828:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   if(HandlePtr->DynamicHandlePtr->State != ADCCH001_UNINITIALIZED)
 1957              		.loc 1 828 0
 1958 000e 7B68     		ldr	r3, [r7, #4]
 1959 0010 5B68     		ldr	r3, [r3, #4]
 1960 0012 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1961 0014 002B     		cmp	r3, #0
 1962 0016 11D0     		beq	.L85
 829:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   {
 830:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     SET_BIT( HandlePtr->ADCGrPtr->CEFCLR, 
 1963              		.loc 1 830 0
 1964 0018 7B68     		ldr	r3, [r7, #4]
 1965 001a 1B68     		ldr	r3, [r3, #0]
 1966 001c 7A68     		ldr	r2, [r7, #4]
 1967 001e 1268     		ldr	r2, [r2, #0]
 1968 0020 D2F89011 		ldr	r1, [r2, #400]
 1969 0024 7A68     		ldr	r2, [r7, #4]
 1970 0026 927D     		ldrb	r2, [r2, #22]	@ zero_extendqisi2
 1971 0028 4FF00100 		mov	r0, #1
 1972 002c 00FA02F2 		lsl	r2, r0, r2
 1973 0030 0A43     		orrs	r2, r2, r1
 1974 0032 C3F89021 		str	r2, [r3, #400]
 831:../Dave/Generated/src/ADCCH001/ADCCH001.c ****              HandlePtr->kChannelNo
 832:../Dave/Generated/src/ADCCH001/ADCCH001.c ****            );
 833:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     Status = (uint32_t)DAVEApp_SUCCESS;
 1975              		.loc 1 833 0
 1976 0036 4FF00003 		mov	r3, #0
 1977 003a FB60     		str	r3, [r7, #12]
 1978              	.L85:
 834:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   }
 835:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   else
 836:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   {
 837:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     ERROR(GID_ADCCH001, (uint8_t)Status, 0, (uint8_t*) NULL);    
 838:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   }
 839:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 840:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   FUNCTION_EXIT(GID_ADCCH001, (uint32_t)ADCCH001_FUN_EXIT);  
 841:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   return Status;
 1979              		.loc 1 841 0
 1980 003c FB68     		ldr	r3, [r7, #12]
 842:../Dave/Generated/src/ADCCH001/ADCCH001.c **** }
 1981              		.loc 1 842 0
 1982 003e 1846     		mov	r0, r3
 1983 0040 07F11407 		add	r7, r7, #20
 1984 0044 BD46     		mov	sp, r7
 1985 0046 80BC     		pop	{r7}
 1986 0048 7047     		bx	lr
 1987              		.cfi_endproc
 1988              	.LFE134:
 1990 004a 00BF     		.section	.text.ADCCH001_SetBWDChannel,"ax",%progbits
 1991              		.align	2
 1992              		.global	ADCCH001_SetBWDChannel
 1993              		.thumb
 1994              		.thumb_func
 1996              	ADCCH001_SetBWDChannel:
 1997              	.LFB135:
 843:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 844:../Dave/Generated/src/ADCCH001/ADCCH001.c **** /**
 845:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  * This function slects the Broken Wire Detection Channel. 
 846:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  */
 847:../Dave/Generated/src/ADCCH001/ADCCH001.c **** status_t ADCCH001_SetBWDChannel(const ADCCH001_HandleType* HandlePtr, ADCCH001_BWDType BWDChannel)
 848:../Dave/Generated/src/ADCCH001/ADCCH001.c **** {
 1998              		.loc 1 848 0
 1999              		.cfi_startproc
 2000              		@ args = 0, pretend = 0, frame = 16
 2001              		@ frame_needed = 1, uses_anonymous_args = 0
 2002              		@ link register save eliminated.
 2003 0000 90B4     		push	{r4, r7}
 2004              	.LCFI68:
 2005              		.cfi_def_cfa_offset 8
 2006              		.cfi_offset 4, -8
 2007              		.cfi_offset 7, -4
 2008 0002 84B0     		sub	sp, sp, #16
 2009              	.LCFI69:
 2010              		.cfi_def_cfa_offset 24
 2011 0004 00AF     		add	r7, sp, #0
 2012              	.LCFI70:
 2013              		.cfi_def_cfa_register 7
 2014 0006 7860     		str	r0, [r7, #4]
 2015 0008 0B46     		mov	r3, r1
 2016 000a FB70     		strb	r3, [r7, #3]
 849:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   status_t Status = (uint32_t)ADCCH001_OPERATION_NOT_ALLOWED;
 2017              		.loc 1 849 0
 2018 000c 4FF00103 		mov	r3, #1
 2019 0010 FB60     		str	r3, [r7, #12]
 850:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   FUNCTION_ENTRY(GID_ADCCH001, (uint32_t)ADCCH001_FUN_ENTRY);
 851:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 852:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   if((HandlePtr->DynamicHandlePtr->State != ADCCH001_UNINITIALIZED) &&
 2020              		.loc 1 852 0
 2021 0012 7B68     		ldr	r3, [r7, #4]
 2022 0014 5B68     		ldr	r3, [r3, #4]
 2023 0016 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 2024 0018 002B     		cmp	r3, #0
 2025 001a 1ED0     		beq	.L88
 853:../Dave/Generated/src/ADCCH001/ADCCH001.c ****       (HandlePtr->kCompareMode == (uint8_t)0))
 2026              		.loc 1 853 0 discriminator 1
 2027 001c 7B68     		ldr	r3, [r7, #4]
 2028 001e DB7D     		ldrb	r3, [r3, #23]	@ zero_extendqisi2
 852:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   if((HandlePtr->DynamicHandlePtr->State != ADCCH001_UNINITIALIZED) &&
 2029              		.loc 1 852 0 discriminator 1
 2030 0020 002B     		cmp	r3, #0
 2031 0022 1AD1     		bne	.L88
 854:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   {
 855:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     WR_REG( HandlePtr->ADCGrPtr->CHCTR[HandlePtr->kChannelNo], 
 2032              		.loc 1 855 0
 2033 0024 7B68     		ldr	r3, [r7, #4]
 2034 0026 1B68     		ldr	r3, [r3, #0]
 2035 0028 7A68     		ldr	r2, [r7, #4]
 2036 002a 927D     		ldrb	r2, [r2, #22]	@ zero_extendqisi2
 2037 002c F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 2038 002e 4FEA0171 		lsl	r1, r1, #28
 2039 0032 01F04050 		and	r0, r1, #805306368
 2040 0036 7968     		ldr	r1, [r7, #4]
 2041 0038 0968     		ldr	r1, [r1, #0]
 2042 003a 7C68     		ldr	r4, [r7, #4]
 2043 003c A47D     		ldrb	r4, [r4, #22]	@ zero_extendqisi2
 2044 003e 04F18004 		add	r4, r4, #128
 2045 0042 51F82410 		ldr	r1, [r1, r4, lsl #2]
 2046 0046 21F04051 		bic	r1, r1, #805306368
 2047 004a 0143     		orrs	r1, r1, r0
 2048 004c 02F18002 		add	r2, r2, #128
 2049 0050 43F82210 		str	r1, [r3, r2, lsl #2]
 856:../Dave/Generated/src/ADCCH001/ADCCH001.c ****             VADC_G_CHCTR_BWDCH_Msk,
 857:../Dave/Generated/src/ADCCH001/ADCCH001.c ****             VADC_G_CHCTR_BWDCH_Pos,
 858:../Dave/Generated/src/ADCCH001/ADCCH001.c ****             (uint32_t)BWDChannel
 859:../Dave/Generated/src/ADCCH001/ADCCH001.c ****            );
 860:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     Status = (uint32_t)DAVEApp_SUCCESS;
 2050              		.loc 1 860 0
 2051 0054 4FF00003 		mov	r3, #0
 2052 0058 FB60     		str	r3, [r7, #12]
 2053              	.L88:
 861:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   }
 862:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   else
 863:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   {
 864:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     ERROR(GID_ADCCH001, (uint8_t)Status, 0, (uint8_t*) NULL);    
 865:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   }
 866:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 867:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   FUNCTION_EXIT(GID_ADCCH001, (uint32_t)ADCCH001_FUN_EXIT);  
 868:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   return Status;
 2054              		.loc 1 868 0
 2055 005a FB68     		ldr	r3, [r7, #12]
 869:../Dave/Generated/src/ADCCH001/ADCCH001.c **** }
 2056              		.loc 1 869 0
 2057 005c 1846     		mov	r0, r3
 2058 005e 07F11007 		add	r7, r7, #16
 2059 0062 BD46     		mov	sp, r7
 2060 0064 90BC     		pop	{r4, r7}
 2061 0066 7047     		bx	lr
 2062              		.cfi_endproc
 2063              	.LFE135:
 2065              		.section	.text.ADCCH001_EnableBWD,"ax",%progbits
 2066              		.align	2
 2067              		.global	ADCCH001_EnableBWD
 2068              		.thumb
 2069              		.thumb_func
 2071              	ADCCH001_EnableBWD:
 2072              	.LFB136:
 870:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 871:../Dave/Generated/src/ADCCH001/ADCCH001.c **** /**
 872:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  * This will enable the Broken Wire Detection feature.
 873:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  */
 874:../Dave/Generated/src/ADCCH001/ADCCH001.c **** status_t ADCCH001_EnableBWD(const ADCCH001_HandleType* HandlePtr)
 875:../Dave/Generated/src/ADCCH001/ADCCH001.c **** {
 2073              		.loc 1 875 0
 2074              		.cfi_startproc
 2075              		@ args = 0, pretend = 0, frame = 16
 2076              		@ frame_needed = 1, uses_anonymous_args = 0
 2077              		@ link register save eliminated.
 2078 0000 80B4     		push	{r7}
 2079              	.LCFI71:
 2080              		.cfi_def_cfa_offset 4
 2081              		.cfi_offset 7, -4
 2082 0002 85B0     		sub	sp, sp, #20
 2083              	.LCFI72:
 2084              		.cfi_def_cfa_offset 24
 2085 0004 00AF     		add	r7, sp, #0
 2086              	.LCFI73:
 2087              		.cfi_def_cfa_register 7
 2088 0006 7860     		str	r0, [r7, #4]
 876:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 877:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   status_t Status = (uint32_t)ADCCH001_OPERATION_NOT_ALLOWED;
 2089              		.loc 1 877 0
 2090 0008 4FF00103 		mov	r3, #1
 2091 000c FB60     		str	r3, [r7, #12]
 878:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   FUNCTION_ENTRY(GID_ADCCH001, (uint32_t)ADCCH001_FUN_ENTRY);
 879:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 880:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   if((HandlePtr->DynamicHandlePtr->State != ADCCH001_UNINITIALIZED) &&
 2092              		.loc 1 880 0
 2093 000e 7B68     		ldr	r3, [r7, #4]
 2094 0010 5B68     		ldr	r3, [r3, #4]
 2095 0012 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 2096 0014 002B     		cmp	r3, #0
 2097 0016 18D0     		beq	.L91
 881:../Dave/Generated/src/ADCCH001/ADCCH001.c ****       (HandlePtr->kCompareMode == (uint8_t)0))
 2098              		.loc 1 881 0 discriminator 1
 2099 0018 7B68     		ldr	r3, [r7, #4]
 2100 001a DB7D     		ldrb	r3, [r3, #23]	@ zero_extendqisi2
 880:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   if((HandlePtr->DynamicHandlePtr->State != ADCCH001_UNINITIALIZED) &&
 2101              		.loc 1 880 0 discriminator 1
 2102 001c 002B     		cmp	r3, #0
 2103 001e 14D1     		bne	.L91
 882:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   {
 883:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     SET_BIT( HandlePtr->ADCGrPtr->CHCTR[HandlePtr->kChannelNo], 
 2104              		.loc 1 883 0
 2105 0020 7B68     		ldr	r3, [r7, #4]
 2106 0022 1B68     		ldr	r3, [r3, #0]
 2107 0024 7A68     		ldr	r2, [r7, #4]
 2108 0026 927D     		ldrb	r2, [r2, #22]	@ zero_extendqisi2
 2109 0028 7968     		ldr	r1, [r7, #4]
 2110 002a 0968     		ldr	r1, [r1, #0]
 2111 002c 7868     		ldr	r0, [r7, #4]
 2112 002e 807D     		ldrb	r0, [r0, #22]	@ zero_extendqisi2
 2113 0030 00F18000 		add	r0, r0, #128
 2114 0034 51F82010 		ldr	r1, [r1, r0, lsl #2]
 2115 0038 41F08041 		orr	r1, r1, #1073741824
 2116 003c 02F18002 		add	r2, r2, #128
 2117 0040 43F82210 		str	r1, [r3, r2, lsl #2]
 884:../Dave/Generated/src/ADCCH001/ADCCH001.c ****              VADC_G_CHCTR_BWDEN_Pos
 885:../Dave/Generated/src/ADCCH001/ADCCH001.c ****            );
 886:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     Status = (uint32_t)DAVEApp_SUCCESS;
 2118              		.loc 1 886 0
 2119 0044 4FF00003 		mov	r3, #0
 2120 0048 FB60     		str	r3, [r7, #12]
 2121              	.L91:
 887:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   }
 888:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   else
 889:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   {
 890:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     ERROR(GID_ADCCH001, (uint8_t)Status, 0, (uint8_t*) NULL);    
 891:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   }
 892:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 893:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   FUNCTION_EXIT(GID_ADCCH001, (uint32_t)ADCCH001_FUN_EXIT);  
 894:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   return Status;
 2122              		.loc 1 894 0
 2123 004a FB68     		ldr	r3, [r7, #12]
 895:../Dave/Generated/src/ADCCH001/ADCCH001.c **** }
 2124              		.loc 1 895 0
 2125 004c 1846     		mov	r0, r3
 2126 004e 07F11407 		add	r7, r7, #20
 2127 0052 BD46     		mov	sp, r7
 2128 0054 80BC     		pop	{r7}
 2129 0056 7047     		bx	lr
 2130              		.cfi_endproc
 2131              	.LFE136:
 2133              		.section	.text.ADCCH001_DisableBWD,"ax",%progbits
 2134              		.align	2
 2135              		.global	ADCCH001_DisableBWD
 2136              		.thumb
 2137              		.thumb_func
 2139              	ADCCH001_DisableBWD:
 2140              	.LFB137:
 896:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 897:../Dave/Generated/src/ADCCH001/ADCCH001.c **** /**
 898:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  * This will disable the Broken Wire Detection feature.
 899:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  */
 900:../Dave/Generated/src/ADCCH001/ADCCH001.c **** status_t ADCCH001_DisableBWD(const ADCCH001_HandleType* HandlePtr)
 901:../Dave/Generated/src/ADCCH001/ADCCH001.c **** {
 2141              		.loc 1 901 0
 2142              		.cfi_startproc
 2143              		@ args = 0, pretend = 0, frame = 16
 2144              		@ frame_needed = 1, uses_anonymous_args = 0
 2145              		@ link register save eliminated.
 2146 0000 80B4     		push	{r7}
 2147              	.LCFI74:
 2148              		.cfi_def_cfa_offset 4
 2149              		.cfi_offset 7, -4
 2150 0002 85B0     		sub	sp, sp, #20
 2151              	.LCFI75:
 2152              		.cfi_def_cfa_offset 24
 2153 0004 00AF     		add	r7, sp, #0
 2154              	.LCFI76:
 2155              		.cfi_def_cfa_register 7
 2156 0006 7860     		str	r0, [r7, #4]
 902:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 903:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   status_t Status = (uint32_t)ADCCH001_OPERATION_NOT_ALLOWED;
 2157              		.loc 1 903 0
 2158 0008 4FF00103 		mov	r3, #1
 2159 000c FB60     		str	r3, [r7, #12]
 904:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   FUNCTION_ENTRY(GID_ADCCH001, (uint32_t)ADCCH001_FUN_ENTRY);
 905:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 906:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   if((HandlePtr->DynamicHandlePtr->State != ADCCH001_UNINITIALIZED) &&
 2160              		.loc 1 906 0
 2161 000e 7B68     		ldr	r3, [r7, #4]
 2162 0010 5B68     		ldr	r3, [r3, #4]
 2163 0012 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 2164 0014 002B     		cmp	r3, #0
 2165 0016 18D0     		beq	.L94
 907:../Dave/Generated/src/ADCCH001/ADCCH001.c ****       (HandlePtr->kCompareMode == (uint8_t)0))
 2166              		.loc 1 907 0 discriminator 1
 2167 0018 7B68     		ldr	r3, [r7, #4]
 2168 001a DB7D     		ldrb	r3, [r3, #23]	@ zero_extendqisi2
 906:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   if((HandlePtr->DynamicHandlePtr->State != ADCCH001_UNINITIALIZED) &&
 2169              		.loc 1 906 0 discriminator 1
 2170 001c 002B     		cmp	r3, #0
 2171 001e 14D1     		bne	.L94
 908:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   {
 909:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     CLR_BIT( HandlePtr->ADCGrPtr->CHCTR[HandlePtr->kChannelNo], 
 2172              		.loc 1 909 0
 2173 0020 7B68     		ldr	r3, [r7, #4]
 2174 0022 1B68     		ldr	r3, [r3, #0]
 2175 0024 7A68     		ldr	r2, [r7, #4]
 2176 0026 927D     		ldrb	r2, [r2, #22]	@ zero_extendqisi2
 2177 0028 7968     		ldr	r1, [r7, #4]
 2178 002a 0968     		ldr	r1, [r1, #0]
 2179 002c 7868     		ldr	r0, [r7, #4]
 2180 002e 807D     		ldrb	r0, [r0, #22]	@ zero_extendqisi2
 2181 0030 00F18000 		add	r0, r0, #128
 2182 0034 51F82010 		ldr	r1, [r1, r0, lsl #2]
 2183 0038 21F08041 		bic	r1, r1, #1073741824
 2184 003c 02F18002 		add	r2, r2, #128
 2185 0040 43F82210 		str	r1, [r3, r2, lsl #2]
 910:../Dave/Generated/src/ADCCH001/ADCCH001.c ****              VADC_G_CHCTR_BWDEN_Pos
 911:../Dave/Generated/src/ADCCH001/ADCCH001.c ****            );
 912:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     Status = (uint32_t)DAVEApp_SUCCESS;
 2186              		.loc 1 912 0
 2187 0044 4FF00003 		mov	r3, #0
 2188 0048 FB60     		str	r3, [r7, #12]
 2189              	.L94:
 913:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   }
 914:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   else
 915:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   {
 916:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     ERROR(GID_ADCCH001, (uint8_t)Status, 0, (uint8_t*) NULL);    
 917:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   }
 918:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 919:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   FUNCTION_EXIT(GID_ADCCH001, (uint32_t)ADCCH001_FUN_EXIT);  
 920:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   return Status;
 2190              		.loc 1 920 0
 2191 004a FB68     		ldr	r3, [r7, #12]
 921:../Dave/Generated/src/ADCCH001/ADCCH001.c **** }
 2192              		.loc 1 921 0
 2193 004c 1846     		mov	r0, r3
 2194 004e 07F11407 		add	r7, r7, #20
 2195 0052 BD46     		mov	sp, r7
 2196 0054 80BC     		pop	{r7}
 2197 0056 7047     		bx	lr
 2198              		.cfi_endproc
 2199              	.LFE137:
 2201              		.section	.text.ADCCH001_EnableWaitForRead,"ax",%progbits
 2202              		.align	2
 2203              		.global	ADCCH001_EnableWaitForRead
 2204              		.thumb
 2205              		.thumb_func
 2207              	ADCCH001_EnableWaitForRead:
 2208              	.LFB138:
 922:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 923:../Dave/Generated/src/ADCCH001/ADCCH001.c **** /**
 924:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  * This will enable wait for read mode of the result register
 925:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  */
 926:../Dave/Generated/src/ADCCH001/ADCCH001.c **** status_t ADCCH001_EnableWaitForRead(const ADCCH001_HandleType* HandlePtr)
 927:../Dave/Generated/src/ADCCH001/ADCCH001.c **** {
 2209              		.loc 1 927 0
 2210              		.cfi_startproc
 2211              		@ args = 0, pretend = 0, frame = 16
 2212              		@ frame_needed = 1, uses_anonymous_args = 0
 2213              		@ link register save eliminated.
 2214 0000 80B4     		push	{r7}
 2215              	.LCFI77:
 2216              		.cfi_def_cfa_offset 4
 2217              		.cfi_offset 7, -4
 2218 0002 85B0     		sub	sp, sp, #20
 2219              	.LCFI78:
 2220              		.cfi_def_cfa_offset 24
 2221 0004 00AF     		add	r7, sp, #0
 2222              	.LCFI79:
 2223              		.cfi_def_cfa_register 7
 2224 0006 7860     		str	r0, [r7, #4]
 928:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 929:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   status_t Status = (uint32_t)ADCCH001_OPERATION_NOT_ALLOWED;
 2225              		.loc 1 929 0
 2226 0008 4FF00103 		mov	r3, #1
 2227 000c FB60     		str	r3, [r7, #12]
 930:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   FUNCTION_ENTRY(GID_ADCCH001, (uint32_t)ADCCH001_FUN_ENTRY);
 931:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 932:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   if((HandlePtr->DynamicHandlePtr->State != ADCCH001_UNINITIALIZED) &&
 2228              		.loc 1 932 0
 2229 000e 7B68     		ldr	r3, [r7, #4]
 2230 0010 5B68     		ldr	r3, [r3, #4]
 2231 0012 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 2232 0014 002B     		cmp	r3, #0
 2233 0016 18D0     		beq	.L97
 933:../Dave/Generated/src/ADCCH001/ADCCH001.c ****       (HandlePtr->kCompareMode == (uint8_t)0))
 2234              		.loc 1 933 0 discriminator 1
 2235 0018 7B68     		ldr	r3, [r7, #4]
 2236 001a DB7D     		ldrb	r3, [r3, #23]	@ zero_extendqisi2
 932:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   if((HandlePtr->DynamicHandlePtr->State != ADCCH001_UNINITIALIZED) &&
 2237              		.loc 1 932 0 discriminator 1
 2238 001c 002B     		cmp	r3, #0
 2239 001e 14D1     		bne	.L97
 934:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   {
 935:../Dave/Generated/src/ADCCH001/ADCCH001.c ****       WR_REG( HandlePtr->ADCGrPtr->RCR[HandlePtr->kStartResultRegNo],
 2240              		.loc 1 935 0
 2241 0020 7B68     		ldr	r3, [r7, #4]
 2242 0022 1B68     		ldr	r3, [r3, #0]
 2243 0024 7A68     		ldr	r2, [r7, #4]
 2244 0026 D27C     		ldrb	r2, [r2, #19]	@ zero_extendqisi2
 2245 0028 7968     		ldr	r1, [r7, #4]
 2246 002a 0968     		ldr	r1, [r1, #0]
 2247 002c 7868     		ldr	r0, [r7, #4]
 2248 002e C07C     		ldrb	r0, [r0, #19]	@ zero_extendqisi2
 2249 0030 00F1A000 		add	r0, r0, #160
 2250 0034 51F82010 		ldr	r1, [r1, r0, lsl #2]
 2251 0038 41F08071 		orr	r1, r1, #16777216
 2252 003c 02F1A002 		add	r2, r2, #160
 2253 0040 43F82210 		str	r1, [r3, r2, lsl #2]
 936:../Dave/Generated/src/ADCCH001/ADCCH001.c ****               VADC_G_RCR_WFR_Msk,
 937:../Dave/Generated/src/ADCCH001/ADCCH001.c ****               VADC_G_RCR_WFR_Pos,
 938:../Dave/Generated/src/ADCCH001/ADCCH001.c ****               (uint32_t)0x1
 939:../Dave/Generated/src/ADCCH001/ADCCH001.c ****              );
 940:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     Status = (uint32_t)DAVEApp_SUCCESS;
 2254              		.loc 1 940 0
 2255 0044 4FF00003 		mov	r3, #0
 2256 0048 FB60     		str	r3, [r7, #12]
 2257              	.L97:
 941:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   }
 942:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   else
 943:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   {
 944:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     ERROR(GID_ADCCH001, (uint8_t)Status, 0, (uint8_t*) NULL);    
 945:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   }
 946:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 947:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   FUNCTION_EXIT(GID_ADCCH001, (uint32_t)ADCCH001_FUN_EXIT);  
 948:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   return Status;
 2258              		.loc 1 948 0
 2259 004a FB68     		ldr	r3, [r7, #12]
 949:../Dave/Generated/src/ADCCH001/ADCCH001.c **** }
 2260              		.loc 1 949 0
 2261 004c 1846     		mov	r0, r3
 2262 004e 07F11407 		add	r7, r7, #20
 2263 0052 BD46     		mov	sp, r7
 2264 0054 80BC     		pop	{r7}
 2265 0056 7047     		bx	lr
 2266              		.cfi_endproc
 2267              	.LFE138:
 2269              		.section	.text.ADCCH001_DisableWaitForRead,"ax",%progbits
 2270              		.align	2
 2271              		.global	ADCCH001_DisableWaitForRead
 2272              		.thumb
 2273              		.thumb_func
 2275              	ADCCH001_DisableWaitForRead:
 2276              	.LFB139:
 950:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 951:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 952:../Dave/Generated/src/ADCCH001/ADCCH001.c **** /**
 953:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  * This will disable wait for read mode of the result register
 954:../Dave/Generated/src/ADCCH001/ADCCH001.c ****  */
 955:../Dave/Generated/src/ADCCH001/ADCCH001.c **** status_t ADCCH001_DisableWaitForRead(const ADCCH001_HandleType* HandlePtr)
 956:../Dave/Generated/src/ADCCH001/ADCCH001.c **** {
 2277              		.loc 1 956 0
 2278              		.cfi_startproc
 2279              		@ args = 0, pretend = 0, frame = 16
 2280              		@ frame_needed = 1, uses_anonymous_args = 0
 2281              		@ link register save eliminated.
 2282 0000 80B4     		push	{r7}
 2283              	.LCFI80:
 2284              		.cfi_def_cfa_offset 4
 2285              		.cfi_offset 7, -4
 2286 0002 85B0     		sub	sp, sp, #20
 2287              	.LCFI81:
 2288              		.cfi_def_cfa_offset 24
 2289 0004 00AF     		add	r7, sp, #0
 2290              	.LCFI82:
 2291              		.cfi_def_cfa_register 7
 2292 0006 7860     		str	r0, [r7, #4]
 957:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 958:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   status_t Status = (uint32_t)ADCCH001_OPERATION_NOT_ALLOWED;
 2293              		.loc 1 958 0
 2294 0008 4FF00103 		mov	r3, #1
 2295 000c FB60     		str	r3, [r7, #12]
 959:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   FUNCTION_ENTRY(GID_ADCCH001, (uint32_t)ADCCH001_FUN_ENTRY);
 960:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 961:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   if((HandlePtr->DynamicHandlePtr->State != ADCCH001_UNINITIALIZED) &&
 2296              		.loc 1 961 0
 2297 000e 7B68     		ldr	r3, [r7, #4]
 2298 0010 5B68     		ldr	r3, [r3, #4]
 2299 0012 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 2300 0014 002B     		cmp	r3, #0
 2301 0016 18D0     		beq	.L100
 962:../Dave/Generated/src/ADCCH001/ADCCH001.c ****       (HandlePtr->kCompareMode == (uint8_t)0))
 2302              		.loc 1 962 0 discriminator 1
 2303 0018 7B68     		ldr	r3, [r7, #4]
 2304 001a DB7D     		ldrb	r3, [r3, #23]	@ zero_extendqisi2
 961:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   if((HandlePtr->DynamicHandlePtr->State != ADCCH001_UNINITIALIZED) &&
 2305              		.loc 1 961 0 discriminator 1
 2306 001c 002B     		cmp	r3, #0
 2307 001e 14D1     		bne	.L100
 963:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   {
 964:../Dave/Generated/src/ADCCH001/ADCCH001.c ****       WR_REG( HandlePtr->ADCGrPtr->RCR[HandlePtr->kStartResultRegNo],
 2308              		.loc 1 964 0
 2309 0020 7B68     		ldr	r3, [r7, #4]
 2310 0022 1B68     		ldr	r3, [r3, #0]
 2311 0024 7A68     		ldr	r2, [r7, #4]
 2312 0026 D27C     		ldrb	r2, [r2, #19]	@ zero_extendqisi2
 2313 0028 7968     		ldr	r1, [r7, #4]
 2314 002a 0968     		ldr	r1, [r1, #0]
 2315 002c 7868     		ldr	r0, [r7, #4]
 2316 002e C07C     		ldrb	r0, [r0, #19]	@ zero_extendqisi2
 2317 0030 00F1A000 		add	r0, r0, #160
 2318 0034 51F82010 		ldr	r1, [r1, r0, lsl #2]
 2319 0038 21F08071 		bic	r1, r1, #16777216
 2320 003c 02F1A002 		add	r2, r2, #160
 2321 0040 43F82210 		str	r1, [r3, r2, lsl #2]
 965:../Dave/Generated/src/ADCCH001/ADCCH001.c ****               VADC_G_RCR_WFR_Msk,
 966:../Dave/Generated/src/ADCCH001/ADCCH001.c ****               VADC_G_RCR_WFR_Pos,
 967:../Dave/Generated/src/ADCCH001/ADCCH001.c ****               (uint32_t)0x0
 968:../Dave/Generated/src/ADCCH001/ADCCH001.c ****              );
 969:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     Status = (uint32_t)DAVEApp_SUCCESS;
 2322              		.loc 1 969 0
 2323 0044 4FF00003 		mov	r3, #0
 2324 0048 FB60     		str	r3, [r7, #12]
 2325              	.L100:
 970:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   }
 971:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   else
 972:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   {
 973:../Dave/Generated/src/ADCCH001/ADCCH001.c ****     ERROR(GID_ADCCH001, (uint8_t)Status, 0, (uint8_t*) NULL);    
 974:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   }
 975:../Dave/Generated/src/ADCCH001/ADCCH001.c **** 
 976:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   FUNCTION_EXIT(GID_ADCCH001, (uint32_t)ADCCH001_FUN_EXIT);  
 977:../Dave/Generated/src/ADCCH001/ADCCH001.c ****   return Status;
 2326              		.loc 1 977 0
 2327 004a FB68     		ldr	r3, [r7, #12]
 978:../Dave/Generated/src/ADCCH001/ADCCH001.c **** }
 2328              		.loc 1 978 0
 2329 004c 1846     		mov	r0, r3
 2330 004e 07F11407 		add	r7, r7, #20
 2331 0052 BD46     		mov	sp, r7
 2332 0054 80BC     		pop	{r7}
 2333 0056 7047     		bx	lr
 2334              		.cfi_endproc
 2335              	.LFE139:
 2337              		.text
 2338              	.Letext0:
 2339              		.file 2 "c:\\dave-3.1.10\\arm-gcc\\bin\\../lib/gcc/arm-none-eabi/4.7.4/../../../../arm-none-eabi/i
 2340              		.file 3 "C:\\DAVE-3.1.10\\eclipse\\/../CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 2341              		.file 4 "C:\\DAVE3_workspace\\ws3.1.10\\XMC4500_RK_HTTPserver\\XMC4500_RK_HTTPserver\\Dave\\Genera
 2342              		.file 5 "C:\\DAVE3_workspace\\ws3.1.10\\XMC4500_RK_HTTPserver\\XMC4500_RK_HTTPserver\\Dave\\Genera
 2343              		.file 6 "C:\\DAVE-3.1.10\\eclipse\\/../CMSIS/Include/core_cm4.h"
 2344              		.file 7 "C:\\DAVE3_workspace\\ws3.1.10\\XMC4500_RK_HTTPserver\\XMC4500_RK_HTTPserver\\Dave\\Genera
DEFINED SYMBOLS
                            *ABS*:00000000 ADCCH001.c
C:\Users\Mihai\AppData\Local\Temp\ccSBSjkP.s:20     .text.ADCCH001_lInit:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccSBSjkP.s:24     .text.ADCCH001_lInit:00000000 ADCCH001_lInit
C:\Users\Mihai\AppData\Local\Temp\ccSBSjkP.s:347    .text.ADCCH001_Init:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccSBSjkP.s:352    .text.ADCCH001_Init:00000000 ADCCH001_Init
C:\Users\Mihai\AppData\Local\Temp\ccSBSjkP.s:378    .text.ADCCH001_Deinit:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccSBSjkP.s:383    .text.ADCCH001_Deinit:00000000 ADCCH001_Deinit
C:\Users\Mihai\AppData\Local\Temp\ccSBSjkP.s:496    .text.ADCCH001_SetAlias:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccSBSjkP.s:501    .text.ADCCH001_SetAlias:00000000 ADCCH001_SetAlias
C:\Users\Mihai\AppData\Local\Temp\ccSBSjkP.s:594    .text.ADCCH001_EnableBoundaryFlag:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccSBSjkP.s:599    .text.ADCCH001_EnableBoundaryFlag:00000000 ADCCH001_EnableBoundaryFlag
C:\Users\Mihai\AppData\Local\Temp\ccSBSjkP.s:665    .text.ADCCH001_DisableBoundaryFlag:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccSBSjkP.s:670    .text.ADCCH001_DisableBoundaryFlag:00000000 ADCCH001_DisableBoundaryFlag
C:\Users\Mihai\AppData\Local\Temp\ccSBSjkP.s:737    .text.ADCCH001_SelectInputClass:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccSBSjkP.s:742    .text.ADCCH001_SelectInputClass:00000000 ADCCH001_SelectInputClass
C:\Users\Mihai\AppData\Local\Temp\ccSBSjkP.s:820    .text.ADCCH001_SelectChEvtMode:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccSBSjkP.s:825    .text.ADCCH001_SelectChEvtMode:00000000 ADCCH001_SelectChEvtMode
C:\Users\Mihai\AppData\Local\Temp\ccSBSjkP.s:898    .text.ADCCH001_SelectUpperBoundary:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccSBSjkP.s:903    .text.ADCCH001_SelectUpperBoundary:00000000 ADCCH001_SelectUpperBoundary
C:\Users\Mihai\AppData\Local\Temp\ccSBSjkP.s:982    .text.ADCCH001_SelectLowerBoundary:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccSBSjkP.s:987    .text.ADCCH001_SelectLowerBoundary:00000000 ADCCH001_SelectLowerBoundary
C:\Users\Mihai\AppData\Local\Temp\ccSBSjkP.s:1066   .text.ADCCH001_GetResult:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccSBSjkP.s:1071   .text.ADCCH001_GetResult:00000000 ADCCH001_GetResult
C:\Users\Mihai\AppData\Local\Temp\ccSBSjkP.s:1163   .text.ADCCH001_GetFastCompareResult:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccSBSjkP.s:1168   .text.ADCCH001_GetFastCompareResult:00000000 ADCCH001_GetFastCompareResult
C:\Users\Mihai\AppData\Local\Temp\ccSBSjkP.s:1260   .text.ADCCH001_SetCompareValue:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccSBSjkP.s:1265   .text.ADCCH001_SetCompareValue:00000000 ADCCH001_SetCompareValue
C:\Users\Mihai\AppData\Local\Temp\ccSBSjkP.s:1348   .text.ADCCH001_EnablePriorityChannel:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccSBSjkP.s:1353   .text.ADCCH001_EnablePriorityChannel:00000000 ADCCH001_EnablePriorityChannel
C:\Users\Mihai\AppData\Local\Temp\ccSBSjkP.s:1408   .text.ADCCH001_DisablePriorityChannel:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccSBSjkP.s:1413   .text.ADCCH001_DisablePriorityChannel:00000000 ADCCH001_DisablePriorityChannel
C:\Users\Mihai\AppData\Local\Temp\ccSBSjkP.s:1469   .text.ADCCH001_EnableResultEvt:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccSBSjkP.s:1474   .text.ADCCH001_EnableResultEvt:00000000 ADCCH001_EnableResultEvt
C:\Users\Mihai\AppData\Local\Temp\ccSBSjkP.s:1537   .text.ADCCH001_DisableResultEvt:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccSBSjkP.s:1542   .text.ADCCH001_DisableResultEvt:00000000 ADCCH001_DisableResultEvt
C:\Users\Mihai\AppData\Local\Temp\ccSBSjkP.s:1605   .text.ADCCH001_GetResultEvtFlag:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccSBSjkP.s:1610   .text.ADCCH001_GetResultEvtFlag:00000000 ADCCH001_GetResultEvtFlag
C:\Users\Mihai\AppData\Local\Temp\ccSBSjkP.s:1675   .text.ADCCH001_GetChannelEvtFlag:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccSBSjkP.s:1680   .text.ADCCH001_GetChannelEvtFlag:00000000 ADCCH001_GetChannelEvtFlag
C:\Users\Mihai\AppData\Local\Temp\ccSBSjkP.s:1739   .text.ADCCH001_SetResultEvtFlag:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccSBSjkP.s:1744   .text.ADCCH001_SetResultEvtFlag:00000000 ADCCH001_SetResultEvtFlag
C:\Users\Mihai\AppData\Local\Temp\ccSBSjkP.s:1805   .text.ADCCH001_SetChannelEvtFlag:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccSBSjkP.s:1810   .text.ADCCH001_SetChannelEvtFlag:00000000 ADCCH001_SetChannelEvtFlag
C:\Users\Mihai\AppData\Local\Temp\ccSBSjkP.s:1865   .text.ADCCH001_ClearResultEvtFlag:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccSBSjkP.s:1870   .text.ADCCH001_ClearResultEvtFlag:00000000 ADCCH001_ClearResultEvtFlag
C:\Users\Mihai\AppData\Local\Temp\ccSBSjkP.s:1931   .text.ADCCH001_ClearChannelEvtFlag:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccSBSjkP.s:1936   .text.ADCCH001_ClearChannelEvtFlag:00000000 ADCCH001_ClearChannelEvtFlag
C:\Users\Mihai\AppData\Local\Temp\ccSBSjkP.s:1991   .text.ADCCH001_SetBWDChannel:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccSBSjkP.s:1996   .text.ADCCH001_SetBWDChannel:00000000 ADCCH001_SetBWDChannel
C:\Users\Mihai\AppData\Local\Temp\ccSBSjkP.s:2066   .text.ADCCH001_EnableBWD:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccSBSjkP.s:2071   .text.ADCCH001_EnableBWD:00000000 ADCCH001_EnableBWD
C:\Users\Mihai\AppData\Local\Temp\ccSBSjkP.s:2134   .text.ADCCH001_DisableBWD:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccSBSjkP.s:2139   .text.ADCCH001_DisableBWD:00000000 ADCCH001_DisableBWD
C:\Users\Mihai\AppData\Local\Temp\ccSBSjkP.s:2202   .text.ADCCH001_EnableWaitForRead:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccSBSjkP.s:2207   .text.ADCCH001_EnableWaitForRead:00000000 ADCCH001_EnableWaitForRead
C:\Users\Mihai\AppData\Local\Temp\ccSBSjkP.s:2270   .text.ADCCH001_DisableWaitForRead:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccSBSjkP.s:2275   .text.ADCCH001_DisableWaitForRead:00000000 ADCCH001_DisableWaitForRead
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.1791a5ae2e936ca1033c1c44be394cc7
                           .group:00000000 wm4.XMC4500.h.45.215f4b8c79f46c7645c15373868d08c0
                           .group:00000000 wm4.core_cm4.h.47.41af406cb4cda82c972f112a9cd0a024
                           .group:00000000 wm4.newlib.h.8.a9901dc52d1357e3e94003403d43f8b5
                           .group:00000000 wm4.features.h.22.b72b3baab2bb2eab3661375590100b6b
                           .group:00000000 wm4.config.h.193.5fb8ef056cdff92dec3dee9552839d8c
                           .group:00000000 wm4._ansi.h.23.7aefdac4826acebbfc9f3822a0aeb14c
                           .group:00000000 wm4.stdint.h.20.54ad762faa59e3c05491630641c8d8bf
                           .group:00000000 wm4.core_cmInstr.h.39.3d3d1b4a79aef37532666dc6ee87c6ac
                           .group:00000000 wm4.core_cm4_simd.h.43.b5d1d38735af6366227b4256d330cf13
                           .group:00000000 wm4.core_cm4.h.178.e5ef5ce66d198d7f00f9d0076e267c41
                           .group:00000000 wm4.system_XMC4500.h.29.827f68baa362c84f2abae4ab67dde7c9
                           .group:00000000 wm4.XMC4500.h.198.8e022f279ff353ed081df898dc7b9cf3
                           .group:00000000 wm4.stddef.h.40.50cf36416e06376af8a9dca28536f2e4
                           .group:00000000 wm4.types.h.55.0006b5fda1d606516f2dcaf4aca92b11
                           .group:00000000 wm4.MULTIPLEXER.h.43.4aa654be3ec80895f631b5281bbb9105
                           .group:00000000 wm4.CCU8PWMLIB.h.70.a5d6a5267902b8b4aea2a0224518259a
                           .group:00000000 wm4.DBG001.h.116.d6d9e7459a0faa3905c97c1d2edb339d
                           .group:00000000 wm4.SYSTM001.h.63.668098b2213d40a5bd0db5fbe813cf05
                           .group:00000000 wm4.ETH002_Conf.h.56.5bd2b085b66f43d51abd69396be7f35f
                           .group:00000000 wm4.EthernetPHY.h.54.7af1709186b21e62a5f1d4049da3988b
                           .group:00000000 wm4.ETH001_Conf.h.71.1e151af1ba54dd023e1f942bdf922819
                           .group:00000000 wm4.synopGMAC_plat.h.78.7a90e072b497857344aea4ba1e994097
                           .group:00000000 wm4.synopGMAC_stack_interface.h.73.6be6aaee0ac6637432f4d0589044479b
                           .group:00000000 wm4.SynopGMAC_Dev.h.72.7c89c07cf666d37f5c9b615720d5e111
                           .group:00000000 wm4.synopGMAC_network_interface.h.73.4dd08316a11bc43c8c4a9da15277fb0f
                           .group:00000000 wm4.stdlib.h.13.603ed7eb09a1561ab06840b7c0fcff58
                           .group:00000000 wm4.stddef.h.161.e50ff8a9d5d1abbc15641da28ac571bf
                           .group:00000000 wm4._default_types.h.6.5e12cd604db8ce00b62bb2f02708eaf3
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4.stddef.h.161.c6104a0666cf681b6269ddc9b4f516d4
                           .group:00000000 wm4.reent.h.16.9e42f0e588b85e70b2bf6572af57ce64
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.53.c69c7609933ff56d59c757cec2d13230
                           .group:00000000 wm4.string.h.8.ef946ad0bc9ad5c970c365dcd1fc4b0a
                           .group:00000000 wm4.string.h.86.d5c872ff52e2712c985b588a0ef39f3c
                           .group:00000000 wm4.ETH004_Conf.h.56.564c3f309c32b3c742fc91049cf66940
                           .group:00000000 wm4.lwipopts.h.73.a7a63bda1e8216abd1d90275eaaa0027
                           .group:00000000 wm4.arch.h.33.6fa4aa86d33d1490ae882caef7316405
                           .group:00000000 wm4.cpu.h.33.b213c7fd77614ebc3691cef18ad2ff22
                           .group:00000000 wm4.cc.h.66.ec134211c658dcc89de4610e4e7bab46
                           .group:00000000 wm4.arch.h.47.5153c52bfb94ee3b37299920afab6afd
                           .group:00000000 wm4.debug.h.43.557ecd6c90cc70b375bb8a29118be47b
                           .group:00000000 wm4.opt.h.94.d36882acafebb8726bce646fc8b2397b
                           .group:00000000 wm4.err.h.52.37c5d17538f8e8347a9c84196701e92d
                           .group:00000000 wm4.pbuf.h.43.e9a1ad12b97478787a109e22d5306820
                           .group:00000000 wm4.inet.h.46.b516065779826845d16d49f513869a2b
                           .group:00000000 wm4.ip_addr.h.79.9a0ce887ca8c88c22ad7686bcb5105df
                           .group:00000000 wm4.sys.h.65.4a0cd87b9e0d8bb4cd6b30e939b2ca7e
                           .group:00000000 wm4.mem.h.96.20770766e6c9e6c42af6bfa95ef5c63f
                           .group:00000000 wm4.def.h.33.049f911dab26023a266ed46ced0ce4bc
                           .group:00000000 wm4.netif.h.53.c13431a64f0e73a26710e71455725e84
                           .group:00000000 wm4.ip.h.48.ad46847692d4d729760949b27e48a442
                           .group:00000000 wm4.icmp.h.44.450dbf91f594cc26ad19d086cdc83713
                           .group:00000000 wm4.tcp.h.55.5c30b9432fa60afaa85cbdd225b0c683
                           .group:00000000 wm4.udp.h.48.1a8dde095cd0a13580afaba1443e5a3f
                           .group:00000000 wm4.SDMMC003_Conf.h.50.e707c07613fb4e6f2eaec982a892429d
                           .group:00000000 wm4.SDMMC003.h.85.b66055f6032a052f5173e3d123f9c61e
                           .group:00000000 wm4.SDMMC001.h.50.3e2fedc7e5ace33db4121d5cc027e8a4
                           .group:00000000 wm4.types.h.23.0d949686bbcadd1621462d4fa1f884f9
                           .group:00000000 wm4.types.h.2.e9cec8c90ab35f77d9f499e06ae02400
                           .group:00000000 wm4.types.h.80.1f2c84c0d57dd52dd9936095d9ac218e
                           .group:00000000 wm4.time.h.16.a4579e68956d2601c6113814b546764b
                           .group:00000000 wm4.diskio.h.7.93a3c8131d08770c060b04d2180fd09a
                           .group:00000000 wm4.diskio.h.42.a863614abe78d56d18ed7cb292d0028d
                           .group:00000000 wm4.ffconf.h.57.4ab321a2116d35ff7f28236ac31fad7c
                           .group:00000000 wm4.ff.h.82.8f05a37d35a49dba2681a7f047fee4ee
                           .group:00000000 wm4.lmm001_debuglog.h.40.8031299705ecf04ad726bd19baff976d
                           .group:00000000 wm4.LMM001.h.42.c21fe9cbedc336738c3dc89405cad216
                           .group:00000000 wm4.stdio.h.27.f2ac352bab34f31f9f478442827b2ba6
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.63.dfdea6580b080784d08faace69b6ed76
                           .group:00000000 wm4.time.h.2.9857e62ad6ac99431e29d58067232314
                           .group:00000000 wm4.time.h.24.c499d4c1915694df17abb795fd34b719
                           .group:00000000 wm4.time.h.124.10ced469f846269cafc58b59c853e1bb
                           .group:00000000 wm4.errno.h.2.ba016d646105af6cad23be83630b6a3f
                           .group:00000000 wm4.errno.h.9.65044c2b5d8494e43f5986ab0a1d770f
                           .group:00000000 wm4.unistd.h.2.6ce1b91c4223f6078c1b210c7538c1d2
                           .group:00000000 wm4.unistd.h.251.605bc560cdc6c3b07b599bb71ac4e425
                           .group:00000000 wm4.malloc.h.4.62bd13b8107d5245f60bd92bb5994838
                           .group:00000000 wm4.malloc.h.148.73b7de3bd065dafbd594b04197a9466e
                           .group:00000000 wm4.reent.h.91.faac4d0ac97c0fcf23d10d0786197642
                           .group:00000000 wm4.SLTHA003.h.100.69cb08672bc6ab3f052aa9d5bd6dc5ca
                           .group:00000000 wm4._default_fcntl.h.6.d036cf640d0f9a06bcff1be55acd66be
                           .group:00000000 wm4.stat.h.2.a761b02482a54847ff0d09dfcff24a5c
                           .group:00000000 wm4.fcntl.h.9.9336f33d7f5028f694c75e6e224e0cf7
                           .group:00000000 wm4.SLTHA001.h.97.d7e87c19a31e3244bdd5839e7cc42a61
                           .group:00000000 wm4.WEBSERVER001_Conf.h.54.cd6d29aaa96a848cbc5321bab5d6cd90
                           .group:00000000 wm4.ADCGROUP001.h.48.081c7f952eb4b6ea2df7d05180ee1663
                           .group:00000000 wm4.IO001.h.49.1da965fb490206cf7cde64a90f6912e1
                           .group:00000000 wm4.MOTORLIBS.h.59.b2e97de0df555dedfa51e24447b57ab8
                           .group:00000000 wm4.uc_id.h.35.a6c4837fad81477ba31967683332b8cc
                           .group:00000000 wm4.Usic.h.90.22743468abc46f16747d12430b219aaf
                           .group:00000000 wm4.UART001_Conf.h.53.c5c972f6f634bc5116c171852aaab668
                           .group:00000000 wm4.UART001.h.109.3e835815a7a59791d8bd39655f4d4cc9

UNDEFINED SYMBOLS
ADCGLOB001_Init
ADCCH001_Handle0
