   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"tcp_in.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.bss
  20              		.align	2
  21              	inseg:
  22 0000 00000000 		.space	20
  22      00000000 
  22      00000000 
  22      00000000 
  22      00000000 
  23              		.align	2
  24              	tcphdr:
  25 0014 00000000 		.space	4
  26              		.align	2
  27              	iphdr:
  28 0018 00000000 		.space	4
  29              		.align	2
  30              	seqno:
  31 001c 00000000 		.space	4
  32              		.align	2
  33              	ackno:
  34 0020 00000000 		.space	4
  35              	flags:
  36 0024 00       		.space	1
  37 0025 00       		.align	1
  38              	tcplen:
  39 0026 0000     		.space	2
  40              	recv_flags:
  41 0028 00       		.space	1
  42 0029 000000   		.align	2
  43              	recv_data:
  44 002c 00000000 		.space	4
  45              		.comm	tcp_input_pcb,4,4
  46              		.section	.text.tcp_input,"ax",%progbits
  47              		.align	2
  48              		.global	tcp_input
  49              		.thumb
  50              		.thumb_func
  52              	tcp_input:
  53              	.LFB0:
  54              		.file 1 "../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c"
   1:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** /**
   2:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  * @file
   3:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  * Transmission Control Protocol, incoming traffic
   4:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  *
   5:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  * The input processing functions of the TCP layer.
   6:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  *
   7:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  * These functions are generally called in the order (ip_input() ->)
   8:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  * tcp_input() -> * tcp_process() -> tcp_receive() (-> application).
   9:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  * 
  10:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  */
  11:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
  12:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** /*
  13:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  * Copyright (c) 2001-2004 Swedish Institute of Computer Science.
  14:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  * All rights reserved.
  15:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  *
  16:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  * Redistribution and use in source and binary forms, with or without modification,
  17:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  * are permitted provided that the following conditions are met:
  18:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  *
  19:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  20:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  *    this list of conditions and the following disclaimer.
  21:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  22:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  *    this list of conditions and the following disclaimer in the documentation
  23:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  *    and/or other materials provided with the distribution.
  24:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  * 3. The name of the author may not be used to endorse or promote products
  25:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  *    derived from this software without specific prior written permission.
  26:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  *
  27:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
  28:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  29:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
  30:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  * SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
  31:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
  32:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  * OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  33:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  34:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
  35:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY
  36:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  * OF SUCH DAMAGE.
  37:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  *
  38:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  * This file is part of the lwIP TCP/IP stack.
  39:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  *
  40:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  * Author: Adam Dunkels <adam@sics.se>
  41:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  *
  42:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  */
  43:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
  44:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** #include "lwip/opt.h"
  45:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
  46:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** #if LWIP_TCP /* don't build if not configured for use in lwipopts.h */
  47:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
  48:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** #include "lwip/tcp.h"
  49:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** #include "lwip/def.h"
  50:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** #include "lwip/ip_addr.h"
  51:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** #include "lwip/netif.h"
  52:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** #include "lwip/mem.h"
  53:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** #include "lwip/memp.h"
  54:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** #include "lwip/inet.h"
  55:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** #include "lwip/inet_chksum.h"
  56:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** #include "lwip/stats.h"
  57:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** #include "lwip/snmp.h"
  58:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** #include "arch/perf.h"
  59:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
  60:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** /* These variables are global to all functions involved in the input
  61:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****    processing of TCP segments. They are set by the tcp_input()
  62:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****    function. */
  63:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** static struct tcp_seg inseg;
  64:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** static struct tcp_hdr *tcphdr;
  65:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** static struct ip_hdr *iphdr;
  66:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** static u32_t seqno, ackno;
  67:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** static u8_t flags;
  68:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** static u16_t tcplen;
  69:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
  70:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** static u8_t recv_flags;
  71:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** static struct pbuf *recv_data;
  72:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
  73:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** struct tcp_pcb *tcp_input_pcb;
  74:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
  75:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** /* Forward declarations. */
  76:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** static err_t tcp_process(struct tcp_pcb *pcb);
  77:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** static void tcp_receive(struct tcp_pcb *pcb);
  78:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** static void tcp_parseopt(struct tcp_pcb *pcb);
  79:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
  80:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** static err_t tcp_listen_input(struct tcp_pcb_listen *pcb);
  81:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** static err_t tcp_timewait_input(struct tcp_pcb *pcb);
  82:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
  83:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** /**
  84:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  * The initial input processing of TCP. It verifies the TCP header, demultiplexes
  85:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  * the segment between the PCBs and passes it on to tcp_process(), which implements
  86:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  * the TCP finite state machine. This function is called by the IP layer (in
  87:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  * ip_input()).
  88:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  *
  89:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  * @param p received TCP segment to process (p->payload pointing to the IP header)
  90:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  * @param inp network interface on which this segment was received
  91:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  */
  92:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** void
  93:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** tcp_input(struct pbuf *p, struct netif *inp)
  94:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** {
  55              		.loc 1 94 0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 24
  58              		@ frame_needed = 1, uses_anonymous_args = 0
  59 0000 B0B5     		push	{r4, r5, r7, lr}
  60              	.LCFI0:
  61              		.cfi_def_cfa_offset 16
  62              		.cfi_offset 4, -16
  63              		.cfi_offset 5, -12
  64              		.cfi_offset 7, -8
  65              		.cfi_offset 14, -4
  66 0002 88B0     		sub	sp, sp, #32
  67              	.LCFI1:
  68              		.cfi_def_cfa_offset 48
  69 0004 02AF     		add	r7, sp, #8
  70              	.LCFI2:
  71              		.cfi_def_cfa 7, 40
  72 0006 7860     		str	r0, [r7, #4]
  73 0008 3960     		str	r1, [r7, #0]
  95:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   struct tcp_pcb *pcb, *prev;
  96:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   struct tcp_pcb_listen *lpcb;
  97:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   u8_t hdrlen;
  98:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   err_t err;
  99:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
 100:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   PERF_START;
 101:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
 102:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   TCP_STATS_INC(tcp.recv);
 103:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   snmp_inc_tcpinsegs();
 104:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
 105:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   iphdr = p->payload;
  74              		.loc 1 105 0
  75 000a 7B68     		ldr	r3, [r7, #4]
  76 000c 5A68     		ldr	r2, [r3, #4]
  77 000e 40F20003 		movw	r3, #:lower16:iphdr
  78 0012 C0F20003 		movt	r3, #:upper16:iphdr
  79 0016 1A60     		str	r2, [r3, #0]
 106:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   tcphdr = (struct tcp_hdr *)((u8_t *)p->payload + IPH_HL(iphdr) * 4);
  80              		.loc 1 106 0
  81 0018 7B68     		ldr	r3, [r7, #4]
  82 001a 5C68     		ldr	r4, [r3, #4]
  83 001c 40F20003 		movw	r3, #:lower16:iphdr
  84 0020 C0F20003 		movt	r3, #:upper16:iphdr
  85 0024 1B68     		ldr	r3, [r3, #0]
  86 0026 1B88     		ldrh	r3, [r3, #0]	@ unaligned
  87 0028 9BB2     		uxth	r3, r3
  88 002a 1846     		mov	r0, r3
  89 002c FFF7FEFF 		bl	ntohs
  90 0030 0346     		mov	r3, r0
  91 0032 4FEA1323 		lsr	r3, r3, #8
  92 0036 9BB2     		uxth	r3, r3
  93 0038 03F00F03 		and	r3, r3, #15
  94 003c 4FEA8303 		lsl	r3, r3, #2
  95 0040 E218     		adds	r2, r4, r3
  96 0042 40F20003 		movw	r3, #:lower16:tcphdr
  97 0046 C0F20003 		movt	r3, #:upper16:tcphdr
  98 004a 1A60     		str	r2, [r3, #0]
 107:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
 108:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** #if TCP_INPUT_DEBUG
 109:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   tcp_debug_print(tcphdr);
 110:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** #endif
 111:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
 112:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   /* remove header from payload */
 113:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   if (pbuf_header(p, -((s16_t)(IPH_HL(iphdr) * 4))) || (p->tot_len < sizeof(struct tcp_hdr))) {
  99              		.loc 1 113 0
 100 004c 40F20003 		movw	r3, #:lower16:iphdr
 101 0050 C0F20003 		movt	r3, #:upper16:iphdr
 102 0054 1B68     		ldr	r3, [r3, #0]
 103 0056 1B88     		ldrh	r3, [r3, #0]	@ unaligned
 104 0058 9BB2     		uxth	r3, r3
 105 005a 1846     		mov	r0, r3
 106 005c FFF7FEFF 		bl	ntohs
 107 0060 0346     		mov	r3, r0
 108 0062 4FEA1323 		lsr	r3, r3, #8
 109 0066 9BB2     		uxth	r3, r3
 110 0068 03F00F03 		and	r3, r3, #15
 111 006c 9BB2     		uxth	r3, r3
 112 006e 4FEA8303 		lsl	r3, r3, #2
 113 0072 9BB2     		uxth	r3, r3
 114 0074 C3F10003 		rsb	r3, r3, #0
 115 0078 9BB2     		uxth	r3, r3
 116 007a 9BB2     		uxth	r3, r3
 117 007c 1BB2     		sxth	r3, r3
 118 007e 7868     		ldr	r0, [r7, #4]
 119 0080 1946     		mov	r1, r3
 120 0082 FFF7FEFF 		bl	pbuf_header
 121 0086 0346     		mov	r3, r0
 122 0088 002B     		cmp	r3, #0
 123 008a 03D1     		bne	.L2
 124              		.loc 1 113 0 is_stmt 0 discriminator 1
 125 008c 7B68     		ldr	r3, [r7, #4]
 126 008e 1B89     		ldrh	r3, [r3, #8]
 127 0090 132B     		cmp	r3, #19
 128 0092 03D8     		bhi	.L3
 129              	.L2:
 114:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     /* drop short packets */
 115:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     LWIP_DEBUGF(TCP_INPUT_DEBUG, ("tcp_input: short packet (%"U16_F" bytes) discarded\n", p->tot_le
 116:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     TCP_STATS_INC(tcp.lenerr);
 117:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     TCP_STATS_INC(tcp.drop);
 118:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     snmp_inc_tcpinerrs();
 119:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     pbuf_free(p);
 130              		.loc 1 119 0 is_stmt 1
 131 0094 7868     		ldr	r0, [r7, #4]
 132 0096 FFF7FEFF 		bl	pbuf_free
 120:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     return;
 133              		.loc 1 120 0
 134 009a 62E3     		b	.L1
 135              	.L3:
 121:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   }
 122:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
 123:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   /* Don't even process incoming broadcasts/multicasts. */
 124:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   if (ip_addr_isbroadcast(&(iphdr->dest), inp) ||
 136              		.loc 1 124 0
 137 009c 40F20003 		movw	r3, #:lower16:iphdr
 138 00a0 C0F20003 		movt	r3, #:upper16:iphdr
 139 00a4 1B68     		ldr	r3, [r3, #0]
 140 00a6 03F11003 		add	r3, r3, #16
 141 00aa 1846     		mov	r0, r3
 142 00ac 3968     		ldr	r1, [r7, #0]
 143 00ae FFF7FEFF 		bl	ip_addr_isbroadcast
 144 00b2 0346     		mov	r3, r0
 145 00b4 002B     		cmp	r3, #0
 146 00b6 12D1     		bne	.L5
 125:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       ip_addr_ismulticast(&(iphdr->dest))) {
 147              		.loc 1 125 0 discriminator 1
 148 00b8 40F20003 		movw	r3, #:lower16:iphdr
 149 00bc C0F20003 		movt	r3, #:upper16:iphdr
 150 00c0 1B68     		ldr	r3, [r3, #0]
 151 00c2 1C69     		ldr	r4, [r3, #16]	@ unaligned
 152 00c4 4FF07040 		mov	r0, #-268435456
 153 00c8 FFF7FEFF 		bl	ntohl
 154 00cc 0346     		mov	r3, r0
 155 00ce 1C40     		ands	r4, r4, r3
 156 00d0 4FF06040 		mov	r0, #-536870912
 157 00d4 FFF7FEFF 		bl	ntohl
 158 00d8 0346     		mov	r3, r0
 124:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   if (ip_addr_isbroadcast(&(iphdr->dest), inp) ||
 159              		.loc 1 124 0 discriminator 1
 160 00da 9C42     		cmp	r4, r3
 161 00dc 03D1     		bne	.L6
 162              	.L5:
 126:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     TCP_STATS_INC(tcp.proterr);
 127:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     TCP_STATS_INC(tcp.drop);
 128:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     snmp_inc_tcpinerrs();
 129:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     pbuf_free(p);
 163              		.loc 1 129 0
 164 00de 7868     		ldr	r0, [r7, #4]
 165 00e0 FFF7FEFF 		bl	pbuf_free
 130:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     return;
 166              		.loc 1 130 0
 167 00e4 3DE3     		b	.L1
 168              	.L6:
 131:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   }
 132:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
 133:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** #if CHECKSUM_CHECK_TCP
 134:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   /* Verify TCP checksum. */
 135:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   if (inet_chksum_pseudo(p, (struct ip_addr *)&(iphdr->src),
 136:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       (struct ip_addr *)&(iphdr->dest),
 137:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       IP_PROTO_TCP, p->tot_len) != 0) {
 138:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       LWIP_DEBUGF(TCP_INPUT_DEBUG, ("tcp_input: packet discarded due to failing checksum 0x%04"X16_
 139:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         inet_chksum_pseudo(p, (struct ip_addr *)&(iphdr->src), (struct ip_addr *)&(iphdr->dest),
 140:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       IP_PROTO_TCP, p->tot_len)));
 141:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** #if TCP_DEBUG
 142:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     tcp_debug_print(tcphdr);
 143:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** #endif /* TCP_DEBUG */
 144:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     TCP_STATS_INC(tcp.chkerr);
 145:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     TCP_STATS_INC(tcp.drop);
 146:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     snmp_inc_tcpinerrs();
 147:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     pbuf_free(p);
 148:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     return;
 149:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   }
 150:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** #endif
 151:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
 152:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   /* Move the payload pointer in the pbuf so that it points to the
 153:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****      TCP data instead of the TCP header. */
 154:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   hdrlen = TCPH_HDRLEN(tcphdr);
 169              		.loc 1 154 0
 170 00e6 40F20003 		movw	r3, #:lower16:tcphdr
 171 00ea C0F20003 		movt	r3, #:upper16:tcphdr
 172 00ee 1B68     		ldr	r3, [r3, #0]
 173 00f0 9B89     		ldrh	r3, [r3, #12]	@ unaligned
 174 00f2 9BB2     		uxth	r3, r3
 175 00f4 1846     		mov	r0, r3
 176 00f6 FFF7FEFF 		bl	ntohs
 177 00fa 0346     		mov	r3, r0
 178 00fc 4FEA1333 		lsr	r3, r3, #12
 179 0100 9BB2     		uxth	r3, r3
 180 0102 BB72     		strb	r3, [r7, #10]
 155:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   if(pbuf_header(p, -(hdrlen * 4))){
 181              		.loc 1 155 0
 182 0104 BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 183 0106 9BB2     		uxth	r3, r3
 184 0108 1A46     		mov	r2, r3	@ movhi
 185 010a 4FEA8232 		lsl	r2, r2, #14
 186 010e D31A     		subs	r3, r2, r3
 187 0110 4FEA8303 		lsl	r3, r3, #2
 188 0114 9BB2     		uxth	r3, r3
 189 0116 9BB2     		uxth	r3, r3
 190 0118 1BB2     		sxth	r3, r3
 191 011a 7868     		ldr	r0, [r7, #4]
 192 011c 1946     		mov	r1, r3
 193 011e FFF7FEFF 		bl	pbuf_header
 194 0122 0346     		mov	r3, r0
 195 0124 002B     		cmp	r3, #0
 196 0126 03D0     		beq	.L7
 156:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     /* drop short packets */
 157:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     LWIP_DEBUGF(TCP_INPUT_DEBUG, ("tcp_input: short packet\n"));
 158:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     TCP_STATS_INC(tcp.lenerr);
 159:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     TCP_STATS_INC(tcp.drop);
 160:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     snmp_inc_tcpinerrs();
 161:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     pbuf_free(p);
 197              		.loc 1 161 0
 198 0128 7868     		ldr	r0, [r7, #4]
 199 012a FFF7FEFF 		bl	pbuf_free
 162:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     return;
 200              		.loc 1 162 0
 201 012e 18E3     		b	.L1
 202              	.L7:
 163:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   }
 164:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
 165:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   /* Convert fields in TCP header to host byte order. */
 166:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   tcphdr->src = ntohs(tcphdr->src);
 203              		.loc 1 166 0
 204 0130 40F20003 		movw	r3, #:lower16:tcphdr
 205 0134 C0F20003 		movt	r3, #:upper16:tcphdr
 206 0138 1C68     		ldr	r4, [r3, #0]
 207 013a 40F20003 		movw	r3, #:lower16:tcphdr
 208 013e C0F20003 		movt	r3, #:upper16:tcphdr
 209 0142 1B68     		ldr	r3, [r3, #0]
 210 0144 1B88     		ldrh	r3, [r3, #0]	@ unaligned
 211 0146 9BB2     		uxth	r3, r3
 212 0148 1846     		mov	r0, r3
 213 014a FFF7FEFF 		bl	ntohs
 214 014e 0346     		mov	r3, r0
 215 0150 2380     		strh	r3, [r4, #0]	@ unaligned
 167:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   tcphdr->dest = ntohs(tcphdr->dest);
 216              		.loc 1 167 0
 217 0152 40F20003 		movw	r3, #:lower16:tcphdr
 218 0156 C0F20003 		movt	r3, #:upper16:tcphdr
 219 015a 1C68     		ldr	r4, [r3, #0]
 220 015c 40F20003 		movw	r3, #:lower16:tcphdr
 221 0160 C0F20003 		movt	r3, #:upper16:tcphdr
 222 0164 1B68     		ldr	r3, [r3, #0]
 223 0166 5B88     		ldrh	r3, [r3, #2]	@ unaligned
 224 0168 9BB2     		uxth	r3, r3
 225 016a 1846     		mov	r0, r3
 226 016c FFF7FEFF 		bl	ntohs
 227 0170 0346     		mov	r3, r0
 228 0172 6380     		strh	r3, [r4, #2]	@ unaligned
 168:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   seqno = tcphdr->seqno = ntohl(tcphdr->seqno);
 229              		.loc 1 168 0
 230 0174 40F20003 		movw	r3, #:lower16:tcphdr
 231 0178 C0F20003 		movt	r3, #:upper16:tcphdr
 232 017c 1C68     		ldr	r4, [r3, #0]
 233 017e 40F20003 		movw	r3, #:lower16:tcphdr
 234 0182 C0F20003 		movt	r3, #:upper16:tcphdr
 235 0186 1B68     		ldr	r3, [r3, #0]
 236 0188 5B68     		ldr	r3, [r3, #4]	@ unaligned
 237 018a 1846     		mov	r0, r3
 238 018c FFF7FEFF 		bl	ntohl
 239 0190 0346     		mov	r3, r0
 240 0192 6360     		str	r3, [r4, #4]	@ unaligned
 241 0194 6268     		ldr	r2, [r4, #4]	@ unaligned
 242 0196 40F20003 		movw	r3, #:lower16:seqno
 243 019a C0F20003 		movt	r3, #:upper16:seqno
 244 019e 1A60     		str	r2, [r3, #0]
 169:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   ackno = tcphdr->ackno = ntohl(tcphdr->ackno);
 245              		.loc 1 169 0
 246 01a0 40F20003 		movw	r3, #:lower16:tcphdr
 247 01a4 C0F20003 		movt	r3, #:upper16:tcphdr
 248 01a8 1C68     		ldr	r4, [r3, #0]
 249 01aa 40F20003 		movw	r3, #:lower16:tcphdr
 250 01ae C0F20003 		movt	r3, #:upper16:tcphdr
 251 01b2 1B68     		ldr	r3, [r3, #0]
 252 01b4 9B68     		ldr	r3, [r3, #8]	@ unaligned
 253 01b6 1846     		mov	r0, r3
 254 01b8 FFF7FEFF 		bl	ntohl
 255 01bc 0346     		mov	r3, r0
 256 01be A360     		str	r3, [r4, #8]	@ unaligned
 257 01c0 A268     		ldr	r2, [r4, #8]	@ unaligned
 258 01c2 40F20003 		movw	r3, #:lower16:ackno
 259 01c6 C0F20003 		movt	r3, #:upper16:ackno
 260 01ca 1A60     		str	r2, [r3, #0]
 170:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   tcphdr->wnd = ntohs(tcphdr->wnd);
 261              		.loc 1 170 0
 262 01cc 40F20003 		movw	r3, #:lower16:tcphdr
 263 01d0 C0F20003 		movt	r3, #:upper16:tcphdr
 264 01d4 1C68     		ldr	r4, [r3, #0]
 265 01d6 40F20003 		movw	r3, #:lower16:tcphdr
 266 01da C0F20003 		movt	r3, #:upper16:tcphdr
 267 01de 1B68     		ldr	r3, [r3, #0]
 268 01e0 DB89     		ldrh	r3, [r3, #14]	@ unaligned
 269 01e2 9BB2     		uxth	r3, r3
 270 01e4 1846     		mov	r0, r3
 271 01e6 FFF7FEFF 		bl	ntohs
 272 01ea 0346     		mov	r3, r0
 273 01ec E381     		strh	r3, [r4, #14]	@ unaligned
 171:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
 172:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   flags = TCPH_FLAGS(tcphdr);
 274              		.loc 1 172 0
 275 01ee 40F20003 		movw	r3, #:lower16:tcphdr
 276 01f2 C0F20003 		movt	r3, #:upper16:tcphdr
 277 01f6 1B68     		ldr	r3, [r3, #0]
 278 01f8 9B89     		ldrh	r3, [r3, #12]	@ unaligned
 279 01fa 9BB2     		uxth	r3, r3
 280 01fc 1846     		mov	r0, r3
 281 01fe FFF7FEFF 		bl	ntohs
 282 0202 0346     		mov	r3, r0
 283 0204 DBB2     		uxtb	r3, r3
 284 0206 03F03F03 		and	r3, r3, #63
 285 020a DAB2     		uxtb	r2, r3
 286 020c 40F20003 		movw	r3, #:lower16:flags
 287 0210 C0F20003 		movt	r3, #:upper16:flags
 288 0214 1A70     		strb	r2, [r3, #0]
 173:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   tcplen = p->tot_len + ((flags & (TCP_FIN | TCP_SYN)) ? 1 : 0);
 289              		.loc 1 173 0
 290 0216 7B68     		ldr	r3, [r7, #4]
 291 0218 1A89     		ldrh	r2, [r3, #8]
 292 021a 40F20003 		movw	r3, #:lower16:flags
 293 021e C0F20003 		movt	r3, #:upper16:flags
 294 0222 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 295 0224 03F00303 		and	r3, r3, #3
 296 0228 002B     		cmp	r3, #0
 297 022a 0CBF     		ite	eq
 298 022c 0023     		moveq	r3, #0
 299 022e 0123     		movne	r3, #1
 300 0230 DBB2     		uxtb	r3, r3
 301 0232 D318     		adds	r3, r2, r3
 302 0234 9AB2     		uxth	r2, r3
 303 0236 40F20003 		movw	r3, #:lower16:tcplen
 304 023a C0F20003 		movt	r3, #:upper16:tcplen
 305 023e 1A80     		strh	r2, [r3, #0]	@ movhi
 174:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
 175:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   /* Demultiplex an incoming segment. First, we check if it is destined
 176:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****      for an active connection. */
 177:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   prev = NULL;
 306              		.loc 1 177 0
 307 0240 4FF00003 		mov	r3, #0
 308 0244 3B61     		str	r3, [r7, #16]
 178:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
 179:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   
 180:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   for(pcb = tcp_active_pcbs; pcb != NULL; pcb = pcb->next) {
 309              		.loc 1 180 0
 310 0246 40F20003 		movw	r3, #:lower16:tcp_active_pcbs
 311 024a C0F20003 		movt	r3, #:upper16:tcp_active_pcbs
 312 024e 1B68     		ldr	r3, [r3, #0]
 313 0250 7B61     		str	r3, [r7, #20]
 314 0252 43E0     		b	.L8
 315              	.L12:
 181:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     LWIP_ASSERT("tcp_input: active pcb->state != CLOSED", pcb->state != CLOSED);
 182:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     LWIP_ASSERT("tcp_input: active pcb->state != TIME-WAIT", pcb->state != TIME_WAIT);
 183:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     LWIP_ASSERT("tcp_input: active pcb->state != LISTEN", pcb->state != LISTEN);
 184:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     if (pcb->remote_port == tcphdr->src &&
 316              		.loc 1 184 0
 317 0254 7B69     		ldr	r3, [r7, #20]
 318 0256 1A8C     		ldrh	r2, [r3, #32]
 319 0258 40F20003 		movw	r3, #:lower16:tcphdr
 320 025c C0F20003 		movt	r3, #:upper16:tcphdr
 321 0260 1B68     		ldr	r3, [r3, #0]
 322 0262 1B88     		ldrh	r3, [r3, #0]	@ unaligned
 323 0264 9BB2     		uxth	r3, r3
 324 0266 9A42     		cmp	r2, r3
 325 0268 33D1     		bne	.L9
 185:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****        pcb->local_port == tcphdr->dest &&
 326              		.loc 1 185 0 discriminator 1
 327 026a 7B69     		ldr	r3, [r7, #20]
 328 026c 1A8B     		ldrh	r2, [r3, #24]
 329 026e 40F20003 		movw	r3, #:lower16:tcphdr
 330 0272 C0F20003 		movt	r3, #:upper16:tcphdr
 331 0276 1B68     		ldr	r3, [r3, #0]
 332 0278 5B88     		ldrh	r3, [r3, #2]	@ unaligned
 333 027a 9BB2     		uxth	r3, r3
 184:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     if (pcb->remote_port == tcphdr->src &&
 334              		.loc 1 184 0 discriminator 1
 335 027c 9A42     		cmp	r2, r3
 336 027e 28D1     		bne	.L9
 186:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****        ip_addr_cmp(&(pcb->remote_ip), &(iphdr->src)) &&
 337              		.loc 1 186 0
 338 0280 7B69     		ldr	r3, [r7, #20]
 339 0282 5A68     		ldr	r2, [r3, #4]
 340 0284 40F20003 		movw	r3, #:lower16:iphdr
 341 0288 C0F20003 		movt	r3, #:upper16:iphdr
 342 028c 1B68     		ldr	r3, [r3, #0]
 343 028e DB68     		ldr	r3, [r3, #12]	@ unaligned
 185:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****        pcb->local_port == tcphdr->dest &&
 344              		.loc 1 185 0
 345 0290 9A42     		cmp	r2, r3
 346 0292 1ED1     		bne	.L9
 187:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****        ip_addr_cmp(&(pcb->local_ip), &(iphdr->dest))) {
 347              		.loc 1 187 0
 348 0294 7B69     		ldr	r3, [r7, #20]
 349 0296 1A68     		ldr	r2, [r3, #0]
 350 0298 40F20003 		movw	r3, #:lower16:iphdr
 351 029c C0F20003 		movt	r3, #:upper16:iphdr
 352 02a0 1B68     		ldr	r3, [r3, #0]
 353 02a2 1B69     		ldr	r3, [r3, #16]	@ unaligned
 186:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****        ip_addr_cmp(&(pcb->remote_ip), &(iphdr->src)) &&
 354              		.loc 1 186 0
 355 02a4 9A42     		cmp	r2, r3
 356 02a6 14D1     		bne	.L9
 188:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
 189:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       /* Move this PCB to the front of the list so that subsequent
 190:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****          lookups will be faster (we exploit locality in TCP segment
 191:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****          arrivals). */
 192:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       LWIP_ASSERT("tcp_input: pcb->next != pcb (before cache)", pcb->next != pcb);
 193:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       if (prev != NULL) {
 357              		.loc 1 193 0
 358 02a8 3B69     		ldr	r3, [r7, #16]
 359 02aa 002B     		cmp	r3, #0
 360 02ac 1AD0     		beq	.L40
 194:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         prev->next = pcb->next;
 361              		.loc 1 194 0
 362 02ae 7B69     		ldr	r3, [r7, #20]
 363 02b0 DA68     		ldr	r2, [r3, #12]
 364 02b2 3B69     		ldr	r3, [r7, #16]
 365 02b4 DA60     		str	r2, [r3, #12]
 195:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         pcb->next = tcp_active_pcbs;
 366              		.loc 1 195 0
 367 02b6 40F20003 		movw	r3, #:lower16:tcp_active_pcbs
 368 02ba C0F20003 		movt	r3, #:upper16:tcp_active_pcbs
 369 02be 1A68     		ldr	r2, [r3, #0]
 370 02c0 7B69     		ldr	r3, [r7, #20]
 371 02c2 DA60     		str	r2, [r3, #12]
 196:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         tcp_active_pcbs = pcb;
 372              		.loc 1 196 0
 373 02c4 40F20003 		movw	r3, #:lower16:tcp_active_pcbs
 374 02c8 C0F20003 		movt	r3, #:upper16:tcp_active_pcbs
 375 02cc 7A69     		ldr	r2, [r7, #20]
 376 02ce 1A60     		str	r2, [r3, #0]
 197:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       }
 198:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       LWIP_ASSERT("tcp_input: pcb->next != pcb (after cache)", pcb->next != pcb);
 199:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       break;
 377              		.loc 1 199 0
 378 02d0 08E0     		b	.L40
 379              	.L9:
 200:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     }
 201:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     prev = pcb;
 380              		.loc 1 201 0
 381 02d2 7B69     		ldr	r3, [r7, #20]
 382 02d4 3B61     		str	r3, [r7, #16]
 180:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   for(pcb = tcp_active_pcbs; pcb != NULL; pcb = pcb->next) {
 383              		.loc 1 180 0
 384 02d6 7B69     		ldr	r3, [r7, #20]
 385 02d8 DB68     		ldr	r3, [r3, #12]
 386 02da 7B61     		str	r3, [r7, #20]
 387              	.L8:
 180:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   for(pcb = tcp_active_pcbs; pcb != NULL; pcb = pcb->next) {
 388              		.loc 1 180 0 is_stmt 0 discriminator 1
 389 02dc 7B69     		ldr	r3, [r7, #20]
 390 02de 002B     		cmp	r3, #0
 391 02e0 B8D1     		bne	.L12
 392 02e2 00E0     		b	.L11
 393              	.L40:
 199:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       break;
 394              		.loc 1 199 0 is_stmt 1
 395 02e4 00BF     		nop
 396              	.L11:
 202:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   }
 203:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
 204:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   if (pcb == NULL) {
 397              		.loc 1 204 0
 398 02e6 7B69     		ldr	r3, [r7, #20]
 399 02e8 002B     		cmp	r3, #0
 400 02ea 40F08780 		bne	.L13
 205:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     /* If it did not go to an active connection, we check the connections
 206:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****        in the TIME-WAIT state. */
 207:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     for(pcb = tcp_tw_pcbs; pcb != NULL; pcb = pcb->next) {
 401              		.loc 1 207 0
 402 02ee 40F20003 		movw	r3, #:lower16:tcp_tw_pcbs
 403 02f2 C0F20003 		movt	r3, #:upper16:tcp_tw_pcbs
 404 02f6 1B68     		ldr	r3, [r3, #0]
 405 02f8 7B61     		str	r3, [r7, #20]
 406 02fa 33E0     		b	.L14
 407              	.L16:
 208:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       LWIP_ASSERT("tcp_input: TIME-WAIT pcb->state == TIME-WAIT", pcb->state == TIME_WAIT);
 209:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       if (pcb->remote_port == tcphdr->src &&
 408              		.loc 1 209 0
 409 02fc 7B69     		ldr	r3, [r7, #20]
 410 02fe 1A8C     		ldrh	r2, [r3, #32]
 411 0300 40F20003 		movw	r3, #:lower16:tcphdr
 412 0304 C0F20003 		movt	r3, #:upper16:tcphdr
 413 0308 1B68     		ldr	r3, [r3, #0]
 414 030a 1B88     		ldrh	r3, [r3, #0]	@ unaligned
 415 030c 9BB2     		uxth	r3, r3
 416 030e 9A42     		cmp	r2, r3
 417 0310 25D1     		bne	.L15
 210:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****          pcb->local_port == tcphdr->dest &&
 418              		.loc 1 210 0 discriminator 1
 419 0312 7B69     		ldr	r3, [r7, #20]
 420 0314 1A8B     		ldrh	r2, [r3, #24]
 421 0316 40F20003 		movw	r3, #:lower16:tcphdr
 422 031a C0F20003 		movt	r3, #:upper16:tcphdr
 423 031e 1B68     		ldr	r3, [r3, #0]
 424 0320 5B88     		ldrh	r3, [r3, #2]	@ unaligned
 425 0322 9BB2     		uxth	r3, r3
 209:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       if (pcb->remote_port == tcphdr->src &&
 426              		.loc 1 209 0 discriminator 1
 427 0324 9A42     		cmp	r2, r3
 428 0326 1AD1     		bne	.L15
 211:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****          ip_addr_cmp(&(pcb->remote_ip), &(iphdr->src)) &&
 429              		.loc 1 211 0
 430 0328 7B69     		ldr	r3, [r7, #20]
 431 032a 5A68     		ldr	r2, [r3, #4]
 432 032c 40F20003 		movw	r3, #:lower16:iphdr
 433 0330 C0F20003 		movt	r3, #:upper16:iphdr
 434 0334 1B68     		ldr	r3, [r3, #0]
 435 0336 DB68     		ldr	r3, [r3, #12]	@ unaligned
 210:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****          pcb->local_port == tcphdr->dest &&
 436              		.loc 1 210 0
 437 0338 9A42     		cmp	r2, r3
 438 033a 10D1     		bne	.L15
 212:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****          ip_addr_cmp(&(pcb->local_ip), &(iphdr->dest))) {
 439              		.loc 1 212 0
 440 033c 7B69     		ldr	r3, [r7, #20]
 441 033e 1A68     		ldr	r2, [r3, #0]
 442 0340 40F20003 		movw	r3, #:lower16:iphdr
 443 0344 C0F20003 		movt	r3, #:upper16:iphdr
 444 0348 1B68     		ldr	r3, [r3, #0]
 445 034a 1B69     		ldr	r3, [r3, #16]	@ unaligned
 211:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****          ip_addr_cmp(&(pcb->remote_ip), &(iphdr->src)) &&
 446              		.loc 1 211 0
 447 034c 9A42     		cmp	r2, r3
 448 034e 06D1     		bne	.L15
 213:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         /* We don't really care enough to move this PCB to the front
 214:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****            of the list since we are not very likely to receive that
 215:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****            many segments for connections in TIME-WAIT. */
 216:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         LWIP_DEBUGF(TCP_INPUT_DEBUG, ("tcp_input: packed for TIME_WAITing connection.\n"));
 217:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         tcp_timewait_input(pcb);
 449              		.loc 1 217 0
 450 0350 7869     		ldr	r0, [r7, #20]
 451 0352 FFF7FEFF 		bl	tcp_timewait_input
 218:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         pbuf_free(p);
 452              		.loc 1 218 0
 453 0356 7868     		ldr	r0, [r7, #4]
 454 0358 FFF7FEFF 		bl	pbuf_free
 219:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         return;
 455              		.loc 1 219 0
 456 035c 01E2     		b	.L1
 457              	.L15:
 207:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     for(pcb = tcp_tw_pcbs; pcb != NULL; pcb = pcb->next) {
 458              		.loc 1 207 0
 459 035e 7B69     		ldr	r3, [r7, #20]
 460 0360 DB68     		ldr	r3, [r3, #12]
 461 0362 7B61     		str	r3, [r7, #20]
 462              	.L14:
 207:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     for(pcb = tcp_tw_pcbs; pcb != NULL; pcb = pcb->next) {
 463              		.loc 1 207 0 is_stmt 0 discriminator 1
 464 0364 7B69     		ldr	r3, [r7, #20]
 465 0366 002B     		cmp	r3, #0
 466 0368 C8D1     		bne	.L16
 220:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       }
 221:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     }
 222:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
 223:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   /* Finally, if we still did not get a match, we check all PCBs that
 224:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****      are LISTENing for incoming connections. */
 225:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     prev = NULL;
 467              		.loc 1 225 0 is_stmt 1
 468 036a 4FF00003 		mov	r3, #0
 469 036e 3B61     		str	r3, [r7, #16]
 226:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     for(lpcb = tcp_listen_pcbs.listen_pcbs; lpcb != NULL; lpcb = lpcb->next) {
 470              		.loc 1 226 0
 471 0370 40F20003 		movw	r3, #:lower16:tcp_listen_pcbs
 472 0374 C0F20003 		movt	r3, #:upper16:tcp_listen_pcbs
 473 0378 1B68     		ldr	r3, [r3, #0]
 474 037a FB60     		str	r3, [r7, #12]
 475 037c 3BE0     		b	.L17
 476              	.L21:
 227:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       if ((ip_addr_isany(&(lpcb->local_ip)) ||
 477              		.loc 1 227 0
 478 037e FB68     		ldr	r3, [r7, #12]
 479 0380 002B     		cmp	r3, #0
 480 0382 0DD0     		beq	.L18
 481              		.loc 1 227 0 is_stmt 0 discriminator 1
 482 0384 FB68     		ldr	r3, [r7, #12]
 483 0386 1B68     		ldr	r3, [r3, #0]
 484 0388 002B     		cmp	r3, #0
 485 038a 09D0     		beq	.L18
 228:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         ip_addr_cmp(&(lpcb->local_ip), &(iphdr->dest))) &&
 486              		.loc 1 228 0 is_stmt 1 discriminator 1
 487 038c FB68     		ldr	r3, [r7, #12]
 488 038e 1A68     		ldr	r2, [r3, #0]
 489 0390 40F20003 		movw	r3, #:lower16:iphdr
 490 0394 C0F20003 		movt	r3, #:upper16:iphdr
 491 0398 1B68     		ldr	r3, [r3, #0]
 492 039a 1B69     		ldr	r3, [r3, #16]	@ unaligned
 227:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       if ((ip_addr_isany(&(lpcb->local_ip)) ||
 493              		.loc 1 227 0 discriminator 1
 494 039c 9A42     		cmp	r2, r3
 495 039e 25D1     		bne	.L19
 496              	.L18:
 229:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         lpcb->local_port == tcphdr->dest) {
 497              		.loc 1 229 0
 498 03a0 FB68     		ldr	r3, [r7, #12]
 499 03a2 1A8B     		ldrh	r2, [r3, #24]
 500 03a4 40F20003 		movw	r3, #:lower16:tcphdr
 501 03a8 C0F20003 		movt	r3, #:upper16:tcphdr
 502 03ac 1B68     		ldr	r3, [r3, #0]
 503 03ae 5B88     		ldrh	r3, [r3, #2]	@ unaligned
 504 03b0 9BB2     		uxth	r3, r3
 228:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         ip_addr_cmp(&(lpcb->local_ip), &(iphdr->dest))) &&
 505              		.loc 1 228 0
 506 03b2 9A42     		cmp	r2, r3
 507 03b4 1AD1     		bne	.L19
 230:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         /* Move this PCB to the front of the list so that subsequent
 231:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****            lookups will be faster (we exploit locality in TCP segment
 232:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****            arrivals). */
 233:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         if (prev != NULL) {
 508              		.loc 1 233 0
 509 03b6 3B69     		ldr	r3, [r7, #16]
 510 03b8 002B     		cmp	r3, #0
 511 03ba 10D0     		beq	.L20
 234:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           ((struct tcp_pcb_listen *)prev)->next = lpcb->next;
 512              		.loc 1 234 0
 513 03bc FB68     		ldr	r3, [r7, #12]
 514 03be DA68     		ldr	r2, [r3, #12]
 515 03c0 3B69     		ldr	r3, [r7, #16]
 516 03c2 DA60     		str	r2, [r3, #12]
 235:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                 /* our successor is the remainder of the listening list */
 236:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           lpcb->next = tcp_listen_pcbs.listen_pcbs;
 517              		.loc 1 236 0
 518 03c4 40F20003 		movw	r3, #:lower16:tcp_listen_pcbs
 519 03c8 C0F20003 		movt	r3, #:upper16:tcp_listen_pcbs
 520 03cc 1A68     		ldr	r2, [r3, #0]
 521 03ce FB68     		ldr	r3, [r7, #12]
 522 03d0 DA60     		str	r2, [r3, #12]
 237:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                 /* put this listening pcb at the head of the listening list */
 238:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           tcp_listen_pcbs.listen_pcbs = lpcb;
 523              		.loc 1 238 0
 524 03d2 40F20003 		movw	r3, #:lower16:tcp_listen_pcbs
 525 03d6 C0F20003 		movt	r3, #:upper16:tcp_listen_pcbs
 526 03da FA68     		ldr	r2, [r7, #12]
 527 03dc 1A60     		str	r2, [r3, #0]
 528              	.L20:
 239:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         }
 240:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       
 241:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         LWIP_DEBUGF(TCP_INPUT_DEBUG, ("tcp_input: packed for LISTENing connection.\n"));
 242:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         tcp_listen_input(lpcb);
 529              		.loc 1 242 0
 530 03de F868     		ldr	r0, [r7, #12]
 531 03e0 FFF7FEFF 		bl	tcp_listen_input
 243:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         pbuf_free(p);
 532              		.loc 1 243 0
 533 03e4 7868     		ldr	r0, [r7, #4]
 534 03e6 FFF7FEFF 		bl	pbuf_free
 244:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         return;
 535              		.loc 1 244 0
 536 03ea BAE1     		b	.L1
 537              	.L19:
 245:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       }
 246:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       prev = (struct tcp_pcb *)lpcb;
 538              		.loc 1 246 0
 539 03ec FB68     		ldr	r3, [r7, #12]
 540 03ee 3B61     		str	r3, [r7, #16]
 226:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     for(lpcb = tcp_listen_pcbs.listen_pcbs; lpcb != NULL; lpcb = lpcb->next) {
 541              		.loc 1 226 0
 542 03f0 FB68     		ldr	r3, [r7, #12]
 543 03f2 DB68     		ldr	r3, [r3, #12]
 544 03f4 FB60     		str	r3, [r7, #12]
 545              	.L17:
 226:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     for(lpcb = tcp_listen_pcbs.listen_pcbs; lpcb != NULL; lpcb = lpcb->next) {
 546              		.loc 1 226 0 is_stmt 0 discriminator 1
 547 03f6 FB68     		ldr	r3, [r7, #12]
 548 03f8 002B     		cmp	r3, #0
 549 03fa C0D1     		bne	.L21
 550              	.L13:
 247:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     }
 248:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   }
 249:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
 250:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** #if TCP_INPUT_DEBUG
 251:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   LWIP_DEBUGF(TCP_INPUT_DEBUG, ("+-+-+-+-+-+-+-+-+-+-+-+-+-+- tcp_input: flags "));
 252:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   tcp_debug_print_flags(TCPH_FLAGS(tcphdr));
 253:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   LWIP_DEBUGF(TCP_INPUT_DEBUG, ("-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n"));
 254:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** #endif /* TCP_INPUT_DEBUG */
 255:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
 256:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
 257:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   if (pcb != NULL) {
 551              		.loc 1 257 0 is_stmt 1
 552 03fc 7B69     		ldr	r3, [r7, #20]
 553 03fe 002B     		cmp	r3, #0
 554 0400 00F06B81 		beq	.L22
 258:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     /* The incoming segment belongs to a connection. */
 259:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** #if TCP_INPUT_DEBUG
 260:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** #if TCP_DEBUG
 261:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     tcp_debug_print_state(pcb->state);
 262:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** #endif /* TCP_DEBUG */
 263:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** #endif /* TCP_INPUT_DEBUG */
 264:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
 265:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     /* Set up a tcp_seg structure. */
 266:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     inseg.next = NULL;
 555              		.loc 1 266 0
 556 0404 40F20003 		movw	r3, #:lower16:inseg
 557 0408 C0F20003 		movt	r3, #:upper16:inseg
 558 040c 4FF00002 		mov	r2, #0
 559 0410 1A60     		str	r2, [r3, #0]
 267:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     inseg.len = p->tot_len;
 560              		.loc 1 267 0
 561 0412 7B68     		ldr	r3, [r7, #4]
 562 0414 1A89     		ldrh	r2, [r3, #8]
 563 0416 40F20003 		movw	r3, #:lower16:inseg
 564 041a C0F20003 		movt	r3, #:upper16:inseg
 565 041e 9A81     		strh	r2, [r3, #12]	@ movhi
 268:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     inseg.dataptr = p->payload;
 566              		.loc 1 268 0
 567 0420 7B68     		ldr	r3, [r7, #4]
 568 0422 5A68     		ldr	r2, [r3, #4]
 569 0424 40F20003 		movw	r3, #:lower16:inseg
 570 0428 C0F20003 		movt	r3, #:upper16:inseg
 571 042c 9A60     		str	r2, [r3, #8]
 269:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     inseg.p = p;
 572              		.loc 1 269 0
 573 042e 40F20003 		movw	r3, #:lower16:inseg
 574 0432 C0F20003 		movt	r3, #:upper16:inseg
 575 0436 7A68     		ldr	r2, [r7, #4]
 576 0438 5A60     		str	r2, [r3, #4]
 270:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     inseg.tcphdr = tcphdr;
 577              		.loc 1 270 0
 578 043a 40F20003 		movw	r3, #:lower16:tcphdr
 579 043e C0F20003 		movt	r3, #:upper16:tcphdr
 580 0442 1A68     		ldr	r2, [r3, #0]
 581 0444 40F20003 		movw	r3, #:lower16:inseg
 582 0448 C0F20003 		movt	r3, #:upper16:inseg
 583 044c 1A61     		str	r2, [r3, #16]
 271:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
 272:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     recv_data = NULL;
 584              		.loc 1 272 0
 585 044e 40F20003 		movw	r3, #:lower16:recv_data
 586 0452 C0F20003 		movt	r3, #:upper16:recv_data
 587 0456 4FF00002 		mov	r2, #0
 588 045a 1A60     		str	r2, [r3, #0]
 273:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     recv_flags = 0;
 589              		.loc 1 273 0
 590 045c 40F20003 		movw	r3, #:lower16:recv_flags
 591 0460 C0F20003 		movt	r3, #:upper16:recv_flags
 592 0464 4FF00002 		mov	r2, #0
 593 0468 1A70     		strb	r2, [r3, #0]
 274:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
 275:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     /* If there is data which was previously "refused" by upper layer */
 276:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     if (pcb->refused_data != NULL) {
 594              		.loc 1 276 0
 595 046a 7B69     		ldr	r3, [r7, #20]
 596 046c DB6F     		ldr	r3, [r3, #124]
 597 046e 002B     		cmp	r3, #0
 598 0470 2DD0     		beq	.L23
 277:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       /* Notify again application with data previously received. */
 278:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       LWIP_DEBUGF(TCP_INPUT_DEBUG, ("tcp_input: notify kept packet\n"));
 279:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       TCP_EVENT_RECV(pcb, pcb->refused_data, ERR_OK, err);
 599              		.loc 1 279 0
 600 0472 7B69     		ldr	r3, [r7, #20]
 601 0474 D3F88430 		ldr	r3, [r3, #132]
 602 0478 002B     		cmp	r3, #0
 603 047a 0FD0     		beq	.L24
 604              		.loc 1 279 0 is_stmt 0 discriminator 1
 605 047c 7B69     		ldr	r3, [r7, #20]
 606 047e D3F88440 		ldr	r4, [r3, #132]
 607 0482 7B69     		ldr	r3, [r7, #20]
 608 0484 5A69     		ldr	r2, [r3, #20]
 609 0486 7B69     		ldr	r3, [r7, #20]
 610 0488 DB6F     		ldr	r3, [r3, #124]
 611 048a 1046     		mov	r0, r2
 612 048c 7969     		ldr	r1, [r7, #20]
 613 048e 1A46     		mov	r2, r3
 614 0490 4FF00003 		mov	r3, #0
 615 0494 A047     		blx	r4
 616 0496 0346     		mov	r3, r0
 617 0498 FB72     		strb	r3, [r7, #11]
 618 049a 0BE0     		b	.L25
 619              	.L24:
 620              		.loc 1 279 0 discriminator 2
 621 049c 7B69     		ldr	r3, [r7, #20]
 622 049e DB6F     		ldr	r3, [r3, #124]
 623 04a0 4FF00000 		mov	r0, #0
 624 04a4 7969     		ldr	r1, [r7, #20]
 625 04a6 1A46     		mov	r2, r3
 626 04a8 4FF00003 		mov	r3, #0
 627 04ac FFF7FEFF 		bl	tcp_recv_null
 628 04b0 0346     		mov	r3, r0
 629 04b2 FB72     		strb	r3, [r7, #11]
 630              	.L25:
 280:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       if (err == ERR_OK) {
 631              		.loc 1 280 0 is_stmt 1
 632 04b4 97F90B30 		ldrsb	r3, [r7, #11]
 633 04b8 002B     		cmp	r3, #0
 634 04ba 04D1     		bne	.L26
 281:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         pcb->refused_data = NULL;
 635              		.loc 1 281 0
 636 04bc 7B69     		ldr	r3, [r7, #20]
 637 04be 4FF00002 		mov	r2, #0
 638 04c2 DA67     		str	r2, [r3, #124]
 639 04c4 03E0     		b	.L23
 640              	.L26:
 282:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       } else {
 283:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         /* drop incoming packets, because pcb is "full" */
 284:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         LWIP_DEBUGF(TCP_INPUT_DEBUG, ("tcp_input: drop incoming packets, because pcb is \"full\"\n"
 285:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         TCP_STATS_INC(tcp.drop);
 286:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         snmp_inc_tcpinerrs();
 287:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         pbuf_free(p);
 641              		.loc 1 287 0
 642 04c6 7868     		ldr	r0, [r7, #4]
 643 04c8 FFF7FEFF 		bl	pbuf_free
 288:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         return;
 644              		.loc 1 288 0
 645 04cc 49E1     		b	.L1
 646              	.L23:
 289:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       }
 290:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     }
 291:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     tcp_input_pcb = pcb;
 647              		.loc 1 291 0
 648 04ce 40F20003 		movw	r3, #:lower16:tcp_input_pcb
 649 04d2 C0F20003 		movt	r3, #:upper16:tcp_input_pcb
 650 04d6 7A69     		ldr	r2, [r7, #20]
 651 04d8 1A60     		str	r2, [r3, #0]
 292:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     err = tcp_process(pcb);
 652              		.loc 1 292 0
 653 04da 7869     		ldr	r0, [r7, #20]
 654 04dc FFF7FEFF 		bl	tcp_process
 655 04e0 0346     		mov	r3, r0
 656 04e2 FB72     		strb	r3, [r7, #11]
 293:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     /* A return value of ERR_ABRT means that tcp_abort() was called
 294:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****        and that the pcb has been freed. If so, we don't do anything. */
 295:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     if (err != ERR_ABRT) {
 657              		.loc 1 295 0
 658 04e4 97F90B30 		ldrsb	r3, [r7, #11]
 659 04e8 13F1050F 		cmn	r3, #5
 660 04ec 00F0D780 		beq	.L27
 296:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       if (recv_flags & TF_RESET) {
 661              		.loc 1 296 0
 662 04f0 40F20003 		movw	r3, #:lower16:recv_flags
 663 04f4 C0F20003 		movt	r3, #:upper16:recv_flags
 664 04f8 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 665 04fa 03F00803 		and	r3, r3, #8
 666 04fe 002B     		cmp	r3, #0
 667 0500 18D0     		beq	.L28
 297:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         /* TF_RESET means that the connection was reset by the other
 298:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****            end. We then call the error callback to inform the
 299:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****            application that the connection is dead before we
 300:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****            deallocate the PCB. */
 301:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         TCP_EVENT_ERR(pcb->errf, pcb->callback_arg, ERR_RST);
 668              		.loc 1 301 0
 669 0502 7B69     		ldr	r3, [r7, #20]
 670 0504 D3F89030 		ldr	r3, [r3, #144]
 671 0508 002B     		cmp	r3, #0
 672 050a 08D0     		beq	.L29
 673              		.loc 1 301 0 is_stmt 0 discriminator 1
 674 050c 7B69     		ldr	r3, [r7, #20]
 675 050e D3F89030 		ldr	r3, [r3, #144]
 676 0512 7A69     		ldr	r2, [r7, #20]
 677 0514 5269     		ldr	r2, [r2, #20]
 678 0516 1046     		mov	r0, r2
 679 0518 6FF00501 		mvn	r1, #5
 680 051c 9847     		blx	r3
 681              	.L29:
 302:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         tcp_pcb_remove(&tcp_active_pcbs, pcb);
 682              		.loc 1 302 0 is_stmt 1
 683 051e 40F20000 		movw	r0, #:lower16:tcp_active_pcbs
 684 0522 C0F20000 		movt	r0, #:upper16:tcp_active_pcbs
 685 0526 7969     		ldr	r1, [r7, #20]
 686 0528 FFF7FEFF 		bl	tcp_pcb_remove
 303:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         memp_free(MEMP_TCP_PCB, pcb);
 687              		.loc 1 303 0
 688 052c 7869     		ldr	r0, [r7, #20]
 689 052e FFF7FEFF 		bl	mem_free
 690 0532 B4E0     		b	.L27
 691              	.L28:
 304:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       } else if (recv_flags & TF_CLOSED) {
 692              		.loc 1 304 0
 693 0534 40F20003 		movw	r3, #:lower16:recv_flags
 694 0538 C0F20003 		movt	r3, #:upper16:recv_flags
 695 053c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 696 053e 03F01003 		and	r3, r3, #16
 697 0542 002B     		cmp	r3, #0
 698 0544 0AD0     		beq	.L30
 305:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         /* The connection has been closed and we will deallocate the
 306:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****            PCB. */
 307:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         tcp_pcb_remove(&tcp_active_pcbs, pcb);
 699              		.loc 1 307 0
 700 0546 40F20000 		movw	r0, #:lower16:tcp_active_pcbs
 701 054a C0F20000 		movt	r0, #:upper16:tcp_active_pcbs
 702 054e 7969     		ldr	r1, [r7, #20]
 703 0550 FFF7FEFF 		bl	tcp_pcb_remove
 308:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         memp_free(MEMP_TCP_PCB, pcb);
 704              		.loc 1 308 0
 705 0554 7869     		ldr	r0, [r7, #20]
 706 0556 FFF7FEFF 		bl	mem_free
 707 055a A0E0     		b	.L27
 708              	.L30:
 309:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       } else {
 310:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         err = ERR_OK;
 709              		.loc 1 310 0
 710 055c 4FF00003 		mov	r3, #0
 711 0560 FB72     		strb	r3, [r7, #11]
 311:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         /* If the application has registered a "sent" function to be
 312:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****            called when new send buffer space is available, we call it
 313:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****            now. */
 314:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         if (pcb->acked > 0) {
 712              		.loc 1 314 0
 713 0562 7B69     		ldr	r3, [r7, #20]
 714 0564 B3F86C30 		ldrh	r3, [r3, #108]
 715 0568 002B     		cmp	r3, #0
 716 056a 15D0     		beq	.L31
 315:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           TCP_EVENT_SENT(pcb, pcb->acked, err);
 717              		.loc 1 315 0
 718 056c 7B69     		ldr	r3, [r7, #20]
 719 056e D3F88030 		ldr	r3, [r3, #128]
 720 0572 002B     		cmp	r3, #0
 721 0574 0DD0     		beq	.L32
 722              		.loc 1 315 0 is_stmt 0 discriminator 1
 723 0576 7B69     		ldr	r3, [r7, #20]
 724 0578 D3F88030 		ldr	r3, [r3, #128]
 725 057c 7A69     		ldr	r2, [r7, #20]
 726 057e 5169     		ldr	r1, [r2, #20]
 727 0580 7A69     		ldr	r2, [r7, #20]
 728 0582 B2F86C20 		ldrh	r2, [r2, #108]
 729 0586 0846     		mov	r0, r1
 730 0588 7969     		ldr	r1, [r7, #20]
 731 058a 9847     		blx	r3
 732 058c 0346     		mov	r3, r0
 733 058e FB72     		strb	r3, [r7, #11]
 734 0590 02E0     		b	.L31
 735              	.L32:
 736              		.loc 1 315 0 discriminator 2
 737 0592 4FF00003 		mov	r3, #0
 738 0596 FB72     		strb	r3, [r7, #11]
 739              	.L31:
 316:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         }
 317:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       
 318:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         if (recv_data != NULL) {
 740              		.loc 1 318 0 is_stmt 1
 741 0598 40F20003 		movw	r3, #:lower16:recv_data
 742 059c C0F20003 		movt	r3, #:upper16:recv_data
 743 05a0 1B68     		ldr	r3, [r3, #0]
 744 05a2 002B     		cmp	r3, #0
 745 05a4 49D0     		beq	.L33
 319:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           if(flags & TCP_PSH) {
 746              		.loc 1 319 0
 747 05a6 40F20003 		movw	r3, #:lower16:flags
 748 05aa C0F20003 		movt	r3, #:upper16:flags
 749 05ae 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 750 05b0 03F00803 		and	r3, r3, #8
 751 05b4 002B     		cmp	r3, #0
 752 05b6 0ED0     		beq	.L34
 320:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****             recv_data->flags |= PBUF_FLAG_PUSH;
 753              		.loc 1 320 0
 754 05b8 40F20003 		movw	r3, #:lower16:recv_data
 755 05bc C0F20003 		movt	r3, #:upper16:recv_data
 756 05c0 1A68     		ldr	r2, [r3, #0]
 757 05c2 40F20003 		movw	r3, #:lower16:recv_data
 758 05c6 C0F20003 		movt	r3, #:upper16:recv_data
 759 05ca 1B68     		ldr	r3, [r3, #0]
 760 05cc 5B7B     		ldrb	r3, [r3, #13]	@ zero_extendqisi2
 761 05ce 43F00103 		orr	r3, r3, #1
 762 05d2 DBB2     		uxtb	r3, r3
 763 05d4 5373     		strb	r3, [r2, #13]
 764              	.L34:
 321:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           }
 322:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
 323:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           /* Notify application that data has been received. */
 324:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           TCP_EVENT_RECV(pcb, recv_data, ERR_OK, err);
 765              		.loc 1 324 0
 766 05d6 7B69     		ldr	r3, [r7, #20]
 767 05d8 D3F88430 		ldr	r3, [r3, #132]
 768 05dc 002B     		cmp	r3, #0
 769 05de 12D0     		beq	.L35
 770              		.loc 1 324 0 is_stmt 0 discriminator 1
 771 05e0 7B69     		ldr	r3, [r7, #20]
 772 05e2 D3F88440 		ldr	r4, [r3, #132]
 773 05e6 7B69     		ldr	r3, [r7, #20]
 774 05e8 5A69     		ldr	r2, [r3, #20]
 775 05ea 40F20003 		movw	r3, #:lower16:recv_data
 776 05ee C0F20003 		movt	r3, #:upper16:recv_data
 777 05f2 1B68     		ldr	r3, [r3, #0]
 778 05f4 1046     		mov	r0, r2
 779 05f6 7969     		ldr	r1, [r7, #20]
 780 05f8 1A46     		mov	r2, r3
 781 05fa 4FF00003 		mov	r3, #0
 782 05fe A047     		blx	r4
 783 0600 0346     		mov	r3, r0
 784 0602 FB72     		strb	r3, [r7, #11]
 785 0604 0EE0     		b	.L36
 786              	.L35:
 787              		.loc 1 324 0 discriminator 2
 788 0606 40F20003 		movw	r3, #:lower16:recv_data
 789 060a C0F20003 		movt	r3, #:upper16:recv_data
 790 060e 1B68     		ldr	r3, [r3, #0]
 791 0610 4FF00000 		mov	r0, #0
 792 0614 7969     		ldr	r1, [r7, #20]
 793 0616 1A46     		mov	r2, r3
 794 0618 4FF00003 		mov	r3, #0
 795 061c FFF7FEFF 		bl	tcp_recv_null
 796 0620 0346     		mov	r3, r0
 797 0622 FB72     		strb	r3, [r7, #11]
 798              	.L36:
 325:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
 326:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           /* If the upper layer can't receive this data, store it */
 327:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           if (err != ERR_OK) {
 799              		.loc 1 327 0 is_stmt 1
 800 0624 97F90B30 		ldrsb	r3, [r7, #11]
 801 0628 002B     		cmp	r3, #0
 802 062a 06D0     		beq	.L33
 328:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****             pcb->refused_data = recv_data;
 803              		.loc 1 328 0
 804 062c 40F20003 		movw	r3, #:lower16:recv_data
 805 0630 C0F20003 		movt	r3, #:upper16:recv_data
 806 0634 1A68     		ldr	r2, [r3, #0]
 807 0636 7B69     		ldr	r3, [r7, #20]
 808 0638 DA67     		str	r2, [r3, #124]
 809              	.L33:
 329:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****             LWIP_DEBUGF(TCP_INPUT_DEBUG, ("tcp_input: keep incoming packet, because pcb is \"full\"
 330:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           }
 331:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         }
 332:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
 333:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         /* If a FIN segment was received, we call the callback
 334:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****            function with a NULL buffer to indicate EOF. */
 335:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         if (recv_flags & TF_GOT_FIN) {
 810              		.loc 1 335 0
 811 063a 40F20003 		movw	r3, #:lower16:recv_flags
 812 063e C0F20003 		movt	r3, #:upper16:recv_flags
 813 0642 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 814 0644 03F02003 		and	r3, r3, #32
 815 0648 002B     		cmp	r3, #0
 816 064a 1ED0     		beq	.L37
 336:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           TCP_EVENT_RECV(pcb, NULL, ERR_OK, err);
 817              		.loc 1 336 0
 818 064c 7B69     		ldr	r3, [r7, #20]
 819 064e D3F88430 		ldr	r3, [r3, #132]
 820 0652 002B     		cmp	r3, #0
 821 0654 0ED0     		beq	.L38
 822              		.loc 1 336 0 is_stmt 0 discriminator 1
 823 0656 7B69     		ldr	r3, [r7, #20]
 824 0658 D3F88440 		ldr	r4, [r3, #132]
 825 065c 7B69     		ldr	r3, [r7, #20]
 826 065e 5B69     		ldr	r3, [r3, #20]
 827 0660 1846     		mov	r0, r3
 828 0662 7969     		ldr	r1, [r7, #20]
 829 0664 4FF00002 		mov	r2, #0
 830 0668 4FF00003 		mov	r3, #0
 831 066c A047     		blx	r4
 832 066e 0346     		mov	r3, r0
 833 0670 FB72     		strb	r3, [r7, #11]
 834 0672 0AE0     		b	.L37
 835              	.L38:
 836              		.loc 1 336 0 discriminator 2
 837 0674 4FF00000 		mov	r0, #0
 838 0678 7969     		ldr	r1, [r7, #20]
 839 067a 4FF00002 		mov	r2, #0
 840 067e 4FF00003 		mov	r3, #0
 841 0682 FFF7FEFF 		bl	tcp_recv_null
 842 0686 0346     		mov	r3, r0
 843 0688 FB72     		strb	r3, [r7, #11]
 844              	.L37:
 337:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         }
 338:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
 339:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         tcp_input_pcb = NULL;
 845              		.loc 1 339 0 is_stmt 1
 846 068a 40F20003 		movw	r3, #:lower16:tcp_input_pcb
 847 068e C0F20003 		movt	r3, #:upper16:tcp_input_pcb
 848 0692 4FF00002 		mov	r2, #0
 849 0696 1A60     		str	r2, [r3, #0]
 340:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         /* Try to send something out. */
 341:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         tcp_output(pcb);
 850              		.loc 1 341 0
 851 0698 7869     		ldr	r0, [r7, #20]
 852 069a FFF7FEFF 		bl	tcp_output
 853              	.L27:
 342:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** #if TCP_INPUT_DEBUG
 343:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** #if TCP_DEBUG
 344:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         tcp_debug_print_state(pcb->state);
 345:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** #endif /* TCP_DEBUG */
 346:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** #endif /* TCP_INPUT_DEBUG */
 347:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       }
 348:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     }
 349:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     tcp_input_pcb = NULL;
 854              		.loc 1 349 0
 855 069e 40F20003 		movw	r3, #:lower16:tcp_input_pcb
 856 06a2 C0F20003 		movt	r3, #:upper16:tcp_input_pcb
 857 06a6 4FF00002 		mov	r2, #0
 858 06aa 1A60     		str	r2, [r3, #0]
 350:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
 351:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
 352:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     /* give up our reference to inseg.p */
 353:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     if (inseg.p != NULL)
 859              		.loc 1 353 0
 860 06ac 40F20003 		movw	r3, #:lower16:inseg
 861 06b0 C0F20003 		movt	r3, #:upper16:inseg
 862 06b4 5B68     		ldr	r3, [r3, #4]
 863 06b6 002B     		cmp	r3, #0
 864 06b8 53D0     		beq	.L1
 354:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     {
 355:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       pbuf_free(inseg.p);
 865              		.loc 1 355 0
 866 06ba 40F20003 		movw	r3, #:lower16:inseg
 867 06be C0F20003 		movt	r3, #:upper16:inseg
 868 06c2 5B68     		ldr	r3, [r3, #4]
 869 06c4 1846     		mov	r0, r3
 870 06c6 FFF7FEFF 		bl	pbuf_free
 356:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       inseg.p = NULL;
 871              		.loc 1 356 0
 872 06ca 40F20003 		movw	r3, #:lower16:inseg
 873 06ce C0F20003 		movt	r3, #:upper16:inseg
 874 06d2 4FF00002 		mov	r2, #0
 875 06d6 5A60     		str	r2, [r3, #4]
 876 06d8 43E0     		b	.L1
 877              	.L22:
 357:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     }
 358:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   } else {
 359:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
 360:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     /* If no matching PCB was found, send a TCP RST (reset) to the
 361:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****        sender. */
 362:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     LWIP_DEBUGF(TCP_RST_DEBUG, ("tcp_input: no PCB match found, resetting.\n"));
 363:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     if (!(TCPH_FLAGS(tcphdr) & TCP_RST)) {
 878              		.loc 1 363 0
 879 06da 40F20003 		movw	r3, #:lower16:tcphdr
 880 06de C0F20003 		movt	r3, #:upper16:tcphdr
 881 06e2 1B68     		ldr	r3, [r3, #0]
 882 06e4 9B89     		ldrh	r3, [r3, #12]	@ unaligned
 883 06e6 9BB2     		uxth	r3, r3
 884 06e8 1846     		mov	r0, r3
 885 06ea FFF7FEFF 		bl	ntohs
 886 06ee 0346     		mov	r3, r0
 887 06f0 03F00403 		and	r3, r3, #4
 888 06f4 002B     		cmp	r3, #0
 889 06f6 31D1     		bne	.L39
 364:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       TCP_STATS_INC(tcp.proterr);
 365:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       TCP_STATS_INC(tcp.drop);
 366:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       tcp_rst(ackno, seqno + tcplen,
 890              		.loc 1 366 0
 891 06f8 40F20003 		movw	r3, #:lower16:ackno
 892 06fc C0F20003 		movt	r3, #:upper16:ackno
 893 0700 1868     		ldr	r0, [r3, #0]
 894 0702 40F20003 		movw	r3, #:lower16:tcplen
 895 0706 C0F20003 		movt	r3, #:upper16:tcplen
 896 070a 1B88     		ldrh	r3, [r3, #0]
 897 070c 1A46     		mov	r2, r3
 898 070e 40F20003 		movw	r3, #:lower16:seqno
 899 0712 C0F20003 		movt	r3, #:upper16:seqno
 900 0716 1B68     		ldr	r3, [r3, #0]
 901 0718 D118     		adds	r1, r2, r3
 367:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         &(iphdr->dest), &(iphdr->src),
 902              		.loc 1 367 0
 903 071a 40F20003 		movw	r3, #:lower16:iphdr
 904 071e C0F20003 		movt	r3, #:upper16:iphdr
 905 0722 1B68     		ldr	r3, [r3, #0]
 366:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       tcp_rst(ackno, seqno + tcplen,
 906              		.loc 1 366 0
 907 0724 03F11002 		add	r2, r3, #16
 908              		.loc 1 367 0
 909 0728 40F20003 		movw	r3, #:lower16:iphdr
 910 072c C0F20003 		movt	r3, #:upper16:iphdr
 911 0730 1B68     		ldr	r3, [r3, #0]
 366:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       tcp_rst(ackno, seqno + tcplen,
 912              		.loc 1 366 0
 913 0732 03F10C04 		add	r4, r3, #12
 368:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         tcphdr->dest, tcphdr->src);
 914              		.loc 1 368 0
 915 0736 40F20003 		movw	r3, #:lower16:tcphdr
 916 073a C0F20003 		movt	r3, #:upper16:tcphdr
 917 073e 1B68     		ldr	r3, [r3, #0]
 366:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       tcp_rst(ackno, seqno + tcplen,
 918              		.loc 1 366 0
 919 0740 5B88     		ldrh	r3, [r3, #2]	@ unaligned
 920 0742 9DB2     		uxth	r5, r3
 921              		.loc 1 368 0
 922 0744 40F20003 		movw	r3, #:lower16:tcphdr
 923 0748 C0F20003 		movt	r3, #:upper16:tcphdr
 924 074c 1B68     		ldr	r3, [r3, #0]
 366:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       tcp_rst(ackno, seqno + tcplen,
 925              		.loc 1 366 0
 926 074e 1B88     		ldrh	r3, [r3, #0]	@ unaligned
 927 0750 9BB2     		uxth	r3, r3
 928 0752 0095     		str	r5, [sp, #0]
 929 0754 0193     		str	r3, [sp, #4]
 930 0756 2346     		mov	r3, r4
 931 0758 FFF7FEFF 		bl	tcp_rst
 932              	.L39:
 369:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     }
 370:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     pbuf_free(p);
 933              		.loc 1 370 0
 934 075c 7868     		ldr	r0, [r7, #4]
 935 075e FFF7FEFF 		bl	pbuf_free
 936              	.L1:
 371:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   }
 372:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
 373:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   LWIP_ASSERT("tcp_input: tcp_pcbs_sane()", tcp_pcbs_sane());
 374:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   PERF_STOP("tcp_input");
 375:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** }
 937              		.loc 1 375 0
 938 0762 07F11807 		add	r7, r7, #24
 939 0766 BD46     		mov	sp, r7
 940 0768 B0BD     		pop	{r4, r5, r7, pc}
 941              		.cfi_endproc
 942              	.LFE0:
 944 076a 00BF     		.section	.text.tcp_listen_input,"ax",%progbits
 945              		.align	2
 946              		.thumb
 947              		.thumb_func
 949              	tcp_listen_input:
 950              	.LFB1:
 376:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
 377:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** /**
 378:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  * Called by tcp_input() when a segment arrives for a listening
 379:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  * connection (from tcp_input()).
 380:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  *
 381:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  * @param pcb the tcp_pcb_listen for which a segment arrived
 382:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  * @return ERR_OK if the segment was processed
 383:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  *         another err_t on error
 384:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  *
 385:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  * @note the return value is not (yet?) used in tcp_input()
 386:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  * @note the segment which arrived is saved in global variables, therefore only the pcb
 387:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  *       involved is passed as a parameter to this function
 388:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  */
 389:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** static err_t
 390:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** tcp_listen_input(struct tcp_pcb_listen *pcb)
 391:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** {
 951              		.loc 1 391 0
 952              		.cfi_startproc
 953              		@ args = 0, pretend = 0, frame = 16
 954              		@ frame_needed = 1, uses_anonymous_args = 0
 955 0000 B0B5     		push	{r4, r5, r7, lr}
 956              	.LCFI3:
 957              		.cfi_def_cfa_offset 16
 958              		.cfi_offset 4, -16
 959              		.cfi_offset 5, -12
 960              		.cfi_offset 7, -8
 961              		.cfi_offset 14, -4
 962 0002 86B0     		sub	sp, sp, #24
 963              	.LCFI4:
 964              		.cfi_def_cfa_offset 40
 965 0004 02AF     		add	r7, sp, #8
 966              	.LCFI5:
 967              		.cfi_def_cfa 7, 32
 968 0006 7860     		str	r0, [r7, #4]
 392:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   struct tcp_pcb *npcb;
 393:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   err_t rc;
 394:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
 395:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   /* In the LISTEN state, we check for incoming SYN segments,
 396:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****      creates a new PCB, and responds with a SYN|ACK. */
 397:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   if (flags & TCP_ACK) {
 969              		.loc 1 397 0
 970 0008 40F20003 		movw	r3, #:lower16:flags
 971 000c C0F20003 		movt	r3, #:upper16:flags
 972 0010 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 973 0012 03F01003 		and	r3, r3, #16
 974 0016 002B     		cmp	r3, #0
 975 0018 34D0     		beq	.L42
 398:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     /* For incoming segments with the ACK flag set, respond with a
 399:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****        RST. */
 400:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     LWIP_DEBUGF(TCP_RST_DEBUG, ("tcp_listen_input: ACK in LISTEN, sending reset\n"));
 401:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     tcp_rst(ackno + 1, seqno + tcplen,
 976              		.loc 1 401 0
 977 001a 40F20003 		movw	r3, #:lower16:ackno
 978 001e C0F20003 		movt	r3, #:upper16:ackno
 979 0022 1B68     		ldr	r3, [r3, #0]
 980 0024 03F10100 		add	r0, r3, #1
 981 0028 40F20003 		movw	r3, #:lower16:tcplen
 982 002c C0F20003 		movt	r3, #:upper16:tcplen
 983 0030 1B88     		ldrh	r3, [r3, #0]
 984 0032 1A46     		mov	r2, r3
 985 0034 40F20003 		movw	r3, #:lower16:seqno
 986 0038 C0F20003 		movt	r3, #:upper16:seqno
 987 003c 1B68     		ldr	r3, [r3, #0]
 988 003e D118     		adds	r1, r2, r3
 402:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       &(iphdr->dest), &(iphdr->src),
 989              		.loc 1 402 0
 990 0040 40F20003 		movw	r3, #:lower16:iphdr
 991 0044 C0F20003 		movt	r3, #:upper16:iphdr
 992 0048 1B68     		ldr	r3, [r3, #0]
 401:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     tcp_rst(ackno + 1, seqno + tcplen,
 993              		.loc 1 401 0
 994 004a 03F11002 		add	r2, r3, #16
 995              		.loc 1 402 0
 996 004e 40F20003 		movw	r3, #:lower16:iphdr
 997 0052 C0F20003 		movt	r3, #:upper16:iphdr
 998 0056 1B68     		ldr	r3, [r3, #0]
 401:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     tcp_rst(ackno + 1, seqno + tcplen,
 999              		.loc 1 401 0
 1000 0058 03F10C04 		add	r4, r3, #12
 403:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       tcphdr->dest, tcphdr->src);
 1001              		.loc 1 403 0
 1002 005c 40F20003 		movw	r3, #:lower16:tcphdr
 1003 0060 C0F20003 		movt	r3, #:upper16:tcphdr
 1004 0064 1B68     		ldr	r3, [r3, #0]
 401:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     tcp_rst(ackno + 1, seqno + tcplen,
 1005              		.loc 1 401 0
 1006 0066 5B88     		ldrh	r3, [r3, #2]	@ unaligned
 1007 0068 9DB2     		uxth	r5, r3
 1008              		.loc 1 403 0
 1009 006a 40F20003 		movw	r3, #:lower16:tcphdr
 1010 006e C0F20003 		movt	r3, #:upper16:tcphdr
 1011 0072 1B68     		ldr	r3, [r3, #0]
 401:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     tcp_rst(ackno + 1, seqno + tcplen,
 1012              		.loc 1 401 0
 1013 0074 1B88     		ldrh	r3, [r3, #0]	@ unaligned
 1014 0076 9BB2     		uxth	r3, r3
 1015 0078 0095     		str	r5, [sp, #0]
 1016 007a 0193     		str	r3, [sp, #4]
 1017 007c 2346     		mov	r3, r4
 1018 007e FFF7FEFF 		bl	tcp_rst
 1019 0082 C2E0     		b	.L43
 1020              	.L42:
 404:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   } else if (flags & TCP_SYN) {
 1021              		.loc 1 404 0
 1022 0084 40F20003 		movw	r3, #:lower16:flags
 1023 0088 C0F20003 		movt	r3, #:upper16:flags
 1024 008c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1025 008e 03F00203 		and	r3, r3, #2
 1026 0092 002B     		cmp	r3, #0
 1027 0094 00F0B980 		beq	.L43
 405:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     LWIP_DEBUGF(TCP_DEBUG, ("TCP connection request %"U16_F" -> %"U16_F".\n", tcphdr->src, tcphdr->
 406:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** #if TCP_LISTEN_BACKLOG
 407:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     if (pcb->accepts_pending >= pcb->backlog) {
 408:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       LWIP_DEBUGF(TCP_DEBUG, ("tcp_listen_input: listen backlog exceeded for port %"U16_F"\n", tcph
 409:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       return ERR_ABRT;
 410:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     }
 411:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** #endif /* TCP_LISTEN_BACKLOG */
 412:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     npcb = tcp_alloc(pcb->prio);
 1028              		.loc 1 412 0
 1029 0098 7B68     		ldr	r3, [r7, #4]
 1030 009a 5B7C     		ldrb	r3, [r3, #17]	@ zero_extendqisi2
 1031 009c 1846     		mov	r0, r3
 1032 009e FFF7FEFF 		bl	tcp_alloc
 1033 00a2 F860     		str	r0, [r7, #12]
 413:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     /* If a new PCB could not be created (probably due to lack of memory),
 414:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****        we don't do anything, but rely on the sender will retransmit the
 415:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****        SYN at a time when we have more memory available. */
 416:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     if (npcb == NULL) {
 1034              		.loc 1 416 0
 1035 00a4 FB68     		ldr	r3, [r7, #12]
 1036 00a6 002B     		cmp	r3, #0
 1037 00a8 02D1     		bne	.L44
 417:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       LWIP_DEBUGF(TCP_DEBUG, ("tcp_listen_input: could not allocate PCB\n"));
 418:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       TCP_STATS_INC(tcp.memerr);
 419:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       return ERR_MEM;
 1038              		.loc 1 419 0
 1039 00aa 4FF0FF03 		mov	r3, #255
 1040 00ae AEE0     		b	.L45
 1041              	.L44:
 420:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     }
 421:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** #if TCP_LISTEN_BACKLOG
 422:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     pcb->accepts_pending++;
 423:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** #endif /* TCP_LISTEN_BACKLOG */
 424:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     /* Set up the new PCB. */
 425:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     ip_addr_set(&(npcb->local_ip), &(iphdr->dest));
 1042              		.loc 1 425 0
 1043 00b0 40F20003 		movw	r3, #:lower16:iphdr
 1044 00b4 C0F20003 		movt	r3, #:upper16:iphdr
 1045 00b8 1B68     		ldr	r3, [r3, #0]
 1046 00ba 03F11003 		add	r3, r3, #16
 1047 00be 002B     		cmp	r3, #0
 1048 00c0 06D0     		beq	.L46
 1049              		.loc 1 425 0 is_stmt 0 discriminator 1
 1050 00c2 40F20003 		movw	r3, #:lower16:iphdr
 1051 00c6 C0F20003 		movt	r3, #:upper16:iphdr
 1052 00ca 1B68     		ldr	r3, [r3, #0]
 1053 00cc 1B69     		ldr	r3, [r3, #16]	@ unaligned
 1054 00ce 01E0     		b	.L47
 1055              	.L46:
 1056              		.loc 1 425 0 discriminator 2
 1057 00d0 4FF00003 		mov	r3, #0
 1058              	.L47:
 1059              		.loc 1 425 0 discriminator 3
 1060 00d4 FA68     		ldr	r2, [r7, #12]
 1061 00d6 1360     		str	r3, [r2, #0]
 426:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     npcb->local_port = pcb->local_port;
 1062              		.loc 1 426 0 is_stmt 1 discriminator 3
 1063 00d8 7B68     		ldr	r3, [r7, #4]
 1064 00da 1A8B     		ldrh	r2, [r3, #24]
 1065 00dc FB68     		ldr	r3, [r7, #12]
 1066 00de 1A83     		strh	r2, [r3, #24]	@ movhi
 427:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     ip_addr_set(&(npcb->remote_ip), &(iphdr->src));
 1067              		.loc 1 427 0 discriminator 3
 1068 00e0 40F20003 		movw	r3, #:lower16:iphdr
 1069 00e4 C0F20003 		movt	r3, #:upper16:iphdr
 1070 00e8 1B68     		ldr	r3, [r3, #0]
 1071 00ea 03F10C03 		add	r3, r3, #12
 1072 00ee 002B     		cmp	r3, #0
 1073 00f0 06D0     		beq	.L48
 1074              		.loc 1 427 0 is_stmt 0 discriminator 1
 1075 00f2 40F20003 		movw	r3, #:lower16:iphdr
 1076 00f6 C0F20003 		movt	r3, #:upper16:iphdr
 1077 00fa 1B68     		ldr	r3, [r3, #0]
 1078 00fc DB68     		ldr	r3, [r3, #12]	@ unaligned
 1079 00fe 01E0     		b	.L49
 1080              	.L48:
 1081              		.loc 1 427 0 discriminator 2
 1082 0100 4FF00003 		mov	r3, #0
 1083              	.L49:
 1084              		.loc 1 427 0 discriminator 3
 1085 0104 FA68     		ldr	r2, [r7, #12]
 1086 0106 5360     		str	r3, [r2, #4]
 428:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     npcb->remote_port = tcphdr->src;
 1087              		.loc 1 428 0 is_stmt 1 discriminator 3
 1088 0108 40F20003 		movw	r3, #:lower16:tcphdr
 1089 010c C0F20003 		movt	r3, #:upper16:tcphdr
 1090 0110 1B68     		ldr	r3, [r3, #0]
 1091 0112 1B88     		ldrh	r3, [r3, #0]	@ unaligned
 1092 0114 9AB2     		uxth	r2, r3
 1093 0116 FB68     		ldr	r3, [r7, #12]
 1094 0118 1A84     		strh	r2, [r3, #32]	@ movhi
 429:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     npcb->state = SYN_RCVD;
 1095              		.loc 1 429 0 discriminator 3
 1096 011a FB68     		ldr	r3, [r7, #12]
 1097 011c 4FF00302 		mov	r2, #3
 1098 0120 1A74     		strb	r2, [r3, #16]
 430:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     npcb->rcv_nxt = seqno + 1;
 1099              		.loc 1 430 0 discriminator 3
 1100 0122 40F20003 		movw	r3, #:lower16:seqno
 1101 0126 C0F20003 		movt	r3, #:upper16:seqno
 1102 012a 1B68     		ldr	r3, [r3, #0]
 1103 012c 03F10102 		add	r2, r3, #1
 1104 0130 FB68     		ldr	r3, [r7, #12]
 1105 0132 5A62     		str	r2, [r3, #36]
 431:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     npcb->rcv_ann_right_edge = npcb->rcv_nxt;
 1106              		.loc 1 431 0 discriminator 3
 1107 0134 FB68     		ldr	r3, [r7, #12]
 1108 0136 5A6A     		ldr	r2, [r3, #36]
 1109 0138 FB68     		ldr	r3, [r7, #12]
 1110 013a DA62     		str	r2, [r3, #44]
 432:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     npcb->snd_wnd = tcphdr->wnd;
 1111              		.loc 1 432 0 discriminator 3
 1112 013c 40F20003 		movw	r3, #:lower16:tcphdr
 1113 0140 C0F20003 		movt	r3, #:upper16:tcphdr
 1114 0144 1B68     		ldr	r3, [r3, #0]
 1115 0146 DB89     		ldrh	r3, [r3, #14]	@ unaligned
 1116 0148 9AB2     		uxth	r2, r3
 1117 014a FB68     		ldr	r3, [r7, #12]
 1118 014c A3F85C20 		strh	r2, [r3, #92]	@ movhi
 433:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     npcb->ssthresh = npcb->snd_wnd;
 1119              		.loc 1 433 0 discriminator 3
 1120 0150 FB68     		ldr	r3, [r7, #12]
 1121 0152 B3F85C20 		ldrh	r2, [r3, #92]
 1122 0156 FB68     		ldr	r3, [r7, #12]
 1123 0158 A3F85420 		strh	r2, [r3, #84]	@ movhi
 434:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     npcb->snd_wl1 = seqno - 1;/* initialise to seqno-1 to force window update */
 1124              		.loc 1 434 0 discriminator 3
 1125 015c 40F20003 		movw	r3, #:lower16:seqno
 1126 0160 C0F20003 		movt	r3, #:upper16:seqno
 1127 0164 1B68     		ldr	r3, [r3, #0]
 1128 0166 03F1FF32 		add	r2, r3, #-1
 1129 016a FB68     		ldr	r3, [r7, #12]
 1130 016c 1A66     		str	r2, [r3, #96]
 435:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     npcb->callback_arg = pcb->callback_arg;
 1131              		.loc 1 435 0 discriminator 3
 1132 016e 7B68     		ldr	r3, [r7, #4]
 1133 0170 5A69     		ldr	r2, [r3, #20]
 1134 0172 FB68     		ldr	r3, [r7, #12]
 1135 0174 5A61     		str	r2, [r3, #20]
 436:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** #if LWIP_CALLBACK_API
 437:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     npcb->accept = pcb->accept;
 1136              		.loc 1 437 0 discriminator 3
 1137 0176 7B68     		ldr	r3, [r7, #4]
 1138 0178 DA69     		ldr	r2, [r3, #28]
 1139 017a FB68     		ldr	r3, [r7, #12]
 1140 017c DA61     		str	r2, [r3, #28]
 438:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** #endif /* LWIP_CALLBACK_API */
 439:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     /* inherit socket options */
 440:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     npcb->so_options = pcb->so_options & (SOF_DEBUG|SOF_DONTROUTE|SOF_KEEPALIVE|SOF_OOBINLINE|SOF_L
 1141              		.loc 1 440 0 discriminator 3
 1142 017e 7B68     		ldr	r3, [r7, #4]
 1143 0180 1A89     		ldrh	r2, [r3, #8]
 1144 0182 40F29913 		movw	r3, #409
 1145 0186 1340     		ands	r3, r3, r2
 1146 0188 9AB2     		uxth	r2, r3
 1147 018a FB68     		ldr	r3, [r7, #12]
 1148 018c 1A81     		strh	r2, [r3, #8]	@ movhi
 441:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     /* Register the new PCB so that we can begin receiving segments
 442:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****        for it. */
 443:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     TCP_REG(&tcp_active_pcbs, npcb);
 1149              		.loc 1 443 0 discriminator 3
 1150 018e 40F20003 		movw	r3, #:lower16:tcp_active_pcbs
 1151 0192 C0F20003 		movt	r3, #:upper16:tcp_active_pcbs
 1152 0196 1A68     		ldr	r2, [r3, #0]
 1153 0198 FB68     		ldr	r3, [r7, #12]
 1154 019a DA60     		str	r2, [r3, #12]
 1155 019c 40F20003 		movw	r3, #:lower16:tcp_active_pcbs
 1156 01a0 C0F20003 		movt	r3, #:upper16:tcp_active_pcbs
 1157 01a4 FA68     		ldr	r2, [r7, #12]
 1158 01a6 1A60     		str	r2, [r3, #0]
 444:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
 445:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     /* Parse any options in the SYN. */
 446:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     tcp_parseopt(npcb);
 1159              		.loc 1 446 0 discriminator 3
 1160 01a8 F868     		ldr	r0, [r7, #12]
 1161 01aa FFF7FEFF 		bl	tcp_parseopt
 447:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** #if TCP_CALCULATE_EFF_SEND_MSS
 448:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     npcb->mss = tcp_eff_send_mss(npcb->mss, &(npcb->remote_ip));
 1162              		.loc 1 448 0 discriminator 3
 1163 01ae FB68     		ldr	r3, [r7, #12]
 1164 01b0 1A8F     		ldrh	r2, [r3, #56]
 1165 01b2 FB68     		ldr	r3, [r7, #12]
 1166 01b4 03F10403 		add	r3, r3, #4
 1167 01b8 1046     		mov	r0, r2
 1168 01ba 1946     		mov	r1, r3
 1169 01bc FFF7FEFF 		bl	tcp_eff_send_mss
 1170 01c0 0346     		mov	r3, r0
 1171 01c2 1A46     		mov	r2, r3
 1172 01c4 FB68     		ldr	r3, [r7, #12]
 1173 01c6 1A87     		strh	r2, [r3, #56]	@ movhi
 449:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** #endif /* TCP_CALCULATE_EFF_SEND_MSS */
 450:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
 451:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     snmp_inc_tcppassiveopens();
 452:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
 453:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     /* Send a SYN|ACK together with the MSS option. */
 454:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     rc = tcp_enqueue(npcb, NULL, 0, TCP_SYN | TCP_ACK, 0, TF_SEG_OPTS_MSS
 1174              		.loc 1 454 0 discriminator 3
 1175 01c8 4FF00003 		mov	r3, #0
 1176 01cc 0093     		str	r3, [sp, #0]
 1177 01ce 4FF00103 		mov	r3, #1
 1178 01d2 0193     		str	r3, [sp, #4]
 1179 01d4 F868     		ldr	r0, [r7, #12]
 1180 01d6 4FF00001 		mov	r1, #0
 1181 01da 4FF00002 		mov	r2, #0
 1182 01de 4FF01203 		mov	r3, #18
 1183 01e2 FFF7FEFF 		bl	tcp_enqueue
 1184 01e6 0346     		mov	r3, r0
 1185 01e8 FB72     		strb	r3, [r7, #11]
 455:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** #if LWIP_TCP_TIMESTAMPS
 456:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       /* and maybe include the TIMESTAMP option */
 457:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****      | (npcb->flags & TF_TIMESTAMP ? TF_SEG_OPTS_TS : 0)
 458:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** #endif
 459:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       );
 460:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     if (rc != ERR_OK) {
 1186              		.loc 1 460 0 discriminator 3
 1187 01ea 97F90B30 		ldrsb	r3, [r7, #11]
 1188 01ee 002B     		cmp	r3, #0
 1189 01f0 06D0     		beq	.L50
 461:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       tcp_abandon(npcb, 0);
 1190              		.loc 1 461 0
 1191 01f2 F868     		ldr	r0, [r7, #12]
 1192 01f4 4FF00001 		mov	r1, #0
 1193 01f8 FFF7FEFF 		bl	tcp_abandon
 462:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       return rc;
 1194              		.loc 1 462 0
 1195 01fc FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1196 01fe 06E0     		b	.L45
 1197              	.L50:
 463:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     }
 464:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     return tcp_output(npcb);
 1198              		.loc 1 464 0
 1199 0200 F868     		ldr	r0, [r7, #12]
 1200 0202 FFF7FEFF 		bl	tcp_output
 1201 0206 0346     		mov	r3, r0
 1202 0208 01E0     		b	.L45
 1203              	.L43:
 465:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   }
 466:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   return ERR_OK;
 1204              		.loc 1 466 0
 1205 020a 4FF00003 		mov	r3, #0
 1206              	.L45:
 1207 020e 5BB2     		sxtb	r3, r3
 467:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** }
 1208              		.loc 1 467 0
 1209 0210 1846     		mov	r0, r3
 1210 0212 07F11007 		add	r7, r7, #16
 1211 0216 BD46     		mov	sp, r7
 1212 0218 B0BD     		pop	{r4, r5, r7, pc}
 1213              		.cfi_endproc
 1214              	.LFE1:
 1216 021a 00BF     		.section	.text.tcp_timewait_input,"ax",%progbits
 1217              		.align	2
 1218              		.thumb
 1219              		.thumb_func
 1221              	tcp_timewait_input:
 1222              	.LFB2:
 468:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
 469:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** /**
 470:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  * Called by tcp_input() when a segment arrives for a connection in
 471:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  * TIME_WAIT.
 472:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  *
 473:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  * @param pcb the tcp_pcb for which a segment arrived
 474:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  *
 475:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  * @note the segment which arrived is saved in global variables, therefore only the pcb
 476:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  *       involved is passed as a parameter to this function
 477:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  */
 478:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** static err_t
 479:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** tcp_timewait_input(struct tcp_pcb *pcb)
 480:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** {
 1223              		.loc 1 480 0
 1224              		.cfi_startproc
 1225              		@ args = 0, pretend = 0, frame = 8
 1226              		@ frame_needed = 1, uses_anonymous_args = 0
 1227 0000 B0B5     		push	{r4, r5, r7, lr}
 1228              	.LCFI6:
 1229              		.cfi_def_cfa_offset 16
 1230              		.cfi_offset 4, -16
 1231              		.cfi_offset 5, -12
 1232              		.cfi_offset 7, -8
 1233              		.cfi_offset 14, -4
 1234 0002 84B0     		sub	sp, sp, #16
 1235              	.LCFI7:
 1236              		.cfi_def_cfa_offset 32
 1237 0004 02AF     		add	r7, sp, #8
 1238              	.LCFI8:
 1239              		.cfi_def_cfa 7, 24
 1240 0006 7860     		str	r0, [r7, #4]
 481:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   /* RFC 1337: in TIME_WAIT, ignore RST and ACK FINs + any 'acceptable' segments */
 482:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   /* RFC 793 3.9 Event Processing - Segment Arrives:
 483:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****    * - first check sequence number - we skip that one in TIME_WAIT (always
 484:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****    *   acceptable since we only send ACKs)
 485:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****    * - second check the RST bit (... return) */
 486:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   if (flags & TCP_RST)  {
 1241              		.loc 1 486 0
 1242 0008 40F20003 		movw	r3, #:lower16:flags
 1243 000c C0F20003 		movt	r3, #:upper16:flags
 1244 0010 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1245 0012 03F00403 		and	r3, r3, #4
 1246 0016 002B     		cmp	r3, #0
 1247 0018 02D0     		beq	.L52
 487:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     return ERR_OK;
 1248              		.loc 1 487 0
 1249 001a 4FF00003 		mov	r3, #0
 1250 001e 7BE0     		b	.L53
 1251              	.L52:
 488:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   }
 489:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   /* - fourth, check the SYN bit, */
 490:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   if (flags & TCP_SYN) {
 1252              		.loc 1 490 0
 1253 0020 40F20003 		movw	r3, #:lower16:flags
 1254 0024 C0F20003 		movt	r3, #:upper16:flags
 1255 0028 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1256 002a 03F00203 		and	r3, r3, #2
 1257 002e 002B     		cmp	r3, #0
 1258 0030 4BD0     		beq	.L54
 491:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     /* If an incoming segment is not acceptable, an acknowledgment
 492:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****        should be sent in reply */
 493:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     if (TCP_SEQ_BETWEEN(seqno, pcb->rcv_nxt, pcb->rcv_nxt+pcb->rcv_wnd)) {
 1259              		.loc 1 493 0
 1260 0032 40F20003 		movw	r3, #:lower16:seqno
 1261 0036 C0F20003 		movt	r3, #:upper16:seqno
 1262 003a 1A68     		ldr	r2, [r3, #0]
 1263 003c 7B68     		ldr	r3, [r7, #4]
 1264 003e 5B6A     		ldr	r3, [r3, #36]
 1265 0040 D31A     		subs	r3, r2, r3
 1266 0042 002B     		cmp	r3, #0
 1267 0044 51DB     		blt	.L55
 1268              		.loc 1 493 0 is_stmt 0 discriminator 1
 1269 0046 40F20003 		movw	r3, #:lower16:seqno
 1270 004a C0F20003 		movt	r3, #:upper16:seqno
 1271 004e 1A68     		ldr	r2, [r3, #0]
 1272 0050 7B68     		ldr	r3, [r7, #4]
 1273 0052 596A     		ldr	r1, [r3, #36]
 1274 0054 7B68     		ldr	r3, [r7, #4]
 1275 0056 1B8D     		ldrh	r3, [r3, #40]
 1276 0058 CB18     		adds	r3, r1, r3
 1277 005a D31A     		subs	r3, r2, r3
 1278 005c 002B     		cmp	r3, #0
 1279 005e 44DC     		bgt	.L55
 494:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       /* If the SYN is in the window it is an error, send a reset */
 495:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       tcp_rst(ackno, seqno + tcplen, &(iphdr->dest), &(iphdr->src),
 1280              		.loc 1 495 0 is_stmt 1
 1281 0060 40F20003 		movw	r3, #:lower16:ackno
 1282 0064 C0F20003 		movt	r3, #:upper16:ackno
 1283 0068 1868     		ldr	r0, [r3, #0]
 1284 006a 40F20003 		movw	r3, #:lower16:tcplen
 1285 006e C0F20003 		movt	r3, #:upper16:tcplen
 1286 0072 1B88     		ldrh	r3, [r3, #0]
 1287 0074 1A46     		mov	r2, r3
 1288 0076 40F20003 		movw	r3, #:lower16:seqno
 1289 007a C0F20003 		movt	r3, #:upper16:seqno
 1290 007e 1B68     		ldr	r3, [r3, #0]
 1291 0080 D118     		adds	r1, r2, r3
 1292 0082 40F20003 		movw	r3, #:lower16:iphdr
 1293 0086 C0F20003 		movt	r3, #:upper16:iphdr
 1294 008a 1B68     		ldr	r3, [r3, #0]
 1295 008c 03F11002 		add	r2, r3, #16
 1296 0090 40F20003 		movw	r3, #:lower16:iphdr
 1297 0094 C0F20003 		movt	r3, #:upper16:iphdr
 1298 0098 1B68     		ldr	r3, [r3, #0]
 1299 009a 03F10C04 		add	r4, r3, #12
 496:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         tcphdr->dest, tcphdr->src);
 1300              		.loc 1 496 0
 1301 009e 40F20003 		movw	r3, #:lower16:tcphdr
 1302 00a2 C0F20003 		movt	r3, #:upper16:tcphdr
 1303 00a6 1B68     		ldr	r3, [r3, #0]
 495:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       tcp_rst(ackno, seqno + tcplen, &(iphdr->dest), &(iphdr->src),
 1304              		.loc 1 495 0
 1305 00a8 5B88     		ldrh	r3, [r3, #2]	@ unaligned
 1306 00aa 9DB2     		uxth	r5, r3
 1307              		.loc 1 496 0
 1308 00ac 40F20003 		movw	r3, #:lower16:tcphdr
 1309 00b0 C0F20003 		movt	r3, #:upper16:tcphdr
 1310 00b4 1B68     		ldr	r3, [r3, #0]
 495:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       tcp_rst(ackno, seqno + tcplen, &(iphdr->dest), &(iphdr->src),
 1311              		.loc 1 495 0
 1312 00b6 1B88     		ldrh	r3, [r3, #0]	@ unaligned
 1313 00b8 9BB2     		uxth	r3, r3
 1314 00ba 0095     		str	r5, [sp, #0]
 1315 00bc 0193     		str	r3, [sp, #4]
 1316 00be 2346     		mov	r3, r4
 1317 00c0 FFF7FEFF 		bl	tcp_rst
 497:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       return ERR_OK;
 1318              		.loc 1 497 0
 1319 00c4 4FF00003 		mov	r3, #0
 1320 00c8 26E0     		b	.L53
 1321              	.L54:
 498:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     }
 499:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   } else if (flags & TCP_FIN) {
 1322              		.loc 1 499 0
 1323 00ca 40F20003 		movw	r3, #:lower16:flags
 1324 00ce C0F20003 		movt	r3, #:upper16:flags
 1325 00d2 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1326 00d4 03F00103 		and	r3, r3, #1
 1327 00d8 002B     		cmp	r3, #0
 1328 00da 06D0     		beq	.L55
 500:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     /* - eighth, check the FIN bit: Remain in the TIME-WAIT state.
 501:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****          Restart the 2 MSL time-wait timeout.*/
 502:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     pcb->tmr = tcp_ticks;
 1329              		.loc 1 502 0
 1330 00dc 40F20003 		movw	r3, #:lower16:tcp_ticks
 1331 00e0 C0F20003 		movt	r3, #:upper16:tcp_ticks
 1332 00e4 1A68     		ldr	r2, [r3, #0]
 1333 00e6 7B68     		ldr	r3, [r7, #4]
 1334 00e8 1A63     		str	r2, [r3, #48]
 1335              	.L55:
 503:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   }
 504:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
 505:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   if ((tcplen > 0))  {
 1336              		.loc 1 505 0
 1337 00ea 40F20003 		movw	r3, #:lower16:tcplen
 1338 00ee C0F20003 		movt	r3, #:upper16:tcplen
 1339 00f2 1B88     		ldrh	r3, [r3, #0]
 1340 00f4 002B     		cmp	r3, #0
 1341 00f6 0DD0     		beq	.L56
 506:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     /* Acknowledge data, FIN or out-of-window SYN */
 507:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     pcb->flags |= TF_ACK_NOW;
 1342              		.loc 1 507 0
 1343 00f8 7B68     		ldr	r3, [r7, #4]
 1344 00fa 93F82230 		ldrb	r3, [r3, #34]	@ zero_extendqisi2
 1345 00fe 43F00203 		orr	r3, r3, #2
 1346 0102 DAB2     		uxtb	r2, r3
 1347 0104 7B68     		ldr	r3, [r7, #4]
 1348 0106 83F82220 		strb	r2, [r3, #34]
 508:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     return tcp_output(pcb);
 1349              		.loc 1 508 0
 1350 010a 7868     		ldr	r0, [r7, #4]
 1351 010c FFF7FEFF 		bl	tcp_output
 1352 0110 0346     		mov	r3, r0
 1353 0112 01E0     		b	.L53
 1354              	.L56:
 509:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   }
 510:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   return ERR_OK;
 1355              		.loc 1 510 0
 1356 0114 4FF00003 		mov	r3, #0
 1357              	.L53:
 1358 0118 5BB2     		sxtb	r3, r3
 511:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** }
 1359              		.loc 1 511 0
 1360 011a 1846     		mov	r0, r3
 1361 011c 07F10807 		add	r7, r7, #8
 1362 0120 BD46     		mov	sp, r7
 1363 0122 B0BD     		pop	{r4, r5, r7, pc}
 1364              		.cfi_endproc
 1365              	.LFE2:
 1367              		.section	.text.tcp_process,"ax",%progbits
 1368              		.align	2
 1369              		.thumb
 1370              		.thumb_func
 1372              	tcp_process:
 1373              	.LFB3:
 512:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
 513:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** /**
 514:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  * Implements the TCP state machine. Called by tcp_input. In some
 515:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  * states tcp_receive() is called to receive data. The tcp_seg
 516:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  * argument will be freed by the caller (tcp_input()) unless the
 517:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  * recv_data pointer in the pcb is set.
 518:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  *
 519:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  * @param pcb the tcp_pcb for which a segment arrived
 520:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  *
 521:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  * @note the segment which arrived is saved in global variables, therefore only the pcb
 522:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  *       involved is passed as a parameter to this function
 523:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  */
 524:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** static err_t
 525:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** tcp_process(struct tcp_pcb *pcb)
 526:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** {
 1374              		.loc 1 526 0
 1375              		.cfi_startproc
 1376              		@ args = 0, pretend = 0, frame = 24
 1377              		@ frame_needed = 1, uses_anonymous_args = 0
 1378 0000 B0B5     		push	{r4, r5, r7, lr}
 1379              	.LCFI9:
 1380              		.cfi_def_cfa_offset 16
 1381              		.cfi_offset 4, -16
 1382              		.cfi_offset 5, -12
 1383              		.cfi_offset 7, -8
 1384              		.cfi_offset 14, -4
 1385 0002 88B0     		sub	sp, sp, #32
 1386              	.LCFI10:
 1387              		.cfi_def_cfa_offset 48
 1388 0004 02AF     		add	r7, sp, #8
 1389              	.LCFI11:
 1390              		.cfi_def_cfa 7, 40
 1391 0006 7860     		str	r0, [r7, #4]
 527:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   struct tcp_seg *rseg;
 528:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   u8_t acceptable = 0;
 1392              		.loc 1 528 0
 1393 0008 4FF00003 		mov	r3, #0
 1394 000c FB75     		strb	r3, [r7, #23]
 529:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   err_t err;
 530:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
 531:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   err = ERR_OK;
 1395              		.loc 1 531 0
 1396 000e 4FF00003 		mov	r3, #0
 1397 0012 BB75     		strb	r3, [r7, #22]
 532:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
 533:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   /* Process incoming RST segments. */
 534:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   if (flags & TCP_RST) {
 1398              		.loc 1 534 0
 1399 0014 40F20003 		movw	r3, #:lower16:flags
 1400 0018 C0F20003 		movt	r3, #:upper16:flags
 1401 001c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1402 001e 03F00403 		and	r3, r3, #4
 1403 0022 002B     		cmp	r3, #0
 1404 0024 4BD0     		beq	.L58
 535:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     /* First, determine if the reset is acceptable. */
 536:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     if (pcb->state == SYN_SENT) {
 1405              		.loc 1 536 0
 1406 0026 7B68     		ldr	r3, [r7, #4]
 1407 0028 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 1408 002a 022B     		cmp	r3, #2
 1409 002c 0CD1     		bne	.L59
 537:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       if (ackno == pcb->snd_nxt) {
 1410              		.loc 1 537 0
 1411 002e 7B68     		ldr	r3, [r7, #4]
 1412 0030 9A6D     		ldr	r2, [r3, #88]
 1413 0032 40F20003 		movw	r3, #:lower16:ackno
 1414 0036 C0F20003 		movt	r3, #:upper16:ackno
 1415 003a 1B68     		ldr	r3, [r3, #0]
 1416 003c 9A42     		cmp	r2, r3
 1417 003e 1DD1     		bne	.L60
 538:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         acceptable = 1;
 1418              		.loc 1 538 0
 1419 0040 4FF00103 		mov	r3, #1
 1420 0044 FB75     		strb	r3, [r7, #23]
 1421 0046 19E0     		b	.L60
 1422              	.L59:
 539:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       }
 540:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     } else {
 541:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       if (TCP_SEQ_BETWEEN(seqno, pcb->rcv_nxt, 
 1423              		.loc 1 541 0
 1424 0048 40F20003 		movw	r3, #:lower16:seqno
 1425 004c C0F20003 		movt	r3, #:upper16:seqno
 1426 0050 1A68     		ldr	r2, [r3, #0]
 1427 0052 7B68     		ldr	r3, [r7, #4]
 1428 0054 5B6A     		ldr	r3, [r3, #36]
 1429 0056 D31A     		subs	r3, r2, r3
 1430 0058 002B     		cmp	r3, #0
 1431 005a 0FDB     		blt	.L60
 1432              		.loc 1 541 0 is_stmt 0 discriminator 1
 1433 005c 40F20003 		movw	r3, #:lower16:seqno
 1434 0060 C0F20003 		movt	r3, #:upper16:seqno
 1435 0064 1A68     		ldr	r2, [r3, #0]
 1436 0066 7B68     		ldr	r3, [r7, #4]
 1437 0068 596A     		ldr	r1, [r3, #36]
 1438 006a 7B68     		ldr	r3, [r7, #4]
 1439 006c 1B8D     		ldrh	r3, [r3, #40]
 1440 006e CB18     		adds	r3, r1, r3
 1441 0070 D31A     		subs	r3, r2, r3
 1442 0072 002B     		cmp	r3, #0
 1443 0074 02DC     		bgt	.L60
 542:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                           pcb->rcv_nxt+pcb->rcv_wnd)) {
 543:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         acceptable = 1;
 1444              		.loc 1 543 0 is_stmt 1
 1445 0076 4FF00103 		mov	r3, #1
 1446 007a FB75     		strb	r3, [r7, #23]
 1447              	.L60:
 544:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       }
 545:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     }
 546:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
 547:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     if (acceptable) {
 1448              		.loc 1 547 0
 1449 007c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1450 007e 002B     		cmp	r3, #0
 1451 0080 19D0     		beq	.L61
 548:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       LWIP_DEBUGF(TCP_INPUT_DEBUG, ("tcp_process: Connection RESET\n"));
 549:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       LWIP_ASSERT("tcp_input: pcb->state != CLOSED", pcb->state != CLOSED);
 550:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       recv_flags |= TF_RESET;
 1452              		.loc 1 550 0
 1453 0082 40F20003 		movw	r3, #:lower16:recv_flags
 1454 0086 C0F20003 		movt	r3, #:upper16:recv_flags
 1455 008a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1456 008c 43F00803 		orr	r3, r3, #8
 1457 0090 DAB2     		uxtb	r2, r3
 1458 0092 40F20003 		movw	r3, #:lower16:recv_flags
 1459 0096 C0F20003 		movt	r3, #:upper16:recv_flags
 1460 009a 1A70     		strb	r2, [r3, #0]
 551:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       pcb->flags &= ~TF_ACK_DELAY;
 1461              		.loc 1 551 0
 1462 009c 7B68     		ldr	r3, [r7, #4]
 1463 009e 93F82230 		ldrb	r3, [r3, #34]	@ zero_extendqisi2
 1464 00a2 23F00103 		bic	r3, r3, #1
 1465 00a6 DAB2     		uxtb	r2, r3
 1466 00a8 7B68     		ldr	r3, [r7, #4]
 1467 00aa 83F82220 		strb	r2, [r3, #34]
 552:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       return ERR_RST;
 1468              		.loc 1 552 0
 1469 00ae 4FF0FA03 		mov	r3, #250
 1470 00b2 00F00EBC 		b	.L62
 1471              	.L61:
 553:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     } else {
 554:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       LWIP_DEBUGF(TCP_INPUT_DEBUG, ("tcp_process: unacceptable reset seqno %"U32_F" rcv_nxt %"U32_F
 555:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****        seqno, pcb->rcv_nxt));
 556:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       LWIP_DEBUGF(TCP_DEBUG, ("tcp_process: unacceptable reset seqno %"U32_F" rcv_nxt %"U32_F"\n",
 557:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****        seqno, pcb->rcv_nxt));
 558:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       return ERR_OK;
 1472              		.loc 1 558 0
 1473 00b6 4FF00003 		mov	r3, #0
 1474 00ba 00F00ABC 		b	.L62
 1475              	.L58:
 559:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     }
 560:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   }
 561:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
 562:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   if ((flags & TCP_SYN) && (pcb->state != SYN_SENT && pcb->state != SYN_RCVD)) { 
 1476              		.loc 1 562 0
 1477 00be 40F20003 		movw	r3, #:lower16:flags
 1478 00c2 C0F20003 		movt	r3, #:upper16:flags
 1479 00c6 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1480 00c8 03F00203 		and	r3, r3, #2
 1481 00cc 002B     		cmp	r3, #0
 1482 00ce 16D0     		beq	.L63
 1483              		.loc 1 562 0 is_stmt 0 discriminator 1
 1484 00d0 7B68     		ldr	r3, [r7, #4]
 1485 00d2 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 1486 00d4 022B     		cmp	r3, #2
 1487 00d6 12D0     		beq	.L63
 1488 00d8 7B68     		ldr	r3, [r7, #4]
 1489 00da 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 1490 00dc 032B     		cmp	r3, #3
 1491 00de 0ED0     		beq	.L63
 563:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     /* Cope with new connection attempt after remote end crashed */
 564:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     tcp_ack_now(pcb);
 1492              		.loc 1 564 0 is_stmt 1
 1493 00e0 7B68     		ldr	r3, [r7, #4]
 1494 00e2 93F82230 		ldrb	r3, [r3, #34]	@ zero_extendqisi2
 1495 00e6 43F00203 		orr	r3, r3, #2
 1496 00ea DAB2     		uxtb	r2, r3
 1497 00ec 7B68     		ldr	r3, [r7, #4]
 1498 00ee 83F82220 		strb	r2, [r3, #34]
 1499 00f2 7868     		ldr	r0, [r7, #4]
 1500 00f4 FFF7FEFF 		bl	tcp_output
 565:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     return ERR_OK;
 1501              		.loc 1 565 0
 1502 00f8 4FF00003 		mov	r3, #0
 1503 00fc E9E3     		b	.L62
 1504              	.L63:
 566:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   }
 567:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   
 568:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   /* Update the PCB (in)activity timer. */
 569:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   pcb->tmr = tcp_ticks;
 1505              		.loc 1 569 0
 1506 00fe 40F20003 		movw	r3, #:lower16:tcp_ticks
 1507 0102 C0F20003 		movt	r3, #:upper16:tcp_ticks
 1508 0106 1A68     		ldr	r2, [r3, #0]
 1509 0108 7B68     		ldr	r3, [r7, #4]
 1510 010a 1A63     		str	r2, [r3, #48]
 570:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   pcb->keep_cnt_sent = 0;
 1511              		.loc 1 570 0
 1512 010c 7B68     		ldr	r3, [r7, #4]
 1513 010e 4FF00002 		mov	r2, #0
 1514 0112 83F89D20 		strb	r2, [r3, #157]
 571:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
 572:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   tcp_parseopt(pcb);
 1515              		.loc 1 572 0
 1516 0116 7868     		ldr	r0, [r7, #4]
 1517 0118 FFF7FEFF 		bl	tcp_parseopt
 573:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
 574:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   /* Do different things depending on the TCP state. */
 575:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   switch (pcb->state) {
 1518              		.loc 1 575 0
 1519 011c 7B68     		ldr	r3, [r7, #4]
 1520 011e 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 1521 0120 A3F10203 		sub	r3, r3, #2
 1522 0124 072B     		cmp	r3, #7
 1523 0126 00F2C383 		bhi	.L116
 1524 012a 01A2     		adr	r2, .L72
 1525 012c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1526              		.align	2
 1527              	.L72:
 1528 0130 51010000 		.word	.L65+1
 1529 0134 5F030000 		.word	.L66+1
 1530 0138 FD040000 		.word	.L67+1
 1531 013c 39050000 		.word	.L68+1
 1532 0140 9B060000 		.word	.L69+1
 1533 0144 FD040000 		.word	.L67+1
 1534 0148 85070000 		.word	.L70+1
 1535 014c 6B080000 		.word	.L71+1
 1536              	.L65:
 576:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   case SYN_SENT:
 577:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     LWIP_DEBUGF(TCP_INPUT_DEBUG, ("SYN-SENT: ackno %"U32_F" pcb->snd_nxt %"U32_F" unacked %"U32_F"\
 578:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****      pcb->snd_nxt, ntohl(pcb->unacked->tcphdr->seqno)));
 579:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     /* received SYN ACK with expected sequence number? */
 580:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     if ((flags & TCP_ACK) && (flags & TCP_SYN)
 1537              		.loc 1 580 0
 1538 0150 40F20003 		movw	r3, #:lower16:flags
 1539 0154 C0F20003 		movt	r3, #:upper16:flags
 1540 0158 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1541 015a 03F01003 		and	r3, r3, #16
 1542 015e 002B     		cmp	r3, #0
 1543 0160 00F0C080 		beq	.L73
 1544              		.loc 1 580 0 is_stmt 0 discriminator 1
 1545 0164 40F20003 		movw	r3, #:lower16:flags
 1546 0168 C0F20003 		movt	r3, #:upper16:flags
 1547 016c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1548 016e 03F00203 		and	r3, r3, #2
 1549 0172 002B     		cmp	r3, #0
 1550 0174 00F0B680 		beq	.L73
 581:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         && ackno == ntohl(pcb->unacked->tcphdr->seqno) + 1) {
 1551              		.loc 1 581 0 is_stmt 1
 1552 0178 7B68     		ldr	r3, [r7, #4]
 1553 017a 9B6F     		ldr	r3, [r3, #120]
 1554 017c 1B69     		ldr	r3, [r3, #16]
 1555 017e 5B68     		ldr	r3, [r3, #4]	@ unaligned
 1556 0180 1846     		mov	r0, r3
 1557 0182 FFF7FEFF 		bl	ntohl
 1558 0186 0346     		mov	r3, r0
 1559 0188 03F10102 		add	r2, r3, #1
 1560 018c 40F20003 		movw	r3, #:lower16:ackno
 1561 0190 C0F20003 		movt	r3, #:upper16:ackno
 1562 0194 1B68     		ldr	r3, [r3, #0]
 1563 0196 9A42     		cmp	r2, r3
 1564 0198 40F0A480 		bne	.L73
 582:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       pcb->snd_buf++;
 1565              		.loc 1 582 0
 1566 019c 7B68     		ldr	r3, [r7, #4]
 1567 019e B3F86E30 		ldrh	r3, [r3, #110]
 1568 01a2 03F10103 		add	r3, r3, #1
 1569 01a6 9AB2     		uxth	r2, r3
 1570 01a8 7B68     		ldr	r3, [r7, #4]
 1571 01aa A3F86E20 		strh	r2, [r3, #110]	@ movhi
 583:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       pcb->rcv_nxt = seqno + 1;
 1572              		.loc 1 583 0
 1573 01ae 40F20003 		movw	r3, #:lower16:seqno
 1574 01b2 C0F20003 		movt	r3, #:upper16:seqno
 1575 01b6 1B68     		ldr	r3, [r3, #0]
 1576 01b8 03F10102 		add	r2, r3, #1
 1577 01bc 7B68     		ldr	r3, [r7, #4]
 1578 01be 5A62     		str	r2, [r3, #36]
 584:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       pcb->rcv_ann_right_edge = pcb->rcv_nxt;
 1579              		.loc 1 584 0
 1580 01c0 7B68     		ldr	r3, [r7, #4]
 1581 01c2 5A6A     		ldr	r2, [r3, #36]
 1582 01c4 7B68     		ldr	r3, [r7, #4]
 1583 01c6 DA62     		str	r2, [r3, #44]
 585:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       pcb->lastack = ackno;
 1584              		.loc 1 585 0
 1585 01c8 40F20003 		movw	r3, #:lower16:ackno
 1586 01cc C0F20003 		movt	r3, #:upper16:ackno
 1587 01d0 1A68     		ldr	r2, [r3, #0]
 1588 01d2 7B68     		ldr	r3, [r7, #4]
 1589 01d4 DA64     		str	r2, [r3, #76]
 586:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       pcb->snd_wnd = tcphdr->wnd;
 1590              		.loc 1 586 0
 1591 01d6 40F20003 		movw	r3, #:lower16:tcphdr
 1592 01da C0F20003 		movt	r3, #:upper16:tcphdr
 1593 01de 1B68     		ldr	r3, [r3, #0]
 1594 01e0 DB89     		ldrh	r3, [r3, #14]	@ unaligned
 1595 01e2 9AB2     		uxth	r2, r3
 1596 01e4 7B68     		ldr	r3, [r7, #4]
 1597 01e6 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 587:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       pcb->snd_wl1 = seqno - 1; /* initialise to seqno - 1 to force window update */
 1598              		.loc 1 587 0
 1599 01ea 40F20003 		movw	r3, #:lower16:seqno
 1600 01ee C0F20003 		movt	r3, #:upper16:seqno
 1601 01f2 1B68     		ldr	r3, [r3, #0]
 1602 01f4 03F1FF32 		add	r2, r3, #-1
 1603 01f8 7B68     		ldr	r3, [r7, #4]
 1604 01fa 1A66     		str	r2, [r3, #96]
 588:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       pcb->state = ESTABLISHED;
 1605              		.loc 1 588 0
 1606 01fc 7B68     		ldr	r3, [r7, #4]
 1607 01fe 4FF00402 		mov	r2, #4
 1608 0202 1A74     		strb	r2, [r3, #16]
 589:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
 590:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** #if TCP_CALCULATE_EFF_SEND_MSS
 591:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       pcb->mss = tcp_eff_send_mss(pcb->mss, &(pcb->remote_ip));
 1609              		.loc 1 591 0
 1610 0204 7B68     		ldr	r3, [r7, #4]
 1611 0206 1A8F     		ldrh	r2, [r3, #56]
 1612 0208 7B68     		ldr	r3, [r7, #4]
 1613 020a 03F10403 		add	r3, r3, #4
 1614 020e 1046     		mov	r0, r2
 1615 0210 1946     		mov	r1, r3
 1616 0212 FFF7FEFF 		bl	tcp_eff_send_mss
 1617 0216 0346     		mov	r3, r0
 1618 0218 1A46     		mov	r2, r3
 1619 021a 7B68     		ldr	r3, [r7, #4]
 1620 021c 1A87     		strh	r2, [r3, #56]	@ movhi
 592:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** #endif /* TCP_CALCULATE_EFF_SEND_MSS */
 593:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
 594:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       /* Set ssthresh again after changing pcb->mss (already set in tcp_connect
 595:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****        * but for the default value of pcb->mss) */
 596:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       pcb->ssthresh = pcb->mss * 10;
 1621              		.loc 1 596 0
 1622 021e 7B68     		ldr	r3, [r7, #4]
 1623 0220 1B8F     		ldrh	r3, [r3, #56]
 1624 0222 1A46     		mov	r2, r3	@ movhi
 1625 0224 4FEA8202 		lsl	r2, r2, #2
 1626 0228 D318     		adds	r3, r2, r3
 1627 022a 4FEA4303 		lsl	r3, r3, #1
 1628 022e 9AB2     		uxth	r2, r3
 1629 0230 7B68     		ldr	r3, [r7, #4]
 1630 0232 A3F85420 		strh	r2, [r3, #84]	@ movhi
 597:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
 598:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       pcb->cwnd = ((pcb->cwnd == 1) ? (pcb->mss * 2) : pcb->mss);
 1631              		.loc 1 598 0
 1632 0236 7B68     		ldr	r3, [r7, #4]
 1633 0238 B3F85230 		ldrh	r3, [r3, #82]
 1634 023c 012B     		cmp	r3, #1
 1635 023e 05D1     		bne	.L74
 1636              		.loc 1 598 0 is_stmt 0 discriminator 1
 1637 0240 7B68     		ldr	r3, [r7, #4]
 1638 0242 1B8F     		ldrh	r3, [r3, #56]
 1639 0244 4FEA4303 		lsl	r3, r3, #1
 1640 0248 9BB2     		uxth	r3, r3
 1641 024a 01E0     		b	.L75
 1642              	.L74:
 1643              		.loc 1 598 0 discriminator 2
 1644 024c 7B68     		ldr	r3, [r7, #4]
 1645 024e 1B8F     		ldrh	r3, [r3, #56]
 1646              	.L75:
 1647              		.loc 1 598 0 discriminator 3
 1648 0250 7A68     		ldr	r2, [r7, #4]
 1649 0252 A2F85230 		strh	r3, [r2, #82]	@ movhi
 599:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       LWIP_ASSERT("pcb->snd_queuelen > 0", (pcb->snd_queuelen > 0));
 600:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       --pcb->snd_queuelen;
 1650              		.loc 1 600 0 is_stmt 1 discriminator 3
 1651 0256 7B68     		ldr	r3, [r7, #4]
 1652 0258 B3F87030 		ldrh	r3, [r3, #112]
 1653 025c 03F1FF33 		add	r3, r3, #-1
 1654 0260 9AB2     		uxth	r2, r3
 1655 0262 7B68     		ldr	r3, [r7, #4]
 1656 0264 A3F87020 		strh	r2, [r3, #112]	@ movhi
 601:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       LWIP_DEBUGF(TCP_QLEN_DEBUG, ("tcp_process: SYN-SENT --queuelen %"U16_F"\n", (u16_t)pcb->snd_q
 602:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       rseg = pcb->unacked;
 1657              		.loc 1 602 0 discriminator 3
 1658 0268 7B68     		ldr	r3, [r7, #4]
 1659 026a 9B6F     		ldr	r3, [r3, #120]
 1660 026c 3B61     		str	r3, [r7, #16]
 603:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       pcb->unacked = rseg->next;
 1661              		.loc 1 603 0 discriminator 3
 1662 026e 3B69     		ldr	r3, [r7, #16]
 1663 0270 1A68     		ldr	r2, [r3, #0]
 1664 0272 7B68     		ldr	r3, [r7, #4]
 1665 0274 9A67     		str	r2, [r3, #120]
 604:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
 605:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       /* If there's nothing left to acknowledge, stop the retransmit
 606:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****          timer, otherwise reset it to start again */
 607:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       if(pcb->unacked == NULL)
 1666              		.loc 1 607 0 discriminator 3
 1667 0276 7B68     		ldr	r3, [r7, #4]
 1668 0278 9B6F     		ldr	r3, [r3, #120]
 1669 027a 002B     		cmp	r3, #0
 1670 027c 04D1     		bne	.L76
 608:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         pcb->rtime = -1;
 1671              		.loc 1 608 0
 1672 027e 7B68     		ldr	r3, [r7, #4]
 1673 0280 4FF6FF72 		movw	r2, #65535
 1674 0284 DA86     		strh	r2, [r3, #54]	@ movhi
 1675 0286 08E0     		b	.L77
 1676              	.L76:
 609:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       else {
 610:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         pcb->rtime = 0;
 1677              		.loc 1 610 0
 1678 0288 7B68     		ldr	r3, [r7, #4]
 1679 028a 4FF00002 		mov	r2, #0
 1680 028e DA86     		strh	r2, [r3, #54]	@ movhi
 611:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         pcb->nrtx = 0;
 1681              		.loc 1 611 0
 1682 0290 7B68     		ldr	r3, [r7, #4]
 1683 0292 4FF00002 		mov	r2, #0
 1684 0296 83F84A20 		strb	r2, [r3, #74]
 1685              	.L77:
 612:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       }
 613:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
 614:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       tcp_seg_free(rseg);
 1686              		.loc 1 614 0
 1687 029a 3869     		ldr	r0, [r7, #16]
 1688 029c FFF7FEFF 		bl	tcp_seg_free
 615:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
 616:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       /* Call the user specified function to call when sucessfully
 617:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****        * connected. */
 618:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       TCP_EVENT_CONNECTED(pcb, ERR_OK, err);
 1689              		.loc 1 618 0
 1690 02a0 7B68     		ldr	r3, [r7, #4]
 1691 02a2 D3F88830 		ldr	r3, [r3, #136]
 1692 02a6 002B     		cmp	r3, #0
 1693 02a8 0CD0     		beq	.L78
 1694              		.loc 1 618 0 is_stmt 0 discriminator 1
 1695 02aa 7B68     		ldr	r3, [r7, #4]
 1696 02ac D3F88830 		ldr	r3, [r3, #136]
 1697 02b0 7A68     		ldr	r2, [r7, #4]
 1698 02b2 5269     		ldr	r2, [r2, #20]
 1699 02b4 1046     		mov	r0, r2
 1700 02b6 7968     		ldr	r1, [r7, #4]
 1701 02b8 4FF00002 		mov	r2, #0
 1702 02bc 9847     		blx	r3
 1703 02be 0346     		mov	r3, r0
 1704 02c0 BB75     		strb	r3, [r7, #22]
 1705 02c2 02E0     		b	.L79
 1706              	.L78:
 1707              		.loc 1 618 0 discriminator 2
 1708 02c4 4FF00003 		mov	r3, #0
 1709 02c8 BB75     		strb	r3, [r7, #22]
 1710              	.L79:
 619:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       tcp_ack_now(pcb);
 1711              		.loc 1 619 0 is_stmt 1
 1712 02ca 7B68     		ldr	r3, [r7, #4]
 1713 02cc 93F82230 		ldrb	r3, [r3, #34]	@ zero_extendqisi2
 1714 02d0 43F00203 		orr	r3, r3, #2
 1715 02d4 DAB2     		uxtb	r2, r3
 1716 02d6 7B68     		ldr	r3, [r7, #4]
 1717 02d8 83F82220 		strb	r2, [r3, #34]
 1718 02dc 7868     		ldr	r0, [r7, #4]
 1719 02de FFF7FEFF 		bl	tcp_output
 620:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     }
 621:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     /* received ACK? possibly a half-open connection */
 622:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     else if (flags & TCP_ACK) {
 623:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       /* send a RST to bring the other side in a non-synchronized state. */
 624:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       tcp_rst(ackno, seqno + tcplen, &(iphdr->dest), &(iphdr->src),
 625:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         tcphdr->dest, tcphdr->src);
 626:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     }
 627:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     break;
 1720              		.loc 1 627 0
 1721 02e2 E7E2     		b	.L117
 1722              	.L73:
 622:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     else if (flags & TCP_ACK) {
 1723              		.loc 1 622 0
 1724 02e4 40F20003 		movw	r3, #:lower16:flags
 1725 02e8 C0F20003 		movt	r3, #:upper16:flags
 1726 02ec 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1727 02ee 03F01003 		and	r3, r3, #16
 1728 02f2 002B     		cmp	r3, #0
 1729 02f4 00F0DE82 		beq	.L117
 624:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       tcp_rst(ackno, seqno + tcplen, &(iphdr->dest), &(iphdr->src),
 1730              		.loc 1 624 0
 1731 02f8 40F20003 		movw	r3, #:lower16:ackno
 1732 02fc C0F20003 		movt	r3, #:upper16:ackno
 1733 0300 1868     		ldr	r0, [r3, #0]
 1734 0302 40F20003 		movw	r3, #:lower16:tcplen
 1735 0306 C0F20003 		movt	r3, #:upper16:tcplen
 1736 030a 1B88     		ldrh	r3, [r3, #0]
 1737 030c 1A46     		mov	r2, r3
 1738 030e 40F20003 		movw	r3, #:lower16:seqno
 1739 0312 C0F20003 		movt	r3, #:upper16:seqno
 1740 0316 1B68     		ldr	r3, [r3, #0]
 1741 0318 D118     		adds	r1, r2, r3
 1742 031a 40F20003 		movw	r3, #:lower16:iphdr
 1743 031e C0F20003 		movt	r3, #:upper16:iphdr
 1744 0322 1B68     		ldr	r3, [r3, #0]
 1745 0324 03F11002 		add	r2, r3, #16
 1746 0328 40F20003 		movw	r3, #:lower16:iphdr
 1747 032c C0F20003 		movt	r3, #:upper16:iphdr
 1748 0330 1B68     		ldr	r3, [r3, #0]
 1749 0332 03F10C04 		add	r4, r3, #12
 625:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         tcphdr->dest, tcphdr->src);
 1750              		.loc 1 625 0
 1751 0336 40F20003 		movw	r3, #:lower16:tcphdr
 1752 033a C0F20003 		movt	r3, #:upper16:tcphdr
 1753 033e 1B68     		ldr	r3, [r3, #0]
 624:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       tcp_rst(ackno, seqno + tcplen, &(iphdr->dest), &(iphdr->src),
 1754              		.loc 1 624 0
 1755 0340 5B88     		ldrh	r3, [r3, #2]	@ unaligned
 1756 0342 9DB2     		uxth	r5, r3
 625:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         tcphdr->dest, tcphdr->src);
 1757              		.loc 1 625 0
 1758 0344 40F20003 		movw	r3, #:lower16:tcphdr
 1759 0348 C0F20003 		movt	r3, #:upper16:tcphdr
 1760 034c 1B68     		ldr	r3, [r3, #0]
 624:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       tcp_rst(ackno, seqno + tcplen, &(iphdr->dest), &(iphdr->src),
 1761              		.loc 1 624 0
 1762 034e 1B88     		ldrh	r3, [r3, #0]	@ unaligned
 1763 0350 9BB2     		uxth	r3, r3
 1764 0352 0095     		str	r5, [sp, #0]
 1765 0354 0193     		str	r3, [sp, #4]
 1766 0356 2346     		mov	r3, r4
 1767 0358 FFF7FEFF 		bl	tcp_rst
 1768              		.loc 1 627 0
 1769 035c AAE2     		b	.L117
 1770              	.L66:
 628:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   case SYN_RCVD:
 629:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     if (flags & TCP_ACK) {
 1771              		.loc 1 629 0
 1772 035e 40F20003 		movw	r3, #:lower16:flags
 1773 0362 C0F20003 		movt	r3, #:upper16:flags
 1774 0366 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1775 0368 03F01003 		and	r3, r3, #16
 1776 036c 002B     		cmp	r3, #0
 1777 036e 00F0AB80 		beq	.L82
 630:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       /* expected ACK number? */
 631:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       if (TCP_SEQ_BETWEEN(ackno, pcb->lastack+1, pcb->snd_nxt)) {
 1778              		.loc 1 631 0
 1779 0372 7B68     		ldr	r3, [r7, #4]
 1780 0374 DB6C     		ldr	r3, [r3, #76]
 1781 0376 6FEA0302 		mvn	r2, r3
 1782 037a 40F20003 		movw	r3, #:lower16:ackno
 1783 037e C0F20003 		movt	r3, #:upper16:ackno
 1784 0382 1B68     		ldr	r3, [r3, #0]
 1785 0384 D318     		adds	r3, r2, r3
 1786 0386 002B     		cmp	r3, #0
 1787 0388 69DB     		blt	.L83
 1788              		.loc 1 631 0 is_stmt 0 discriminator 1
 1789 038a 40F20003 		movw	r3, #:lower16:ackno
 1790 038e C0F20003 		movt	r3, #:upper16:ackno
 1791 0392 1A68     		ldr	r2, [r3, #0]
 1792 0394 7B68     		ldr	r3, [r7, #4]
 1793 0396 9B6D     		ldr	r3, [r3, #88]
 1794 0398 D31A     		subs	r3, r2, r3
 1795 039a 002B     		cmp	r3, #0
 1796 039c 5FDC     		bgt	.L83
 1797              	.LBB2:
 632:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         u16_t old_cwnd;
 633:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         pcb->state = ESTABLISHED;
 1798              		.loc 1 633 0 is_stmt 1
 1799 039e 7B68     		ldr	r3, [r7, #4]
 1800 03a0 4FF00402 		mov	r2, #4
 1801 03a4 1A74     		strb	r2, [r3, #16]
 634:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         LWIP_DEBUGF(TCP_DEBUG, ("TCP connection established %"U16_F" -> %"U16_F".\n", inseg.tcphdr-
 635:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** #if LWIP_CALLBACK_API
 636:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         LWIP_ASSERT("pcb->accept != NULL", pcb->accept != NULL);
 637:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** #endif
 638:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         /* Call the accept function. */
 639:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         TCP_EVENT_ACCEPT(pcb, ERR_OK, err);
 1802              		.loc 1 639 0
 1803 03a6 7B68     		ldr	r3, [r7, #4]
 1804 03a8 DB69     		ldr	r3, [r3, #28]
 1805 03aa 002B     		cmp	r3, #0
 1806 03ac 0BD0     		beq	.L84
 1807              		.loc 1 639 0 is_stmt 0 discriminator 1
 1808 03ae 7B68     		ldr	r3, [r7, #4]
 1809 03b0 DB69     		ldr	r3, [r3, #28]
 1810 03b2 7A68     		ldr	r2, [r7, #4]
 1811 03b4 5269     		ldr	r2, [r2, #20]
 1812 03b6 1046     		mov	r0, r2
 1813 03b8 7968     		ldr	r1, [r7, #4]
 1814 03ba 4FF00002 		mov	r2, #0
 1815 03be 9847     		blx	r3
 1816 03c0 0346     		mov	r3, r0
 1817 03c2 BB75     		strb	r3, [r7, #22]
 1818 03c4 02E0     		b	.L85
 1819              	.L84:
 1820              		.loc 1 639 0 discriminator 2
 1821 03c6 4FF00003 		mov	r3, #0
 1822 03ca BB75     		strb	r3, [r7, #22]
 1823              	.L85:
 640:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         if (err != ERR_OK) {
 1824              		.loc 1 640 0 is_stmt 1
 1825 03cc 97F91630 		ldrsb	r3, [r7, #22]
 1826 03d0 002B     		cmp	r3, #0
 1827 03d2 07D0     		beq	.L86
 641:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           /* If the accept function returns with an error, we abort
 642:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****            * the connection. */
 643:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           tcp_abort(pcb);
 1828              		.loc 1 643 0
 1829 03d4 7868     		ldr	r0, [r7, #4]
 1830 03d6 4FF00101 		mov	r1, #1
 1831 03da FFF7FEFF 		bl	tcp_abandon
 644:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           return ERR_ABRT;
 1832              		.loc 1 644 0
 1833 03de 4FF0FB03 		mov	r3, #251
 1834 03e2 76E2     		b	.L62
 1835              	.L86:
 645:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         }
 646:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         old_cwnd = pcb->cwnd;
 1836              		.loc 1 646 0
 1837 03e4 7B68     		ldr	r3, [r7, #4]
 1838 03e6 B3F85230 		ldrh	r3, [r3, #82]	@ movhi
 1839 03ea FB81     		strh	r3, [r7, #14]	@ movhi
 647:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         /* If there was any data contained within this ACK,
 648:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****          * we'd better pass it on to the application as well. */
 649:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         tcp_receive(pcb);
 1840              		.loc 1 649 0
 1841 03ec 7868     		ldr	r0, [r7, #4]
 1842 03ee FFF7FEFF 		bl	tcp_receive
 650:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
 651:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         /* Prevent ACK for SYN to generate a sent event */
 652:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         if (pcb->acked != 0) {
 1843              		.loc 1 652 0
 1844 03f2 7B68     		ldr	r3, [r7, #4]
 1845 03f4 B3F86C30 		ldrh	r3, [r3, #108]
 1846 03f8 002B     		cmp	r3, #0
 1847 03fa 08D0     		beq	.L87
 653:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           pcb->acked--;
 1848              		.loc 1 653 0
 1849 03fc 7B68     		ldr	r3, [r7, #4]
 1850 03fe B3F86C30 		ldrh	r3, [r3, #108]
 1851 0402 03F1FF33 		add	r3, r3, #-1
 1852 0406 9AB2     		uxth	r2, r3
 1853 0408 7B68     		ldr	r3, [r7, #4]
 1854 040a A3F86C20 		strh	r2, [r3, #108]	@ movhi
 1855              	.L87:
 654:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         }
 655:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
 656:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         pcb->cwnd = ((old_cwnd == 1) ? (pcb->mss * 2) : pcb->mss);
 1856              		.loc 1 656 0
 1857 040e FB89     		ldrh	r3, [r7, #14]
 1858 0410 012B     		cmp	r3, #1
 1859 0412 05D1     		bne	.L88
 1860              		.loc 1 656 0 is_stmt 0 discriminator 1
 1861 0414 7B68     		ldr	r3, [r7, #4]
 1862 0416 1B8F     		ldrh	r3, [r3, #56]
 1863 0418 4FEA4303 		lsl	r3, r3, #1
 1864 041c 9BB2     		uxth	r3, r3
 1865 041e 01E0     		b	.L89
 1866              	.L88:
 1867              		.loc 1 656 0 discriminator 2
 1868 0420 7B68     		ldr	r3, [r7, #4]
 1869 0422 1B8F     		ldrh	r3, [r3, #56]
 1870              	.L89:
 1871              		.loc 1 656 0 discriminator 3
 1872 0424 7A68     		ldr	r2, [r7, #4]
 1873 0426 A2F85230 		strh	r3, [r2, #82]	@ movhi
 657:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
 658:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         if (recv_flags & TF_GOT_FIN) {
 1874              		.loc 1 658 0 is_stmt 1 discriminator 3
 1875 042a 40F20003 		movw	r3, #:lower16:recv_flags
 1876 042e C0F20003 		movt	r3, #:upper16:recv_flags
 1877 0432 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1878 0434 03F02003 		and	r3, r3, #32
 1879 0438 002B     		cmp	r3, #0
 1880 043a 43D0     		beq	.L118
 659:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           tcp_ack_now(pcb);
 1881              		.loc 1 659 0
 1882 043c 7B68     		ldr	r3, [r7, #4]
 1883 043e 93F82230 		ldrb	r3, [r3, #34]	@ zero_extendqisi2
 1884 0442 43F00203 		orr	r3, r3, #2
 1885 0446 DAB2     		uxtb	r2, r3
 1886 0448 7B68     		ldr	r3, [r7, #4]
 1887 044a 83F82220 		strb	r2, [r3, #34]
 1888 044e 7868     		ldr	r0, [r7, #4]
 1889 0450 FFF7FEFF 		bl	tcp_output
 660:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           pcb->state = CLOSE_WAIT;
 1890              		.loc 1 660 0
 1891 0454 7B68     		ldr	r3, [r7, #4]
 1892 0456 4FF00702 		mov	r2, #7
 1893 045a 1A74     		strb	r2, [r3, #16]
 1894              	.LBE2:
 631:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       if (TCP_SEQ_BETWEEN(ackno, pcb->lastack+1, pcb->snd_nxt)) {
 1895              		.loc 1 631 0
 1896 045c 32E0     		b	.L118
 1897              	.L83:
 661:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         }
 662:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       }
 663:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       /* incorrect ACK number */
 664:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       else {
 665:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         /* send RST */
 666:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         tcp_rst(ackno, seqno + tcplen, &(iphdr->dest), &(iphdr->src),
 1898              		.loc 1 666 0
 1899 045e 40F20003 		movw	r3, #:lower16:ackno
 1900 0462 C0F20003 		movt	r3, #:upper16:ackno
 1901 0466 1868     		ldr	r0, [r3, #0]
 1902 0468 40F20003 		movw	r3, #:lower16:tcplen
 1903 046c C0F20003 		movt	r3, #:upper16:tcplen
 1904 0470 1B88     		ldrh	r3, [r3, #0]
 1905 0472 1A46     		mov	r2, r3
 1906 0474 40F20003 		movw	r3, #:lower16:seqno
 1907 0478 C0F20003 		movt	r3, #:upper16:seqno
 1908 047c 1B68     		ldr	r3, [r3, #0]
 1909 047e D118     		adds	r1, r2, r3
 1910 0480 40F20003 		movw	r3, #:lower16:iphdr
 1911 0484 C0F20003 		movt	r3, #:upper16:iphdr
 1912 0488 1B68     		ldr	r3, [r3, #0]
 1913 048a 03F11002 		add	r2, r3, #16
 1914 048e 40F20003 		movw	r3, #:lower16:iphdr
 1915 0492 C0F20003 		movt	r3, #:upper16:iphdr
 1916 0496 1B68     		ldr	r3, [r3, #0]
 1917 0498 03F10C04 		add	r4, r3, #12
 667:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                 tcphdr->dest, tcphdr->src);
 1918              		.loc 1 667 0
 1919 049c 40F20003 		movw	r3, #:lower16:tcphdr
 1920 04a0 C0F20003 		movt	r3, #:upper16:tcphdr
 1921 04a4 1B68     		ldr	r3, [r3, #0]
 666:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         tcp_rst(ackno, seqno + tcplen, &(iphdr->dest), &(iphdr->src),
 1922              		.loc 1 666 0
 1923 04a6 5B88     		ldrh	r3, [r3, #2]	@ unaligned
 1924 04a8 9DB2     		uxth	r5, r3
 1925              		.loc 1 667 0
 1926 04aa 40F20003 		movw	r3, #:lower16:tcphdr
 1927 04ae C0F20003 		movt	r3, #:upper16:tcphdr
 1928 04b2 1B68     		ldr	r3, [r3, #0]
 666:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         tcp_rst(ackno, seqno + tcplen, &(iphdr->dest), &(iphdr->src),
 1929              		.loc 1 666 0
 1930 04b4 1B88     		ldrh	r3, [r3, #0]	@ unaligned
 1931 04b6 9BB2     		uxth	r3, r3
 1932 04b8 0095     		str	r5, [sp, #0]
 1933 04ba 0193     		str	r3, [sp, #4]
 1934 04bc 2346     		mov	r3, r4
 1935 04be FFF7FEFF 		bl	tcp_rst
 668:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       }
 669:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     } else if ((flags & TCP_SYN) && (seqno == pcb->rcv_nxt - 1)) {
 670:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       /* Looks like another copy of the SYN - retransmit our SYN-ACK */
 671:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       tcp_rexmit(pcb);
 672:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     }
 673:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     break;
 1936              		.loc 1 673 0
 1937 04c2 F9E1     		b	.L119
 1938              	.L118:
 631:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       if (TCP_SEQ_BETWEEN(ackno, pcb->lastack+1, pcb->snd_nxt)) {
 1939              		.loc 1 631 0
 1940 04c4 00BF     		nop
 1941              	.L91:
 1942              		.loc 1 673 0
 1943 04c6 F7E1     		b	.L119
 1944              	.L82:
 669:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     } else if ((flags & TCP_SYN) && (seqno == pcb->rcv_nxt - 1)) {
 1945              		.loc 1 669 0
 1946 04c8 40F20003 		movw	r3, #:lower16:flags
 1947 04cc C0F20003 		movt	r3, #:upper16:flags
 1948 04d0 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1949 04d2 03F00203 		and	r3, r3, #2
 1950 04d6 002B     		cmp	r3, #0
 1951 04d8 00F0EE81 		beq	.L119
 669:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     } else if ((flags & TCP_SYN) && (seqno == pcb->rcv_nxt - 1)) {
 1952              		.loc 1 669 0 is_stmt 0 discriminator 1
 1953 04dc 7B68     		ldr	r3, [r7, #4]
 1954 04de 5B6A     		ldr	r3, [r3, #36]
 1955 04e0 03F1FF32 		add	r2, r3, #-1
 1956 04e4 40F20003 		movw	r3, #:lower16:seqno
 1957 04e8 C0F20003 		movt	r3, #:upper16:seqno
 1958 04ec 1B68     		ldr	r3, [r3, #0]
 1959 04ee 9A42     		cmp	r2, r3
 1960 04f0 40F0E281 		bne	.L119
 671:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       tcp_rexmit(pcb);
 1961              		.loc 1 671 0 is_stmt 1
 1962 04f4 7868     		ldr	r0, [r7, #4]
 1963 04f6 FFF7FEFF 		bl	tcp_rexmit
 1964              		.loc 1 673 0
 1965 04fa DDE1     		b	.L119
 1966              	.L67:
 674:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   case CLOSE_WAIT:
 675:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     /* FALLTHROUGH */
 676:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   case ESTABLISHED:
 677:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     tcp_receive(pcb);
 1967              		.loc 1 677 0
 1968 04fc 7868     		ldr	r0, [r7, #4]
 1969 04fe FFF7FEFF 		bl	tcp_receive
 678:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     if (recv_flags & TF_GOT_FIN) { /* passive close */
 1970              		.loc 1 678 0
 1971 0502 40F20003 		movw	r3, #:lower16:recv_flags
 1972 0506 C0F20003 		movt	r3, #:upper16:recv_flags
 1973 050a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1974 050c 03F02003 		and	r3, r3, #32
 1975 0510 002B     		cmp	r3, #0
 1976 0512 00F0D381 		beq	.L120
 679:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       tcp_ack_now(pcb);
 1977              		.loc 1 679 0
 1978 0516 7B68     		ldr	r3, [r7, #4]
 1979 0518 93F82230 		ldrb	r3, [r3, #34]	@ zero_extendqisi2
 1980 051c 43F00203 		orr	r3, r3, #2
 1981 0520 DAB2     		uxtb	r2, r3
 1982 0522 7B68     		ldr	r3, [r7, #4]
 1983 0524 83F82220 		strb	r2, [r3, #34]
 1984 0528 7868     		ldr	r0, [r7, #4]
 1985 052a FFF7FEFF 		bl	tcp_output
 680:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       pcb->state = CLOSE_WAIT;
 1986              		.loc 1 680 0
 1987 052e 7B68     		ldr	r3, [r7, #4]
 1988 0530 4FF00702 		mov	r2, #7
 1989 0534 1A74     		strb	r2, [r3, #16]
 681:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     }
 682:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     break;
 1990              		.loc 1 682 0
 1991 0536 C1E1     		b	.L120
 1992              	.L68:
 683:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   case FIN_WAIT_1:
 684:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     tcp_receive(pcb);
 1993              		.loc 1 684 0
 1994 0538 7868     		ldr	r0, [r7, #4]
 1995 053a FFF7FEFF 		bl	tcp_receive
 685:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     if (recv_flags & TF_GOT_FIN) {
 1996              		.loc 1 685 0
 1997 053e 40F20003 		movw	r3, #:lower16:recv_flags
 1998 0542 C0F20003 		movt	r3, #:upper16:recv_flags
 1999 0546 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2000 0548 03F02003 		and	r3, r3, #32
 2001 054c 002B     		cmp	r3, #0
 2002 054e 00F08B80 		beq	.L94
 686:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       if ((flags & TCP_ACK) && (ackno == pcb->snd_nxt)) {
 2003              		.loc 1 686 0
 2004 0552 40F20003 		movw	r3, #:lower16:flags
 2005 0556 C0F20003 		movt	r3, #:upper16:flags
 2006 055a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2007 055c 03F01003 		and	r3, r3, #16
 2008 0560 002B     		cmp	r3, #0
 2009 0562 70D0     		beq	.L95
 2010              		.loc 1 686 0 is_stmt 0 discriminator 1
 2011 0564 7B68     		ldr	r3, [r7, #4]
 2012 0566 9A6D     		ldr	r2, [r3, #88]
 2013 0568 40F20003 		movw	r3, #:lower16:ackno
 2014 056c C0F20003 		movt	r3, #:upper16:ackno
 2015 0570 1B68     		ldr	r3, [r3, #0]
 2016 0572 9A42     		cmp	r2, r3
 2017 0574 67D1     		bne	.L95
 687:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         LWIP_DEBUGF(TCP_DEBUG,
 688:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           ("TCP connection closed: FIN_WAIT_1 %"U16_F" -> %"U16_F".\n", inseg.tcphdr->src, inseg.tc
 689:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         tcp_ack_now(pcb);
 2018              		.loc 1 689 0 is_stmt 1
 2019 0576 7B68     		ldr	r3, [r7, #4]
 2020 0578 93F82230 		ldrb	r3, [r3, #34]	@ zero_extendqisi2
 2021 057c 43F00203 		orr	r3, r3, #2
 2022 0580 DAB2     		uxtb	r2, r3
 2023 0582 7B68     		ldr	r3, [r7, #4]
 2024 0584 83F82220 		strb	r2, [r3, #34]
 2025 0588 7868     		ldr	r0, [r7, #4]
 2026 058a FFF7FEFF 		bl	tcp_output
 690:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         tcp_pcb_purge(pcb);
 2027              		.loc 1 690 0
 2028 058e 7868     		ldr	r0, [r7, #4]
 2029 0590 FFF7FEFF 		bl	tcp_pcb_purge
 691:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         TCP_RMV(&tcp_active_pcbs, pcb);
 2030              		.loc 1 691 0
 2031 0594 40F20003 		movw	r3, #:lower16:tcp_active_pcbs
 2032 0598 C0F20003 		movt	r3, #:upper16:tcp_active_pcbs
 2033 059c 1A68     		ldr	r2, [r3, #0]
 2034 059e 7B68     		ldr	r3, [r7, #4]
 2035 05a0 9A42     		cmp	r2, r3
 2036 05a2 0BD1     		bne	.L96
 2037              		.loc 1 691 0 is_stmt 0 discriminator 1
 2038 05a4 40F20003 		movw	r3, #:lower16:tcp_active_pcbs
 2039 05a8 C0F20003 		movt	r3, #:upper16:tcp_active_pcbs
 2040 05ac 1B68     		ldr	r3, [r3, #0]
 2041 05ae DA68     		ldr	r2, [r3, #12]
 2042 05b0 40F20003 		movw	r3, #:lower16:tcp_active_pcbs
 2043 05b4 C0F20003 		movt	r3, #:upper16:tcp_active_pcbs
 2044 05b8 1A60     		str	r2, [r3, #0]
 2045 05ba 2EE0     		b	.L97
 2046              	.L96:
 2047              		.loc 1 691 0 discriminator 2
 2048 05bc 40F20003 		movw	r3, #:lower16:tcp_active_pcbs
 2049 05c0 C0F20003 		movt	r3, #:upper16:tcp_active_pcbs
 2050 05c4 1A68     		ldr	r2, [r3, #0]
 2051 05c6 40F20003 		movw	r3, #:lower16:tcp_tmp_pcb
 2052 05ca C0F20003 		movt	r3, #:upper16:tcp_tmp_pcb
 2053 05ce 1A60     		str	r2, [r3, #0]
 2054 05d0 1CE0     		b	.L98
 2055              	.L100:
 2056              		.loc 1 691 0 discriminator 7
 2057 05d2 40F20003 		movw	r3, #:lower16:tcp_tmp_pcb
 2058 05d6 C0F20003 		movt	r3, #:upper16:tcp_tmp_pcb
 2059 05da 1B68     		ldr	r3, [r3, #0]
 2060 05dc DA68     		ldr	r2, [r3, #12]
 2061 05de 7B68     		ldr	r3, [r7, #4]
 2062 05e0 9A42     		cmp	r2, r3
 2063 05e2 08D1     		bne	.L99
 2064              		.loc 1 691 0 discriminator 4
 2065 05e4 40F20003 		movw	r3, #:lower16:tcp_tmp_pcb
 2066 05e8 C0F20003 		movt	r3, #:upper16:tcp_tmp_pcb
 2067 05ec 1B68     		ldr	r3, [r3, #0]
 2068 05ee 7A68     		ldr	r2, [r7, #4]
 2069 05f0 D268     		ldr	r2, [r2, #12]
 2070 05f2 DA60     		str	r2, [r3, #12]
 2071 05f4 11E0     		b	.L97
 2072              	.L99:
 2073              		.loc 1 691 0 discriminator 5
 2074 05f6 40F20003 		movw	r3, #:lower16:tcp_tmp_pcb
 2075 05fa C0F20003 		movt	r3, #:upper16:tcp_tmp_pcb
 2076 05fe 1B68     		ldr	r3, [r3, #0]
 2077 0600 DA68     		ldr	r2, [r3, #12]
 2078 0602 40F20003 		movw	r3, #:lower16:tcp_tmp_pcb
 2079 0606 C0F20003 		movt	r3, #:upper16:tcp_tmp_pcb
 2080 060a 1A60     		str	r2, [r3, #0]
 2081              	.L98:
 2082              		.loc 1 691 0 discriminator 3
 2083 060c 40F20003 		movw	r3, #:lower16:tcp_tmp_pcb
 2084 0610 C0F20003 		movt	r3, #:upper16:tcp_tmp_pcb
 2085 0614 1B68     		ldr	r3, [r3, #0]
 2086 0616 002B     		cmp	r3, #0
 2087 0618 DBD1     		bne	.L100
 2088              	.L97:
 2089              		.loc 1 691 0 discriminator 6
 2090 061a 7B68     		ldr	r3, [r7, #4]
 2091 061c 4FF00002 		mov	r2, #0
 2092 0620 DA60     		str	r2, [r3, #12]
 692:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         pcb->state = TIME_WAIT;
 2093              		.loc 1 692 0 is_stmt 1 discriminator 6
 2094 0622 7B68     		ldr	r3, [r7, #4]
 2095 0624 4FF00A02 		mov	r2, #10
 2096 0628 1A74     		strb	r2, [r3, #16]
 693:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         TCP_REG(&tcp_tw_pcbs, pcb);
 2097              		.loc 1 693 0 discriminator 6
 2098 062a 40F20003 		movw	r3, #:lower16:tcp_tw_pcbs
 2099 062e C0F20003 		movt	r3, #:upper16:tcp_tw_pcbs
 2100 0632 1A68     		ldr	r2, [r3, #0]
 2101 0634 7B68     		ldr	r3, [r7, #4]
 2102 0636 DA60     		str	r2, [r3, #12]
 2103 0638 40F20003 		movw	r3, #:lower16:tcp_tw_pcbs
 2104 063c C0F20003 		movt	r3, #:upper16:tcp_tw_pcbs
 2105 0640 7A68     		ldr	r2, [r7, #4]
 2106 0642 1A60     		str	r2, [r3, #0]
 694:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       } else {
 695:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         tcp_ack_now(pcb);
 696:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         pcb->state = CLOSING;
 697:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       }
 698:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     } else if ((flags & TCP_ACK) && (ackno == pcb->snd_nxt)) {
 699:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       pcb->state = FIN_WAIT_2;
 700:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     }
 701:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     break;
 2107              		.loc 1 701 0 discriminator 6
 2108 0644 3CE1     		b	.L121
 2109              	.L95:
 695:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         tcp_ack_now(pcb);
 2110              		.loc 1 695 0
 2111 0646 7B68     		ldr	r3, [r7, #4]
 2112 0648 93F82230 		ldrb	r3, [r3, #34]	@ zero_extendqisi2
 2113 064c 43F00203 		orr	r3, r3, #2
 2114 0650 DAB2     		uxtb	r2, r3
 2115 0652 7B68     		ldr	r3, [r7, #4]
 2116 0654 83F82220 		strb	r2, [r3, #34]
 2117 0658 7868     		ldr	r0, [r7, #4]
 2118 065a FFF7FEFF 		bl	tcp_output
 696:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         pcb->state = CLOSING;
 2119              		.loc 1 696 0
 2120 065e 7B68     		ldr	r3, [r7, #4]
 2121 0660 4FF00802 		mov	r2, #8
 2122 0664 1A74     		strb	r2, [r3, #16]
 2123              		.loc 1 701 0
 2124 0666 2BE1     		b	.L121
 2125              	.L94:
 698:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     } else if ((flags & TCP_ACK) && (ackno == pcb->snd_nxt)) {
 2126              		.loc 1 698 0
 2127 0668 40F20003 		movw	r3, #:lower16:flags
 2128 066c C0F20003 		movt	r3, #:upper16:flags
 2129 0670 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2130 0672 03F01003 		and	r3, r3, #16
 2131 0676 002B     		cmp	r3, #0
 2132 0678 00F02281 		beq	.L121
 698:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     } else if ((flags & TCP_ACK) && (ackno == pcb->snd_nxt)) {
 2133              		.loc 1 698 0 is_stmt 0 discriminator 1
 2134 067c 7B68     		ldr	r3, [r7, #4]
 2135 067e 9A6D     		ldr	r2, [r3, #88]
 2136 0680 40F20003 		movw	r3, #:lower16:ackno
 2137 0684 C0F20003 		movt	r3, #:upper16:ackno
 2138 0688 1B68     		ldr	r3, [r3, #0]
 2139 068a 9A42     		cmp	r2, r3
 2140 068c 40F01881 		bne	.L121
 699:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       pcb->state = FIN_WAIT_2;
 2141              		.loc 1 699 0 is_stmt 1
 2142 0690 7B68     		ldr	r3, [r7, #4]
 2143 0692 4FF00602 		mov	r2, #6
 2144 0696 1A74     		strb	r2, [r3, #16]
 2145              		.loc 1 701 0
 2146 0698 12E1     		b	.L121
 2147              	.L69:
 702:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   case FIN_WAIT_2:
 703:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     tcp_receive(pcb);
 2148              		.loc 1 703 0
 2149 069a 7868     		ldr	r0, [r7, #4]
 2150 069c FFF7FEFF 		bl	tcp_receive
 704:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     if (recv_flags & TF_GOT_FIN) {
 2151              		.loc 1 704 0
 2152 06a0 40F20003 		movw	r3, #:lower16:recv_flags
 2153 06a4 C0F20003 		movt	r3, #:upper16:recv_flags
 2154 06a8 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2155 06aa 03F02003 		and	r3, r3, #32
 2156 06ae 002B     		cmp	r3, #0
 2157 06b0 00F00881 		beq	.L122
 705:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       LWIP_DEBUGF(TCP_DEBUG, ("TCP connection closed: FIN_WAIT_2 %"U16_F" -> %"U16_F".\n", inseg.tc
 706:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       tcp_ack_now(pcb);
 2158              		.loc 1 706 0
 2159 06b4 7B68     		ldr	r3, [r7, #4]
 2160 06b6 93F82230 		ldrb	r3, [r3, #34]	@ zero_extendqisi2
 2161 06ba 43F00203 		orr	r3, r3, #2
 2162 06be DAB2     		uxtb	r2, r3
 2163 06c0 7B68     		ldr	r3, [r7, #4]
 2164 06c2 83F82220 		strb	r2, [r3, #34]
 2165 06c6 7868     		ldr	r0, [r7, #4]
 2166 06c8 FFF7FEFF 		bl	tcp_output
 707:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       tcp_pcb_purge(pcb);
 2167              		.loc 1 707 0
 2168 06cc 7868     		ldr	r0, [r7, #4]
 2169 06ce FFF7FEFF 		bl	tcp_pcb_purge
 708:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       TCP_RMV(&tcp_active_pcbs, pcb);
 2170              		.loc 1 708 0
 2171 06d2 40F20003 		movw	r3, #:lower16:tcp_active_pcbs
 2172 06d6 C0F20003 		movt	r3, #:upper16:tcp_active_pcbs
 2173 06da 1A68     		ldr	r2, [r3, #0]
 2174 06dc 7B68     		ldr	r3, [r7, #4]
 2175 06de 9A42     		cmp	r2, r3
 2176 06e0 0BD1     		bne	.L104
 2177              		.loc 1 708 0 is_stmt 0 discriminator 1
 2178 06e2 40F20003 		movw	r3, #:lower16:tcp_active_pcbs
 2179 06e6 C0F20003 		movt	r3, #:upper16:tcp_active_pcbs
 2180 06ea 1B68     		ldr	r3, [r3, #0]
 2181 06ec DA68     		ldr	r2, [r3, #12]
 2182 06ee 40F20003 		movw	r3, #:lower16:tcp_active_pcbs
 2183 06f2 C0F20003 		movt	r3, #:upper16:tcp_active_pcbs
 2184 06f6 1A60     		str	r2, [r3, #0]
 2185 06f8 2EE0     		b	.L105
 2186              	.L104:
 2187              		.loc 1 708 0 discriminator 2
 2188 06fa 40F20003 		movw	r3, #:lower16:tcp_active_pcbs
 2189 06fe C0F20003 		movt	r3, #:upper16:tcp_active_pcbs
 2190 0702 1A68     		ldr	r2, [r3, #0]
 2191 0704 40F20003 		movw	r3, #:lower16:tcp_tmp_pcb
 2192 0708 C0F20003 		movt	r3, #:upper16:tcp_tmp_pcb
 2193 070c 1A60     		str	r2, [r3, #0]
 2194 070e 1CE0     		b	.L106
 2195              	.L108:
 2196              		.loc 1 708 0 discriminator 7
 2197 0710 40F20003 		movw	r3, #:lower16:tcp_tmp_pcb
 2198 0714 C0F20003 		movt	r3, #:upper16:tcp_tmp_pcb
 2199 0718 1B68     		ldr	r3, [r3, #0]
 2200 071a DA68     		ldr	r2, [r3, #12]
 2201 071c 7B68     		ldr	r3, [r7, #4]
 2202 071e 9A42     		cmp	r2, r3
 2203 0720 08D1     		bne	.L107
 2204              		.loc 1 708 0 discriminator 4
 2205 0722 40F20003 		movw	r3, #:lower16:tcp_tmp_pcb
 2206 0726 C0F20003 		movt	r3, #:upper16:tcp_tmp_pcb
 2207 072a 1B68     		ldr	r3, [r3, #0]
 2208 072c 7A68     		ldr	r2, [r7, #4]
 2209 072e D268     		ldr	r2, [r2, #12]
 2210 0730 DA60     		str	r2, [r3, #12]
 2211 0732 11E0     		b	.L105
 2212              	.L107:
 2213              		.loc 1 708 0 discriminator 5
 2214 0734 40F20003 		movw	r3, #:lower16:tcp_tmp_pcb
 2215 0738 C0F20003 		movt	r3, #:upper16:tcp_tmp_pcb
 2216 073c 1B68     		ldr	r3, [r3, #0]
 2217 073e DA68     		ldr	r2, [r3, #12]
 2218 0740 40F20003 		movw	r3, #:lower16:tcp_tmp_pcb
 2219 0744 C0F20003 		movt	r3, #:upper16:tcp_tmp_pcb
 2220 0748 1A60     		str	r2, [r3, #0]
 2221              	.L106:
 2222              		.loc 1 708 0 discriminator 3
 2223 074a 40F20003 		movw	r3, #:lower16:tcp_tmp_pcb
 2224 074e C0F20003 		movt	r3, #:upper16:tcp_tmp_pcb
 2225 0752 1B68     		ldr	r3, [r3, #0]
 2226 0754 002B     		cmp	r3, #0
 2227 0756 DBD1     		bne	.L108
 2228              	.L105:
 2229              		.loc 1 708 0 discriminator 6
 2230 0758 7B68     		ldr	r3, [r7, #4]
 2231 075a 4FF00002 		mov	r2, #0
 2232 075e DA60     		str	r2, [r3, #12]
 709:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       pcb->state = TIME_WAIT;
 2233              		.loc 1 709 0 is_stmt 1 discriminator 6
 2234 0760 7B68     		ldr	r3, [r7, #4]
 2235 0762 4FF00A02 		mov	r2, #10
 2236 0766 1A74     		strb	r2, [r3, #16]
 710:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       TCP_REG(&tcp_tw_pcbs, pcb);
 2237              		.loc 1 710 0 discriminator 6
 2238 0768 40F20003 		movw	r3, #:lower16:tcp_tw_pcbs
 2239 076c C0F20003 		movt	r3, #:upper16:tcp_tw_pcbs
 2240 0770 1A68     		ldr	r2, [r3, #0]
 2241 0772 7B68     		ldr	r3, [r7, #4]
 2242 0774 DA60     		str	r2, [r3, #12]
 2243 0776 40F20003 		movw	r3, #:lower16:tcp_tw_pcbs
 2244 077a C0F20003 		movt	r3, #:upper16:tcp_tw_pcbs
 2245 077e 7A68     		ldr	r2, [r7, #4]
 2246 0780 1A60     		str	r2, [r3, #0]
 711:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     }
 712:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     break;
 2247              		.loc 1 712 0 discriminator 6
 2248 0782 9FE0     		b	.L122
 2249              	.L70:
 713:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   case CLOSING:
 714:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     tcp_receive(pcb);
 2250              		.loc 1 714 0
 2251 0784 7868     		ldr	r0, [r7, #4]
 2252 0786 FFF7FEFF 		bl	tcp_receive
 715:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     if (flags & TCP_ACK && ackno == pcb->snd_nxt) {
 2253              		.loc 1 715 0
 2254 078a 40F20003 		movw	r3, #:lower16:flags
 2255 078e C0F20003 		movt	r3, #:upper16:flags
 2256 0792 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2257 0794 03F01003 		and	r3, r3, #16
 2258 0798 002B     		cmp	r3, #0
 2259 079a 00F09580 		beq	.L123
 2260              		.loc 1 715 0 is_stmt 0 discriminator 1
 2261 079e 7B68     		ldr	r3, [r7, #4]
 2262 07a0 9A6D     		ldr	r2, [r3, #88]
 2263 07a2 40F20003 		movw	r3, #:lower16:ackno
 2264 07a6 C0F20003 		movt	r3, #:upper16:ackno
 2265 07aa 1B68     		ldr	r3, [r3, #0]
 2266 07ac 9A42     		cmp	r2, r3
 2267 07ae 40F08B80 		bne	.L123
 716:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       LWIP_DEBUGF(TCP_DEBUG, ("TCP connection closed: CLOSING %"U16_F" -> %"U16_F".\n", inseg.tcphd
 717:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       tcp_pcb_purge(pcb);
 2268              		.loc 1 717 0 is_stmt 1
 2269 07b2 7868     		ldr	r0, [r7, #4]
 2270 07b4 FFF7FEFF 		bl	tcp_pcb_purge
 718:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       TCP_RMV(&tcp_active_pcbs, pcb);
 2271              		.loc 1 718 0
 2272 07b8 40F20003 		movw	r3, #:lower16:tcp_active_pcbs
 2273 07bc C0F20003 		movt	r3, #:upper16:tcp_active_pcbs
 2274 07c0 1A68     		ldr	r2, [r3, #0]
 2275 07c2 7B68     		ldr	r3, [r7, #4]
 2276 07c4 9A42     		cmp	r2, r3
 2277 07c6 0BD1     		bne	.L110
 2278              		.loc 1 718 0 is_stmt 0 discriminator 1
 2279 07c8 40F20003 		movw	r3, #:lower16:tcp_active_pcbs
 2280 07cc C0F20003 		movt	r3, #:upper16:tcp_active_pcbs
 2281 07d0 1B68     		ldr	r3, [r3, #0]
 2282 07d2 DA68     		ldr	r2, [r3, #12]
 2283 07d4 40F20003 		movw	r3, #:lower16:tcp_active_pcbs
 2284 07d8 C0F20003 		movt	r3, #:upper16:tcp_active_pcbs
 2285 07dc 1A60     		str	r2, [r3, #0]
 2286 07de 2EE0     		b	.L111
 2287              	.L110:
 2288              		.loc 1 718 0 discriminator 2
 2289 07e0 40F20003 		movw	r3, #:lower16:tcp_active_pcbs
 2290 07e4 C0F20003 		movt	r3, #:upper16:tcp_active_pcbs
 2291 07e8 1A68     		ldr	r2, [r3, #0]
 2292 07ea 40F20003 		movw	r3, #:lower16:tcp_tmp_pcb
 2293 07ee C0F20003 		movt	r3, #:upper16:tcp_tmp_pcb
 2294 07f2 1A60     		str	r2, [r3, #0]
 2295 07f4 1CE0     		b	.L112
 2296              	.L114:
 2297              		.loc 1 718 0 discriminator 7
 2298 07f6 40F20003 		movw	r3, #:lower16:tcp_tmp_pcb
 2299 07fa C0F20003 		movt	r3, #:upper16:tcp_tmp_pcb
 2300 07fe 1B68     		ldr	r3, [r3, #0]
 2301 0800 DA68     		ldr	r2, [r3, #12]
 2302 0802 7B68     		ldr	r3, [r7, #4]
 2303 0804 9A42     		cmp	r2, r3
 2304 0806 08D1     		bne	.L113
 2305              		.loc 1 718 0 discriminator 4
 2306 0808 40F20003 		movw	r3, #:lower16:tcp_tmp_pcb
 2307 080c C0F20003 		movt	r3, #:upper16:tcp_tmp_pcb
 2308 0810 1B68     		ldr	r3, [r3, #0]
 2309 0812 7A68     		ldr	r2, [r7, #4]
 2310 0814 D268     		ldr	r2, [r2, #12]
 2311 0816 DA60     		str	r2, [r3, #12]
 2312 0818 11E0     		b	.L111
 2313              	.L113:
 2314              		.loc 1 718 0 discriminator 5
 2315 081a 40F20003 		movw	r3, #:lower16:tcp_tmp_pcb
 2316 081e C0F20003 		movt	r3, #:upper16:tcp_tmp_pcb
 2317 0822 1B68     		ldr	r3, [r3, #0]
 2318 0824 DA68     		ldr	r2, [r3, #12]
 2319 0826 40F20003 		movw	r3, #:lower16:tcp_tmp_pcb
 2320 082a C0F20003 		movt	r3, #:upper16:tcp_tmp_pcb
 2321 082e 1A60     		str	r2, [r3, #0]
 2322              	.L112:
 2323              		.loc 1 718 0 discriminator 3
 2324 0830 40F20003 		movw	r3, #:lower16:tcp_tmp_pcb
 2325 0834 C0F20003 		movt	r3, #:upper16:tcp_tmp_pcb
 2326 0838 1B68     		ldr	r3, [r3, #0]
 2327 083a 002B     		cmp	r3, #0
 2328 083c DBD1     		bne	.L114
 2329              	.L111:
 2330              		.loc 1 718 0 discriminator 6
 2331 083e 7B68     		ldr	r3, [r7, #4]
 2332 0840 4FF00002 		mov	r2, #0
 2333 0844 DA60     		str	r2, [r3, #12]
 719:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       pcb->state = TIME_WAIT;
 2334              		.loc 1 719 0 is_stmt 1 discriminator 6
 2335 0846 7B68     		ldr	r3, [r7, #4]
 2336 0848 4FF00A02 		mov	r2, #10
 2337 084c 1A74     		strb	r2, [r3, #16]
 720:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       TCP_REG(&tcp_tw_pcbs, pcb);
 2338              		.loc 1 720 0 discriminator 6
 2339 084e 40F20003 		movw	r3, #:lower16:tcp_tw_pcbs
 2340 0852 C0F20003 		movt	r3, #:upper16:tcp_tw_pcbs
 2341 0856 1A68     		ldr	r2, [r3, #0]
 2342 0858 7B68     		ldr	r3, [r7, #4]
 2343 085a DA60     		str	r2, [r3, #12]
 2344 085c 40F20003 		movw	r3, #:lower16:tcp_tw_pcbs
 2345 0860 C0F20003 		movt	r3, #:upper16:tcp_tw_pcbs
 2346 0864 7A68     		ldr	r2, [r7, #4]
 2347 0866 1A60     		str	r2, [r3, #0]
 721:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     }
 722:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     break;
 2348              		.loc 1 722 0 discriminator 6
 2349 0868 2EE0     		b	.L123
 2350              	.L71:
 723:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   case LAST_ACK:
 724:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     tcp_receive(pcb);
 2351              		.loc 1 724 0
 2352 086a 7868     		ldr	r0, [r7, #4]
 2353 086c FFF7FEFF 		bl	tcp_receive
 725:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     if (flags & TCP_ACK && ackno == pcb->snd_nxt) {
 2354              		.loc 1 725 0
 2355 0870 40F20003 		movw	r3, #:lower16:flags
 2356 0874 C0F20003 		movt	r3, #:upper16:flags
 2357 0878 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2358 087a 03F01003 		and	r3, r3, #16
 2359 087e 002B     		cmp	r3, #0
 2360 0880 24D0     		beq	.L124
 2361              		.loc 1 725 0 is_stmt 0 discriminator 1
 2362 0882 7B68     		ldr	r3, [r7, #4]
 2363 0884 9A6D     		ldr	r2, [r3, #88]
 2364 0886 40F20003 		movw	r3, #:lower16:ackno
 2365 088a C0F20003 		movt	r3, #:upper16:ackno
 2366 088e 1B68     		ldr	r3, [r3, #0]
 2367 0890 9A42     		cmp	r2, r3
 2368 0892 1BD1     		bne	.L124
 726:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       LWIP_DEBUGF(TCP_DEBUG, ("TCP connection closed: LAST_ACK %"U16_F" -> %"U16_F".\n", inseg.tcph
 727:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       /* bugfix #21699: don't set pcb->state to CLOSED here or we risk leaking segments */
 728:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       recv_flags |= TF_CLOSED;
 2369              		.loc 1 728 0 is_stmt 1
 2370 0894 40F20003 		movw	r3, #:lower16:recv_flags
 2371 0898 C0F20003 		movt	r3, #:upper16:recv_flags
 2372 089c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2373 089e 43F01003 		orr	r3, r3, #16
 2374 08a2 DAB2     		uxtb	r2, r3
 2375 08a4 40F20003 		movw	r3, #:lower16:recv_flags
 2376 08a8 C0F20003 		movt	r3, #:upper16:recv_flags
 2377 08ac 1A70     		strb	r2, [r3, #0]
 729:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     }
 730:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     break;
 2378              		.loc 1 730 0
 2379 08ae 0DE0     		b	.L124
 2380              	.L116:
 731:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   default:
 732:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     break;
 2381              		.loc 1 732 0
 2382 08b0 00BF     		nop
 2383 08b2 0CE0     		b	.L81
 2384              	.L117:
 627:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     break;
 2385              		.loc 1 627 0
 2386 08b4 00BF     		nop
 2387 08b6 0AE0     		b	.L81
 2388              	.L119:
 673:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     break;
 2389              		.loc 1 673 0
 2390 08b8 00BF     		nop
 2391 08ba 08E0     		b	.L81
 2392              	.L120:
 682:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     break;
 2393              		.loc 1 682 0
 2394 08bc 00BF     		nop
 2395 08be 06E0     		b	.L81
 2396              	.L121:
 701:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     break;
 2397              		.loc 1 701 0
 2398 08c0 00BF     		nop
 2399 08c2 04E0     		b	.L81
 2400              	.L122:
 712:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     break;
 2401              		.loc 1 712 0
 2402 08c4 00BF     		nop
 2403 08c6 02E0     		b	.L81
 2404              	.L123:
 722:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     break;
 2405              		.loc 1 722 0
 2406 08c8 00BF     		nop
 2407 08ca 00E0     		b	.L81
 2408              	.L124:
 730:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     break;
 2409              		.loc 1 730 0
 2410 08cc 00BF     		nop
 2411              	.L81:
 733:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   }
 734:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   return ERR_OK;
 2412              		.loc 1 734 0
 2413 08ce 4FF00003 		mov	r3, #0
 2414              	.L62:
 2415 08d2 5BB2     		sxtb	r3, r3
 735:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** }
 2416              		.loc 1 735 0
 2417 08d4 1846     		mov	r0, r3
 2418 08d6 07F11807 		add	r7, r7, #24
 2419 08da BD46     		mov	sp, r7
 2420 08dc B0BD     		pop	{r4, r5, r7, pc}
 2421              		.cfi_endproc
 2422              	.LFE3:
 2424 08de 00BF     		.section	.text.tcp_receive,"ax",%progbits
 2425              		.align	2
 2426              		.thumb
 2427              		.thumb_func
 2429              	tcp_receive:
 2430              	.LFB4:
 736:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
 737:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** #if TCP_QUEUE_OOSEQ
 738:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** /**
 739:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  * Insert segment into the list (segments covered with new one will be deleted)
 740:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  *
 741:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  * Called from tcp_receive()
 742:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  */
 743:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** static void
 744:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** tcp_oos_insert_segment(struct tcp_seg *cseg, struct tcp_seg *next)
 745:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** {
 746:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   struct tcp_seg *old_seg;
 747:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
 748:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   if (TCPH_FLAGS(cseg->tcphdr) & TCP_FIN) {
 749:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     /* received segment overlaps all following segments */
 750:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     tcp_segs_free(next);
 751:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     next = NULL;
 752:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   }
 753:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   else {
 754:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     /* delete some following segments
 755:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****        oos queue may have segments with FIN flag */
 756:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     while (next &&
 757:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****            TCP_SEQ_GEQ((seqno + cseg->len),
 758:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                       (next->tcphdr->seqno + next->len))) {
 759:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       /* cseg with FIN already processed */
 760:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       if (TCPH_FLAGS(next->tcphdr) & TCP_FIN) {
 761:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         TCPH_FLAGS_SET(cseg->tcphdr, TCPH_FLAGS(cseg->tcphdr) | TCP_FIN);
 762:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       }
 763:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       old_seg = next;
 764:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       next = next->next;
 765:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       tcp_seg_free(old_seg);
 766:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     }
 767:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     if (next &&
 768:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         TCP_SEQ_GT(seqno + cseg->len, next->tcphdr->seqno)) {
 769:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       /* We need to trim the incoming segment. */
 770:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       cseg->len = (u16_t)(next->tcphdr->seqno - seqno);
 771:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       pbuf_realloc(cseg->p, cseg->len);
 772:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     }
 773:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   }
 774:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   cseg->next = next;
 775:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** }
 776:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** #endif
 777:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
 778:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** /**
 779:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  * Called by tcp_process. Checks if the given segment is an ACK for outstanding
 780:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  * data, and if so frees the memory of the buffered data. Next, is places the
 781:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  * segment on any of the receive queues (pcb->recved or pcb->ooseq). If the segment
 782:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  * is buffered, the pbuf is referenced by pbuf_ref so that it will not be freed until
 783:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  * i it has been removed from the buffer.
 784:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  *
 785:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  * If the incoming segment constitutes an ACK for a segment that was used for RTT
 786:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  * estimation, the RTT is estimated here as well.
 787:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  *
 788:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  * Called from tcp_process().
 789:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  */
 790:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** static void
 791:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** tcp_receive(struct tcp_pcb *pcb)
 792:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** {
 2431              		.loc 1 792 0
 2432              		.cfi_startproc
 2433              		@ args = 0, pretend = 0, frame = 40
 2434              		@ frame_needed = 1, uses_anonymous_args = 0
 2435 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2436              	.LCFI12:
 2437              		.cfi_def_cfa_offset 20
 2438              		.cfi_offset 4, -20
 2439              		.cfi_offset 5, -16
 2440              		.cfi_offset 6, -12
 2441              		.cfi_offset 7, -8
 2442              		.cfi_offset 14, -4
 2443 0002 8BB0     		sub	sp, sp, #44
 2444              	.LCFI13:
 2445              		.cfi_def_cfa_offset 64
 2446 0004 00AF     		add	r7, sp, #0
 2447              	.LCFI14:
 2448              		.cfi_def_cfa_register 7
 2449 0006 7860     		str	r0, [r7, #4]
 793:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   struct tcp_seg *next;
 794:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** #if TCP_QUEUE_OOSEQ
 795:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   struct tcp_seg *prev, *cseg;
 796:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** #endif
 797:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   struct pbuf *p;
 798:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   s32_t off;
 799:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   s16_t m;
 800:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   u32_t right_wnd_edge;
 801:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   u16_t new_tot_len;
 802:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   int found_dupack = 0;
 2450              		.loc 1 802 0
 2451 0008 4FF00003 		mov	r3, #0
 2452 000c BB61     		str	r3, [r7, #24]
 803:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
 804:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   if (flags & TCP_ACK) {
 2453              		.loc 1 804 0
 2454 000e 40F20003 		movw	r3, #:lower16:flags
 2455 0012 C0F20003 		movt	r3, #:upper16:flags
 2456 0016 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2457 0018 03F01003 		and	r3, r3, #16
 2458 001c 002B     		cmp	r3, #0
 2459 001e 00F0DD82 		beq	.L126
 805:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     right_wnd_edge = pcb->snd_wnd + pcb->snd_wl2;
 2460              		.loc 1 805 0
 2461 0022 7B68     		ldr	r3, [r7, #4]
 2462 0024 B3F85C30 		ldrh	r3, [r3, #92]
 2463 0028 1A46     		mov	r2, r3
 2464 002a 7B68     		ldr	r3, [r7, #4]
 2465 002c 5B6E     		ldr	r3, [r3, #100]
 2466 002e D318     		adds	r3, r2, r3
 2467 0030 7B61     		str	r3, [r7, #20]
 806:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
 807:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     /* Update window. */
 808:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     if (TCP_SEQ_LT(pcb->snd_wl1, seqno) ||
 2468              		.loc 1 808 0
 2469 0032 7B68     		ldr	r3, [r7, #4]
 2470 0034 1A6E     		ldr	r2, [r3, #96]
 2471 0036 40F20003 		movw	r3, #:lower16:seqno
 2472 003a C0F20003 		movt	r3, #:upper16:seqno
 2473 003e 1B68     		ldr	r3, [r3, #0]
 2474 0040 D31A     		subs	r3, r2, r3
 2475 0042 002B     		cmp	r3, #0
 2476 0044 27DB     		blt	.L127
 809:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****        (pcb->snd_wl1 == seqno && TCP_SEQ_LT(pcb->snd_wl2, ackno)) ||
 2477              		.loc 1 809 0 discriminator 1
 2478 0046 7B68     		ldr	r3, [r7, #4]
 2479 0048 1A6E     		ldr	r2, [r3, #96]
 2480 004a 40F20003 		movw	r3, #:lower16:seqno
 2481 004e C0F20003 		movt	r3, #:upper16:seqno
 2482 0052 1B68     		ldr	r3, [r3, #0]
 808:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     if (TCP_SEQ_LT(pcb->snd_wl1, seqno) ||
 2483              		.loc 1 808 0 discriminator 1
 2484 0054 9A42     		cmp	r2, r3
 2485 0056 09D1     		bne	.L128
 2486              		.loc 1 809 0
 2487 0058 7B68     		ldr	r3, [r7, #4]
 2488 005a 5A6E     		ldr	r2, [r3, #100]
 2489 005c 40F20003 		movw	r3, #:lower16:ackno
 2490 0060 C0F20003 		movt	r3, #:upper16:ackno
 2491 0064 1B68     		ldr	r3, [r3, #0]
 2492 0066 D31A     		subs	r3, r2, r3
 2493 0068 002B     		cmp	r3, #0
 2494 006a 14DB     		blt	.L127
 2495              	.L128:
 810:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****        (pcb->snd_wl2 == ackno && tcphdr->wnd > pcb->snd_wnd)) {
 2496              		.loc 1 810 0 discriminator 1
 2497 006c 7B68     		ldr	r3, [r7, #4]
 2498 006e 5A6E     		ldr	r2, [r3, #100]
 2499 0070 40F20003 		movw	r3, #:lower16:ackno
 2500 0074 C0F20003 		movt	r3, #:upper16:ackno
 2501 0078 1B68     		ldr	r3, [r3, #0]
 809:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****        (pcb->snd_wl1 == seqno && TCP_SEQ_LT(pcb->snd_wl2, ackno)) ||
 2502              		.loc 1 809 0 discriminator 1
 2503 007a 9A42     		cmp	r2, r3
 2504 007c 32D1     		bne	.L129
 2505              		.loc 1 810 0
 2506 007e 40F20003 		movw	r3, #:lower16:tcphdr
 2507 0082 C0F20003 		movt	r3, #:upper16:tcphdr
 2508 0086 1B68     		ldr	r3, [r3, #0]
 2509 0088 DB89     		ldrh	r3, [r3, #14]	@ unaligned
 2510 008a 9AB2     		uxth	r2, r3
 2511 008c 7B68     		ldr	r3, [r7, #4]
 2512 008e B3F85C30 		ldrh	r3, [r3, #92]
 2513 0092 9A42     		cmp	r2, r3
 2514 0094 26D9     		bls	.L129
 2515              	.L127:
 811:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       pcb->snd_wnd = tcphdr->wnd;
 2516              		.loc 1 811 0
 2517 0096 40F20003 		movw	r3, #:lower16:tcphdr
 2518 009a C0F20003 		movt	r3, #:upper16:tcphdr
 2519 009e 1B68     		ldr	r3, [r3, #0]
 2520 00a0 DB89     		ldrh	r3, [r3, #14]	@ unaligned
 2521 00a2 9AB2     		uxth	r2, r3
 2522 00a4 7B68     		ldr	r3, [r7, #4]
 2523 00a6 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 812:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       pcb->snd_wl1 = seqno;
 2524              		.loc 1 812 0
 2525 00aa 40F20003 		movw	r3, #:lower16:seqno
 2526 00ae C0F20003 		movt	r3, #:upper16:seqno
 2527 00b2 1A68     		ldr	r2, [r3, #0]
 2528 00b4 7B68     		ldr	r3, [r7, #4]
 2529 00b6 1A66     		str	r2, [r3, #96]
 813:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       pcb->snd_wl2 = ackno;
 2530              		.loc 1 813 0
 2531 00b8 40F20003 		movw	r3, #:lower16:ackno
 2532 00bc C0F20003 		movt	r3, #:upper16:ackno
 2533 00c0 1A68     		ldr	r2, [r3, #0]
 2534 00c2 7B68     		ldr	r3, [r7, #4]
 2535 00c4 5A66     		str	r2, [r3, #100]
 814:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       if (pcb->snd_wnd > 0 && pcb->persist_backoff > 0) {
 2536              		.loc 1 814 0
 2537 00c6 7B68     		ldr	r3, [r7, #4]
 2538 00c8 B3F85C30 		ldrh	r3, [r3, #92]
 2539 00cc 002B     		cmp	r3, #0
 2540 00ce 09D0     		beq	.L129
 2541              		.loc 1 814 0 is_stmt 0 discriminator 1
 2542 00d0 7B68     		ldr	r3, [r7, #4]
 2543 00d2 93F89C30 		ldrb	r3, [r3, #156]	@ zero_extendqisi2
 2544 00d6 002B     		cmp	r3, #0
 2545 00d8 04D0     		beq	.L129
 815:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           pcb->persist_backoff = 0;
 2546              		.loc 1 815 0 is_stmt 1
 2547 00da 7B68     		ldr	r3, [r7, #4]
 2548 00dc 4FF00002 		mov	r2, #0
 2549 00e0 83F89C20 		strb	r2, [r3, #156]
 2550              	.L129:
 816:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       }
 817:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       LWIP_DEBUGF(TCP_WND_DEBUG, ("tcp_receive: window update %"U16_F"\n", pcb->snd_wnd));
 818:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** #if TCP_WND_DEBUG
 819:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     } else {
 820:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       if (pcb->snd_wnd != tcphdr->wnd) {
 821:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         LWIP_DEBUGF(TCP_WND_DEBUG, 
 822:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                     ("tcp_receive: no window update lastack %"U32_F" ackno %"
 823:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                      U32_F" wl1 %"U32_F" seqno %"U32_F" wl2 %"U32_F"\n",
 824:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                      pcb->lastack, ackno, pcb->snd_wl1, seqno, pcb->snd_wl2));
 825:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       }
 826:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** #endif /* TCP_WND_DEBUG */
 827:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     }
 828:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
 829:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     /* (From Stevens TCP/IP Illustrated Vol II, p970.) Its only a
 830:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****      * duplicate ack if:
 831:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****      * 1) It doesn't ACK new data 
 832:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****      * 2) length of received packet is zero (i.e. no payload) 
 833:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****      * 3) the advertised window hasn't changed 
 834:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****      * 4) There is outstanding unacknowledged data (retransmission timer running)
 835:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****      * 5) The ACK is == biggest ACK sequence number so far seen (snd_una)
 836:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****      * 
 837:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****      * If it passes all five, should process as a dupack: 
 838:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****      * a) dupacks < 3: do nothing 
 839:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****      * b) dupacks == 3: fast retransmit 
 840:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****      * c) dupacks > 3: increase cwnd 
 841:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****      * 
 842:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****      * If it only passes 1-3, should reset dupack counter (and add to
 843:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****      * stats, which we don't do in lwIP)
 844:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****      *
 845:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****      * If it only passes 1, should reset dupack counter
 846:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****      *
 847:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****      */
 848:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
 849:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     /* Clause 1 */
 850:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     if (TCP_SEQ_LEQ(ackno, pcb->lastack)) {
 2551              		.loc 1 850 0
 2552 00e4 40F20003 		movw	r3, #:lower16:ackno
 2553 00e8 C0F20003 		movt	r3, #:upper16:ackno
 2554 00ec 1A68     		ldr	r2, [r3, #0]
 2555 00ee 7B68     		ldr	r3, [r7, #4]
 2556 00f0 DB6C     		ldr	r3, [r3, #76]
 2557 00f2 D31A     		subs	r3, r2, r3
 2558 00f4 002B     		cmp	r3, #0
 2559 00f6 66DC     		bgt	.L130
 851:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       pcb->acked = 0;
 2560              		.loc 1 851 0
 2561 00f8 7B68     		ldr	r3, [r7, #4]
 2562 00fa 4FF00002 		mov	r2, #0
 2563 00fe A3F86C20 		strh	r2, [r3, #108]	@ movhi
 852:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       /* Clause 2 */
 853:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       if (tcplen == 0) {
 2564              		.loc 1 853 0
 2565 0102 40F20003 		movw	r3, #:lower16:tcplen
 2566 0106 C0F20003 		movt	r3, #:upper16:tcplen
 2567 010a 1B88     		ldrh	r3, [r3, #0]
 2568 010c 002B     		cmp	r3, #0
 2569 010e 50D1     		bne	.L131
 854:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         /* Clause 3 */
 855:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         if (pcb->snd_wl2 + pcb->snd_wnd == right_wnd_edge){
 2570              		.loc 1 855 0
 2571 0110 7B68     		ldr	r3, [r7, #4]
 2572 0112 5A6E     		ldr	r2, [r3, #100]
 2573 0114 7B68     		ldr	r3, [r7, #4]
 2574 0116 B3F85C30 		ldrh	r3, [r3, #92]
 2575 011a D218     		adds	r2, r2, r3
 2576 011c 7B69     		ldr	r3, [r7, #20]
 2577 011e 9A42     		cmp	r2, r3
 2578 0120 47D1     		bne	.L131
 856:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           /* Clause 4 */
 857:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           if (pcb->rtime >= 0) {
 2579              		.loc 1 857 0
 2580 0122 7B68     		ldr	r3, [r7, #4]
 2581 0124 DB8E     		ldrh	r3, [r3, #54]
 2582 0126 1BB2     		sxth	r3, r3
 2583 0128 002B     		cmp	r3, #0
 2584 012a 42DB     		blt	.L131
 858:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****             /* Clause 5 */
 859:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****             if (pcb->lastack == ackno) {
 2585              		.loc 1 859 0
 2586 012c 7B68     		ldr	r3, [r7, #4]
 2587 012e DA6C     		ldr	r2, [r3, #76]
 2588 0130 40F20003 		movw	r3, #:lower16:ackno
 2589 0134 C0F20003 		movt	r3, #:upper16:ackno
 2590 0138 1B68     		ldr	r3, [r3, #0]
 2591 013a 9A42     		cmp	r2, r3
 2592 013c 39D1     		bne	.L131
 860:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****               found_dupack = 1;
 2593              		.loc 1 860 0
 2594 013e 4FF00103 		mov	r3, #1
 2595 0142 BB61     		str	r3, [r7, #24]
 861:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****               if (pcb->dupacks + 1 > pcb->dupacks)
 2596              		.loc 1 861 0
 2597 0144 7B68     		ldr	r3, [r7, #4]
 2598 0146 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 2599 014a 03F10102 		add	r2, r3, #1
 2600 014e 7B68     		ldr	r3, [r7, #4]
 2601 0150 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 2602 0154 9A42     		cmp	r2, r3
 2603 0156 08DD     		ble	.L132
 862:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                 ++pcb->dupacks;
 2604              		.loc 1 862 0
 2605 0158 7B68     		ldr	r3, [r7, #4]
 2606 015a 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 2607 015e 03F10103 		add	r3, r3, #1
 2608 0162 DAB2     		uxtb	r2, r3
 2609 0164 7B68     		ldr	r3, [r7, #4]
 2610 0166 83F85020 		strb	r2, [r3, #80]
 2611              	.L132:
 863:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****               if (pcb->dupacks > 3) {
 2612              		.loc 1 863 0
 2613 016a 7B68     		ldr	r3, [r7, #4]
 2614 016c 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 2615 0170 032B     		cmp	r3, #3
 2616 0172 16D9     		bls	.L133
 864:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                 /* Inflate the congestion window, but not if it means that
 865:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                    the value overflows. */
 866:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                 if ((u16_t)(pcb->cwnd + pcb->mss) > pcb->cwnd) {
 2617              		.loc 1 866 0
 2618 0174 7B68     		ldr	r3, [r7, #4]
 2619 0176 B3F85220 		ldrh	r2, [r3, #82]
 2620 017a 7B68     		ldr	r3, [r7, #4]
 2621 017c 1B8F     		ldrh	r3, [r3, #56]
 2622 017e D318     		adds	r3, r2, r3
 2623 0180 9AB2     		uxth	r2, r3
 2624 0182 7B68     		ldr	r3, [r7, #4]
 2625 0184 B3F85230 		ldrh	r3, [r3, #82]
 2626 0188 9A42     		cmp	r2, r3
 2627 018a 12D9     		bls	.L131
 867:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                   pcb->cwnd += pcb->mss;
 2628              		.loc 1 867 0
 2629 018c 7B68     		ldr	r3, [r7, #4]
 2630 018e B3F85220 		ldrh	r2, [r3, #82]
 2631 0192 7B68     		ldr	r3, [r7, #4]
 2632 0194 1B8F     		ldrh	r3, [r3, #56]
 2633 0196 D318     		adds	r3, r2, r3
 2634 0198 9AB2     		uxth	r2, r3
 2635 019a 7B68     		ldr	r3, [r7, #4]
 2636 019c A3F85220 		strh	r2, [r3, #82]	@ movhi
 2637 01a0 07E0     		b	.L131
 2638              	.L133:
 868:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                 }
 869:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****               } else if (pcb->dupacks == 3) {
 2639              		.loc 1 869 0
 2640 01a2 7B68     		ldr	r3, [r7, #4]
 2641 01a4 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 2642 01a8 032B     		cmp	r3, #3
 2643 01aa 02D1     		bne	.L131
 870:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                 /* Do fast retransmit */
 871:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                 tcp_rexmit_fast(pcb);
 2644              		.loc 1 871 0
 2645 01ac 7868     		ldr	r0, [r7, #4]
 2646 01ae FFF7FEFF 		bl	tcp_rexmit_fast
 2647              	.L131:
 872:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****               }
 873:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****             }
 874:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           }
 875:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         }
 876:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       }
 877:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       /* If Clause (1) or more is true, but not a duplicate ack, reset
 878:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****        * count of consecutive duplicate acks */
 879:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       if (!found_dupack) {
 2648              		.loc 1 879 0
 2649 01b2 BB69     		ldr	r3, [r7, #24]
 2650 01b4 002B     		cmp	r3, #0
 2651 01b6 40F07581 		bne	.L169
 880:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         pcb->dupacks = 0;
 2652              		.loc 1 880 0
 2653 01ba 7B68     		ldr	r3, [r7, #4]
 2654 01bc 4FF00002 		mov	r2, #0
 2655 01c0 83F85020 		strb	r2, [r3, #80]
 881:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       }
 882:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     } else if (TCP_SEQ_BETWEEN(ackno, pcb->lastack+1, pcb->snd_nxt)){
 883:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       /* We come here when the ACK acknowledges new data. */
 884:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
 885:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       /* Reset the "IN Fast Retransmit" flag, since we are no longer
 886:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****          in fast retransmit. Also reset the congestion window to the
 887:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****          slow start threshold. */
 888:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       if (pcb->flags & TF_INFR) {
 889:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         pcb->flags &= ~TF_INFR;
 890:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         pcb->cwnd = pcb->ssthresh;
 891:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       }
 892:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
 893:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       /* Reset the number of retransmissions. */
 894:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       pcb->nrtx = 0;
 895:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
 896:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       /* Reset the retransmission time-out. */
 897:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       pcb->rto = (pcb->sa >> 3) + pcb->sv;
 898:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
 899:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       /* Update the send buffer space. Diff between the two can never exceed 64K? */
 900:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       pcb->acked = (u16_t)(ackno - pcb->lastack);
 901:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
 902:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       pcb->snd_buf += pcb->acked;
 903:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
 904:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       /* Reset the fast retransmit variables. */
 905:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       pcb->dupacks = 0;
 906:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       pcb->lastack = ackno;
 907:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
 908:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       /* Update the congestion control variables (cwnd and
 909:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****          ssthresh). */
 910:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       if (pcb->state >= ESTABLISHED) {
 911:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         if (pcb->cwnd < pcb->ssthresh) {
 912:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           if ((u16_t)(pcb->cwnd + pcb->mss) > pcb->cwnd) {
 913:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****             pcb->cwnd += pcb->mss;
 914:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           }
 915:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           LWIP_DEBUGF(TCP_CWND_DEBUG, ("tcp_receive: slow start cwnd %"U16_F"\n", pcb->cwnd));
 916:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         } else {
 917:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           u16_t new_cwnd = (pcb->cwnd + pcb->mss * pcb->mss / pcb->cwnd);
 918:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           if (new_cwnd > pcb->cwnd) {
 919:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****             pcb->cwnd = new_cwnd;
 920:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           }
 921:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           LWIP_DEBUGF(TCP_CWND_DEBUG, ("tcp_receive: congestion avoidance cwnd %"U16_F"\n", pcb->cw
 922:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         }
 923:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       }
 924:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       LWIP_DEBUGF(TCP_INPUT_DEBUG, ("tcp_receive: ACK for %"U32_F", unacked->seqno %"U32_F":%"U32_F
 925:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                                     ackno,
 926:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                                     pcb->unacked != NULL?
 927:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                                     ntohl(pcb->unacked->tcphdr->seqno): 0,
 928:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                                     pcb->unacked != NULL?
 929:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                                     ntohl(pcb->unacked->tcphdr->seqno) + TCP_TCPLEN(pcb->unacked): 
 930:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
 931:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       /* Remove segment from the unacknowledged list if the incoming
 932:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****          ACK acknowlegdes them. */
 933:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       while (pcb->unacked != NULL &&
 934:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****              TCP_SEQ_LEQ(ntohl(pcb->unacked->tcphdr->seqno) +
 935:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                          TCP_TCPLEN(pcb->unacked), ackno)) {
 936:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         LWIP_DEBUGF(TCP_INPUT_DEBUG, ("tcp_receive: removing %"U32_F":%"U32_F" from pcb->unacked\n"
 937:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                                       ntohl(pcb->unacked->tcphdr->seqno),
 938:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                                       ntohl(pcb->unacked->tcphdr->seqno) +
 939:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                                       TCP_TCPLEN(pcb->unacked)));
 940:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
 941:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         next = pcb->unacked;
 942:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         pcb->unacked = pcb->unacked->next;
 943:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
 944:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         LWIP_DEBUGF(TCP_QLEN_DEBUG, ("tcp_receive: queuelen %"U16_F" ... ", (u16_t)pcb->snd_queuele
 945:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         LWIP_ASSERT("pcb->snd_queuelen >= pbuf_clen(next->p)", (pcb->snd_queuelen >= pbuf_clen(next
 946:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         /* Prevent ACK for FIN to generate a sent event */
 947:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         if ((pcb->acked != 0) && ((TCPH_FLAGS(next->tcphdr) & TCP_FIN) != 0)) {
 948:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           pcb->acked--;
 949:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         }
 950:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
 951:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         pcb->snd_queuelen -= pbuf_clen(next->p);
 952:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         tcp_seg_free(next);
 953:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
 954:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         LWIP_DEBUGF(TCP_QLEN_DEBUG, ("%"U16_F" (after freeing unacked)\n", (u16_t)pcb->snd_queuelen
 955:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         if (pcb->snd_queuelen != 0) {
 956:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           LWIP_ASSERT("tcp_receive: valid queue length", pcb->unacked != NULL ||
 957:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                       pcb->unsent != NULL);
 958:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         }
 959:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       }
 960:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
 961:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       /* If there's nothing left to acknowledge, stop the retransmit
 962:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****          timer, otherwise reset it to start again */
 963:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       if(pcb->unacked == NULL)
 964:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         pcb->rtime = -1;
 965:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       else
 966:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         pcb->rtime = 0;
 967:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
 968:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       pcb->polltmr = 0;
 969:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     } else {
 970:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       /* Fix bug bug #21582: out of sequence ACK, didn't really ack anything */
 971:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       pcb->acked = 0;
 972:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     }
 973:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
 974:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     /* We go through the ->unsent list to see if any of the segments
 975:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****        on the list are acknowledged by the ACK. This may seem
 976:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****        strange since an "unsent" segment shouldn't be acked. The
 977:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****        rationale is that lwIP puts all outstanding segments on the
 978:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****        ->unsent list after a retransmission, so these segments may
 979:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****        in fact have been sent once. */
 980:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     while (pcb->unsent != NULL &&
 2656              		.loc 1 980 0
 2657 01c4 6EE1     		b	.L169
 2658              	.L130:
 882:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     } else if (TCP_SEQ_BETWEEN(ackno, pcb->lastack+1, pcb->snd_nxt)){
 2659              		.loc 1 882 0
 2660 01c6 7B68     		ldr	r3, [r7, #4]
 2661 01c8 DB6C     		ldr	r3, [r3, #76]
 2662 01ca 6FEA0302 		mvn	r2, r3
 2663 01ce 40F20003 		movw	r3, #:lower16:ackno
 2664 01d2 C0F20003 		movt	r3, #:upper16:ackno
 2665 01d6 1B68     		ldr	r3, [r3, #0]
 2666 01d8 D318     		adds	r3, r2, r3
 2667 01da 002B     		cmp	r3, #0
 2668 01dc C0F21B81 		blt	.L135
 882:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     } else if (TCP_SEQ_BETWEEN(ackno, pcb->lastack+1, pcb->snd_nxt)){
 2669              		.loc 1 882 0 is_stmt 0 discriminator 1
 2670 01e0 40F20003 		movw	r3, #:lower16:ackno
 2671 01e4 C0F20003 		movt	r3, #:upper16:ackno
 2672 01e8 1A68     		ldr	r2, [r3, #0]
 2673 01ea 7B68     		ldr	r3, [r7, #4]
 2674 01ec 9B6D     		ldr	r3, [r3, #88]
 2675 01ee D31A     		subs	r3, r2, r3
 2676 01f0 002B     		cmp	r3, #0
 2677 01f2 00F31081 		bgt	.L135
 888:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       if (pcb->flags & TF_INFR) {
 2678              		.loc 1 888 0 is_stmt 1
 2679 01f6 7B68     		ldr	r3, [r7, #4]
 2680 01f8 93F82230 		ldrb	r3, [r3, #34]	@ zero_extendqisi2
 2681 01fc 03F00403 		and	r3, r3, #4
 2682 0200 002B     		cmp	r3, #0
 2683 0202 0ED0     		beq	.L136
 889:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         pcb->flags &= ~TF_INFR;
 2684              		.loc 1 889 0
 2685 0204 7B68     		ldr	r3, [r7, #4]
 2686 0206 93F82230 		ldrb	r3, [r3, #34]	@ zero_extendqisi2
 2687 020a 23F00403 		bic	r3, r3, #4
 2688 020e DAB2     		uxtb	r2, r3
 2689 0210 7B68     		ldr	r3, [r7, #4]
 2690 0212 83F82220 		strb	r2, [r3, #34]
 890:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         pcb->cwnd = pcb->ssthresh;
 2691              		.loc 1 890 0
 2692 0216 7B68     		ldr	r3, [r7, #4]
 2693 0218 B3F85420 		ldrh	r2, [r3, #84]
 2694 021c 7B68     		ldr	r3, [r7, #4]
 2695 021e A3F85220 		strh	r2, [r3, #82]	@ movhi
 2696              	.L136:
 894:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       pcb->nrtx = 0;
 2697              		.loc 1 894 0
 2698 0222 7B68     		ldr	r3, [r7, #4]
 2699 0224 4FF00002 		mov	r2, #0
 2700 0228 83F84A20 		strb	r2, [r3, #74]
 897:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       pcb->rto = (pcb->sa >> 3) + pcb->sv;
 2701              		.loc 1 897 0
 2702 022c 7B68     		ldr	r3, [r7, #4]
 2703 022e B3F84430 		ldrh	r3, [r3, #68]
 2704 0232 1BB2     		sxth	r3, r3
 2705 0234 4FEAE303 		asr	r3, r3, #3
 2706 0238 9BB2     		uxth	r3, r3
 2707 023a 9AB2     		uxth	r2, r3
 2708 023c 7B68     		ldr	r3, [r7, #4]
 2709 023e B3F84630 		ldrh	r3, [r3, #70]
 2710 0242 9BB2     		uxth	r3, r3
 2711 0244 D318     		adds	r3, r2, r3
 2712 0246 9BB2     		uxth	r3, r3
 2713 0248 9AB2     		uxth	r2, r3
 2714 024a 7B68     		ldr	r3, [r7, #4]
 2715 024c A3F84820 		strh	r2, [r3, #72]	@ movhi
 900:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       pcb->acked = (u16_t)(ackno - pcb->lastack);
 2716              		.loc 1 900 0
 2717 0250 40F20003 		movw	r3, #:lower16:ackno
 2718 0254 C0F20003 		movt	r3, #:upper16:ackno
 2719 0258 1B68     		ldr	r3, [r3, #0]
 2720 025a 9AB2     		uxth	r2, r3
 2721 025c 7B68     		ldr	r3, [r7, #4]
 2722 025e DB6C     		ldr	r3, [r3, #76]
 2723 0260 9BB2     		uxth	r3, r3
 2724 0262 D31A     		subs	r3, r2, r3
 2725 0264 9AB2     		uxth	r2, r3
 2726 0266 7B68     		ldr	r3, [r7, #4]
 2727 0268 A3F86C20 		strh	r2, [r3, #108]	@ movhi
 902:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       pcb->snd_buf += pcb->acked;
 2728              		.loc 1 902 0
 2729 026c 7B68     		ldr	r3, [r7, #4]
 2730 026e B3F86E20 		ldrh	r2, [r3, #110]
 2731 0272 7B68     		ldr	r3, [r7, #4]
 2732 0274 B3F86C30 		ldrh	r3, [r3, #108]
 2733 0278 D318     		adds	r3, r2, r3
 2734 027a 9AB2     		uxth	r2, r3
 2735 027c 7B68     		ldr	r3, [r7, #4]
 2736 027e A3F86E20 		strh	r2, [r3, #110]	@ movhi
 905:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       pcb->dupacks = 0;
 2737              		.loc 1 905 0
 2738 0282 7B68     		ldr	r3, [r7, #4]
 2739 0284 4FF00002 		mov	r2, #0
 2740 0288 83F85020 		strb	r2, [r3, #80]
 906:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       pcb->lastack = ackno;
 2741              		.loc 1 906 0
 2742 028c 40F20003 		movw	r3, #:lower16:ackno
 2743 0290 C0F20003 		movt	r3, #:upper16:ackno
 2744 0294 1A68     		ldr	r2, [r3, #0]
 2745 0296 7B68     		ldr	r3, [r7, #4]
 2746 0298 DA64     		str	r2, [r3, #76]
 910:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       if (pcb->state >= ESTABLISHED) {
 2747              		.loc 1 910 0
 2748 029a 7B68     		ldr	r3, [r7, #4]
 2749 029c 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 2750 029e 032B     		cmp	r3, #3
 2751 02a0 7BD9     		bls	.L170
 911:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         if (pcb->cwnd < pcb->ssthresh) {
 2752              		.loc 1 911 0
 2753 02a2 7B68     		ldr	r3, [r7, #4]
 2754 02a4 B3F85220 		ldrh	r2, [r3, #82]
 2755 02a8 7B68     		ldr	r3, [r7, #4]
 2756 02aa B3F85430 		ldrh	r3, [r3, #84]
 2757 02ae 9A42     		cmp	r2, r3
 2758 02b0 16D2     		bcs	.L138
 912:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           if ((u16_t)(pcb->cwnd + pcb->mss) > pcb->cwnd) {
 2759              		.loc 1 912 0
 2760 02b2 7B68     		ldr	r3, [r7, #4]
 2761 02b4 B3F85220 		ldrh	r2, [r3, #82]
 2762 02b8 7B68     		ldr	r3, [r7, #4]
 2763 02ba 1B8F     		ldrh	r3, [r3, #56]
 2764 02bc D318     		adds	r3, r2, r3
 2765 02be 9AB2     		uxth	r2, r3
 2766 02c0 7B68     		ldr	r3, [r7, #4]
 2767 02c2 B3F85230 		ldrh	r3, [r3, #82]
 2768 02c6 9A42     		cmp	r2, r3
 2769 02c8 67D9     		bls	.L170
 913:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****             pcb->cwnd += pcb->mss;
 2770              		.loc 1 913 0
 2771 02ca 7B68     		ldr	r3, [r7, #4]
 2772 02cc B3F85220 		ldrh	r2, [r3, #82]
 2773 02d0 7B68     		ldr	r3, [r7, #4]
 2774 02d2 1B8F     		ldrh	r3, [r3, #56]
 2775 02d4 D318     		adds	r3, r2, r3
 2776 02d6 9AB2     		uxth	r2, r3
 2777 02d8 7B68     		ldr	r3, [r7, #4]
 2778 02da A3F85220 		strh	r2, [r3, #82]	@ movhi
 933:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       while (pcb->unacked != NULL &&
 2779              		.loc 1 933 0
 2780 02de 5CE0     		b	.L170
 2781              	.L138:
 2782              	.LBB3:
 917:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           u16_t new_cwnd = (pcb->cwnd + pcb->mss * pcb->mss / pcb->cwnd);
 2783              		.loc 1 917 0
 2784 02e0 7B68     		ldr	r3, [r7, #4]
 2785 02e2 B3F85220 		ldrh	r2, [r3, #82]
 2786 02e6 7B68     		ldr	r3, [r7, #4]
 2787 02e8 1B8F     		ldrh	r3, [r3, #56]
 2788 02ea 7968     		ldr	r1, [r7, #4]
 2789 02ec 098F     		ldrh	r1, [r1, #56]
 2790 02ee 01FB03F1 		mul	r1, r1, r3
 2791 02f2 7B68     		ldr	r3, [r7, #4]
 2792 02f4 B3F85230 		ldrh	r3, [r3, #82]
 2793 02f8 91FBF3F3 		sdiv	r3, r1, r3
 2794 02fc 9BB2     		uxth	r3, r3
 2795 02fe D318     		adds	r3, r2, r3
 2796 0300 7B82     		strh	r3, [r7, #18]	@ movhi
 918:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           if (new_cwnd > pcb->cwnd) {
 2797              		.loc 1 918 0
 2798 0302 7B68     		ldr	r3, [r7, #4]
 2799 0304 B3F85230 		ldrh	r3, [r3, #82]
 2800 0308 7A8A     		ldrh	r2, [r7, #18]
 2801 030a 9A42     		cmp	r2, r3
 2802 030c 45D9     		bls	.L170
 919:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****             pcb->cwnd = new_cwnd;
 2803              		.loc 1 919 0
 2804 030e 7B68     		ldr	r3, [r7, #4]
 2805 0310 7A8A     		ldrh	r2, [r7, #18]	@ movhi
 2806 0312 A3F85220 		strh	r2, [r3, #82]	@ movhi
 2807              	.LBE3:
 933:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       while (pcb->unacked != NULL &&
 2808              		.loc 1 933 0
 2809 0316 40E0     		b	.L170
 2810              	.L142:
 941:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         next = pcb->unacked;
 2811              		.loc 1 941 0
 2812 0318 7B68     		ldr	r3, [r7, #4]
 2813 031a 9B6F     		ldr	r3, [r3, #120]
 2814 031c FB60     		str	r3, [r7, #12]
 942:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         pcb->unacked = pcb->unacked->next;
 2815              		.loc 1 942 0
 2816 031e 7B68     		ldr	r3, [r7, #4]
 2817 0320 9B6F     		ldr	r3, [r3, #120]
 2818 0322 1A68     		ldr	r2, [r3, #0]
 2819 0324 7B68     		ldr	r3, [r7, #4]
 2820 0326 9A67     		str	r2, [r3, #120]
 945:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         LWIP_ASSERT("pcb->snd_queuelen >= pbuf_clen(next->p)", (pcb->snd_queuelen >= pbuf_clen(next
 2821              		.loc 1 945 0
 2822 0328 FB68     		ldr	r3, [r7, #12]
 2823 032a 5B68     		ldr	r3, [r3, #4]
 2824 032c 1846     		mov	r0, r3
 2825 032e FFF7FEFF 		bl	pbuf_clen
 947:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         if ((pcb->acked != 0) && ((TCPH_FLAGS(next->tcphdr) & TCP_FIN) != 0)) {
 2826              		.loc 1 947 0
 2827 0332 7B68     		ldr	r3, [r7, #4]
 2828 0334 B3F86C30 		ldrh	r3, [r3, #108]
 2829 0338 002B     		cmp	r3, #0
 2830 033a 14D0     		beq	.L140
 947:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         if ((pcb->acked != 0) && ((TCPH_FLAGS(next->tcphdr) & TCP_FIN) != 0)) {
 2831              		.loc 1 947 0 is_stmt 0 discriminator 1
 2832 033c FB68     		ldr	r3, [r7, #12]
 2833 033e 1B69     		ldr	r3, [r3, #16]
 2834 0340 9B89     		ldrh	r3, [r3, #12]	@ unaligned
 2835 0342 9BB2     		uxth	r3, r3
 2836 0344 1846     		mov	r0, r3
 2837 0346 FFF7FEFF 		bl	ntohs
 2838 034a 0346     		mov	r3, r0
 2839 034c 03F00103 		and	r3, r3, #1
 2840 0350 002B     		cmp	r3, #0
 2841 0352 08D0     		beq	.L140
 948:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           pcb->acked--;
 2842              		.loc 1 948 0 is_stmt 1
 2843 0354 7B68     		ldr	r3, [r7, #4]
 2844 0356 B3F86C30 		ldrh	r3, [r3, #108]
 2845 035a 03F1FF33 		add	r3, r3, #-1
 2846 035e 9AB2     		uxth	r2, r3
 2847 0360 7B68     		ldr	r3, [r7, #4]
 2848 0362 A3F86C20 		strh	r2, [r3, #108]	@ movhi
 2849              	.L140:
 951:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         pcb->snd_queuelen -= pbuf_clen(next->p);
 2850              		.loc 1 951 0
 2851 0366 7B68     		ldr	r3, [r7, #4]
 2852 0368 B3F87040 		ldrh	r4, [r3, #112]
 2853 036c FB68     		ldr	r3, [r7, #12]
 2854 036e 5B68     		ldr	r3, [r3, #4]
 2855 0370 1846     		mov	r0, r3
 2856 0372 FFF7FEFF 		bl	pbuf_clen
 2857 0376 0346     		mov	r3, r0
 2858 0378 E31A     		subs	r3, r4, r3
 2859 037a 9AB2     		uxth	r2, r3
 2860 037c 7B68     		ldr	r3, [r7, #4]
 2861 037e A3F87020 		strh	r2, [r3, #112]	@ movhi
 952:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         tcp_seg_free(next);
 2862              		.loc 1 952 0
 2863 0382 F868     		ldr	r0, [r7, #12]
 2864 0384 FFF7FEFF 		bl	tcp_seg_free
 955:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         if (pcb->snd_queuelen != 0) {
 2865              		.loc 1 955 0
 2866 0388 7B68     		ldr	r3, [r7, #4]
 2867 038a B3F87030 		ldrh	r3, [r3, #112]
 2868 038e 002B     		cmp	r3, #0
 2869 0390 04D0     		beq	.L139
 956:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           LWIP_ASSERT("tcp_receive: valid queue length", pcb->unacked != NULL ||
 2870              		.loc 1 956 0
 2871 0392 7B68     		ldr	r3, [r7, #4]
 2872 0394 9B6F     		ldr	r3, [r3, #120]
 2873 0396 002B     		cmp	r3, #0
 2874 0398 00E0     		b	.L139
 2875              	.L170:
 933:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       while (pcb->unacked != NULL &&
 2876              		.loc 1 933 0
 2877 039a 00BF     		nop
 2878              	.L139:
 933:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       while (pcb->unacked != NULL &&
 2879              		.loc 1 933 0 is_stmt 0 discriminator 1
 2880 039c 7B68     		ldr	r3, [r7, #4]
 2881 039e 9B6F     		ldr	r3, [r3, #120]
 2882 03a0 002B     		cmp	r3, #0
 2883 03a2 25D0     		beq	.L141
 934:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****              TCP_SEQ_LEQ(ntohl(pcb->unacked->tcphdr->seqno) +
 2884              		.loc 1 934 0 is_stmt 1 discriminator 2
 2885 03a4 7B68     		ldr	r3, [r7, #4]
 2886 03a6 9B6F     		ldr	r3, [r3, #120]
 2887 03a8 1B69     		ldr	r3, [r3, #16]
 2888 03aa 5B68     		ldr	r3, [r3, #4]	@ unaligned
 2889 03ac 1846     		mov	r0, r3
 2890 03ae FFF7FEFF 		bl	ntohl
 2891 03b2 0446     		mov	r4, r0
 2892 03b4 7B68     		ldr	r3, [r7, #4]
 2893 03b6 9B6F     		ldr	r3, [r3, #120]
 2894 03b8 9B89     		ldrh	r3, [r3, #12]
 2895 03ba 1D46     		mov	r5, r3
 2896 03bc 7B68     		ldr	r3, [r7, #4]
 2897 03be 9B6F     		ldr	r3, [r3, #120]
 2898 03c0 1B69     		ldr	r3, [r3, #16]
 2899 03c2 9B89     		ldrh	r3, [r3, #12]	@ unaligned
 2900 03c4 9BB2     		uxth	r3, r3
 2901 03c6 1846     		mov	r0, r3
 2902 03c8 FFF7FEFF 		bl	ntohs
 2903 03cc 0346     		mov	r3, r0
 2904 03ce 03F00303 		and	r3, r3, #3
 2905 03d2 002B     		cmp	r3, #0
 2906 03d4 0CBF     		ite	eq
 2907 03d6 0023     		moveq	r3, #0
 2908 03d8 0123     		movne	r3, #1
 2909 03da DBB2     		uxtb	r3, r3
 2910 03dc EB18     		adds	r3, r5, r3
 2911 03de E218     		adds	r2, r4, r3
 2912 03e0 40F20003 		movw	r3, #:lower16:ackno
 2913 03e4 C0F20003 		movt	r3, #:upper16:ackno
 2914 03e8 1B68     		ldr	r3, [r3, #0]
 2915 03ea D31A     		subs	r3, r2, r3
 933:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       while (pcb->unacked != NULL &&
 2916              		.loc 1 933 0 discriminator 2
 2917 03ec 002B     		cmp	r3, #0
 2918 03ee 93DD     		ble	.L142
 2919              	.L141:
 963:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       if(pcb->unacked == NULL)
 2920              		.loc 1 963 0
 2921 03f0 7B68     		ldr	r3, [r7, #4]
 2922 03f2 9B6F     		ldr	r3, [r3, #120]
 2923 03f4 002B     		cmp	r3, #0
 2924 03f6 04D1     		bne	.L143
 964:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         pcb->rtime = -1;
 2925              		.loc 1 964 0
 2926 03f8 7B68     		ldr	r3, [r7, #4]
 2927 03fa 4FF6FF72 		movw	r2, #65535
 2928 03fe DA86     		strh	r2, [r3, #54]	@ movhi
 2929 0400 03E0     		b	.L144
 2930              	.L143:
 966:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         pcb->rtime = 0;
 2931              		.loc 1 966 0
 2932 0402 7B68     		ldr	r3, [r7, #4]
 2933 0404 4FF00002 		mov	r2, #0
 2934 0408 DA86     		strh	r2, [r3, #54]	@ movhi
 2935              	.L144:
 968:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       pcb->polltmr = 0;
 2936              		.loc 1 968 0
 2937 040a 7B68     		ldr	r3, [r7, #4]
 2938 040c 4FF00002 		mov	r2, #0
 2939 0410 83F83420 		strb	r2, [r3, #52]
 2940              		.loc 1 980 0
 2941 0414 46E0     		b	.L169
 2942              	.L135:
 971:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       pcb->acked = 0;
 2943              		.loc 1 971 0
 2944 0416 7B68     		ldr	r3, [r7, #4]
 2945 0418 4FF00002 		mov	r2, #0
 2946 041c A3F86C20 		strh	r2, [r3, #108]	@ movhi
 2947              		.loc 1 980 0
 2948 0420 40E0     		b	.L169
 2949              	.L148:
 981:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****            TCP_SEQ_BETWEEN(ackno, ntohl(pcb->unsent->tcphdr->seqno) + 
 982:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                            TCP_TCPLEN(pcb->unsent), pcb->snd_nxt)) {
 983:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       LWIP_DEBUGF(TCP_INPUT_DEBUG, ("tcp_receive: removing %"U32_F":%"U32_F" from pcb->unsent\n",
 984:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                                     ntohl(pcb->unsent->tcphdr->seqno), ntohl(pcb->unsent->tcphdr->s
 985:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                                     TCP_TCPLEN(pcb->unsent)));
 986:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
 987:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       next = pcb->unsent;
 2950              		.loc 1 987 0
 2951 0422 7B68     		ldr	r3, [r7, #4]
 2952 0424 5B6F     		ldr	r3, [r3, #116]
 2953 0426 FB60     		str	r3, [r7, #12]
 988:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       pcb->unsent = pcb->unsent->next;
 2954              		.loc 1 988 0
 2955 0428 7B68     		ldr	r3, [r7, #4]
 2956 042a 5B6F     		ldr	r3, [r3, #116]
 2957 042c 1A68     		ldr	r2, [r3, #0]
 2958 042e 7B68     		ldr	r3, [r7, #4]
 2959 0430 5A67     		str	r2, [r3, #116]
 989:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       LWIP_DEBUGF(TCP_QLEN_DEBUG, ("tcp_receive: queuelen %"U16_F" ... ", (u16_t)pcb->snd_queuelen)
 990:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       LWIP_ASSERT("pcb->snd_queuelen >= pbuf_clen(next->p)", (pcb->snd_queuelen >= pbuf_clen(next->
 2960              		.loc 1 990 0
 2961 0432 FB68     		ldr	r3, [r7, #12]
 2962 0434 5B68     		ldr	r3, [r3, #4]
 2963 0436 1846     		mov	r0, r3
 2964 0438 FFF7FEFF 		bl	pbuf_clen
 991:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       /* Prevent ACK for FIN to generate a sent event */
 992:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       if ((pcb->acked != 0) && ((TCPH_FLAGS(next->tcphdr) & TCP_FIN) != 0)) {
 2965              		.loc 1 992 0
 2966 043c 7B68     		ldr	r3, [r7, #4]
 2967 043e B3F86C30 		ldrh	r3, [r3, #108]
 2968 0442 002B     		cmp	r3, #0
 2969 0444 14D0     		beq	.L146
 2970              		.loc 1 992 0 is_stmt 0 discriminator 1
 2971 0446 FB68     		ldr	r3, [r7, #12]
 2972 0448 1B69     		ldr	r3, [r3, #16]
 2973 044a 9B89     		ldrh	r3, [r3, #12]	@ unaligned
 2974 044c 9BB2     		uxth	r3, r3
 2975 044e 1846     		mov	r0, r3
 2976 0450 FFF7FEFF 		bl	ntohs
 2977 0454 0346     		mov	r3, r0
 2978 0456 03F00103 		and	r3, r3, #1
 2979 045a 002B     		cmp	r3, #0
 2980 045c 08D0     		beq	.L146
 993:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         pcb->acked--;
 2981              		.loc 1 993 0 is_stmt 1
 2982 045e 7B68     		ldr	r3, [r7, #4]
 2983 0460 B3F86C30 		ldrh	r3, [r3, #108]
 2984 0464 03F1FF33 		add	r3, r3, #-1
 2985 0468 9AB2     		uxth	r2, r3
 2986 046a 7B68     		ldr	r3, [r7, #4]
 2987 046c A3F86C20 		strh	r2, [r3, #108]	@ movhi
 2988              	.L146:
 994:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       }
 995:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       pcb->snd_queuelen -= pbuf_clen(next->p);
 2989              		.loc 1 995 0
 2990 0470 7B68     		ldr	r3, [r7, #4]
 2991 0472 B3F87040 		ldrh	r4, [r3, #112]
 2992 0476 FB68     		ldr	r3, [r7, #12]
 2993 0478 5B68     		ldr	r3, [r3, #4]
 2994 047a 1846     		mov	r0, r3
 2995 047c FFF7FEFF 		bl	pbuf_clen
 2996 0480 0346     		mov	r3, r0
 2997 0482 E31A     		subs	r3, r4, r3
 2998 0484 9AB2     		uxth	r2, r3
 2999 0486 7B68     		ldr	r3, [r7, #4]
 3000 0488 A3F87020 		strh	r2, [r3, #112]	@ movhi
 996:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       tcp_seg_free(next);
 3001              		.loc 1 996 0
 3002 048c F868     		ldr	r0, [r7, #12]
 3003 048e FFF7FEFF 		bl	tcp_seg_free
 997:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       LWIP_DEBUGF(TCP_QLEN_DEBUG, ("%"U16_F" (after freeing unsent)\n", (u16_t)pcb->snd_queuelen));
 998:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       if (pcb->snd_queuelen != 0) {
 3004              		.loc 1 998 0
 3005 0492 7B68     		ldr	r3, [r7, #4]
 3006 0494 B3F87030 		ldrh	r3, [r3, #112]
 3007 0498 002B     		cmp	r3, #0
 3008 049a 04D0     		beq	.L145
 999:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         LWIP_ASSERT("tcp_receive: valid queue length",
 3009              		.loc 1 999 0
 3010 049c 7B68     		ldr	r3, [r7, #4]
 3011 049e 9B6F     		ldr	r3, [r3, #120]
 3012 04a0 002B     		cmp	r3, #0
 3013 04a2 00E0     		b	.L145
 3014              	.L169:
 980:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     while (pcb->unsent != NULL &&
 3015              		.loc 1 980 0
 3016 04a4 00BF     		nop
 3017              	.L145:
 980:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     while (pcb->unsent != NULL &&
 3018              		.loc 1 980 0 is_stmt 0 discriminator 1
 3019 04a6 7B68     		ldr	r3, [r7, #4]
 3020 04a8 5B6F     		ldr	r3, [r3, #116]
 3021 04aa 002B     		cmp	r3, #0
 3022 04ac 2FD0     		beq	.L147
 981:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****            TCP_SEQ_BETWEEN(ackno, ntohl(pcb->unsent->tcphdr->seqno) + 
 3023              		.loc 1 981 0 is_stmt 1 discriminator 2
 3024 04ae 40F20003 		movw	r3, #:lower16:ackno
 3025 04b2 C0F20003 		movt	r3, #:upper16:ackno
 3026 04b6 1C68     		ldr	r4, [r3, #0]
 3027 04b8 7B68     		ldr	r3, [r7, #4]
 3028 04ba 5B6F     		ldr	r3, [r3, #116]
 3029 04bc 1B69     		ldr	r3, [r3, #16]
 3030 04be 5B68     		ldr	r3, [r3, #4]	@ unaligned
 3031 04c0 1846     		mov	r0, r3
 3032 04c2 FFF7FEFF 		bl	ntohl
 3033 04c6 0546     		mov	r5, r0
 3034 04c8 7B68     		ldr	r3, [r7, #4]
 3035 04ca 5B6F     		ldr	r3, [r3, #116]
 3036 04cc 9B89     		ldrh	r3, [r3, #12]
 3037 04ce 1E46     		mov	r6, r3
 3038 04d0 7B68     		ldr	r3, [r7, #4]
 3039 04d2 5B6F     		ldr	r3, [r3, #116]
 3040 04d4 1B69     		ldr	r3, [r3, #16]
 3041 04d6 9B89     		ldrh	r3, [r3, #12]	@ unaligned
 3042 04d8 9BB2     		uxth	r3, r3
 3043 04da 1846     		mov	r0, r3
 3044 04dc FFF7FEFF 		bl	ntohs
 3045 04e0 0346     		mov	r3, r0
 3046 04e2 03F00303 		and	r3, r3, #3
 3047 04e6 002B     		cmp	r3, #0
 3048 04e8 0CBF     		ite	eq
 3049 04ea 0023     		moveq	r3, #0
 3050 04ec 0123     		movne	r3, #1
 3051 04ee DBB2     		uxtb	r3, r3
 3052 04f0 F318     		adds	r3, r6, r3
 3053 04f2 EB18     		adds	r3, r5, r3
 3054 04f4 E31A     		subs	r3, r4, r3
 980:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     while (pcb->unsent != NULL &&
 3055              		.loc 1 980 0 discriminator 2
 3056 04f6 002B     		cmp	r3, #0
 3057 04f8 09DB     		blt	.L147
 981:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****            TCP_SEQ_BETWEEN(ackno, ntohl(pcb->unsent->tcphdr->seqno) + 
 3058              		.loc 1 981 0
 3059 04fa 40F20003 		movw	r3, #:lower16:ackno
 3060 04fe C0F20003 		movt	r3, #:upper16:ackno
 3061 0502 1A68     		ldr	r2, [r3, #0]
 3062 0504 7B68     		ldr	r3, [r7, #4]
 3063 0506 9B6D     		ldr	r3, [r3, #88]
 3064 0508 D31A     		subs	r3, r2, r3
 3065 050a 002B     		cmp	r3, #0
 3066 050c 89DD     		ble	.L148
 3067              	.L147:
1000:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           pcb->unacked != NULL || pcb->unsent != NULL);
1001:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       }
1002:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     }
1003:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     /* End of ACK for new data processing. */
1004:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
1005:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     LWIP_DEBUGF(TCP_RTO_DEBUG, ("tcp_receive: pcb->rttest %"U32_F" rtseq %"U32_F" ackno %"U32_F"\n"
1006:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                                 pcb->rttest, pcb->rtseq, ackno));
1007:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
1008:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     /* RTT estimation calculations. This is done by checking if the
1009:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****        incoming segment acknowledges the segment we use to take a
1010:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****        round-trip time measurement. */
1011:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     if (pcb->rttest && TCP_SEQ_LT(pcb->rtseq, ackno)) {
 3068              		.loc 1 1011 0
 3069 050e 7B68     		ldr	r3, [r7, #4]
 3070 0510 DB6B     		ldr	r3, [r3, #60]
 3071 0512 002B     		cmp	r3, #0
 3072 0514 62D0     		beq	.L126
 3073              		.loc 1 1011 0 is_stmt 0 discriminator 1
 3074 0516 7B68     		ldr	r3, [r7, #4]
 3075 0518 1A6C     		ldr	r2, [r3, #64]
 3076 051a 40F20003 		movw	r3, #:lower16:ackno
 3077 051e C0F20003 		movt	r3, #:upper16:ackno
 3078 0522 1B68     		ldr	r3, [r3, #0]
 3079 0524 D31A     		subs	r3, r2, r3
 3080 0526 002B     		cmp	r3, #0
 3081 0528 58DA     		bge	.L126
1012:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       /* diff between this shouldn't exceed 32K since this are tcp timer ticks
1013:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****          and a round-trip shouldn't be that long... */
1014:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       m = (s16_t)(tcp_ticks - pcb->rttest);
 3082              		.loc 1 1014 0 is_stmt 1
 3083 052a 40F20003 		movw	r3, #:lower16:tcp_ticks
 3084 052e C0F20003 		movt	r3, #:upper16:tcp_ticks
 3085 0532 1B68     		ldr	r3, [r3, #0]
 3086 0534 9AB2     		uxth	r2, r3
 3087 0536 7B68     		ldr	r3, [r7, #4]
 3088 0538 DB6B     		ldr	r3, [r3, #60]
 3089 053a 9BB2     		uxth	r3, r3
 3090 053c D31A     		subs	r3, r2, r3
 3091 053e 9BB2     		uxth	r3, r3
 3092 0540 FB83     		strh	r3, [r7, #30]	@ movhi
1015:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
1016:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       LWIP_DEBUGF(TCP_RTO_DEBUG, ("tcp_receive: experienced rtt %"U16_F" ticks (%"U16_F" msec).\n",
1017:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                                   m, m * TCP_SLOW_INTERVAL));
1018:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
1019:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       /* This is taken directly from VJs original code in his paper */
1020:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       m = m - (pcb->sa >> 3);
 3093              		.loc 1 1020 0
 3094 0542 FA8B     		ldrh	r2, [r7, #30]
 3095 0544 7B68     		ldr	r3, [r7, #4]
 3096 0546 B3F84430 		ldrh	r3, [r3, #68]
 3097 054a 1BB2     		sxth	r3, r3
 3098 054c 4FEAE303 		asr	r3, r3, #3
 3099 0550 9BB2     		uxth	r3, r3
 3100 0552 9BB2     		uxth	r3, r3
 3101 0554 D31A     		subs	r3, r2, r3
 3102 0556 9BB2     		uxth	r3, r3
 3103 0558 FB83     		strh	r3, [r7, #30]	@ movhi
1021:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       pcb->sa += m;
 3104              		.loc 1 1021 0
 3105 055a 7B68     		ldr	r3, [r7, #4]
 3106 055c B3F84430 		ldrh	r3, [r3, #68]
 3107 0560 9AB2     		uxth	r2, r3
 3108 0562 FB8B     		ldrh	r3, [r7, #30]
 3109 0564 D318     		adds	r3, r2, r3
 3110 0566 9BB2     		uxth	r3, r3
 3111 0568 9AB2     		uxth	r2, r3
 3112 056a 7B68     		ldr	r3, [r7, #4]
 3113 056c A3F84420 		strh	r2, [r3, #68]	@ movhi
1022:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       if (m < 0) {
 3114              		.loc 1 1022 0
 3115 0570 B7F91E30 		ldrsh	r3, [r7, #30]
 3116 0574 002B     		cmp	r3, #0
 3117 0576 04DA     		bge	.L149
1023:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         m = -m;
 3118              		.loc 1 1023 0
 3119 0578 FB8B     		ldrh	r3, [r7, #30]
 3120 057a C3F10003 		rsb	r3, r3, #0
 3121 057e 9BB2     		uxth	r3, r3
 3122 0580 FB83     		strh	r3, [r7, #30]	@ movhi
 3123              	.L149:
1024:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       }
1025:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       m = m - (pcb->sv >> 2);
 3124              		.loc 1 1025 0
 3125 0582 FA8B     		ldrh	r2, [r7, #30]
 3126 0584 7B68     		ldr	r3, [r7, #4]
 3127 0586 B3F84630 		ldrh	r3, [r3, #70]
 3128 058a 1BB2     		sxth	r3, r3
 3129 058c 4FEAA303 		asr	r3, r3, #2
 3130 0590 9BB2     		uxth	r3, r3
 3131 0592 9BB2     		uxth	r3, r3
 3132 0594 D31A     		subs	r3, r2, r3
 3133 0596 9BB2     		uxth	r3, r3
 3134 0598 FB83     		strh	r3, [r7, #30]	@ movhi
1026:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       pcb->sv += m;
 3135              		.loc 1 1026 0
 3136 059a 7B68     		ldr	r3, [r7, #4]
 3137 059c B3F84630 		ldrh	r3, [r3, #70]
 3138 05a0 9AB2     		uxth	r2, r3
 3139 05a2 FB8B     		ldrh	r3, [r7, #30]
 3140 05a4 D318     		adds	r3, r2, r3
 3141 05a6 9BB2     		uxth	r3, r3
 3142 05a8 9AB2     		uxth	r2, r3
 3143 05aa 7B68     		ldr	r3, [r7, #4]
 3144 05ac A3F84620 		strh	r2, [r3, #70]	@ movhi
1027:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       pcb->rto = (pcb->sa >> 3) + pcb->sv;
 3145              		.loc 1 1027 0
 3146 05b0 7B68     		ldr	r3, [r7, #4]
 3147 05b2 B3F84430 		ldrh	r3, [r3, #68]
 3148 05b6 1BB2     		sxth	r3, r3
 3149 05b8 4FEAE303 		asr	r3, r3, #3
 3150 05bc 9BB2     		uxth	r3, r3
 3151 05be 9AB2     		uxth	r2, r3
 3152 05c0 7B68     		ldr	r3, [r7, #4]
 3153 05c2 B3F84630 		ldrh	r3, [r3, #70]
 3154 05c6 9BB2     		uxth	r3, r3
 3155 05c8 D318     		adds	r3, r2, r3
 3156 05ca 9BB2     		uxth	r3, r3
 3157 05cc 9AB2     		uxth	r2, r3
 3158 05ce 7B68     		ldr	r3, [r7, #4]
 3159 05d0 A3F84820 		strh	r2, [r3, #72]	@ movhi
1028:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
1029:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       LWIP_DEBUGF(TCP_RTO_DEBUG, ("tcp_receive: RTO %"U16_F" (%"U16_F" milliseconds)\n",
1030:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                                   pcb->rto, pcb->rto * TCP_SLOW_INTERVAL));
1031:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
1032:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       pcb->rttest = 0;
 3160              		.loc 1 1032 0
 3161 05d4 7B68     		ldr	r3, [r7, #4]
 3162 05d6 4FF00002 		mov	r2, #0
 3163 05da DA63     		str	r2, [r3, #60]
 3164              	.L126:
1033:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     }
1034:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   }
1035:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
1036:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   /* If the incoming segment contains data, we must process it
1037:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****      further. */
1038:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   if (tcplen > 0) {
 3165              		.loc 1 1038 0
 3166 05dc 40F20003 		movw	r3, #:lower16:tcplen
 3167 05e0 C0F20003 		movt	r3, #:upper16:tcplen
 3168 05e4 1B88     		ldrh	r3, [r3, #0]
 3169 05e6 002B     		cmp	r3, #0
 3170 05e8 00F01182 		beq	.L150
1039:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     /* This code basically does three things:
1040:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
1041:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     +) If the incoming segment contains data that is the next
1042:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     in-sequence data, this data is passed to the application. This
1043:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     might involve trimming the first edge of the data. The rcv_nxt
1044:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     variable and the advertised window are adjusted.
1045:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
1046:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     +) If the incoming segment has data that is above the next
1047:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     sequence number expected (->rcv_nxt), the segment is placed on
1048:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     the ->ooseq queue. This is done by finding the appropriate
1049:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     place in the ->ooseq queue (which is ordered by sequence
1050:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     number) and trim the segment in both ends if needed. An
1051:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     immediate ACK is sent to indicate that we received an
1052:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     out-of-sequence segment.
1053:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
1054:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     +) Finally, we check if the first segment on the ->ooseq queue
1055:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     now is in sequence (i.e., if rcv_nxt >= ooseq->seqno). If
1056:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     rcv_nxt > ooseq->seqno, we must trim the first edge of the
1057:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     segment on ->ooseq before we adjust rcv_nxt. The data in the
1058:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     segments that are now on sequence are chained onto the
1059:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     incoming segment so that we only need to call the application
1060:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     once.
1061:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     */
1062:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
1063:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     /* First, we check if we must trim the first edge. We have to do
1064:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****        this if the sequence number of the incoming segment is less
1065:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****        than rcv_nxt, and the sequence number plus the length of the
1066:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****        segment is larger than rcv_nxt. */
1067:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     /*    if (TCP_SEQ_LT(seqno, pcb->rcv_nxt)){
1068:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           if (TCP_SEQ_LT(pcb->rcv_nxt, seqno + tcplen)) {*/
1069:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     if (TCP_SEQ_BETWEEN(pcb->rcv_nxt, seqno + 1, seqno + tcplen - 1)){
 3171              		.loc 1 1069 0
 3172 05ec 7B68     		ldr	r3, [r7, #4]
 3173 05ee 5A6A     		ldr	r2, [r3, #36]
 3174 05f0 40F20003 		movw	r3, #:lower16:seqno
 3175 05f4 C0F20003 		movt	r3, #:upper16:seqno
 3176 05f8 1B68     		ldr	r3, [r3, #0]
 3177 05fa 6FEA0303 		mvn	r3, r3
 3178 05fe D318     		adds	r3, r2, r3
 3179 0600 002B     		cmp	r3, #0
 3180 0602 C0F29A80 		blt	.L151
 3181              		.loc 1 1069 0 is_stmt 0 discriminator 1
 3182 0606 7B68     		ldr	r3, [r7, #4]
 3183 0608 5A6A     		ldr	r2, [r3, #36]
 3184 060a 40F20003 		movw	r3, #:lower16:tcplen
 3185 060e C0F20003 		movt	r3, #:upper16:tcplen
 3186 0612 1B88     		ldrh	r3, [r3, #0]
 3187 0614 1946     		mov	r1, r3
 3188 0616 40F20003 		movw	r3, #:lower16:seqno
 3189 061a C0F20003 		movt	r3, #:upper16:seqno
 3190 061e 1B68     		ldr	r3, [r3, #0]
 3191 0620 CB18     		adds	r3, r1, r3
 3192 0622 D31A     		subs	r3, r2, r3
 3193 0624 03F10103 		add	r3, r3, #1
 3194 0628 002B     		cmp	r3, #0
 3195 062a 00F38680 		bgt	.L151
1070:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       /* Trimming the first edge is done by pushing the payload
1071:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****          pointer in the pbuf downwards. This is somewhat tricky since
1072:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****          we do not want to discard the full contents of the pbuf up to
1073:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****          the new starting point of the data since we have to keep the
1074:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****          TCP header which is present in the first pbuf in the chain.
1075:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
1076:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****          What is done is really quite a nasty hack: the first pbuf in
1077:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****          the pbuf chain is pointed to by inseg.p. Since we need to be
1078:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****          able to deallocate the whole pbuf, we cannot change this
1079:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****          inseg.p pointer to point to any of the later pbufs in the
1080:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****          chain. Instead, we point the ->payload pointer in the first
1081:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****          pbuf to data in one of the later pbufs. We also set the
1082:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****          inseg.data pointer to point to the right place. This way, the
1083:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****          ->p pointer will still point to the first pbuf, but the
1084:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****          ->p->payload pointer will point to data in another pbuf.
1085:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
1086:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****          After we are done with adjusting the pbuf pointers we must
1087:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****          adjust the ->data pointer in the seg and the segment
1088:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****          length.*/
1089:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
1090:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       off = pcb->rcv_nxt - seqno;
 3196              		.loc 1 1090 0 is_stmt 1
 3197 062e 7B68     		ldr	r3, [r7, #4]
 3198 0630 5A6A     		ldr	r2, [r3, #36]
 3199 0632 40F20003 		movw	r3, #:lower16:seqno
 3200 0636 C0F20003 		movt	r3, #:upper16:seqno
 3201 063a 1B68     		ldr	r3, [r3, #0]
 3202 063c D31A     		subs	r3, r2, r3
 3203 063e 3B62     		str	r3, [r7, #32]
1091:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       p = inseg.p;
 3204              		.loc 1 1091 0
 3205 0640 40F20003 		movw	r3, #:lower16:inseg
 3206 0644 C0F20003 		movt	r3, #:upper16:inseg
 3207 0648 5B68     		ldr	r3, [r3, #4]
 3208 064a 7B62     		str	r3, [r7, #36]
1092:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       LWIP_ASSERT("inseg.p != NULL", inseg.p);
1093:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       LWIP_ASSERT("insane offset!", (off < 0x7fff));
1094:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       if (inseg.p->len < off) {
 3209              		.loc 1 1094 0
 3210 064c 40F20003 		movw	r3, #:lower16:inseg
 3211 0650 C0F20003 		movt	r3, #:upper16:inseg
 3212 0654 5B68     		ldr	r3, [r3, #4]
 3213 0656 5B89     		ldrh	r3, [r3, #10]
 3214 0658 1A46     		mov	r2, r3
 3215 065a 3B6A     		ldr	r3, [r7, #32]
 3216 065c 9A42     		cmp	r2, r3
 3217 065e 2BDA     		bge	.L152
1095:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         LWIP_ASSERT("pbuf too short!", (((s32_t)inseg.p->tot_len) >= off));
1096:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         new_tot_len = (u16_t)(inseg.p->tot_len - off);
 3218              		.loc 1 1096 0
 3219 0660 40F20003 		movw	r3, #:lower16:inseg
 3220 0664 C0F20003 		movt	r3, #:upper16:inseg
 3221 0668 5B68     		ldr	r3, [r3, #4]
 3222 066a 1A89     		ldrh	r2, [r3, #8]
 3223 066c 3B6A     		ldr	r3, [r7, #32]
 3224 066e 9BB2     		uxth	r3, r3
 3225 0670 D31A     		subs	r3, r2, r3
 3226 0672 7B81     		strh	r3, [r7, #10]	@ movhi
1097:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         while (p->len < off) {
 3227              		.loc 1 1097 0
 3228 0674 0EE0     		b	.L153
 3229              	.L154:
1098:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           off -= p->len;
 3230              		.loc 1 1098 0
 3231 0676 7B6A     		ldr	r3, [r7, #36]
 3232 0678 5B89     		ldrh	r3, [r3, #10]
 3233 067a 3A6A     		ldr	r2, [r7, #32]
 3234 067c D31A     		subs	r3, r2, r3
 3235 067e 3B62     		str	r3, [r7, #32]
1099:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           /* KJM following line changed (with addition of new_tot_len var)
1100:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****              to fix bug #9076
1101:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****              inseg.p->tot_len -= p->len; */
1102:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           p->tot_len = new_tot_len;
 3236              		.loc 1 1102 0
 3237 0680 7B6A     		ldr	r3, [r7, #36]
 3238 0682 7A89     		ldrh	r2, [r7, #10]	@ movhi
 3239 0684 1A81     		strh	r2, [r3, #8]	@ movhi
1103:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           p->len = 0;
 3240              		.loc 1 1103 0
 3241 0686 7B6A     		ldr	r3, [r7, #36]
 3242 0688 4FF00002 		mov	r2, #0
 3243 068c 5A81     		strh	r2, [r3, #10]	@ movhi
1104:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           p = p->next;
 3244              		.loc 1 1104 0
 3245 068e 7B6A     		ldr	r3, [r7, #36]
 3246 0690 1B68     		ldr	r3, [r3, #0]
 3247 0692 7B62     		str	r3, [r7, #36]
 3248              	.L153:
1097:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         while (p->len < off) {
 3249              		.loc 1 1097 0 discriminator 1
 3250 0694 7B6A     		ldr	r3, [r7, #36]
 3251 0696 5B89     		ldrh	r3, [r3, #10]
 3252 0698 1A46     		mov	r2, r3
 3253 069a 3B6A     		ldr	r3, [r7, #32]
 3254 069c 9A42     		cmp	r2, r3
 3255 069e EADB     		blt	.L154
1105:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         }
1106:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         if(pbuf_header(p, (s16_t)-off)) {
 3256              		.loc 1 1106 0
 3257 06a0 3B6A     		ldr	r3, [r7, #32]
 3258 06a2 9BB2     		uxth	r3, r3
 3259 06a4 C3F10003 		rsb	r3, r3, #0
 3260 06a8 9BB2     		uxth	r3, r3
 3261 06aa 9BB2     		uxth	r3, r3
 3262 06ac 1BB2     		sxth	r3, r3
 3263 06ae 786A     		ldr	r0, [r7, #36]
 3264 06b0 1946     		mov	r1, r3
 3265 06b2 FFF7FEFF 		bl	pbuf_header
 3266 06b6 0FE0     		b	.L155
 3267              	.L152:
1107:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           /* Do we need to cope with this failing?  Assert for now */
1108:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           LWIP_ASSERT("pbuf_header failed", 0);
1109:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         }
1110:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       } else {
1111:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         if(pbuf_header(inseg.p, (s16_t)-off)) {
 3268              		.loc 1 1111 0
 3269 06b8 40F20003 		movw	r3, #:lower16:inseg
 3270 06bc C0F20003 		movt	r3, #:upper16:inseg
 3271 06c0 5A68     		ldr	r2, [r3, #4]
 3272 06c2 3B6A     		ldr	r3, [r7, #32]
 3273 06c4 9BB2     		uxth	r3, r3
 3274 06c6 C3F10003 		rsb	r3, r3, #0
 3275 06ca 9BB2     		uxth	r3, r3
 3276 06cc 9BB2     		uxth	r3, r3
 3277 06ce 1BB2     		sxth	r3, r3
 3278 06d0 1046     		mov	r0, r2
 3279 06d2 1946     		mov	r1, r3
 3280 06d4 FFF7FEFF 		bl	pbuf_header
 3281              	.L155:
1112:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           /* Do we need to cope with this failing?  Assert for now */
1113:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           LWIP_ASSERT("pbuf_header failed", 0);
1114:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         }
1115:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       }
1116:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       /* KJM following line changed to use p->payload rather than inseg->p->payload
1117:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****          to fix bug #9076 */
1118:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       inseg.dataptr = p->payload;
 3282              		.loc 1 1118 0
 3283 06d8 7B6A     		ldr	r3, [r7, #36]
 3284 06da 5A68     		ldr	r2, [r3, #4]
 3285 06dc 40F20003 		movw	r3, #:lower16:inseg
 3286 06e0 C0F20003 		movt	r3, #:upper16:inseg
 3287 06e4 9A60     		str	r2, [r3, #8]
1119:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       inseg.len -= (u16_t)(pcb->rcv_nxt - seqno);
 3288              		.loc 1 1119 0
 3289 06e6 40F20003 		movw	r3, #:lower16:inseg
 3290 06ea C0F20003 		movt	r3, #:upper16:inseg
 3291 06ee 9A89     		ldrh	r2, [r3, #12]
 3292 06f0 40F20003 		movw	r3, #:lower16:seqno
 3293 06f4 C0F20003 		movt	r3, #:upper16:seqno
 3294 06f8 1B68     		ldr	r3, [r3, #0]
 3295 06fa 99B2     		uxth	r1, r3
 3296 06fc 7B68     		ldr	r3, [r7, #4]
 3297 06fe 5B6A     		ldr	r3, [r3, #36]
 3298 0700 9BB2     		uxth	r3, r3
 3299 0702 CB1A     		subs	r3, r1, r3
 3300 0704 9BB2     		uxth	r3, r3
 3301 0706 D318     		adds	r3, r2, r3
 3302 0708 9AB2     		uxth	r2, r3
 3303 070a 40F20003 		movw	r3, #:lower16:inseg
 3304 070e C0F20003 		movt	r3, #:upper16:inseg
 3305 0712 9A81     		strh	r2, [r3, #12]	@ movhi
1120:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       inseg.tcphdr->seqno = seqno = pcb->rcv_nxt;
 3306              		.loc 1 1120 0
 3307 0714 40F20003 		movw	r3, #:lower16:inseg
 3308 0718 C0F20003 		movt	r3, #:upper16:inseg
 3309 071c 1A69     		ldr	r2, [r3, #16]
 3310 071e 7B68     		ldr	r3, [r7, #4]
 3311 0720 596A     		ldr	r1, [r3, #36]
 3312 0722 40F20003 		movw	r3, #:lower16:seqno
 3313 0726 C0F20003 		movt	r3, #:upper16:seqno
 3314 072a 1960     		str	r1, [r3, #0]
 3315 072c 40F20003 		movw	r3, #:lower16:seqno
 3316 0730 C0F20003 		movt	r3, #:upper16:seqno
 3317 0734 1B68     		ldr	r3, [r3, #0]
 3318 0736 5360     		str	r3, [r2, #4]	@ unaligned
 3319 0738 15E0     		b	.L156
 3320              	.L151:
1121:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     }
1122:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     else {
1123:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       if (TCP_SEQ_LT(seqno, pcb->rcv_nxt)){
 3321              		.loc 1 1123 0
 3322 073a 40F20003 		movw	r3, #:lower16:seqno
 3323 073e C0F20003 		movt	r3, #:upper16:seqno
 3324 0742 1A68     		ldr	r2, [r3, #0]
 3325 0744 7B68     		ldr	r3, [r7, #4]
 3326 0746 5B6A     		ldr	r3, [r3, #36]
 3327 0748 D31A     		subs	r3, r2, r3
 3328 074a 002B     		cmp	r3, #0
 3329 074c 0BDA     		bge	.L156
1124:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         /* the whole segment is < rcv_nxt */
1125:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         /* must be a duplicate of a packet that has already been correctly handled */
1126:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
1127:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         LWIP_DEBUGF(TCP_INPUT_DEBUG, ("tcp_receive: duplicate seqno %"U32_F"\n", seqno));
1128:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         tcp_ack_now(pcb);
 3330              		.loc 1 1128 0
 3331 074e 7B68     		ldr	r3, [r7, #4]
 3332 0750 93F82230 		ldrb	r3, [r3, #34]	@ zero_extendqisi2
 3333 0754 43F00203 		orr	r3, r3, #2
 3334 0758 DAB2     		uxtb	r2, r3
 3335 075a 7B68     		ldr	r3, [r7, #4]
 3336 075c 83F82220 		strb	r2, [r3, #34]
 3337 0760 7868     		ldr	r0, [r7, #4]
 3338 0762 FFF7FEFF 		bl	tcp_output
 3339              	.L156:
1129:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       }
1130:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     }
1131:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
1132:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     /* The sequence number must be within the window (above rcv_nxt
1133:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****        and below rcv_nxt + rcv_wnd) in order to be further
1134:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****        processed. */
1135:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     if (TCP_SEQ_BETWEEN(seqno, pcb->rcv_nxt, 
 3340              		.loc 1 1135 0
 3341 0766 40F20003 		movw	r3, #:lower16:seqno
 3342 076a C0F20003 		movt	r3, #:upper16:seqno
 3343 076e 1A68     		ldr	r2, [r3, #0]
 3344 0770 7B68     		ldr	r3, [r7, #4]
 3345 0772 5B6A     		ldr	r3, [r3, #36]
 3346 0774 D31A     		subs	r3, r2, r3
 3347 0776 002B     		cmp	r3, #0
 3348 0778 C0F24581 		blt	.L157
 3349              		.loc 1 1135 0 is_stmt 0 discriminator 1
 3350 077c 40F20003 		movw	r3, #:lower16:seqno
 3351 0780 C0F20003 		movt	r3, #:upper16:seqno
 3352 0784 1A68     		ldr	r2, [r3, #0]
 3353 0786 7B68     		ldr	r3, [r7, #4]
 3354 0788 596A     		ldr	r1, [r3, #36]
 3355 078a 7B68     		ldr	r3, [r7, #4]
 3356 078c 1B8D     		ldrh	r3, [r3, #40]
 3357 078e CB18     		adds	r3, r1, r3
 3358 0790 D31A     		subs	r3, r2, r3
 3359 0792 03F10103 		add	r3, r3, #1
 3360 0796 002B     		cmp	r3, #0
 3361 0798 00F33581 		bgt	.L157
1136:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                         pcb->rcv_nxt + pcb->rcv_wnd - 1)){
1137:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       if (pcb->rcv_nxt == seqno) {
 3362              		.loc 1 1137 0 is_stmt 1
 3363 079c 7B68     		ldr	r3, [r7, #4]
 3364 079e 5A6A     		ldr	r2, [r3, #36]
 3365 07a0 40F20003 		movw	r3, #:lower16:seqno
 3366 07a4 C0F20003 		movt	r3, #:upper16:seqno
 3367 07a8 1B68     		ldr	r3, [r3, #0]
 3368 07aa 9A42     		cmp	r2, r3
 3369 07ac 40F02681 		bne	.L158
1138:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         /* The incoming segment is the next in sequence. We check if
1139:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****            we have to trim the end of the segment and update rcv_nxt
1140:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****            and pass the data to the application. */
1141:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         tcplen = TCP_TCPLEN(&inseg);
 3370              		.loc 1 1141 0
 3371 07b0 40F20003 		movw	r3, #:lower16:inseg
 3372 07b4 C0F20003 		movt	r3, #:upper16:inseg
 3373 07b8 9C89     		ldrh	r4, [r3, #12]
 3374 07ba 40F20003 		movw	r3, #:lower16:inseg
 3375 07be C0F20003 		movt	r3, #:upper16:inseg
 3376 07c2 1B69     		ldr	r3, [r3, #16]
 3377 07c4 9B89     		ldrh	r3, [r3, #12]	@ unaligned
 3378 07c6 9BB2     		uxth	r3, r3
 3379 07c8 1846     		mov	r0, r3
 3380 07ca FFF7FEFF 		bl	ntohs
 3381 07ce 0346     		mov	r3, r0
 3382 07d0 03F00303 		and	r3, r3, #3
 3383 07d4 002B     		cmp	r3, #0
 3384 07d6 0CBF     		ite	eq
 3385 07d8 0023     		moveq	r3, #0
 3386 07da 0123     		movne	r3, #1
 3387 07dc DBB2     		uxtb	r3, r3
 3388 07de E318     		adds	r3, r4, r3
 3389 07e0 9AB2     		uxth	r2, r3
 3390 07e2 40F20003 		movw	r3, #:lower16:tcplen
 3391 07e6 C0F20003 		movt	r3, #:upper16:tcplen
 3392 07ea 1A80     		strh	r2, [r3, #0]	@ movhi
1142:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
1143:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         if (tcplen > pcb->rcv_wnd) {
 3393              		.loc 1 1143 0
 3394 07ec 7B68     		ldr	r3, [r7, #4]
 3395 07ee 1A8D     		ldrh	r2, [r3, #40]
 3396 07f0 40F20003 		movw	r3, #:lower16:tcplen
 3397 07f4 C0F20003 		movt	r3, #:upper16:tcplen
 3398 07f8 1B88     		ldrh	r3, [r3, #0]
 3399 07fa 9A42     		cmp	r2, r3
 3400 07fc 80F08680 		bcs	.L159
1144:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           LWIP_DEBUGF(TCP_INPUT_DEBUG, 
1145:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                       ("tcp_receive: other end overran receive window"
1146:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                        "seqno %"U32_F" len %"U32_F" right edge %"U32_F"\n",
1147:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                        seqno, tcplen, pcb->rcv_nxt + pcb->rcv_wnd));
1148:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           if (TCPH_FLAGS(inseg.tcphdr) & TCP_FIN) {
 3401              		.loc 1 1148 0
 3402 0800 40F20003 		movw	r3, #:lower16:inseg
 3403 0804 C0F20003 		movt	r3, #:upper16:inseg
 3404 0808 1B69     		ldr	r3, [r3, #16]
 3405 080a 9B89     		ldrh	r3, [r3, #12]	@ unaligned
 3406 080c 9BB2     		uxth	r3, r3
 3407 080e 1846     		mov	r0, r3
 3408 0810 FFF7FEFF 		bl	ntohs
 3409 0814 0346     		mov	r3, r0
 3410 0816 03F00103 		and	r3, r3, #1
 3411 081a 002B     		cmp	r3, #0
 3412 081c 27D0     		beq	.L160
1149:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****             /* Must remove the FIN from the header as we're trimming 
1150:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****              * that byte of sequence-space from the packet */
1151:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****             TCPH_FLAGS_SET(inseg.tcphdr, TCPH_FLAGS(inseg.tcphdr) &~ TCP_FIN);
 3413              		.loc 1 1151 0
 3414 081e 40F20003 		movw	r3, #:lower16:inseg
 3415 0822 C0F20003 		movt	r3, #:upper16:inseg
 3416 0826 1C69     		ldr	r4, [r3, #16]
 3417 0828 40F20003 		movw	r3, #:lower16:inseg
 3418 082c C0F20003 		movt	r3, #:upper16:inseg
 3419 0830 1B69     		ldr	r3, [r3, #16]
 3420 0832 9B89     		ldrh	r3, [r3, #12]	@ unaligned
 3421 0834 9DB2     		uxth	r5, r3
 3422 0836 4FF6C070 		movw	r0, #65472
 3423 083a FFF7FEFF 		bl	htons
 3424 083e 0346     		mov	r3, r0
 3425 0840 2B40     		ands	r3, r3, r5
 3426 0842 9DB2     		uxth	r5, r3
 3427 0844 40F20003 		movw	r3, #:lower16:inseg
 3428 0848 C0F20003 		movt	r3, #:upper16:inseg
 3429 084c 1B69     		ldr	r3, [r3, #16]
 3430 084e 9B89     		ldrh	r3, [r3, #12]	@ unaligned
 3431 0850 9BB2     		uxth	r3, r3
 3432 0852 1846     		mov	r0, r3
 3433 0854 FFF7FEFF 		bl	ntohs
 3434 0858 0346     		mov	r3, r0
 3435 085a 03F03E03 		and	r3, r3, #62
 3436 085e 9BB2     		uxth	r3, r3
 3437 0860 1846     		mov	r0, r3
 3438 0862 FFF7FEFF 		bl	htons
 3439 0866 0346     		mov	r3, r0
 3440 0868 2B43     		orrs	r3, r3, r5
 3441 086a 9BB2     		uxth	r3, r3
 3442 086c A381     		strh	r3, [r4, #12]	@ unaligned
 3443              	.L160:
1152:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           }
1153:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           /* Adjust length of segment to fit in the window. */
1154:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           inseg.len = pcb->rcv_wnd;
 3444              		.loc 1 1154 0
 3445 086e 7B68     		ldr	r3, [r7, #4]
 3446 0870 1A8D     		ldrh	r2, [r3, #40]
 3447 0872 40F20003 		movw	r3, #:lower16:inseg
 3448 0876 C0F20003 		movt	r3, #:upper16:inseg
 3449 087a 9A81     		strh	r2, [r3, #12]	@ movhi
1155:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           if (TCPH_FLAGS(inseg.tcphdr) & TCP_SYN) {
 3450              		.loc 1 1155 0
 3451 087c 40F20003 		movw	r3, #:lower16:inseg
 3452 0880 C0F20003 		movt	r3, #:upper16:inseg
 3453 0884 1B69     		ldr	r3, [r3, #16]
 3454 0886 9B89     		ldrh	r3, [r3, #12]	@ unaligned
 3455 0888 9BB2     		uxth	r3, r3
 3456 088a 1846     		mov	r0, r3
 3457 088c FFF7FEFF 		bl	ntohs
 3458 0890 0346     		mov	r3, r0
 3459 0892 03F00203 		and	r3, r3, #2
 3460 0896 002B     		cmp	r3, #0
 3461 0898 0CD0     		beq	.L161
1156:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****             inseg.len -= 1;
 3462              		.loc 1 1156 0
 3463 089a 40F20003 		movw	r3, #:lower16:inseg
 3464 089e C0F20003 		movt	r3, #:upper16:inseg
 3465 08a2 9B89     		ldrh	r3, [r3, #12]
 3466 08a4 03F1FF33 		add	r3, r3, #-1
 3467 08a8 9AB2     		uxth	r2, r3
 3468 08aa 40F20003 		movw	r3, #:lower16:inseg
 3469 08ae C0F20003 		movt	r3, #:upper16:inseg
 3470 08b2 9A81     		strh	r2, [r3, #12]	@ movhi
 3471              	.L161:
1157:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           }
1158:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           pbuf_realloc(inseg.p, inseg.len);
 3472              		.loc 1 1158 0
 3473 08b4 40F20003 		movw	r3, #:lower16:inseg
 3474 08b8 C0F20003 		movt	r3, #:upper16:inseg
 3475 08bc 5A68     		ldr	r2, [r3, #4]
 3476 08be 40F20003 		movw	r3, #:lower16:inseg
 3477 08c2 C0F20003 		movt	r3, #:upper16:inseg
 3478 08c6 9B89     		ldrh	r3, [r3, #12]
 3479 08c8 1046     		mov	r0, r2
 3480 08ca 1946     		mov	r1, r3
 3481 08cc FFF7FEFF 		bl	pbuf_realloc
1159:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           tcplen = TCP_TCPLEN(&inseg);
 3482              		.loc 1 1159 0
 3483 08d0 40F20003 		movw	r3, #:lower16:inseg
 3484 08d4 C0F20003 		movt	r3, #:upper16:inseg
 3485 08d8 9C89     		ldrh	r4, [r3, #12]
 3486 08da 40F20003 		movw	r3, #:lower16:inseg
 3487 08de C0F20003 		movt	r3, #:upper16:inseg
 3488 08e2 1B69     		ldr	r3, [r3, #16]
 3489 08e4 9B89     		ldrh	r3, [r3, #12]	@ unaligned
 3490 08e6 9BB2     		uxth	r3, r3
 3491 08e8 1846     		mov	r0, r3
 3492 08ea FFF7FEFF 		bl	ntohs
 3493 08ee 0346     		mov	r3, r0
 3494 08f0 03F00303 		and	r3, r3, #3
 3495 08f4 002B     		cmp	r3, #0
 3496 08f6 0CBF     		ite	eq
 3497 08f8 0023     		moveq	r3, #0
 3498 08fa 0123     		movne	r3, #1
 3499 08fc DBB2     		uxtb	r3, r3
 3500 08fe E318     		adds	r3, r4, r3
 3501 0900 9AB2     		uxth	r2, r3
 3502 0902 40F20003 		movw	r3, #:lower16:tcplen
 3503 0906 C0F20003 		movt	r3, #:upper16:tcplen
 3504 090a 1A80     		strh	r2, [r3, #0]	@ movhi
 3505              	.L159:
1160:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           LWIP_ASSERT("tcp_receive: segment not trimmed correctly to rcv_wnd\n",
1161:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                       (seqno + tcplen) == (pcb->rcv_nxt + pcb->rcv_wnd));
1162:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         }
1163:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** #if TCP_QUEUE_OOSEQ
1164:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         if (pcb->ooseq != NULL) {
1165:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           if (TCPH_FLAGS(inseg.tcphdr) & TCP_FIN) {
1166:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****             LWIP_DEBUGF(TCP_INPUT_DEBUG, 
1167:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                         ("tcp_receive: received in-order FIN, binning ooseq queue\n"));
1168:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****             /* Received in-order FIN means anything that was received
1169:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****              * out of order must now have been received in-order, so
1170:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****              * bin the ooseq queue
1171:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****              * rcv_nxt
1172:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****              * .    |--ooseq--|
1173:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****              * .==seg============|FIN
1174:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****              */
1175:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****             while (pcb->ooseq != NULL) {
1176:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****               struct tcp_seg *old_ooseq = pcb->ooseq;
1177:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****               pcb->ooseq = pcb->ooseq->next;
1178:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****               tcp_seg_free(old_ooseq);
1179:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****             }               
1180:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           } 
1181:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           else {
1182:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****             struct tcp_seg* next = pcb->ooseq;
1183:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****             struct tcp_seg *old_seg;
1184:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****             /* rcv_nxt
1185:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****              * .    |--ooseq--|
1186:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****              * .==seg============|
1187:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****              */
1188:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****             while (next &&
1189:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                    TCP_SEQ_GEQ(seqno + tcplen,
1190:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                                next->tcphdr->seqno + next->len)) {
1191:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****               /* inseg doesn't have FIN (already processed) */
1192:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****               if (TCPH_FLAGS(next->tcphdr) & TCP_FIN &&
1193:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                   (TCPH_FLAGS(inseg.tcphdr) & TCP_SYN) == 0) {
1194:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                 TCPH_FLAGS_SET(inseg.tcphdr, 
1195:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                                TCPH_FLAGS(inseg.tcphdr) | TCP_FIN);
1196:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                 tcplen = TCP_TCPLEN(&inseg);
1197:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****               }
1198:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****               old_seg = next;
1199:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****               next = next->next;
1200:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****               tcp_seg_free(old_seg);
1201:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****             }
1202:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****             /* rcv_nxt
1203:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****              * .             |--ooseq--|
1204:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****              * .==seg============|
1205:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****              */
1206:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****             if (next &&
1207:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                 TCP_SEQ_GT(seqno + tcplen,
1208:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                            next->tcphdr->seqno)) {
1209:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****               /* FIN in inseg already handled by dropping whole ooseq queue */
1210:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****               inseg.len = (u16_t)(pcb->ooseq->tcphdr->seqno - seqno);
1211:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****               if (TCPH_FLAGS(inseg.tcphdr) & TCP_SYN) {
1212:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                 inseg.len -= 1;
1213:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****               }
1214:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****               pbuf_realloc(inseg.p, inseg.len);
1215:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****               tcplen = TCP_TCPLEN(&inseg);
1216:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****               LWIP_ASSERT("tcp_receive: segment not trimmed correctly to ooseq queue\n",
1217:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                           (seqno + tcplen) == pcb->ooseq->tcphdr->seqno);
1218:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****             }
1219:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****             pcb->ooseq = next;
1220:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           }
1221:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         }
1222:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** #endif /* TCP_QUEUE_OOSEQ */
1223:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
1224:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         pcb->rcv_nxt = seqno + tcplen;
 3506              		.loc 1 1224 0
 3507 090c 40F20003 		movw	r3, #:lower16:tcplen
 3508 0910 C0F20003 		movt	r3, #:upper16:tcplen
 3509 0914 1B88     		ldrh	r3, [r3, #0]
 3510 0916 1A46     		mov	r2, r3
 3511 0918 40F20003 		movw	r3, #:lower16:seqno
 3512 091c C0F20003 		movt	r3, #:upper16:seqno
 3513 0920 1B68     		ldr	r3, [r3, #0]
 3514 0922 D218     		adds	r2, r2, r3
 3515 0924 7B68     		ldr	r3, [r7, #4]
 3516 0926 5A62     		str	r2, [r3, #36]
1225:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
1226:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         /* Update the receiver's (our) window. */
1227:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         LWIP_ASSERT("tcp_receive: tcplen > rcv_wnd\n", pcb->rcv_wnd >= tcplen);
1228:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         pcb->rcv_wnd -= tcplen;
 3517              		.loc 1 1228 0
 3518 0928 7B68     		ldr	r3, [r7, #4]
 3519 092a 1A8D     		ldrh	r2, [r3, #40]
 3520 092c 40F20003 		movw	r3, #:lower16:tcplen
 3521 0930 C0F20003 		movt	r3, #:upper16:tcplen
 3522 0934 1B88     		ldrh	r3, [r3, #0]
 3523 0936 D31A     		subs	r3, r2, r3
 3524 0938 9AB2     		uxth	r2, r3
 3525 093a 7B68     		ldr	r3, [r7, #4]
 3526 093c 1A85     		strh	r2, [r3, #40]	@ movhi
1229:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
1230:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         tcp_update_rcv_ann_wnd(pcb);
 3527              		.loc 1 1230 0
 3528 093e 7868     		ldr	r0, [r7, #4]
 3529 0940 FFF7FEFF 		bl	tcp_update_rcv_ann_wnd
1231:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
1232:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         /* If there is data in the segment, we make preparations to
1233:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****            pass this up to the application. The ->recv_data variable
1234:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****            is used for holding the pbuf that goes to the
1235:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****            application. The code for reassembling out-of-sequence data
1236:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****            chains its data on this pbuf as well.
1237:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
1238:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****            If the segment was a FIN, we set the TF_GOT_FIN flag that will
1239:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****            be used to indicate to the application that the remote side has
1240:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****            closed its end of the connection. */
1241:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         if (inseg.p->tot_len > 0) {
 3530              		.loc 1 1241 0
 3531 0944 40F20003 		movw	r3, #:lower16:inseg
 3532 0948 C0F20003 		movt	r3, #:upper16:inseg
 3533 094c 5B68     		ldr	r3, [r3, #4]
 3534 094e 1B89     		ldrh	r3, [r3, #8]
 3535 0950 002B     		cmp	r3, #0
 3536 0952 10D0     		beq	.L162
1242:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           recv_data = inseg.p;
 3537              		.loc 1 1242 0
 3538 0954 40F20003 		movw	r3, #:lower16:inseg
 3539 0958 C0F20003 		movt	r3, #:upper16:inseg
 3540 095c 5A68     		ldr	r2, [r3, #4]
 3541 095e 40F20003 		movw	r3, #:lower16:recv_data
 3542 0962 C0F20003 		movt	r3, #:upper16:recv_data
 3543 0966 1A60     		str	r2, [r3, #0]
1243:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           /* Since this pbuf now is the responsibility of the
1244:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****              application, we delete our reference to it so that we won't
1245:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****              (mistakingly) deallocate it. */
1246:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           inseg.p = NULL;
 3544              		.loc 1 1246 0
 3545 0968 40F20003 		movw	r3, #:lower16:inseg
 3546 096c C0F20003 		movt	r3, #:upper16:inseg
 3547 0970 4FF00002 		mov	r2, #0
 3548 0974 5A60     		str	r2, [r3, #4]
 3549              	.L162:
1247:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         }
1248:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         if (TCPH_FLAGS(inseg.tcphdr) & TCP_FIN) {
 3550              		.loc 1 1248 0
 3551 0976 40F20003 		movw	r3, #:lower16:inseg
 3552 097a C0F20003 		movt	r3, #:upper16:inseg
 3553 097e 1B69     		ldr	r3, [r3, #16]
 3554 0980 9B89     		ldrh	r3, [r3, #12]	@ unaligned
 3555 0982 9BB2     		uxth	r3, r3
 3556 0984 1846     		mov	r0, r3
 3557 0986 FFF7FEFF 		bl	ntohs
 3558 098a 0346     		mov	r3, r0
 3559 098c 03F00103 		and	r3, r3, #1
 3560 0990 002B     		cmp	r3, #0
 3561 0992 0CD0     		beq	.L163
1249:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           LWIP_DEBUGF(TCP_INPUT_DEBUG, ("tcp_receive: received FIN.\n"));
1250:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           recv_flags |= TF_GOT_FIN;
 3562              		.loc 1 1250 0
 3563 0994 40F20003 		movw	r3, #:lower16:recv_flags
 3564 0998 C0F20003 		movt	r3, #:upper16:recv_flags
 3565 099c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3566 099e 43F02003 		orr	r3, r3, #32
 3567 09a2 DAB2     		uxtb	r2, r3
 3568 09a4 40F20003 		movw	r3, #:lower16:recv_flags
 3569 09a8 C0F20003 		movt	r3, #:upper16:recv_flags
 3570 09ac 1A70     		strb	r2, [r3, #0]
 3571              	.L163:
1251:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         }
1252:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
1253:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** #if TCP_QUEUE_OOSEQ
1254:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         /* We now check if we have segments on the ->ooseq queue that
1255:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****            is now in sequence. */
1256:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         while (pcb->ooseq != NULL &&
1257:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                pcb->ooseq->tcphdr->seqno == pcb->rcv_nxt) {
1258:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
1259:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           cseg = pcb->ooseq;
1260:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           seqno = pcb->ooseq->tcphdr->seqno;
1261:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
1262:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           pcb->rcv_nxt += TCP_TCPLEN(cseg);
1263:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           LWIP_ASSERT("tcp_receive: ooseq tcplen > rcv_wnd\n",
1264:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                       pcb->rcv_wnd >= TCP_TCPLEN(cseg));
1265:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           pcb->rcv_wnd -= TCP_TCPLEN(cseg);
1266:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
1267:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           tcp_update_rcv_ann_wnd(pcb);
1268:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
1269:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           if (cseg->p->tot_len > 0) {
1270:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****             /* Chain this pbuf onto the pbuf that we will pass to
1271:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                the application. */
1272:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****             if (recv_data) {
1273:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****               pbuf_cat(recv_data, cseg->p);
1274:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****             } else {
1275:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****               recv_data = cseg->p;
1276:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****             }
1277:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****             cseg->p = NULL;
1278:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           }
1279:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           if (TCPH_FLAGS(cseg->tcphdr) & TCP_FIN) {
1280:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****             LWIP_DEBUGF(TCP_INPUT_DEBUG, ("tcp_receive: dequeued FIN.\n"));
1281:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****             recv_flags |= TF_GOT_FIN;
1282:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****             if (pcb->state == ESTABLISHED) { /* force passive close or we can move to active close 
1283:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****               pcb->state = CLOSE_WAIT;
1284:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****             } 
1285:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           }
1286:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
1287:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           pcb->ooseq = cseg->next;
1288:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           tcp_seg_free(cseg);
1289:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         }
1290:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** #endif /* TCP_QUEUE_OOSEQ */
1291:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
1292:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
1293:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         /* Acknowledge the segment(s). */
1294:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         tcp_ack(pcb);
 3572              		.loc 1 1294 0
 3573 09ae 7B68     		ldr	r3, [r7, #4]
 3574 09b0 93F82230 		ldrb	r3, [r3, #34]	@ zero_extendqisi2
 3575 09b4 03F00103 		and	r3, r3, #1
 3576 09b8 002B     		cmp	r3, #0
 3577 09ba 15D0     		beq	.L164
 3578              		.loc 1 1294 0 is_stmt 0 discriminator 1
 3579 09bc 7B68     		ldr	r3, [r7, #4]
 3580 09be 93F82230 		ldrb	r3, [r3, #34]	@ zero_extendqisi2
 3581 09c2 23F00103 		bic	r3, r3, #1
 3582 09c6 DAB2     		uxtb	r2, r3
 3583 09c8 7B68     		ldr	r3, [r7, #4]
 3584 09ca 83F82220 		strb	r2, [r3, #34]
 3585 09ce 7B68     		ldr	r3, [r7, #4]
 3586 09d0 93F82230 		ldrb	r3, [r3, #34]	@ zero_extendqisi2
 3587 09d4 43F00203 		orr	r3, r3, #2
 3588 09d8 DAB2     		uxtb	r2, r3
 3589 09da 7B68     		ldr	r3, [r7, #4]
 3590 09dc 83F82220 		strb	r2, [r3, #34]
 3591 09e0 7868     		ldr	r0, [r7, #4]
 3592 09e2 FFF7FEFF 		bl	tcp_output
1137:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       if (pcb->rcv_nxt == seqno) {
 3593              		.loc 1 1137 0 is_stmt 1 discriminator 1
 3594 09e6 37E0     		b	.L125
 3595              	.L164:
 3596              		.loc 1 1294 0 discriminator 2
 3597 09e8 7B68     		ldr	r3, [r7, #4]
 3598 09ea 93F82230 		ldrb	r3, [r3, #34]	@ zero_extendqisi2
 3599 09ee 43F00103 		orr	r3, r3, #1
 3600 09f2 DAB2     		uxtb	r2, r3
 3601 09f4 7B68     		ldr	r3, [r7, #4]
 3602 09f6 83F82220 		strb	r2, [r3, #34]
1137:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       if (pcb->rcv_nxt == seqno) {
 3603              		.loc 1 1137 0 discriminator 2
 3604 09fa 2DE0     		b	.L125
 3605              	.L158:
1295:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
1296:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       } else {
1297:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         /* We get here if the incoming segment is out-of-sequence. */
1298:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         tcp_send_empty_ack(pcb);
 3606              		.loc 1 1298 0
 3607 09fc 7868     		ldr	r0, [r7, #4]
 3608 09fe FFF7FEFF 		bl	tcp_send_empty_ack
1137:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       if (pcb->rcv_nxt == seqno) {
 3609              		.loc 1 1137 0
 3610 0a02 00BF     		nop
 3611 0a04 28E0     		b	.L125
 3612              	.L157:
1299:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** #if TCP_QUEUE_OOSEQ
1300:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         /* We queue the segment on the ->ooseq queue. */
1301:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         if (pcb->ooseq == NULL) {
1302:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           pcb->ooseq = tcp_seg_copy(&inseg);
1303:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         } else {
1304:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           /* If the queue is not empty, we walk through the queue and
1305:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****              try to find a place where the sequence number of the
1306:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****              incoming segment is between the sequence numbers of the
1307:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****              previous and the next segment on the ->ooseq queue. That is
1308:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****              the place where we put the incoming segment. If needed, we
1309:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****              trim the second edges of the previous and the incoming
1310:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****              segment so that it will fit into the sequence.
1311:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
1312:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****              If the incoming segment has the same sequence number as a
1313:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****              segment on the ->ooseq queue, we discard the segment that
1314:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****              contains less data. */
1315:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
1316:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           prev = NULL;
1317:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           for(next = pcb->ooseq; next != NULL; next = next->next) {
1318:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****             if (seqno == next->tcphdr->seqno) {
1319:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****               /* The sequence number of the incoming segment is the
1320:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                  same as the sequence number of the segment on
1321:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                  ->ooseq. We check the lengths to see which one to
1322:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                  discard. */
1323:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****               if (inseg.len > next->len) {
1324:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                 /* The incoming segment is larger than the old
1325:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                    segment. We replace some segments with the new
1326:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                    one. */
1327:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                 cseg = tcp_seg_copy(&inseg);
1328:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                 if (cseg != NULL) {
1329:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                   if (prev != NULL) {
1330:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                     prev->next = cseg;
1331:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                   } else {
1332:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                     pcb->ooseq = cseg;
1333:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                   }
1334:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                   tcp_oos_insert_segment(cseg, next);
1335:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                 }
1336:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                 break;
1337:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****               } else {
1338:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                 /* Either the lenghts are the same or the incoming
1339:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                    segment was smaller than the old one; in either
1340:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                    case, we ditch the incoming segment. */
1341:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                 break;
1342:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****               }
1343:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****             } else {
1344:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****               if (prev == NULL) {
1345:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                 if (TCP_SEQ_LT(seqno, next->tcphdr->seqno)) {
1346:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                   /* The sequence number of the incoming segment is lower
1347:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                      than the sequence number of the first segment on the
1348:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                      queue. We put the incoming segment first on the
1349:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                      queue. */
1350:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                   cseg = tcp_seg_copy(&inseg);
1351:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                   if (cseg != NULL) {
1352:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                     pcb->ooseq = cseg;
1353:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                     tcp_oos_insert_segment(cseg, next);
1354:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                   }
1355:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                   break;
1356:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                 }
1357:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****               } else {
1358:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                 /*if (TCP_SEQ_LT(prev->tcphdr->seqno, seqno) &&
1359:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                   TCP_SEQ_LT(seqno, next->tcphdr->seqno)) {*/
1360:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                 if (TCP_SEQ_BETWEEN(seqno, prev->tcphdr->seqno+1, next->tcphdr->seqno-1)) {
1361:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                   /* The sequence number of the incoming segment is in
1362:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                      between the sequence numbers of the previous and
1363:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                      the next segment on ->ooseq. We trim trim the previous
1364:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                      segment, delete next segments that included in received segment
1365:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                      and trim received, if needed. */
1366:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                   cseg = tcp_seg_copy(&inseg);
1367:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                   if (cseg != NULL) {
1368:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                     if (TCP_SEQ_GT(prev->tcphdr->seqno + prev->len, seqno)) {
1369:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                       /* We need to trim the prev segment. */
1370:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                       prev->len = (u16_t)(seqno - prev->tcphdr->seqno);
1371:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                       pbuf_realloc(prev->p, prev->len);
1372:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                     }
1373:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                     prev->next = cseg;
1374:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                     tcp_oos_insert_segment(cseg, next);
1375:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                   }
1376:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                   break;
1377:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                 }
1378:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****               }
1379:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****               /* If the "next" segment is the last segment on the
1380:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                  ooseq queue, we add the incoming segment to the end
1381:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                  of the list. */
1382:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****               if (next->next == NULL &&
1383:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                   TCP_SEQ_GT(seqno, next->tcphdr->seqno)) {
1384:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                 if (TCPH_FLAGS(next->tcphdr) & TCP_FIN) {
1385:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                   /* segment "next" already contains all data */
1386:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                   break;
1387:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                 }
1388:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                 next->next = tcp_seg_copy(&inseg);
1389:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                 if (next->next != NULL) {
1390:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                   if (TCP_SEQ_GT(next->tcphdr->seqno + next->len, seqno)) {
1391:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                     /* We need to trim the last segment. */
1392:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                     next->len = (u16_t)(seqno - next->tcphdr->seqno);
1393:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                     pbuf_realloc(next->p, next->len);
1394:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                   }
1395:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                 }
1396:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****                 break;
1397:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****               }
1398:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****             }
1399:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****             prev = next;
1400:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           }
1401:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         }
1402:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** #endif /* TCP_QUEUE_OOSEQ */
1403:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
1404:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       }
1405:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     } else {
1406:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       /* The incoming segment is not withing the window. */
1407:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       tcp_send_empty_ack(pcb);
 3613              		.loc 1 1407 0
 3614 0a06 7868     		ldr	r0, [r7, #4]
 3615 0a08 FFF7FEFF 		bl	tcp_send_empty_ack
 3616 0a0c 24E0     		b	.L125
 3617              	.L150:
1408:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     }
1409:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   } else {
1410:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     /* Segments with length 0 is taken care of here. Segments that
1411:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****        fall out of the window are ACKed. */
1412:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     /*if (TCP_SEQ_GT(pcb->rcv_nxt, seqno) ||
1413:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       TCP_SEQ_GEQ(seqno, pcb->rcv_nxt + pcb->rcv_wnd)) {*/
1414:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     if(!TCP_SEQ_BETWEEN(seqno, pcb->rcv_nxt, pcb->rcv_nxt + pcb->rcv_wnd-1)){
 3618              		.loc 1 1414 0
 3619 0a0e 40F20003 		movw	r3, #:lower16:seqno
 3620 0a12 C0F20003 		movt	r3, #:upper16:seqno
 3621 0a16 1A68     		ldr	r2, [r3, #0]
 3622 0a18 7B68     		ldr	r3, [r7, #4]
 3623 0a1a 5B6A     		ldr	r3, [r3, #36]
 3624 0a1c D31A     		subs	r3, r2, r3
 3625 0a1e 002B     		cmp	r3, #0
 3626 0a20 0EDB     		blt	.L168
 3627              		.loc 1 1414 0 is_stmt 0 discriminator 1
 3628 0a22 40F20003 		movw	r3, #:lower16:seqno
 3629 0a26 C0F20003 		movt	r3, #:upper16:seqno
 3630 0a2a 1A68     		ldr	r2, [r3, #0]
 3631 0a2c 7B68     		ldr	r3, [r7, #4]
 3632 0a2e 596A     		ldr	r1, [r3, #36]
 3633 0a30 7B68     		ldr	r3, [r7, #4]
 3634 0a32 1B8D     		ldrh	r3, [r3, #40]
 3635 0a34 CB18     		adds	r3, r1, r3
 3636 0a36 D31A     		subs	r3, r2, r3
 3637 0a38 03F10103 		add	r3, r3, #1
 3638 0a3c 002B     		cmp	r3, #0
 3639 0a3e 0BDD     		ble	.L125
 3640              	.L168:
1415:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       tcp_ack_now(pcb);
 3641              		.loc 1 1415 0 is_stmt 1
 3642 0a40 7B68     		ldr	r3, [r7, #4]
 3643 0a42 93F82230 		ldrb	r3, [r3, #34]	@ zero_extendqisi2
 3644 0a46 43F00203 		orr	r3, r3, #2
 3645 0a4a DAB2     		uxtb	r2, r3
 3646 0a4c 7B68     		ldr	r3, [r7, #4]
 3647 0a4e 83F82220 		strb	r2, [r3, #34]
 3648 0a52 7868     		ldr	r0, [r7, #4]
 3649 0a54 FFF7FEFF 		bl	tcp_output
 3650              	.L125:
1416:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     }
1417:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   }
1418:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** }
 3651              		.loc 1 1418 0
 3652 0a58 07F12C07 		add	r7, r7, #44
 3653 0a5c BD46     		mov	sp, r7
 3654 0a5e F0BD     		pop	{r4, r5, r6, r7, pc}
 3655              		.cfi_endproc
 3656              	.LFE4:
 3658              		.section	.text.tcp_parseopt,"ax",%progbits
 3659              		.align	2
 3660              		.thumb
 3661              		.thumb_func
 3663              	tcp_parseopt:
 3664              	.LFB5:
1419:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
1420:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** /**
1421:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  * Parses the options contained in the incoming segment. 
1422:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  *
1423:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  * Called from tcp_listen_input() and tcp_process().
1424:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  * Currently, only the MSS option is supported!
1425:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  *
1426:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  * @param pcb the tcp_pcb for which a segment arrived
1427:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****  */
1428:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** static void
1429:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** tcp_parseopt(struct tcp_pcb *pcb)
1430:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** {
 3665              		.loc 1 1430 0
 3666              		.cfi_startproc
 3667              		@ args = 0, pretend = 0, frame = 24
 3668              		@ frame_needed = 1, uses_anonymous_args = 0
 3669 0000 80B5     		push	{r7, lr}
 3670              	.LCFI15:
 3671              		.cfi_def_cfa_offset 8
 3672              		.cfi_offset 7, -8
 3673              		.cfi_offset 14, -4
 3674 0002 86B0     		sub	sp, sp, #24
 3675              	.LCFI16:
 3676              		.cfi_def_cfa_offset 32
 3677 0004 00AF     		add	r7, sp, #0
 3678              	.LCFI17:
 3679              		.cfi_def_cfa_register 7
 3680 0006 7860     		str	r0, [r7, #4]
1431:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   u16_t c, max_c;
1432:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   u16_t mss;
1433:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   u8_t *opts, opt;
1434:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** #if LWIP_TCP_TIMESTAMPS
1435:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   u32_t tsval;
1436:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** #endif
1437:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
1438:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   opts = (u8_t *)tcphdr + TCP_HLEN;
 3681              		.loc 1 1438 0
 3682 0008 40F20003 		movw	r3, #:lower16:tcphdr
 3683 000c C0F20003 		movt	r3, #:upper16:tcphdr
 3684 0010 1B68     		ldr	r3, [r3, #0]
 3685 0012 03F11403 		add	r3, r3, #20
 3686 0016 3B61     		str	r3, [r7, #16]
1439:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** 
1440:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   /* Parse the TCP MSS option, if present. */
1441:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   if(TCPH_HDRLEN(tcphdr) > 0x5) {
 3687              		.loc 1 1441 0
 3688 0018 40F20003 		movw	r3, #:lower16:tcphdr
 3689 001c C0F20003 		movt	r3, #:upper16:tcphdr
 3690 0020 1B68     		ldr	r3, [r3, #0]
 3691 0022 9B89     		ldrh	r3, [r3, #12]	@ unaligned
 3692 0024 9BB2     		uxth	r3, r3
 3693 0026 1846     		mov	r0, r3
 3694 0028 FFF7FEFF 		bl	ntohs
 3695 002c 0346     		mov	r3, r0
 3696 002e 4FEA1333 		lsr	r3, r3, #12
 3697 0032 9BB2     		uxth	r3, r3
 3698 0034 052B     		cmp	r3, #5
 3699 0036 78D9     		bls	.L171
1442:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     max_c = (TCPH_HDRLEN(tcphdr) - 5) << 2;
 3700              		.loc 1 1442 0
 3701 0038 40F20003 		movw	r3, #:lower16:tcphdr
 3702 003c C0F20003 		movt	r3, #:upper16:tcphdr
 3703 0040 1B68     		ldr	r3, [r3, #0]
 3704 0042 9B89     		ldrh	r3, [r3, #12]	@ unaligned
 3705 0044 9BB2     		uxth	r3, r3
 3706 0046 1846     		mov	r0, r3
 3707 0048 FFF7FEFF 		bl	ntohs
 3708 004c 0346     		mov	r3, r0
 3709 004e 4FEA1333 		lsr	r3, r3, #12
 3710 0052 9BB2     		uxth	r3, r3
 3711 0054 A3F10503 		sub	r3, r3, #5
 3712 0058 9BB2     		uxth	r3, r3
 3713 005a 4FEA8303 		lsl	r3, r3, #2
 3714 005e FB81     		strh	r3, [r7, #14]	@ movhi
1443:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     for (c = 0; c < max_c; ) {
 3715              		.loc 1 1443 0
 3716 0060 4FF00003 		mov	r3, #0
 3717 0064 FB82     		strh	r3, [r7, #22]	@ movhi
 3718 0066 56E0     		b	.L173
 3719              	.L183:
1444:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       opt = opts[c];
 3720              		.loc 1 1444 0
 3721 0068 FB8A     		ldrh	r3, [r7, #22]
 3722 006a 3A69     		ldr	r2, [r7, #16]
 3723 006c D318     		adds	r3, r2, r3
 3724 006e 1B78     		ldrb	r3, [r3, #0]
 3725 0070 7B73     		strb	r3, [r7, #13]
1445:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       switch (opt) {
 3726              		.loc 1 1445 0
 3727 0072 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 3728 0074 012B     		cmp	r3, #1
 3729 0076 04D0     		beq	.L176
 3730 0078 022B     		cmp	r3, #2
 3731 007a 07D0     		beq	.L177
 3732 007c 002B     		cmp	r3, #0
 3733 007e 4FD0     		beq	.L185
 3734 0080 37E0     		b	.L184
 3735              	.L176:
1446:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       case 0x00:
1447:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         /* End of options. */
1448:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         LWIP_DEBUGF(TCP_INPUT_DEBUG, ("tcp_parseopt: EOL\n"));
1449:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         return;
1450:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       case 0x01:
1451:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         /* NOP option. */
1452:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         ++c;
 3736              		.loc 1 1452 0
 3737 0082 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 3738 0084 03F10103 		add	r3, r3, #1
 3739 0088 FB82     		strh	r3, [r7, #22]	@ movhi
1453:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         LWIP_DEBUGF(TCP_INPUT_DEBUG, ("tcp_parseopt: NOP\n"));
1454:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         break;
 3740              		.loc 1 1454 0
 3741 008a 44E0     		b	.L173
 3742              	.L177:
1455:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       case 0x02:
1456:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         LWIP_DEBUGF(TCP_INPUT_DEBUG, ("tcp_parseopt: MSS\n"));
1457:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         if (opts[c + 1] != 0x04 || c + 0x04 > max_c) {
 3743              		.loc 1 1457 0
 3744 008c FB8A     		ldrh	r3, [r7, #22]
 3745 008e 03F10103 		add	r3, r3, #1
 3746 0092 3A69     		ldr	r2, [r7, #16]
 3747 0094 D318     		adds	r3, r2, r3
 3748 0096 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3749 0098 042B     		cmp	r3, #4
 3750 009a 43D1     		bne	.L186
 3751              		.loc 1 1457 0 is_stmt 0 discriminator 1
 3752 009c FB8A     		ldrh	r3, [r7, #22]
 3753 009e 03F10402 		add	r2, r3, #4
 3754 00a2 FB89     		ldrh	r3, [r7, #14]
 3755 00a4 9A42     		cmp	r2, r3
 3756 00a6 3DDC     		bgt	.L186
 3757              	.L179:
1458:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           /* Bad length */
1459:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           LWIP_DEBUGF(TCP_INPUT_DEBUG, ("tcp_parseopt: bad length\n"));
1460:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           return;
1461:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         }
1462:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         /* An MSS option with the right option length. */
1463:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         mss = (opts[c + 2] << 8) | opts[c + 3];
 3758              		.loc 1 1463 0 is_stmt 1
 3759 00a8 FB8A     		ldrh	r3, [r7, #22]
 3760 00aa 03F10203 		add	r3, r3, #2
 3761 00ae 3A69     		ldr	r2, [r7, #16]
 3762 00b0 D318     		adds	r3, r2, r3
 3763 00b2 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3764 00b4 4FEA0323 		lsl	r3, r3, #8
 3765 00b8 9AB2     		uxth	r2, r3
 3766 00ba FB8A     		ldrh	r3, [r7, #22]
 3767 00bc 03F10303 		add	r3, r3, #3
 3768 00c0 3969     		ldr	r1, [r7, #16]
 3769 00c2 CB18     		adds	r3, r1, r3
 3770 00c4 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3771 00c6 1343     		orrs	r3, r3, r2
 3772 00c8 9BB2     		uxth	r3, r3
 3773 00ca 7B81     		strh	r3, [r7, #10]	@ movhi
1464:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         /* Limit the mss to the configured TCP_MSS and prevent division by zero */
1465:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         pcb->mss = ((mss > TCP_MSS) || (mss == 0)) ? TCP_MSS : mss;
 3774              		.loc 1 1465 0
 3775 00cc 7A89     		ldrh	r2, [r7, #10]
 3776 00ce 40F2A653 		movw	r3, #1446
 3777 00d2 9A42     		cmp	r2, r3
 3778 00d4 04D8     		bhi	.L180
 3779              		.loc 1 1465 0 is_stmt 0 discriminator 1
 3780 00d6 7B89     		ldrh	r3, [r7, #10]
 3781 00d8 002B     		cmp	r3, #0
 3782 00da 01D0     		beq	.L180
 3783 00dc 7B89     		ldrh	r3, [r7, #10]
 3784 00de 01E0     		b	.L181
 3785              	.L180:
 3786              		.loc 1 1465 0 discriminator 2
 3787 00e0 40F2A653 		movw	r3, #1446
 3788              	.L181:
 3789              		.loc 1 1465 0 discriminator 3
 3790 00e4 7A68     		ldr	r2, [r7, #4]
 3791 00e6 1387     		strh	r3, [r2, #56]	@ movhi
1466:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         /* Advance to next option */
1467:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         c += 0x04;
 3792              		.loc 1 1467 0 is_stmt 1 discriminator 3
 3793 00e8 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 3794 00ea 03F10403 		add	r3, r3, #4
 3795 00ee FB82     		strh	r3, [r7, #22]	@ movhi
1468:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         break;
 3796              		.loc 1 1468 0 discriminator 3
 3797 00f0 11E0     		b	.L173
 3798              	.L184:
1469:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** #if LWIP_TCP_TIMESTAMPS
1470:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       case 0x08:
1471:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         LWIP_DEBUGF(TCP_INPUT_DEBUG, ("tcp_parseopt: TS\n"));
1472:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         if (opts[c + 1] != 0x0A || c + 0x0A > max_c) {
1473:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           /* Bad length */
1474:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           LWIP_DEBUGF(TCP_INPUT_DEBUG, ("tcp_parseopt: bad length\n"));
1475:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           return;
1476:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         }
1477:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         /* TCP timestamp option with valid length */
1478:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         tsval = (opts[c+2]) | (opts[c+3] << 8) | 
1479:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           (opts[c+4] << 16) | (opts[c+5] << 24);
1480:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         if (flags & TCP_SYN) {
1481:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           pcb->ts_recent = ntohl(tsval);
1482:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           pcb->flags |= TF_TIMESTAMP;
1483:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         } else if (TCP_SEQ_BETWEEN(pcb->ts_lastacksent, seqno, seqno+tcplen)) {
1484:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           pcb->ts_recent = ntohl(tsval);
1485:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         }
1486:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         /* Advance to next option */
1487:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         c += 0x0A;
1488:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         break;
1489:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** #endif
1490:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       default:
1491:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         LWIP_DEBUGF(TCP_INPUT_DEBUG, ("tcp_parseopt: other\n"));
1492:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         if (opts[c + 1] == 0) {
 3799              		.loc 1 1492 0
 3800 00f2 FB8A     		ldrh	r3, [r7, #22]
 3801 00f4 03F10103 		add	r3, r3, #1
 3802 00f8 3A69     		ldr	r2, [r7, #16]
 3803 00fa D318     		adds	r3, r2, r3
 3804 00fc 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3805 00fe 002B     		cmp	r3, #0
 3806 0100 12D0     		beq	.L187
 3807              	.L182:
1493:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           LWIP_DEBUGF(TCP_INPUT_DEBUG, ("tcp_parseopt: bad length\n"));
1494:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           /* If the length field is zero, the options are malformed
1495:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****              and we don't process them further. */
1496:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           return;
1497:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         }
1498:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         /* All other options have a length field, so that we easily
1499:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****            can skip past them. */
1500:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         c += opts[c + 1];
 3808              		.loc 1 1500 0
 3809 0102 FB8A     		ldrh	r3, [r7, #22]
 3810 0104 03F10103 		add	r3, r3, #1
 3811 0108 3A69     		ldr	r2, [r7, #16]
 3812 010a D318     		adds	r3, r2, r3
 3813 010c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3814 010e 1A46     		mov	r2, r3
 3815 0110 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 3816 0112 D318     		adds	r3, r2, r3
 3817 0114 FB82     		strh	r3, [r7, #22]	@ movhi
 3818              	.L173:
1443:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     for (c = 0; c < max_c; ) {
 3819              		.loc 1 1443 0 discriminator 1
 3820 0116 FA8A     		ldrh	r2, [r7, #22]
 3821 0118 FB89     		ldrh	r3, [r7, #14]
 3822 011a 9A42     		cmp	r2, r3
 3823 011c A4D3     		bcc	.L183
 3824 011e 04E0     		b	.L171
 3825              	.L185:
1449:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****         return;
 3826              		.loc 1 1449 0
 3827 0120 00BF     		nop
 3828 0122 02E0     		b	.L171
 3829              	.L186:
1460:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           return;
 3830              		.loc 1 1460 0
 3831 0124 00BF     		nop
 3832 0126 00E0     		b	.L171
 3833              	.L187:
1496:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****           return;
 3834              		.loc 1 1496 0
 3835 0128 00BF     		nop
 3836              	.L171:
1501:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****       }
1502:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****     }
1503:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c ****   }
1504:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_in.c **** }
 3837              		.loc 1 1504 0
 3838 012a 07F11807 		add	r7, r7, #24
 3839 012e BD46     		mov	sp, r7
 3840 0130 80BD     		pop	{r7, pc}
 3841              		.cfi_endproc
 3842              	.LFE5:
 3844 0132 00BF     		.text
 3845              	.Letext0:
 3846              		.file 2 "F:\\WORK\\SmartHome_checkout1\\XMC4500_RK_HTTPserver\\Dave\\Generated\\src\\ETH004\\01_lw
 3847              		.file 3 "F:\\WORK\\SmartHome_checkout1\\XMC4500_RK_HTTPserver\\Dave\\Generated\\src\\ETH004\\01_lw
 3848              		.file 4 "F:\\WORK\\SmartHome_checkout1\\XMC4500_RK_HTTPserver\\Dave\\Generated\\src\\ETH004\\01_lw
 3849              		.file 5 "F:\\WORK\\SmartHome_checkout1\\XMC4500_RK_HTTPserver\\Dave\\Generated\\src\\ETH004\\01_lw
 3850              		.file 6 "F:\\WORK\\SmartHome_checkout1\\XMC4500_RK_HTTPserver\\Dave\\Generated\\src\\ETH004\\01_lw
 3851              		.file 7 "F:\\WORK\\SmartHome_checkout1\\XMC4500_RK_HTTPserver\\Dave\\Generated\\src\\ETH004\\01_lw
 3852              		.file 8 "F:\\WORK\\SmartHome_checkout1\\XMC4500_RK_HTTPserver\\Dave\\Generated\\src\\ETH004\\01_lw
 3853              		.file 9 "F:\\WORK\\SmartHome_checkout1\\XMC4500_RK_HTTPserver\\Dave\\Generated\\src\\ETH004\\01_lw
DEFINED SYMBOLS
                            *ABS*:00000000 tcp_in.c
C:\Users\Mihai\AppData\Local\Temp\cchwohys.s:20     .bss:00000000 $d
C:\Users\Mihai\AppData\Local\Temp\cchwohys.s:21     .bss:00000000 inseg
C:\Users\Mihai\AppData\Local\Temp\cchwohys.s:24     .bss:00000014 tcphdr
C:\Users\Mihai\AppData\Local\Temp\cchwohys.s:27     .bss:00000018 iphdr
C:\Users\Mihai\AppData\Local\Temp\cchwohys.s:30     .bss:0000001c seqno
C:\Users\Mihai\AppData\Local\Temp\cchwohys.s:33     .bss:00000020 ackno
C:\Users\Mihai\AppData\Local\Temp\cchwohys.s:35     .bss:00000024 flags
C:\Users\Mihai\AppData\Local\Temp\cchwohys.s:38     .bss:00000026 tcplen
C:\Users\Mihai\AppData\Local\Temp\cchwohys.s:40     .bss:00000028 recv_flags
C:\Users\Mihai\AppData\Local\Temp\cchwohys.s:43     .bss:0000002c recv_data
                            *COM*:00000004 tcp_input_pcb
C:\Users\Mihai\AppData\Local\Temp\cchwohys.s:47     .text.tcp_input:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\cchwohys.s:52     .text.tcp_input:00000000 tcp_input
C:\Users\Mihai\AppData\Local\Temp\cchwohys.s:1221   .text.tcp_timewait_input:00000000 tcp_timewait_input
C:\Users\Mihai\AppData\Local\Temp\cchwohys.s:949    .text.tcp_listen_input:00000000 tcp_listen_input
C:\Users\Mihai\AppData\Local\Temp\cchwohys.s:1372   .text.tcp_process:00000000 tcp_process
C:\Users\Mihai\AppData\Local\Temp\cchwohys.s:945    .text.tcp_listen_input:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\cchwohys.s:3663   .text.tcp_parseopt:00000000 tcp_parseopt
C:\Users\Mihai\AppData\Local\Temp\cchwohys.s:1217   .text.tcp_timewait_input:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\cchwohys.s:1368   .text.tcp_process:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\cchwohys.s:1528   .text.tcp_process:00000130 $d
C:\Users\Mihai\AppData\Local\Temp\cchwohys.s:1538   .text.tcp_process:00000150 $t
C:\Users\Mihai\AppData\Local\Temp\cchwohys.s:2429   .text.tcp_receive:00000000 tcp_receive
C:\Users\Mihai\AppData\Local\Temp\cchwohys.s:2425   .text.tcp_receive:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\cchwohys.s:3659   .text.tcp_parseopt:00000000 $t
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.1791a5ae2e936ca1033c1c44be394cc7
                           .group:00000000 wm4.ETH004_Conf.h.56.59591edbd6ce1f089c3d2789404b9485
                           .group:00000000 wm4.lwipopts.h.73.a7a63bda1e8216abd1d90275eaaa0027
                           .group:00000000 wm4.arch.h.33.6fa4aa86d33d1490ae882caef7316405
                           .group:00000000 wm4.cpu.h.33.b213c7fd77614ebc3691cef18ad2ff22
                           .group:00000000 wm4.cc.h.66.ec134211c658dcc89de4610e4e7bab46
                           .group:00000000 wm4.arch.h.47.5153c52bfb94ee3b37299920afab6afd
                           .group:00000000 wm4.debug.h.43.557ecd6c90cc70b375bb8a29118be47b
                           .group:00000000 wm4.opt.h.94.d36882acafebb8726bce646fc8b2397b
                           .group:00000000 wm4.sys.h.65.4a0cd87b9e0d8bb4cd6b30e939b2ca7e
                           .group:00000000 wm4.mem.h.96.20770766e6c9e6c42af6bfa95ef5c63f
                           .group:00000000 wm4.err.h.52.37c5d17538f8e8347a9c84196701e92d
                           .group:00000000 wm4.pbuf.h.43.e9a1ad12b97478787a109e22d5306820
                           .group:00000000 wm4.def.h.33.d779a3244e06cea9e944e5db86767de8
                           .group:00000000 wm4.inet.h.46.a1c378d398e089f18dd6ade9b427826c
                           .group:00000000 wm4.ip_addr.h.79.9a0ce887ca8c88c22ad7686bcb5105df
                           .group:00000000 wm4.netif.h.53.c13431a64f0e73a26710e71455725e84
                           .group:00000000 wm4.ip.h.48.ad46847692d4d729760949b27e48a442
                           .group:00000000 wm4.icmp.h.44.450dbf91f594cc26ad19d086cdc83713
                           .group:00000000 wm4.tcp.h.55.5c30b9432fa60afaa85cbdd225b0c683
                           .group:00000000 wm4.memp_std.h.15.aec196dc1c3fb1142dd450db0c167cbf
                           .group:00000000 wm4.memp.h.86.dbc4cb1b8d6b9ea113f04174f716e4c0
                           .group:00000000 wm4.stats.h.147.58ec5b890fad5bbc2a7711ad8105f087
                           .group:00000000 wm4.udp.h.48.1a8dde095cd0a13580afaba1443e5a3f
                           .group:00000000 wm4.snmp.h.231.ffb5dc2779dd945785c887dfa42d86eb
                           .group:00000000 wm4.perf.h.33.85c55671e1b7570634f49777a207ad9f

UNDEFINED SYMBOLS
ntohs
pbuf_header
pbuf_free
ip_addr_isbroadcast
ntohl
tcp_active_pcbs
tcp_tw_pcbs
tcp_listen_pcbs
tcp_recv_null
tcp_pcb_remove
mem_free
tcp_output
tcp_rst
tcp_alloc
tcp_eff_send_mss
tcp_enqueue
tcp_abandon
tcp_ticks
tcp_seg_free
tcp_rexmit
tcp_pcb_purge
tcp_tmp_pcb
tcp_rexmit_fast
pbuf_clen
htons
pbuf_realloc
tcp_update_rcv_ann_wnd
tcp_send_empty_ack
