   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"igmp.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.bss
  20              		.align	2
  21              	igmp_group_list:
  22 0000 00000000 		.space	4
  23              		.align	2
  24              	allsystems:
  25 0004 00000000 		.space	4
  26              		.align	2
  27              	allrouters:
  28 0008 00000000 		.space	4
  29              		.section	.text.igmp_init,"ax",%progbits
  30              		.align	2
  31              		.global	igmp_init
  32              		.thumb
  33              		.thumb_func
  35              	igmp_init:
  36              	.LFB0:
  37              		.file 1 "../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c"
   1:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** /**
   2:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * @file
   3:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * IGMP - Internet Group Management Protocol
   4:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  *
   5:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  */
   6:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
   7:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** /*
   8:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * Copyright (c) 2002 CITEL Technologies Ltd.
   9:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * All rights reserved.
  10:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  *
  11:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * Redistribution and use in source and binary forms, with or without 
  12:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * modification, are permitted provided that the following conditions 
  13:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * are met: 
  14:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * 1. Redistributions of source code must retain the above copyright 
  15:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  *    notice, this list of conditions and the following disclaimer. 
  16:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * 2. Redistributions in binary form must reproduce the above copyright 
  17:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  *    notice, this list of conditions and the following disclaimer in the 
  18:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  *    documentation and/or other materials provided with the distribution. 
  19:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * 3. Neither the name of CITEL Technologies Ltd nor the names of its contributors 
  20:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  *    may be used to endorse or promote products derived from this software 
  21:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  *    without specific prior written permission. 
  22:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  *
  23:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * THIS SOFTWARE IS PROVIDED BY CITEL TECHNOLOGIES AND CONTRIBUTORS ``AS IS''
  24:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
  25:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
  26:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * ARE DISCLAIMED.  IN NO EVENT SHALL CITEL TECHNOLOGIES OR CONTRIBUTORS BE LIABLE 
  27:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
  28:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS 
  29:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
  30:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
  31:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY 
  32:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF 
  33:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * SUCH DAMAGE. 
  34:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  *
  35:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * This file is a contribution to the lwIP TCP/IP stack.
  36:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * The Swedish Institute of Computer Science and Adam Dunkels
  37:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * are specifically granted permission to redistribute this
  38:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * source code.
  39:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** */
  40:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
  41:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** /*-------------------------------------------------------------
  42:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** Note 1)
  43:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** Although the rfc requires V1 AND V2 capability
  44:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** we will only support v2 since now V1 is very old (August 1989)
  45:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** V1 can be added if required
  46:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
  47:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** a debug print and statistic have been implemented to
  48:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** show this up.
  49:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** -------------------------------------------------------------
  50:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** -------------------------------------------------------------
  51:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** Note 2)
  52:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** A query for a specific group address (as opposed to ALLHOSTS)
  53:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** has now been implemented as I am unsure if it is required
  54:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
  55:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** a debug print and statistic have been implemented to
  56:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** show this up.
  57:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** -------------------------------------------------------------
  58:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** -------------------------------------------------------------
  59:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** Note 3)
  60:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** The router alert rfc 2113 is implemented in outgoing packets
  61:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** but not checked rigorously incoming
  62:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** -------------------------------------------------------------
  63:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** Steve Reynolds
  64:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** ------------------------------------------------------------*/
  65:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
  66:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** /*-----------------------------------------------------------------------------
  67:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * RFC 988  - Host extensions for IP multicasting                         - V0
  68:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * RFC 1054 - Host extensions for IP multicasting                         -
  69:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * RFC 1112 - Host extensions for IP multicasting                         - V1
  70:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * RFC 2236 - Internet Group Management Protocol, Version 2               - V2  <- this code is bas
  71:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * RFC 3376 - Internet Group Management Protocol, Version 3               - V3
  72:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * RFC 4604 - Using Internet Group Management Protocol Version 3...       - V3+
  73:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * RFC 2113 - IP Router Alert Option                                      - 
  74:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  *----------------------------------------------------------------------------*/
  75:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
  76:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** /*-----------------------------------------------------------------------------
  77:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * Includes
  78:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  *----------------------------------------------------------------------------*/
  79:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
  80:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** #include "lwip/opt.h"
  81:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
  82:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** #if LWIP_IGMP /* don't build if not configured for use in lwipopts.h */
  83:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
  84:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** #include "lwip/igmp.h"
  85:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** #include "lwip/debug.h"
  86:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** #include "lwip/def.h"
  87:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** #include "lwip/mem.h"
  88:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** #include "lwip/ip.h"
  89:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** #include "lwip/inet.h"
  90:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** #include "lwip/inet_chksum.h"
  91:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** #include "lwip/netif.h"
  92:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** #include "lwip/icmp.h"
  93:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** #include "lwip/udp.h"
  94:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** #include "lwip/tcp.h"
  95:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** #include "lwip/stats.h"
  96:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
  97:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** #include "string.h"
  98:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
  99:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** /*-----------------------------------------------------------------------------
 100:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * Globales
 101:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  *----------------------------------------------------------------------------*/
 102:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
 103:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** static struct igmp_group* igmp_group_list;
 104:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** static struct ip_addr     allsystems;
 105:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** static struct ip_addr     allrouters;
 106:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
 107:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** /**
 108:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * Initialize the IGMP module
 109:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  */
 110:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** void
 111:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** igmp_init(void)
 112:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** {
  38              		.loc 1 112 0
  39              		.cfi_startproc
  40              		@ args = 0, pretend = 0, frame = 0
  41              		@ frame_needed = 1, uses_anonymous_args = 0
  42 0000 80B5     		push	{r7, lr}
  43              	.LCFI0:
  44              		.cfi_def_cfa_offset 8
  45              		.cfi_offset 7, -8
  46              		.cfi_offset 14, -4
  47 0002 00AF     		add	r7, sp, #0
  48              	.LCFI1:
  49              		.cfi_def_cfa_register 7
 113:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   LWIP_DEBUGF(IGMP_DEBUG, ("igmp_init: initializing\n"));
 114:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
 115:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   IP4_ADDR(&allsystems, 224, 0, 0, 1);
  50              		.loc 1 115 0
  51 0004 4FF00100 		mov	r0, #1
  52 0008 CEF20000 		movt	r0, 57344
  53 000c FFF7FEFF 		bl	htonl
  54 0010 0246     		mov	r2, r0
  55 0012 40F20003 		movw	r3, #:lower16:allsystems
  56 0016 C0F20003 		movt	r3, #:upper16:allsystems
  57 001a 1A60     		str	r2, [r3, #0]
 116:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   IP4_ADDR(&allrouters, 224, 0, 0, 2);
  58              		.loc 1 116 0
  59 001c 4FF00200 		mov	r0, #2
  60 0020 CEF20000 		movt	r0, 57344
  61 0024 FFF7FEFF 		bl	htonl
  62 0028 0246     		mov	r2, r0
  63 002a 40F20003 		movw	r3, #:lower16:allrouters
  64 002e C0F20003 		movt	r3, #:upper16:allrouters
  65 0032 1A60     		str	r2, [r3, #0]
 117:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** }
  66              		.loc 1 117 0
  67 0034 80BD     		pop	{r7, pc}
  68              		.cfi_endproc
  69              	.LFE0:
  71 0036 00BF     		.section	.text.igmp_start,"ax",%progbits
  72              		.align	2
  73              		.global	igmp_start
  74              		.thumb
  75              		.thumb_func
  77              	igmp_start:
  78              	.LFB1:
 118:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
 119:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** #ifdef LWIP_DEBUG
 120:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** /**
 121:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * Dump global IGMP groups list
 122:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  */
 123:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** void
 124:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** igmp_dump_group_list()
 125:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** { 
 126:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   struct igmp_group *group = igmp_group_list;
 127:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
 128:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   while (group != NULL) {
 129:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     LWIP_DEBUGF(IGMP_DEBUG, ("igmp_dump_group_list: [%"U32_F"] ", (u32_t)(group->group_state)));
 130:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     ip_addr_debug_print(IGMP_DEBUG, &group->group_address);
 131:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     LWIP_DEBUGF(IGMP_DEBUG, (" on if %p\n", group->interface));
 132:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     group = group->next;
 133:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   }
 134:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   LWIP_DEBUGF(IGMP_DEBUG, ("\n"));
 135:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** }
 136:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** #else
 137:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** #define igmp_dump_group_list()
 138:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** #endif /* LWIP_DEBUG */
 139:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
 140:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** /**
 141:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * Start IGMP processing on interface
 142:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  *
 143:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * @param netif network interface on which start IGMP processing
 144:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  */
 145:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** err_t
 146:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** igmp_start(struct netif *netif)
 147:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** {
  79              		.loc 1 147 0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 16
  82              		@ frame_needed = 1, uses_anonymous_args = 0
  83 0000 80B5     		push	{r7, lr}
  84              	.LCFI2:
  85              		.cfi_def_cfa_offset 8
  86              		.cfi_offset 7, -8
  87              		.cfi_offset 14, -4
  88 0002 84B0     		sub	sp, sp, #16
  89              	.LCFI3:
  90              		.cfi_def_cfa_offset 24
  91 0004 00AF     		add	r7, sp, #0
  92              	.LCFI4:
  93              		.cfi_def_cfa_register 7
  94 0006 7860     		str	r0, [r7, #4]
 148:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   struct igmp_group* group;
 149:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
 150:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   LWIP_DEBUGF(IGMP_DEBUG, ("igmp_start: starting IGMP processing on if %p\n", netif));
 151:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
 152:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   group = igmp_lookup_group(netif, &allsystems);
  95              		.loc 1 152 0
  96 0008 7868     		ldr	r0, [r7, #4]
  97 000a 40F20001 		movw	r1, #:lower16:allsystems
  98 000e C0F20001 		movt	r1, #:upper16:allsystems
  99 0012 FFF7FEFF 		bl	igmp_lookup_group
 100 0016 F860     		str	r0, [r7, #12]
 153:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
 154:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   if (group != NULL) {
 101              		.loc 1 154 0
 102 0018 FB68     		ldr	r3, [r7, #12]
 103 001a 002B     		cmp	r3, #0
 104 001c 1BD0     		beq	.L3
 155:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     group->group_state = IGMP_GROUP_IDLE_MEMBER;
 105              		.loc 1 155 0
 106 001e FB68     		ldr	r3, [r7, #12]
 107 0020 4FF00202 		mov	r2, #2
 108 0024 5A73     		strb	r2, [r3, #13]
 156:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     group->use++;
 109              		.loc 1 156 0
 110 0026 FB68     		ldr	r3, [r7, #12]
 111 0028 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 112 002a 03F10103 		add	r3, r3, #1
 113 002e DAB2     		uxtb	r2, r3
 114 0030 FB68     		ldr	r3, [r7, #12]
 115 0032 1A74     		strb	r2, [r3, #16]
 157:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
 158:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     /* Allow the igmp messages at the MAC level */
 159:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     if (netif->igmp_mac_filter != NULL) {
 116              		.loc 1 159 0
 117 0034 7B68     		ldr	r3, [r7, #4]
 118 0036 1B6B     		ldr	r3, [r3, #48]
 119 0038 002B     		cmp	r3, #0
 120 003a 09D0     		beq	.L4
 160:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****       LWIP_DEBUGF(IGMP_DEBUG, ("igmp_start: igmp_mac_filter(ADD "));
 161:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****       ip_addr_debug_print(IGMP_DEBUG, &allsystems);
 162:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****       LWIP_DEBUGF(IGMP_DEBUG, (") on if %p\n", netif));
 163:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****       netif->igmp_mac_filter( netif, &allsystems, IGMP_ADD_MAC_FILTER);
 121              		.loc 1 163 0
 122 003c 7B68     		ldr	r3, [r7, #4]
 123 003e 1B6B     		ldr	r3, [r3, #48]
 124 0040 7868     		ldr	r0, [r7, #4]
 125 0042 40F20001 		movw	r1, #:lower16:allsystems
 126 0046 C0F20001 		movt	r1, #:upper16:allsystems
 127 004a 4FF00102 		mov	r2, #1
 128 004e 9847     		blx	r3
 129              	.L4:
 164:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     }
 165:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
 166:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     return ERR_OK;
 130              		.loc 1 166 0
 131 0050 4FF00003 		mov	r3, #0
 132 0054 01E0     		b	.L5
 133              	.L3:
 167:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   }
 168:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
 169:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   return ERR_MEM;
 134              		.loc 1 169 0
 135 0056 4FF0FF03 		mov	r3, #255
 136              	.L5:
 137 005a 5BB2     		sxtb	r3, r3
 170:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** }
 138              		.loc 1 170 0
 139 005c 1846     		mov	r0, r3
 140 005e 07F11007 		add	r7, r7, #16
 141 0062 BD46     		mov	sp, r7
 142 0064 80BD     		pop	{r7, pc}
 143              		.cfi_endproc
 144              	.LFE1:
 146 0066 00BF     		.section	.text.igmp_stop,"ax",%progbits
 147              		.align	2
 148              		.global	igmp_stop
 149              		.thumb
 150              		.thumb_func
 152              	igmp_stop:
 153              	.LFB2:
 171:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
 172:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** /**
 173:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * Stop IGMP processing on interface
 174:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  *
 175:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * @param netif network interface on which stop IGMP processing
 176:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  */
 177:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** err_t
 178:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** igmp_stop(struct netif *netif)
 179:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** {
 154              		.loc 1 179 0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 24
 157              		@ frame_needed = 1, uses_anonymous_args = 0
 158 0000 80B5     		push	{r7, lr}
 159              	.LCFI5:
 160              		.cfi_def_cfa_offset 8
 161              		.cfi_offset 7, -8
 162              		.cfi_offset 14, -4
 163 0002 86B0     		sub	sp, sp, #24
 164              	.LCFI6:
 165              		.cfi_def_cfa_offset 32
 166 0004 00AF     		add	r7, sp, #0
 167              	.LCFI7:
 168              		.cfi_def_cfa_register 7
 169 0006 7860     		str	r0, [r7, #4]
 180:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   struct igmp_group *group = igmp_group_list;
 170              		.loc 1 180 0
 171 0008 40F20003 		movw	r3, #:lower16:igmp_group_list
 172 000c C0F20003 		movt	r3, #:upper16:igmp_group_list
 173 0010 1B68     		ldr	r3, [r3, #0]
 174 0012 7B61     		str	r3, [r7, #20]
 181:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   struct igmp_group *prev  = NULL;
 175              		.loc 1 181 0
 176 0014 4FF00003 		mov	r3, #0
 177 0018 3B61     		str	r3, [r7, #16]
 182:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   struct igmp_group *next;
 183:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
 184:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   /* look for groups joined on this interface further down the list */
 185:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   while (group != NULL) {
 178              		.loc 1 185 0
 179 001a 31E0     		b	.L7
 180              	.L13:
 186:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     next = group->next;
 181              		.loc 1 186 0
 182 001c 7B69     		ldr	r3, [r7, #20]
 183 001e 1B68     		ldr	r3, [r3, #0]
 184 0020 FB60     		str	r3, [r7, #12]
 187:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     /* is it a group joined on this interface? */
 188:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     if (group->interface == netif) {
 185              		.loc 1 188 0
 186 0022 7B69     		ldr	r3, [r7, #20]
 187 0024 5A68     		ldr	r2, [r3, #4]
 188 0026 7B68     		ldr	r3, [r7, #4]
 189 0028 9A42     		cmp	r2, r3
 190 002a 25D1     		bne	.L8
 189:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****       /* is it the first group of the list? */
 190:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****       if (group == igmp_group_list) {
 191              		.loc 1 190 0
 192 002c 40F20003 		movw	r3, #:lower16:igmp_group_list
 193 0030 C0F20003 		movt	r3, #:upper16:igmp_group_list
 194 0034 1B68     		ldr	r3, [r3, #0]
 195 0036 7A69     		ldr	r2, [r7, #20]
 196 0038 9A42     		cmp	r2, r3
 197 003a 05D1     		bne	.L9
 191:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****         igmp_group_list = next;
 198              		.loc 1 191 0
 199 003c 40F20003 		movw	r3, #:lower16:igmp_group_list
 200 0040 C0F20003 		movt	r3, #:upper16:igmp_group_list
 201 0044 FA68     		ldr	r2, [r7, #12]
 202 0046 1A60     		str	r2, [r3, #0]
 203              	.L9:
 192:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****       }
 193:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****       /* is there a "previous" group defined? */
 194:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****       if (prev != NULL) {
 204              		.loc 1 194 0
 205 0048 3B69     		ldr	r3, [r7, #16]
 206 004a 002B     		cmp	r3, #0
 207 004c 02D0     		beq	.L10
 195:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****         prev->next = next;
 208              		.loc 1 195 0
 209 004e 3B69     		ldr	r3, [r7, #16]
 210 0050 FA68     		ldr	r2, [r7, #12]
 211 0052 1A60     		str	r2, [r3, #0]
 212              	.L10:
 196:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****       }
 197:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****       /* disable the group at the MAC level */
 198:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****       if (netif->igmp_mac_filter != NULL) {
 213              		.loc 1 198 0
 214 0054 7B68     		ldr	r3, [r7, #4]
 215 0056 1B6B     		ldr	r3, [r3, #48]
 216 0058 002B     		cmp	r3, #0
 217 005a 09D0     		beq	.L11
 199:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****         LWIP_DEBUGF(IGMP_DEBUG, ("igmp_stop: igmp_mac_filter(DEL "));
 200:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****         ip_addr_debug_print(IGMP_DEBUG, &group->group_address);
 201:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****         LWIP_DEBUGF(IGMP_DEBUG, (") on if %p\n", netif));
 202:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****         netif->igmp_mac_filter(netif, &(group->group_address), IGMP_DEL_MAC_FILTER);
 218              		.loc 1 202 0
 219 005c 7B68     		ldr	r3, [r7, #4]
 220 005e 1B6B     		ldr	r3, [r3, #48]
 221 0060 7A69     		ldr	r2, [r7, #20]
 222 0062 02F10802 		add	r2, r2, #8
 223 0066 7868     		ldr	r0, [r7, #4]
 224 0068 1146     		mov	r1, r2
 225 006a 4FF00002 		mov	r2, #0
 226 006e 9847     		blx	r3
 227              	.L11:
 203:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****       }
 204:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****       /* free group */
 205:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****       memp_free(MEMP_IGMP_GROUP, group);
 228              		.loc 1 205 0
 229 0070 7869     		ldr	r0, [r7, #20]
 230 0072 FFF7FEFF 		bl	mem_free
 231 0076 01E0     		b	.L12
 232              	.L8:
 206:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     } else {
 207:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****       /* change the "previous" */
 208:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****       prev = group;
 233              		.loc 1 208 0
 234 0078 7B69     		ldr	r3, [r7, #20]
 235 007a 3B61     		str	r3, [r7, #16]
 236              	.L12:
 209:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     }
 210:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     /* move to "next" */
 211:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     group = next;
 237              		.loc 1 211 0
 238 007c FB68     		ldr	r3, [r7, #12]
 239 007e 7B61     		str	r3, [r7, #20]
 240              	.L7:
 185:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   while (group != NULL) {
 241              		.loc 1 185 0 discriminator 1
 242 0080 7B69     		ldr	r3, [r7, #20]
 243 0082 002B     		cmp	r3, #0
 244 0084 CAD1     		bne	.L13
 212:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   }
 213:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   return ERR_OK;
 245              		.loc 1 213 0
 246 0086 4FF00003 		mov	r3, #0
 247 008a 5BB2     		sxtb	r3, r3
 214:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** }
 248              		.loc 1 214 0
 249 008c 1846     		mov	r0, r3
 250 008e 07F11807 		add	r7, r7, #24
 251 0092 BD46     		mov	sp, r7
 252 0094 80BD     		pop	{r7, pc}
 253              		.cfi_endproc
 254              	.LFE2:
 256 0096 00BF     		.section	.text.igmp_report_groups,"ax",%progbits
 257              		.align	2
 258              		.global	igmp_report_groups
 259              		.thumb
 260              		.thumb_func
 262              	igmp_report_groups:
 263              	.LFB3:
 215:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
 216:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** /**
 217:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * Report IGMP memberships for this interface
 218:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  *
 219:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * @param netif network interface on which report IGMP memberships
 220:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  */
 221:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** void
 222:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** igmp_report_groups( struct netif *netif)
 223:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** {
 264              		.loc 1 223 0
 265              		.cfi_startproc
 266              		@ args = 0, pretend = 0, frame = 16
 267              		@ frame_needed = 1, uses_anonymous_args = 0
 268 0000 80B5     		push	{r7, lr}
 269              	.LCFI8:
 270              		.cfi_def_cfa_offset 8
 271              		.cfi_offset 7, -8
 272              		.cfi_offset 14, -4
 273 0002 84B0     		sub	sp, sp, #16
 274              	.LCFI9:
 275              		.cfi_def_cfa_offset 24
 276 0004 00AF     		add	r7, sp, #0
 277              	.LCFI10:
 278              		.cfi_def_cfa_register 7
 279 0006 7860     		str	r0, [r7, #4]
 224:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   struct igmp_group *group = igmp_group_list;
 280              		.loc 1 224 0
 281 0008 40F20003 		movw	r3, #:lower16:igmp_group_list
 282 000c C0F20003 		movt	r3, #:upper16:igmp_group_list
 283 0010 1B68     		ldr	r3, [r3, #0]
 284 0012 FB60     		str	r3, [r7, #12]
 225:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
 226:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   LWIP_DEBUGF(IGMP_DEBUG, ("igmp_report_groups: sending IGMP reports on if %p\n", netif));
 227:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
 228:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   while (group != NULL) {
 285              		.loc 1 228 0
 286 0014 0CE0     		b	.L16
 287              	.L18:
 229:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     if (group->interface == netif) {
 288              		.loc 1 229 0
 289 0016 FB68     		ldr	r3, [r7, #12]
 290 0018 5A68     		ldr	r2, [r3, #4]
 291 001a 7B68     		ldr	r3, [r7, #4]
 292 001c 9A42     		cmp	r2, r3
 293 001e 04D1     		bne	.L17
 230:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****       igmp_delaying_member( group, IGMP_JOIN_DELAYING_MEMBER_TMR);
 294              		.loc 1 230 0
 295 0020 F868     		ldr	r0, [r7, #12]
 296 0022 4FF00501 		mov	r1, #5
 297 0026 FFF7FEFF 		bl	igmp_delaying_member
 298              	.L17:
 231:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     }
 232:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     group = group->next;
 299              		.loc 1 232 0
 300 002a FB68     		ldr	r3, [r7, #12]
 301 002c 1B68     		ldr	r3, [r3, #0]
 302 002e FB60     		str	r3, [r7, #12]
 303              	.L16:
 228:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   while (group != NULL) {
 304              		.loc 1 228 0 discriminator 1
 305 0030 FB68     		ldr	r3, [r7, #12]
 306 0032 002B     		cmp	r3, #0
 307 0034 EFD1     		bne	.L18
 233:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   }
 234:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** }
 308              		.loc 1 234 0
 309 0036 07F11007 		add	r7, r7, #16
 310 003a BD46     		mov	sp, r7
 311 003c 80BD     		pop	{r7, pc}
 312              		.cfi_endproc
 313              	.LFE3:
 315 003e 00BF     		.section	.text.igmp_lookfor_group,"ax",%progbits
 316              		.align	2
 317              		.global	igmp_lookfor_group
 318              		.thumb
 319              		.thumb_func
 321              	igmp_lookfor_group:
 322              	.LFB4:
 235:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
 236:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** /**
 237:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * Search for a group in the global igmp_group_list
 238:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  *
 239:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * @param ifp the network interface for which to look
 240:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * @param addr the group ip address to search for
 241:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * @return a struct igmp_group* if the group has been found,
 242:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  *         NULL if the group wasn't found.
 243:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  */
 244:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** struct igmp_group *
 245:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** igmp_lookfor_group(struct netif *ifp, struct ip_addr *addr)
 246:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** {
 323              		.loc 1 246 0
 324              		.cfi_startproc
 325              		@ args = 0, pretend = 0, frame = 16
 326              		@ frame_needed = 1, uses_anonymous_args = 0
 327              		@ link register save eliminated.
 328 0000 80B4     		push	{r7}
 329              	.LCFI11:
 330              		.cfi_def_cfa_offset 4
 331              		.cfi_offset 7, -4
 332 0002 85B0     		sub	sp, sp, #20
 333              	.LCFI12:
 334              		.cfi_def_cfa_offset 24
 335 0004 00AF     		add	r7, sp, #0
 336              	.LCFI13:
 337              		.cfi_def_cfa_register 7
 338 0006 7860     		str	r0, [r7, #4]
 339 0008 3960     		str	r1, [r7, #0]
 247:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   struct igmp_group *group = igmp_group_list;
 340              		.loc 1 247 0
 341 000a 40F20003 		movw	r3, #:lower16:igmp_group_list
 342 000e C0F20003 		movt	r3, #:upper16:igmp_group_list
 343 0012 1B68     		ldr	r3, [r3, #0]
 344 0014 FB60     		str	r3, [r7, #12]
 248:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
 249:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   while (group != NULL) {
 345              		.loc 1 249 0
 346 0016 0FE0     		b	.L20
 347              	.L23:
 250:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     if ((group->interface == ifp) && (ip_addr_cmp(&(group->group_address), addr))) {
 348              		.loc 1 250 0
 349 0018 FB68     		ldr	r3, [r7, #12]
 350 001a 5A68     		ldr	r2, [r3, #4]
 351 001c 7B68     		ldr	r3, [r7, #4]
 352 001e 9A42     		cmp	r2, r3
 353 0020 07D1     		bne	.L21
 354              		.loc 1 250 0 is_stmt 0 discriminator 1
 355 0022 FB68     		ldr	r3, [r7, #12]
 356 0024 9A68     		ldr	r2, [r3, #8]
 357 0026 3B68     		ldr	r3, [r7, #0]
 358 0028 1B68     		ldr	r3, [r3, #0]	@ unaligned
 359 002a 9A42     		cmp	r2, r3
 360 002c 01D1     		bne	.L21
 251:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****       return group;
 361              		.loc 1 251 0 is_stmt 1
 362 002e FB68     		ldr	r3, [r7, #12]
 363 0030 07E0     		b	.L22
 364              	.L21:
 252:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     }
 253:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     group = group->next;
 365              		.loc 1 253 0
 366 0032 FB68     		ldr	r3, [r7, #12]
 367 0034 1B68     		ldr	r3, [r3, #0]
 368 0036 FB60     		str	r3, [r7, #12]
 369              	.L20:
 249:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   while (group != NULL) {
 370              		.loc 1 249 0 discriminator 1
 371 0038 FB68     		ldr	r3, [r7, #12]
 372 003a 002B     		cmp	r3, #0
 373 003c ECD1     		bne	.L23
 254:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   }
 255:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
 256:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   /* to be clearer, we return NULL here instead of
 257:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****    * 'group' (which is also NULL at this point).
 258:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****    */
 259:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   return NULL;
 374              		.loc 1 259 0
 375 003e 4FF00003 		mov	r3, #0
 376              	.L22:
 260:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** }
 377              		.loc 1 260 0
 378 0042 1846     		mov	r0, r3
 379 0044 07F11407 		add	r7, r7, #20
 380 0048 BD46     		mov	sp, r7
 381 004a 80BC     		pop	{r7}
 382 004c 7047     		bx	lr
 383              		.cfi_endproc
 384              	.LFE4:
 386 004e 00BF     		.section	.text.igmp_lookup_group,"ax",%progbits
 387              		.align	2
 388              		.global	igmp_lookup_group
 389              		.thumb
 390              		.thumb_func
 392              	igmp_lookup_group:
 393              	.LFB5:
 261:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
 262:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** /**
 263:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * Search for a specific igmp group and create a new one if not found-
 264:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  *
 265:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * @param ifp the network interface for which to look
 266:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * @param addr the group ip address to search
 267:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * @return a struct igmp_group*,
 268:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  *         NULL on memory error.
 269:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  */
 270:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** struct igmp_group *
 271:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** igmp_lookup_group(struct netif *ifp, struct ip_addr *addr)
 272:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** {
 394              		.loc 1 272 0
 395              		.cfi_startproc
 396              		@ args = 0, pretend = 0, frame = 16
 397              		@ frame_needed = 1, uses_anonymous_args = 0
 398 0000 80B5     		push	{r7, lr}
 399              	.LCFI14:
 400              		.cfi_def_cfa_offset 8
 401              		.cfi_offset 7, -8
 402              		.cfi_offset 14, -4
 403 0002 84B0     		sub	sp, sp, #16
 404              	.LCFI15:
 405              		.cfi_def_cfa_offset 24
 406 0004 00AF     		add	r7, sp, #0
 407              	.LCFI16:
 408              		.cfi_def_cfa_register 7
 409 0006 7860     		str	r0, [r7, #4]
 410 0008 3960     		str	r1, [r7, #0]
 273:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   struct igmp_group *group = igmp_group_list;
 411              		.loc 1 273 0
 412 000a 40F20003 		movw	r3, #:lower16:igmp_group_list
 413 000e C0F20003 		movt	r3, #:upper16:igmp_group_list
 414 0012 1B68     		ldr	r3, [r3, #0]
 415 0014 FB60     		str	r3, [r7, #12]
 274:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   
 275:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   /* Search if the group already exists */
 276:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   group = igmp_lookfor_group(ifp, addr);
 416              		.loc 1 276 0
 417 0016 7868     		ldr	r0, [r7, #4]
 418 0018 3968     		ldr	r1, [r7, #0]
 419 001a FFF7FEFF 		bl	igmp_lookfor_group
 420 001e F860     		str	r0, [r7, #12]
 277:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   if (group != NULL) {
 421              		.loc 1 277 0
 422 0020 FB68     		ldr	r3, [r7, #12]
 423 0022 002B     		cmp	r3, #0
 424 0024 01D0     		beq	.L25
 278:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     /* Group already exists. */
 279:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     return group;
 425              		.loc 1 279 0
 426 0026 FB68     		ldr	r3, [r7, #12]
 427 0028 36E0     		b	.L26
 428              	.L25:
 280:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   }
 281:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
 282:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   /* Group doesn't exist yet, create a new one */
 283:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   group = memp_malloc(MEMP_IGMP_GROUP);
 429              		.loc 1 283 0
 430 002a 40F20003 		movw	r3, #:lower16:memp_sizes
 431 002e C0F20003 		movt	r3, #:upper16:memp_sizes
 432 0032 DB89     		ldrh	r3, [r3, #14]
 433 0034 1846     		mov	r0, r3
 434 0036 FFF7FEFF 		bl	mem_malloc
 435 003a F860     		str	r0, [r7, #12]
 284:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   if (group != NULL) {
 436              		.loc 1 284 0
 437 003c FB68     		ldr	r3, [r7, #12]
 438 003e 002B     		cmp	r3, #0
 439 0040 29D0     		beq	.L27
 285:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     group->interface          = ifp;
 440              		.loc 1 285 0
 441 0042 FB68     		ldr	r3, [r7, #12]
 442 0044 7A68     		ldr	r2, [r7, #4]
 443 0046 5A60     		str	r2, [r3, #4]
 286:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     ip_addr_set(&(group->group_address), addr);
 444              		.loc 1 286 0
 445 0048 3B68     		ldr	r3, [r7, #0]
 446 004a 002B     		cmp	r3, #0
 447 004c 02D0     		beq	.L28
 448              		.loc 1 286 0 is_stmt 0 discriminator 1
 449 004e 3B68     		ldr	r3, [r7, #0]
 450 0050 1B68     		ldr	r3, [r3, #0]	@ unaligned
 451 0052 01E0     		b	.L29
 452              	.L28:
 453              		.loc 1 286 0 discriminator 2
 454 0054 4FF00003 		mov	r3, #0
 455              	.L29:
 456              		.loc 1 286 0 discriminator 3
 457 0058 FA68     		ldr	r2, [r7, #12]
 458 005a 9360     		str	r3, [r2, #8]
 287:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     group->timer              = 0; /* Not running */
 459              		.loc 1 287 0 is_stmt 1 discriminator 3
 460 005c FB68     		ldr	r3, [r7, #12]
 461 005e 4FF00002 		mov	r2, #0
 462 0062 DA81     		strh	r2, [r3, #14]	@ movhi
 288:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     group->group_state        = IGMP_GROUP_NON_MEMBER;
 463              		.loc 1 288 0 discriminator 3
 464 0064 FB68     		ldr	r3, [r7, #12]
 465 0066 4FF00002 		mov	r2, #0
 466 006a 5A73     		strb	r2, [r3, #13]
 289:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     group->last_reporter_flag = 0;
 467              		.loc 1 289 0 discriminator 3
 468 006c FB68     		ldr	r3, [r7, #12]
 469 006e 4FF00002 		mov	r2, #0
 470 0072 1A73     		strb	r2, [r3, #12]
 290:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     group->use                = 0;
 471              		.loc 1 290 0 discriminator 3
 472 0074 FB68     		ldr	r3, [r7, #12]
 473 0076 4FF00002 		mov	r2, #0
 474 007a 1A74     		strb	r2, [r3, #16]
 291:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     group->next               = igmp_group_list;
 475              		.loc 1 291 0 discriminator 3
 476 007c 40F20003 		movw	r3, #:lower16:igmp_group_list
 477 0080 C0F20003 		movt	r3, #:upper16:igmp_group_list
 478 0084 1A68     		ldr	r2, [r3, #0]
 479 0086 FB68     		ldr	r3, [r7, #12]
 480 0088 1A60     		str	r2, [r3, #0]
 292:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     
 293:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     igmp_group_list = group;
 481              		.loc 1 293 0 discriminator 3
 482 008a 40F20003 		movw	r3, #:lower16:igmp_group_list
 483 008e C0F20003 		movt	r3, #:upper16:igmp_group_list
 484 0092 FA68     		ldr	r2, [r7, #12]
 485 0094 1A60     		str	r2, [r3, #0]
 486              	.L27:
 294:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   }
 295:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
 296:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   LWIP_DEBUGF(IGMP_DEBUG, ("igmp_lookup_group: %sallocated a new group with address ", (group?"":"i
 297:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   ip_addr_debug_print(IGMP_DEBUG, addr);
 298:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   LWIP_DEBUGF(IGMP_DEBUG, (" on if %p\n", ifp));
 299:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
 300:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   return group;
 487              		.loc 1 300 0
 488 0096 FB68     		ldr	r3, [r7, #12]
 489              	.L26:
 301:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** }
 490              		.loc 1 301 0
 491 0098 1846     		mov	r0, r3
 492 009a 07F11007 		add	r7, r7, #16
 493 009e BD46     		mov	sp, r7
 494 00a0 80BD     		pop	{r7, pc}
 495              		.cfi_endproc
 496              	.LFE5:
 498 00a2 00BF     		.section	.text.igmp_remove_group,"ax",%progbits
 499              		.align	2
 500              		.global	igmp_remove_group
 501              		.thumb
 502              		.thumb_func
 504              	igmp_remove_group:
 505              	.LFB6:
 302:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
 303:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** /**
 304:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * Remove a group in the global igmp_group_list
 305:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  *
 306:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * @param group the group to remove from the global igmp_group_list
 307:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * @return ERR_OK if group was removed from the list, an err_t otherwise
 308:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  */
 309:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** err_t
 310:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** igmp_remove_group(struct igmp_group *group)
 311:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** {
 506              		.loc 1 311 0
 507              		.cfi_startproc
 508              		@ args = 0, pretend = 0, frame = 16
 509              		@ frame_needed = 1, uses_anonymous_args = 0
 510 0000 80B5     		push	{r7, lr}
 511              	.LCFI17:
 512              		.cfi_def_cfa_offset 8
 513              		.cfi_offset 7, -8
 514              		.cfi_offset 14, -4
 515 0002 84B0     		sub	sp, sp, #16
 516              	.LCFI18:
 517              		.cfi_def_cfa_offset 24
 518 0004 00AF     		add	r7, sp, #0
 519              	.LCFI19:
 520              		.cfi_def_cfa_register 7
 521 0006 7860     		str	r0, [r7, #4]
 312:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   err_t err = ERR_OK;
 522              		.loc 1 312 0
 523 0008 4FF00003 		mov	r3, #0
 524 000c FB73     		strb	r3, [r7, #15]
 313:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
 314:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   /* Is it the first group? */
 315:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   if (igmp_group_list == group) {
 525              		.loc 1 315 0
 526 000e 40F20003 		movw	r3, #:lower16:igmp_group_list
 527 0012 C0F20003 		movt	r3, #:upper16:igmp_group_list
 528 0016 1A68     		ldr	r2, [r3, #0]
 529 0018 7B68     		ldr	r3, [r7, #4]
 530 001a 9A42     		cmp	r2, r3
 531 001c 07D1     		bne	.L31
 316:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     igmp_group_list = group->next;
 532              		.loc 1 316 0
 533 001e 7B68     		ldr	r3, [r7, #4]
 534 0020 1A68     		ldr	r2, [r3, #0]
 535 0022 40F20003 		movw	r3, #:lower16:igmp_group_list
 536 0026 C0F20003 		movt	r3, #:upper16:igmp_group_list
 537 002a 1A60     		str	r2, [r3, #0]
 538 002c 1CE0     		b	.L32
 539              	.L31:
 540              	.LBB2:
 317:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   } else {
 318:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     /* look for group further down the list */
 319:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     struct igmp_group *tmpGroup;
 320:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     for (tmpGroup = igmp_group_list; tmpGroup != NULL; tmpGroup = tmpGroup->next) {
 541              		.loc 1 320 0
 542 002e 40F20003 		movw	r3, #:lower16:igmp_group_list
 543 0032 C0F20003 		movt	r3, #:upper16:igmp_group_list
 544 0036 1B68     		ldr	r3, [r3, #0]
 545 0038 BB60     		str	r3, [r7, #8]
 546 003a 0CE0     		b	.L33
 547              	.L36:
 321:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****       if (tmpGroup->next == group) {
 548              		.loc 1 321 0
 549 003c BB68     		ldr	r3, [r7, #8]
 550 003e 1A68     		ldr	r2, [r3, #0]
 551 0040 7B68     		ldr	r3, [r7, #4]
 552 0042 9A42     		cmp	r2, r3
 553 0044 04D1     		bne	.L34
 322:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****         tmpGroup->next = group->next;
 554              		.loc 1 322 0
 555 0046 7B68     		ldr	r3, [r7, #4]
 556 0048 1A68     		ldr	r2, [r3, #0]
 557 004a BB68     		ldr	r3, [r7, #8]
 558 004c 1A60     		str	r2, [r3, #0]
 323:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****         break;
 559              		.loc 1 323 0
 560 004e 05E0     		b	.L35
 561              	.L34:
 320:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     for (tmpGroup = igmp_group_list; tmpGroup != NULL; tmpGroup = tmpGroup->next) {
 562              		.loc 1 320 0
 563 0050 BB68     		ldr	r3, [r7, #8]
 564 0052 1B68     		ldr	r3, [r3, #0]
 565 0054 BB60     		str	r3, [r7, #8]
 566              	.L33:
 320:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     for (tmpGroup = igmp_group_list; tmpGroup != NULL; tmpGroup = tmpGroup->next) {
 567              		.loc 1 320 0 is_stmt 0 discriminator 1
 568 0056 BB68     		ldr	r3, [r7, #8]
 569 0058 002B     		cmp	r3, #0
 570 005a EFD1     		bne	.L36
 571              	.L35:
 324:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****       }
 325:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     }
 326:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     /* Group not found in the global igmp_group_list */
 327:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     if (tmpGroup == NULL)
 572              		.loc 1 327 0 is_stmt 1
 573 005c BB68     		ldr	r3, [r7, #8]
 574 005e 002B     		cmp	r3, #0
 575 0060 02D1     		bne	.L32
 328:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****       err = ERR_ARG;
 576              		.loc 1 328 0
 577 0062 4FF0F603 		mov	r3, #246
 578 0066 FB73     		strb	r3, [r7, #15]
 579              	.L32:
 580              	.LBE2:
 329:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   }
 330:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   /* free group */
 331:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   memp_free(MEMP_IGMP_GROUP, group);
 581              		.loc 1 331 0
 582 0068 7868     		ldr	r0, [r7, #4]
 583 006a FFF7FEFF 		bl	mem_free
 332:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
 333:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   return err;
 584              		.loc 1 333 0
 585 006e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 586 0070 5BB2     		sxtb	r3, r3
 334:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** }
 587              		.loc 1 334 0
 588 0072 1846     		mov	r0, r3
 589 0074 07F11007 		add	r7, r7, #16
 590 0078 BD46     		mov	sp, r7
 591 007a 80BD     		pop	{r7, pc}
 592              		.cfi_endproc
 593              	.LFE6:
 595              		.section	.text.igmp_input,"ax",%progbits
 596              		.align	2
 597              		.global	igmp_input
 598              		.thumb
 599              		.thumb_func
 601              	igmp_input:
 602              	.LFB7:
 335:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
 336:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** /**
 337:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * Called from ip_input() if a new IGMP packet is received.
 338:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  *
 339:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * @param p received igmp packet, p->payload pointing to the ip header
 340:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * @param inp network interface on which the packet was received
 341:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * @param dest destination ip address of the igmp packet
 342:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  */
 343:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** void
 344:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** igmp_input(struct pbuf *p, struct netif *inp, struct ip_addr *dest)
 345:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** {
 603              		.loc 1 345 0
 604              		.cfi_startproc
 605              		@ args = 0, pretend = 0, frame = 32
 606              		@ frame_needed = 1, uses_anonymous_args = 0
 607 0000 80B5     		push	{r7, lr}
 608              	.LCFI20:
 609              		.cfi_def_cfa_offset 8
 610              		.cfi_offset 7, -8
 611              		.cfi_offset 14, -4
 612 0002 88B0     		sub	sp, sp, #32
 613              	.LCFI21:
 614              		.cfi_def_cfa_offset 40
 615 0004 00AF     		add	r7, sp, #0
 616              	.LCFI22:
 617              		.cfi_def_cfa_register 7
 618 0006 F860     		str	r0, [r7, #12]
 619 0008 B960     		str	r1, [r7, #8]
 620 000a 7A60     		str	r2, [r7, #4]
 346:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   struct ip_hdr *    iphdr;
 347:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   struct igmp_msg*   igmp;
 348:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   struct igmp_group* group;
 349:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   struct igmp_group* groupref;
 350:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
 351:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   /* Note that the length CAN be greater than 8 but only 8 are used - All are included in the check
 352:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   iphdr = p->payload;
 621              		.loc 1 352 0
 622 000c FB68     		ldr	r3, [r7, #12]
 623 000e 5B68     		ldr	r3, [r3, #4]
 624 0010 7B61     		str	r3, [r7, #20]
 353:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   if (pbuf_header(p, -(s16_t)(IPH_HL(iphdr) * 4)) || (p->len < IGMP_MINLEN)) {
 625              		.loc 1 353 0
 626 0012 7B69     		ldr	r3, [r7, #20]
 627 0014 1B88     		ldrh	r3, [r3, #0]	@ unaligned
 628 0016 9BB2     		uxth	r3, r3
 629 0018 1846     		mov	r0, r3
 630 001a FFF7FEFF 		bl	ntohs
 631 001e 0346     		mov	r3, r0
 632 0020 4FEA1323 		lsr	r3, r3, #8
 633 0024 9BB2     		uxth	r3, r3
 634 0026 03F00F03 		and	r3, r3, #15
 635 002a 9BB2     		uxth	r3, r3
 636 002c 4FEA8303 		lsl	r3, r3, #2
 637 0030 9BB2     		uxth	r3, r3
 638 0032 C3F10003 		rsb	r3, r3, #0
 639 0036 9BB2     		uxth	r3, r3
 640 0038 9BB2     		uxth	r3, r3
 641 003a 1BB2     		sxth	r3, r3
 642 003c F868     		ldr	r0, [r7, #12]
 643 003e 1946     		mov	r1, r3
 644 0040 FFF7FEFF 		bl	pbuf_header
 645 0044 0346     		mov	r3, r0
 646 0046 002B     		cmp	r3, #0
 647 0048 03D1     		bne	.L39
 648              		.loc 1 353 0 is_stmt 0 discriminator 1
 649 004a FB68     		ldr	r3, [r7, #12]
 650 004c 5B89     		ldrh	r3, [r3, #10]
 651 004e 072B     		cmp	r3, #7
 652 0050 03D8     		bhi	.L40
 653              	.L39:
 354:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     pbuf_free(p);
 654              		.loc 1 354 0 is_stmt 1
 655 0052 F868     		ldr	r0, [r7, #12]
 656 0054 FFF7FEFF 		bl	pbuf_free
 355:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     IGMP_STATS_INC(igmp.lenerr);
 356:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     LWIP_DEBUGF(IGMP_DEBUG, ("igmp_input: length error\n"));
 357:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     return;
 657              		.loc 1 357 0
 658 0058 92E0     		b	.L38
 659              	.L40:
 358:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   }
 359:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
 360:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   LWIP_DEBUGF(IGMP_DEBUG, ("igmp_input: message from "));
 361:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   ip_addr_debug_print(IGMP_DEBUG, &(iphdr->src));
 362:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   LWIP_DEBUGF(IGMP_DEBUG, (" to address "));
 363:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   ip_addr_debug_print(IGMP_DEBUG, &(iphdr->dest));
 364:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   LWIP_DEBUGF(IGMP_DEBUG, (" on if %p\n", inp));
 365:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
 366:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   /* Now calculate and check the checksum */
 367:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   igmp = (struct igmp_msg *)p->payload;
 660              		.loc 1 367 0
 661 005a FB68     		ldr	r3, [r7, #12]
 662 005c 5B68     		ldr	r3, [r3, #4]
 663 005e 3B61     		str	r3, [r7, #16]
 368:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   if (inet_chksum(igmp, p->len)) {
 664              		.loc 1 368 0
 665 0060 FB68     		ldr	r3, [r7, #12]
 666 0062 5B89     		ldrh	r3, [r3, #10]
 667 0064 3869     		ldr	r0, [r7, #16]
 668 0066 1946     		mov	r1, r3
 669 0068 FFF7FEFF 		bl	inet_chksum
 670 006c 0346     		mov	r3, r0
 671 006e 002B     		cmp	r3, #0
 672 0070 03D0     		beq	.L42
 369:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     pbuf_free(p);
 673              		.loc 1 369 0
 674 0072 F868     		ldr	r0, [r7, #12]
 675 0074 FFF7FEFF 		bl	pbuf_free
 370:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     IGMP_STATS_INC(igmp.chkerr);
 371:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     LWIP_DEBUGF(IGMP_DEBUG, ("igmp_input: checksum error\n"));
 372:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     return;
 676              		.loc 1 372 0
 677 0078 82E0     		b	.L38
 678              	.L42:
 373:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   }
 374:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
 375:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   /* Packet is ok so find an existing group */
 376:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   group = igmp_lookfor_group(inp, dest); /* use the incoming IP address! */
 679              		.loc 1 376 0
 680 007a B868     		ldr	r0, [r7, #8]
 681 007c 7968     		ldr	r1, [r7, #4]
 682 007e FFF7FEFF 		bl	igmp_lookfor_group
 683 0082 F861     		str	r0, [r7, #28]
 377:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   
 378:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   /* If group can be found or create... */
 379:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   if (!group) {
 684              		.loc 1 379 0
 685 0084 FB69     		ldr	r3, [r7, #28]
 686 0086 002B     		cmp	r3, #0
 687 0088 03D1     		bne	.L43
 380:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     pbuf_free(p);
 688              		.loc 1 380 0
 689 008a F868     		ldr	r0, [r7, #12]
 690 008c FFF7FEFF 		bl	pbuf_free
 381:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     LWIP_DEBUGF(IGMP_DEBUG, ("igmp_input: IGMP frame not for us\n"));
 382:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     return;
 691              		.loc 1 382 0
 692 0090 76E0     		b	.L38
 693              	.L43:
 383:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   }
 384:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
 385:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   /* NOW ACT ON THE INCOMING MESSAGE TYPE... */
 386:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   switch (igmp->igmp_msgtype) {
 694              		.loc 1 386 0
 695 0092 3B69     		ldr	r3, [r7, #16]
 696 0094 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 697 0096 112B     		cmp	r3, #17
 698 0098 02D0     		beq	.L45
 699 009a 162B     		cmp	r3, #22
 700 009c 57D0     		beq	.L46
 701 009e 67E0     		b	.L56
 702              	.L45:
 387:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****    case IGMP_MEMB_QUERY: {
 388:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****      /* IGMP_MEMB_QUERY to the "all systems" address ? */
 389:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****      if ((ip_addr_cmp(dest, &allsystems)) && (igmp->igmp_group_address.addr == 0)) {
 703              		.loc 1 389 0
 704 00a0 7B68     		ldr	r3, [r7, #4]
 705 00a2 1A68     		ldr	r2, [r3, #0]	@ unaligned
 706 00a4 40F20003 		movw	r3, #:lower16:allsystems
 707 00a8 C0F20003 		movt	r3, #:upper16:allsystems
 708 00ac 1B68     		ldr	r3, [r3, #0]
 709 00ae 9A42     		cmp	r2, r3
 710 00b0 2DD1     		bne	.L47
 711              		.loc 1 389 0 is_stmt 0 discriminator 1
 712 00b2 3B69     		ldr	r3, [r7, #16]
 713 00b4 5B68     		ldr	r3, [r3, #4]	@ unaligned
 714 00b6 002B     		cmp	r3, #0
 715 00b8 29D1     		bne	.L47
 390:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****        /* THIS IS THE GENERAL QUERY */
 391:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****        LWIP_DEBUGF(IGMP_DEBUG, ("igmp_input: General IGMP_MEMB_QUERY on \"ALL SYSTEMS\" address (22
 392:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
 393:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****        if (igmp->igmp_maxresp == 0) {
 716              		.loc 1 393 0 is_stmt 1
 717 00ba 3B69     		ldr	r3, [r7, #16]
 718 00bc 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 719 00be 002B     		cmp	r3, #0
 720 00c0 03D1     		bne	.L48
 394:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****          IGMP_STATS_INC(igmp.v1_rxed);
 395:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****          LWIP_DEBUGF(IGMP_DEBUG, ("igmp_input: got an all hosts query with time== 0 - this is V1 an
 396:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****          igmp->igmp_maxresp = IGMP_V1_DELAYING_MEMBER_TMR;
 721              		.loc 1 396 0
 722 00c2 3B69     		ldr	r3, [r7, #16]
 723 00c4 4FF00A02 		mov	r2, #10
 724 00c8 5A70     		strb	r2, [r3, #1]
 725              	.L48:
 397:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****        }
 398:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
 399:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****        IGMP_STATS_INC(igmp.group_query_rxed);
 400:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****        groupref = igmp_group_list;
 726              		.loc 1 400 0
 727 00ca 40F20003 		movw	r3, #:lower16:igmp_group_list
 728 00ce C0F20003 		movt	r3, #:upper16:igmp_group_list
 729 00d2 1B68     		ldr	r3, [r3, #0]
 730 00d4 BB61     		str	r3, [r7, #24]
 401:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****        while (groupref) {
 731              		.loc 1 401 0
 732 00d6 16E0     		b	.L49
 733              	.L51:
 402:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****          /* Do not send messages on the all systems group address! */
 403:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****          if ((groupref->interface == inp) && (!(ip_addr_cmp(&(groupref->group_address), &allsystems
 734              		.loc 1 403 0
 735 00d8 BB69     		ldr	r3, [r7, #24]
 736 00da 5A68     		ldr	r2, [r3, #4]
 737 00dc BB68     		ldr	r3, [r7, #8]
 738 00de 9A42     		cmp	r2, r3
 739 00e0 0ED1     		bne	.L50
 740              		.loc 1 403 0 is_stmt 0 discriminator 1
 741 00e2 BB69     		ldr	r3, [r7, #24]
 742 00e4 9A68     		ldr	r2, [r3, #8]
 743 00e6 40F20003 		movw	r3, #:lower16:allsystems
 744 00ea C0F20003 		movt	r3, #:upper16:allsystems
 745 00ee 1B68     		ldr	r3, [r3, #0]
 746 00f0 9A42     		cmp	r2, r3
 747 00f2 05D0     		beq	.L50
 404:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****            igmp_delaying_member( groupref, igmp->igmp_maxresp);
 748              		.loc 1 404 0 is_stmt 1
 749 00f4 3B69     		ldr	r3, [r7, #16]
 750 00f6 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 751 00f8 B869     		ldr	r0, [r7, #24]
 752 00fa 1946     		mov	r1, r3
 753 00fc FFF7FEFF 		bl	igmp_delaying_member
 754              	.L50:
 405:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****          }
 406:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****          groupref = groupref->next;
 755              		.loc 1 406 0
 756 0100 BB69     		ldr	r3, [r7, #24]
 757 0102 1B68     		ldr	r3, [r3, #0]
 758 0104 BB61     		str	r3, [r7, #24]
 759              	.L49:
 401:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****        while (groupref) {
 760              		.loc 1 401 0 discriminator 1
 761 0106 BB69     		ldr	r3, [r7, #24]
 762 0108 002B     		cmp	r3, #0
 763 010a E5D1     		bne	.L51
 389:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****      if ((ip_addr_cmp(dest, &allsystems)) && (igmp->igmp_group_address.addr == 0)) {
 764              		.loc 1 389 0
 765 010c 1EE0     		b	.L57
 766              	.L47:
 407:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****        }
 408:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****      } else {
 409:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****        /* IGMP_MEMB_QUERY to a specific group ? */
 410:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****        if (group->group_address.addr != 0) {
 767              		.loc 1 410 0
 768 010e FB69     		ldr	r3, [r7, #28]
 769 0110 9B68     		ldr	r3, [r3, #8]
 770 0112 002B     		cmp	r3, #0
 771 0114 2DD0     		beq	.L58
 411:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****          LWIP_DEBUGF(IGMP_DEBUG, ("igmp_input: IGMP_MEMB_QUERY to a specific group "));
 412:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****          ip_addr_debug_print(IGMP_DEBUG, &group->group_address);
 413:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****          if (ip_addr_cmp (dest, &allsystems)) {
 772              		.loc 1 413 0
 773 0116 7B68     		ldr	r3, [r7, #4]
 774 0118 1A68     		ldr	r2, [r3, #0]	@ unaligned
 775 011a 40F20003 		movw	r3, #:lower16:allsystems
 776 011e C0F20003 		movt	r3, #:upper16:allsystems
 777 0122 1B68     		ldr	r3, [r3, #0]
 778 0124 9A42     		cmp	r2, r3
 779 0126 07D1     		bne	.L53
 414:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****            LWIP_DEBUGF(IGMP_DEBUG, (" using \"ALL SYSTEMS\" address (224.0.0.1) [igmp_maxresp=%i]\n
 415:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****            /* we first need to re-lookfor the group since we used dest last time */
 416:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****            group = igmp_lookfor_group(inp, &igmp->igmp_group_address);
 780              		.loc 1 416 0
 781 0128 3B69     		ldr	r3, [r7, #16]
 782 012a 03F10403 		add	r3, r3, #4
 783 012e B868     		ldr	r0, [r7, #8]
 784 0130 1946     		mov	r1, r3
 785 0132 FFF7FEFF 		bl	igmp_lookfor_group
 786 0136 F861     		str	r0, [r7, #28]
 787              	.L53:
 417:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****          } else {
 418:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****            LWIP_DEBUGF(IGMP_DEBUG, (" with the group address as destination [igmp_maxresp=%i]\n", (
 419:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****          }
 420:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
 421:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****          if (group != NULL) {
 788              		.loc 1 421 0
 789 0138 FB69     		ldr	r3, [r7, #28]
 790 013a 002B     		cmp	r3, #0
 791 013c 19D0     		beq	.L58
 422:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****            IGMP_STATS_INC(igmp.unicast_query);
 423:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****            igmp_delaying_member( group, igmp->igmp_maxresp);
 792              		.loc 1 423 0
 793 013e 3B69     		ldr	r3, [r7, #16]
 794 0140 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 795 0142 F869     		ldr	r0, [r7, #28]
 796 0144 1946     		mov	r1, r3
 797 0146 FFF7FEFF 		bl	igmp_delaying_member
 424:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****          }
 425:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****        }
 426:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****      }
 427:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****      break;
 798              		.loc 1 427 0
 799 014a 12E0     		b	.L58
 800              	.L57:
 801 014c 11E0     		b	.L58
 802              	.L46:
 428:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****    }
 429:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****    case IGMP_V2_MEMB_REPORT: {
 430:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****      LWIP_DEBUGF(IGMP_DEBUG, ("igmp_input: IGMP_V2_MEMB_REPORT\n"));
 431:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
 432:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****      IGMP_STATS_INC(igmp.report_rxed);
 433:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****      if (group->group_state == IGMP_GROUP_DELAYING_MEMBER) {
 803              		.loc 1 433 0
 804 014e FB69     		ldr	r3, [r7, #28]
 805 0150 5B7B     		ldrb	r3, [r3, #13]	@ zero_extendqisi2
 806 0152 012B     		cmp	r3, #1
 807 0154 0FD1     		bne	.L59
 434:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****        /* This is on a specific group we have already looked up */
 435:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****        group->timer = 0; /* stopped */
 808              		.loc 1 435 0
 809 0156 FB69     		ldr	r3, [r7, #28]
 810 0158 4FF00002 		mov	r2, #0
 811 015c DA81     		strh	r2, [r3, #14]	@ movhi
 436:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****        group->group_state = IGMP_GROUP_IDLE_MEMBER;
 812              		.loc 1 436 0
 813 015e FB69     		ldr	r3, [r7, #28]
 814 0160 4FF00202 		mov	r2, #2
 815 0164 5A73     		strb	r2, [r3, #13]
 437:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****        group->last_reporter_flag = 0;
 816              		.loc 1 437 0
 817 0166 FB69     		ldr	r3, [r7, #28]
 818 0168 4FF00002 		mov	r2, #0
 819 016c 1A73     		strb	r2, [r3, #12]
 438:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****      }
 439:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****      break;
 820              		.loc 1 439 0
 821 016e 02E0     		b	.L59
 822              	.L56:
 440:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****    }
 441:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****    default: {
 442:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****      LWIP_DEBUGF(IGMP_DEBUG, ("igmp_input: unexpected msg %d in state %d on group %p on if %p\n",
 443:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****        igmp->igmp_msgtype, group->group_state, &group, group->interface));
 444:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****      break;
 823              		.loc 1 444 0
 824 0170 02E0     		b	.L54
 825              	.L58:
 427:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****      break;
 826              		.loc 1 427 0
 827 0172 00BF     		nop
 828 0174 00E0     		b	.L54
 829              	.L59:
 439:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****      break;
 830              		.loc 1 439 0
 831 0176 00BF     		nop
 832              	.L54:
 445:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****    }
 446:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   }
 447:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
 448:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   pbuf_free(p);
 833              		.loc 1 448 0
 834 0178 F868     		ldr	r0, [r7, #12]
 835 017a FFF7FEFF 		bl	pbuf_free
 449:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   return;
 836              		.loc 1 449 0
 837 017e 00BF     		nop
 838              	.L38:
 450:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** }
 839              		.loc 1 450 0
 840 0180 07F12007 		add	r7, r7, #32
 841 0184 BD46     		mov	sp, r7
 842 0186 80BD     		pop	{r7, pc}
 843              		.cfi_endproc
 844              	.LFE7:
 846              		.section	.text.igmp_joingroup,"ax",%progbits
 847              		.align	2
 848              		.global	igmp_joingroup
 849              		.thumb
 850              		.thumb_func
 852              	igmp_joingroup:
 853              	.LFB8:
 451:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
 452:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** /**
 453:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * Join a group on one network interface.
 454:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  *
 455:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * @param ifaddr ip address of the network interface which should join a new group
 456:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * @param groupaddr the ip address of the group which to join
 457:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * @return ERR_OK if group was joined on the netif(s), an err_t otherwise
 458:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  */
 459:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** err_t
 460:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** igmp_joingroup(struct ip_addr *ifaddr, struct ip_addr *groupaddr)
 461:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** {
 854              		.loc 1 461 0
 855              		.cfi_startproc
 856              		@ args = 0, pretend = 0, frame = 24
 857              		@ frame_needed = 1, uses_anonymous_args = 0
 858 0000 90B5     		push	{r4, r7, lr}
 859              	.LCFI23:
 860              		.cfi_def_cfa_offset 12
 861              		.cfi_offset 4, -12
 862              		.cfi_offset 7, -8
 863              		.cfi_offset 14, -4
 864 0002 87B0     		sub	sp, sp, #28
 865              	.LCFI24:
 866              		.cfi_def_cfa_offset 40
 867 0004 00AF     		add	r7, sp, #0
 868              	.LCFI25:
 869              		.cfi_def_cfa_register 7
 870 0006 7860     		str	r0, [r7, #4]
 871 0008 3960     		str	r1, [r7, #0]
 462:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   err_t              err = ERR_VAL; /* no matching interface */
 872              		.loc 1 462 0
 873 000a 4FF0F703 		mov	r3, #247
 874 000e FB75     		strb	r3, [r7, #23]
 463:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   struct igmp_group *group;
 464:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   struct netif      *netif;
 465:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
 466:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   /* make sure it is multicast address */
 467:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   LWIP_ERROR("igmp_joingroup: attempt to join non-multicast address", ip_addr_ismulticast(groupaddr
 875              		.loc 1 467 0
 876 0010 3B68     		ldr	r3, [r7, #0]
 877 0012 1C68     		ldr	r4, [r3, #0]	@ unaligned
 878 0014 4FF07040 		mov	r0, #-268435456
 879 0018 FFF7FEFF 		bl	ntohl
 880 001c 0346     		mov	r3, r0
 881 001e 1C40     		ands	r4, r4, r3
 882 0020 4FF06040 		mov	r0, #-536870912
 883 0024 FFF7FEFF 		bl	ntohl
 884 0028 0346     		mov	r3, r0
 885 002a 9C42     		cmp	r4, r3
 886 002c 02D0     		beq	.L61
 887              		.loc 1 467 0 is_stmt 0 discriminator 3
 888 002e 4FF0F703 		mov	r3, #247
 889 0032 64E0     		b	.L62
 890              	.L61:
 468:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   LWIP_ERROR("igmp_joingroup: attempt to join allsystems address", (!ip_addr_cmp(groupaddr, &allsys
 891              		.loc 1 468 0 is_stmt 1
 892 0034 3B68     		ldr	r3, [r7, #0]
 893 0036 1A68     		ldr	r2, [r3, #0]	@ unaligned
 894 0038 40F20003 		movw	r3, #:lower16:allsystems
 895 003c C0F20003 		movt	r3, #:upper16:allsystems
 896 0040 1B68     		ldr	r3, [r3, #0]
 897 0042 9A42     		cmp	r2, r3
 898 0044 02D1     		bne	.L63
 899              		.loc 1 468 0 is_stmt 0 discriminator 3
 900 0046 4FF0F703 		mov	r3, #247
 901 004a 58E0     		b	.L62
 902              	.L63:
 469:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
 470:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   /* loop through netif's */
 471:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   netif = netif_list;
 903              		.loc 1 471 0 is_stmt 1
 904 004c 40F20003 		movw	r3, #:lower16:netif_list
 905 0050 C0F20003 		movt	r3, #:upper16:netif_list
 906 0054 1B68     		ldr	r3, [r3, #0]
 907 0056 3B61     		str	r3, [r7, #16]
 472:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   while (netif != NULL) {
 908              		.loc 1 472 0
 909 0058 4DE0     		b	.L64
 910              	.L70:
 473:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     /* Should we join this interface ? */
 474:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     if ((netif->flags & NETIF_FLAG_IGMP) && ((ip_addr_isany(ifaddr) || ip_addr_cmp(&(netif->ip_addr
 911              		.loc 1 474 0
 912 005a 3B69     		ldr	r3, [r7, #16]
 913 005c 93F82930 		ldrb	r3, [r3, #41]	@ zero_extendqisi2
 914 0060 03F04003 		and	r3, r3, #64
 915 0064 002B     		cmp	r3, #0
 916 0066 43D0     		beq	.L65
 917              		.loc 1 474 0 is_stmt 0 discriminator 1
 918 0068 7B68     		ldr	r3, [r7, #4]
 919 006a 002B     		cmp	r3, #0
 920 006c 09D0     		beq	.L66
 921 006e 7B68     		ldr	r3, [r7, #4]
 922 0070 1B68     		ldr	r3, [r3, #0]	@ unaligned
 923 0072 002B     		cmp	r3, #0
 924 0074 05D0     		beq	.L66
 925 0076 3B69     		ldr	r3, [r7, #16]
 926 0078 5A68     		ldr	r2, [r3, #4]
 927 007a 7B68     		ldr	r3, [r7, #4]
 928 007c 1B68     		ldr	r3, [r3, #0]	@ unaligned
 929 007e 9A42     		cmp	r2, r3
 930 0080 36D1     		bne	.L65
 931              	.L66:
 475:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****       /* find group or create a new one if not found */
 476:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****       group = igmp_lookup_group(netif, groupaddr);
 932              		.loc 1 476 0 is_stmt 1
 933 0082 3869     		ldr	r0, [r7, #16]
 934 0084 3968     		ldr	r1, [r7, #0]
 935 0086 FFF7FEFF 		bl	igmp_lookup_group
 936 008a F860     		str	r0, [r7, #12]
 477:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
 478:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****       if (group != NULL) {
 937              		.loc 1 478 0
 938 008c FB68     		ldr	r3, [r7, #12]
 939 008e 002B     		cmp	r3, #0
 940 0090 2BD0     		beq	.L67
 479:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****         /* This should create a new group, check the state to make sure */
 480:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****         if (group->group_state != IGMP_GROUP_NON_MEMBER) {
 941              		.loc 1 480 0
 942 0092 FB68     		ldr	r3, [r7, #12]
 943 0094 5B7B     		ldrb	r3, [r3, #13]	@ zero_extendqisi2
 944 0096 002B     		cmp	r3, #0
 945 0098 1CD1     		bne	.L68
 481:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****           LWIP_DEBUGF(IGMP_DEBUG, ("igmp_joingroup: join to group not in state IGMP_GROUP_NON_MEMBE
 482:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****         } else {
 483:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****           /* OK - it was new group */
 484:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****           LWIP_DEBUGF(IGMP_DEBUG, ("igmp_joingroup: join to new group: "));
 485:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****           ip_addr_debug_print(IGMP_DEBUG, groupaddr);
 486:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****           LWIP_DEBUGF(IGMP_DEBUG, ("\n"));
 487:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
 488:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****           /* If first use of the group, allow the group at the MAC level */
 489:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****           if ((group->use==0) && (netif->igmp_mac_filter != NULL)) {
 946              		.loc 1 489 0
 947 009a FB68     		ldr	r3, [r7, #12]
 948 009c 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 949 009e 002B     		cmp	r3, #0
 950 00a0 0AD1     		bne	.L69
 951              		.loc 1 489 0 is_stmt 0 discriminator 1
 952 00a2 3B69     		ldr	r3, [r7, #16]
 953 00a4 1B6B     		ldr	r3, [r3, #48]
 954 00a6 002B     		cmp	r3, #0
 955 00a8 06D0     		beq	.L69
 490:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****             LWIP_DEBUGF(IGMP_DEBUG, ("igmp_joingroup: igmp_mac_filter(ADD "));
 491:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****             ip_addr_debug_print(IGMP_DEBUG, groupaddr);
 492:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****             LWIP_DEBUGF(IGMP_DEBUG, (") on if %p\n", netif));
 493:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****             netif->igmp_mac_filter(netif, groupaddr, IGMP_ADD_MAC_FILTER);
 956              		.loc 1 493 0 is_stmt 1
 957 00aa 3B69     		ldr	r3, [r7, #16]
 958 00ac 1B6B     		ldr	r3, [r3, #48]
 959 00ae 3869     		ldr	r0, [r7, #16]
 960 00b0 3968     		ldr	r1, [r7, #0]
 961 00b2 4FF00102 		mov	r2, #1
 962 00b6 9847     		blx	r3
 963              	.L69:
 494:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****           }
 495:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
 496:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****           IGMP_STATS_INC(igmp.join_sent);
 497:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****           igmp_send(group, IGMP_V2_MEMB_REPORT);
 964              		.loc 1 497 0
 965 00b8 F868     		ldr	r0, [r7, #12]
 966 00ba 4FF01601 		mov	r1, #22
 967 00be FFF7FEFF 		bl	igmp_send
 498:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
 499:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****           igmp_start_timer(group, IGMP_JOIN_DELAYING_MEMBER_TMR);
 968              		.loc 1 499 0
 969 00c2 F868     		ldr	r0, [r7, #12]
 970 00c4 4FF00501 		mov	r1, #5
 971 00c8 FFF7FEFF 		bl	igmp_start_timer
 500:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
 501:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****           /* Need to work out where this timer comes from */
 502:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****           group->group_state = IGMP_GROUP_DELAYING_MEMBER;
 972              		.loc 1 502 0
 973 00cc FB68     		ldr	r3, [r7, #12]
 974 00ce 4FF00102 		mov	r2, #1
 975 00d2 5A73     		strb	r2, [r3, #13]
 976              	.L68:
 503:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****         }
 504:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****         /* Increment group use */
 505:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****         group->use++;
 977              		.loc 1 505 0
 978 00d4 FB68     		ldr	r3, [r7, #12]
 979 00d6 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 980 00d8 03F10103 		add	r3, r3, #1
 981 00dc DAB2     		uxtb	r2, r3
 982 00de FB68     		ldr	r3, [r7, #12]
 983 00e0 1A74     		strb	r2, [r3, #16]
 506:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****         /* Join on this interface */
 507:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****         err = ERR_OK;
 984              		.loc 1 507 0
 985 00e2 4FF00003 		mov	r3, #0
 986 00e6 FB75     		strb	r3, [r7, #23]
 987 00e8 02E0     		b	.L65
 988              	.L67:
 508:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****       } else {
 509:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****         /* Return an error even if some network interfaces are joined */
 510:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****         /** @todo undo any other netif already joined */
 511:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****         LWIP_DEBUGF(IGMP_DEBUG, ("igmp_joingroup: Not enought memory to join to group\n"));
 512:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****         return ERR_MEM;
 989              		.loc 1 512 0
 990 00ea 4FF0FF03 		mov	r3, #255
 991 00ee 06E0     		b	.L62
 992              	.L65:
 513:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****       }
 514:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     }
 515:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     /* proceed to next network interface */
 516:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     netif = netif->next;
 993              		.loc 1 516 0
 994 00f0 3B69     		ldr	r3, [r7, #16]
 995 00f2 1B68     		ldr	r3, [r3, #0]
 996 00f4 3B61     		str	r3, [r7, #16]
 997              	.L64:
 472:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   while (netif != NULL) {
 998              		.loc 1 472 0 discriminator 1
 999 00f6 3B69     		ldr	r3, [r7, #16]
 1000 00f8 002B     		cmp	r3, #0
 1001 00fa AED1     		bne	.L70
 517:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   }
 518:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
 519:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   return err;
 1002              		.loc 1 519 0
 1003 00fc FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1004              	.L62:
 1005 00fe 5BB2     		sxtb	r3, r3
 520:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** }
 1006              		.loc 1 520 0
 1007 0100 1846     		mov	r0, r3
 1008 0102 07F11C07 		add	r7, r7, #28
 1009 0106 BD46     		mov	sp, r7
 1010 0108 90BD     		pop	{r4, r7, pc}
 1011              		.cfi_endproc
 1012              	.LFE8:
 1014 010a 00BF     		.section	.text.igmp_leavegroup,"ax",%progbits
 1015              		.align	2
 1016              		.global	igmp_leavegroup
 1017              		.thumb
 1018              		.thumb_func
 1020              	igmp_leavegroup:
 1021              	.LFB9:
 521:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
 522:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** /**
 523:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * Leave a group on one network interface.
 524:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  *
 525:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * @param ifaddr ip address of the network interface which should leave a group
 526:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * @param groupaddr the ip address of the group which to leave
 527:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * @return ERR_OK if group was left on the netif(s), an err_t otherwise
 528:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  */
 529:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** err_t
 530:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** igmp_leavegroup(struct ip_addr *ifaddr, struct ip_addr *groupaddr)
 531:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** {
 1022              		.loc 1 531 0
 1023              		.cfi_startproc
 1024              		@ args = 0, pretend = 0, frame = 24
 1025              		@ frame_needed = 1, uses_anonymous_args = 0
 1026 0000 90B5     		push	{r4, r7, lr}
 1027              	.LCFI26:
 1028              		.cfi_def_cfa_offset 12
 1029              		.cfi_offset 4, -12
 1030              		.cfi_offset 7, -8
 1031              		.cfi_offset 14, -4
 1032 0002 87B0     		sub	sp, sp, #28
 1033              	.LCFI27:
 1034              		.cfi_def_cfa_offset 40
 1035 0004 00AF     		add	r7, sp, #0
 1036              	.LCFI28:
 1037              		.cfi_def_cfa_register 7
 1038 0006 7860     		str	r0, [r7, #4]
 1039 0008 3960     		str	r1, [r7, #0]
 532:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   err_t              err = ERR_VAL; /* no matching interface */
 1040              		.loc 1 532 0
 1041 000a 4FF0F703 		mov	r3, #247
 1042 000e FB75     		strb	r3, [r7, #23]
 533:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   struct igmp_group *group;
 534:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   struct netif      *netif;
 535:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
 536:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   /* make sure it is multicast address */
 537:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   LWIP_ERROR("igmp_leavegroup: attempt to leave non-multicast address", ip_addr_ismulticast(groupad
 1043              		.loc 1 537 0
 1044 0010 3B68     		ldr	r3, [r7, #0]
 1045 0012 1C68     		ldr	r4, [r3, #0]	@ unaligned
 1046 0014 4FF07040 		mov	r0, #-268435456
 1047 0018 FFF7FEFF 		bl	ntohl
 1048 001c 0346     		mov	r3, r0
 1049 001e 1C40     		ands	r4, r4, r3
 1050 0020 4FF06040 		mov	r0, #-536870912
 1051 0024 FFF7FEFF 		bl	ntohl
 1052 0028 0346     		mov	r3, r0
 1053 002a 9C42     		cmp	r4, r3
 1054 002c 02D0     		beq	.L72
 1055              		.loc 1 537 0 is_stmt 0 discriminator 3
 1056 002e 4FF0F703 		mov	r3, #247
 1057 0032 5BE0     		b	.L73
 1058              	.L72:
 538:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   LWIP_ERROR("igmp_leavegroup: attempt to leave allsystems address", (!ip_addr_cmp(groupaddr, &alls
 1059              		.loc 1 538 0 is_stmt 1
 1060 0034 3B68     		ldr	r3, [r7, #0]
 1061 0036 1A68     		ldr	r2, [r3, #0]	@ unaligned
 1062 0038 40F20003 		movw	r3, #:lower16:allsystems
 1063 003c C0F20003 		movt	r3, #:upper16:allsystems
 1064 0040 1B68     		ldr	r3, [r3, #0]
 1065 0042 9A42     		cmp	r2, r3
 1066 0044 02D1     		bne	.L74
 1067              		.loc 1 538 0 is_stmt 0 discriminator 3
 1068 0046 4FF0F703 		mov	r3, #247
 1069 004a 4FE0     		b	.L73
 1070              	.L74:
 539:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
 540:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   /* loop through netif's */
 541:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   netif = netif_list;
 1071              		.loc 1 541 0 is_stmt 1
 1072 004c 40F20003 		movw	r3, #:lower16:netif_list
 1073 0050 C0F20003 		movt	r3, #:upper16:netif_list
 1074 0054 1B68     		ldr	r3, [r3, #0]
 1075 0056 3B61     		str	r3, [r7, #16]
 542:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   while (netif != NULL) {
 1076              		.loc 1 542 0
 1077 0058 44E0     		b	.L75
 1078              	.L82:
 543:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     /* Should we leave this interface ? */
 544:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     if ((netif->flags & NETIF_FLAG_IGMP) && ((ip_addr_isany(ifaddr) || ip_addr_cmp(&(netif->ip_addr
 1079              		.loc 1 544 0
 1080 005a 3B69     		ldr	r3, [r7, #16]
 1081 005c 93F82930 		ldrb	r3, [r3, #41]	@ zero_extendqisi2
 1082 0060 03F04003 		and	r3, r3, #64
 1083 0064 002B     		cmp	r3, #0
 1084 0066 3AD0     		beq	.L76
 1085              		.loc 1 544 0 is_stmt 0 discriminator 1
 1086 0068 7B68     		ldr	r3, [r7, #4]
 1087 006a 002B     		cmp	r3, #0
 1088 006c 09D0     		beq	.L77
 1089 006e 7B68     		ldr	r3, [r7, #4]
 1090 0070 1B68     		ldr	r3, [r3, #0]	@ unaligned
 1091 0072 002B     		cmp	r3, #0
 1092 0074 05D0     		beq	.L77
 1093 0076 3B69     		ldr	r3, [r7, #16]
 1094 0078 5A68     		ldr	r2, [r3, #4]
 1095 007a 7B68     		ldr	r3, [r7, #4]
 1096 007c 1B68     		ldr	r3, [r3, #0]	@ unaligned
 1097 007e 9A42     		cmp	r2, r3
 1098 0080 2DD1     		bne	.L76
 1099              	.L77:
 545:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****       /* find group */
 546:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****       group = igmp_lookfor_group(netif, groupaddr);
 1100              		.loc 1 546 0 is_stmt 1
 1101 0082 3869     		ldr	r0, [r7, #16]
 1102 0084 3968     		ldr	r1, [r7, #0]
 1103 0086 FFF7FEFF 		bl	igmp_lookfor_group
 1104 008a F860     		str	r0, [r7, #12]
 547:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
 548:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****       if (group != NULL) {
 1105              		.loc 1 548 0
 1106 008c FB68     		ldr	r3, [r7, #12]
 1107 008e 002B     		cmp	r3, #0
 1108 0090 25D0     		beq	.L76
 549:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****         /* Only send a leave if the flag is set according to the state diagram */
 550:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****         LWIP_DEBUGF(IGMP_DEBUG, ("igmp_leavegroup: Leaving group: "));
 551:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****         ip_addr_debug_print(IGMP_DEBUG, groupaddr);
 552:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****         LWIP_DEBUGF(IGMP_DEBUG, ("\n"));
 553:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
 554:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****         /* If there is no other use of the group */
 555:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****         if (group->use <= 1) {
 1109              		.loc 1 555 0
 1110 0092 FB68     		ldr	r3, [r7, #12]
 1111 0094 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 1112 0096 012B     		cmp	r3, #1
 1113 0098 17D8     		bhi	.L78
 556:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****           /* If we are the last reporter for this group */
 557:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****           if (group->last_reporter_flag) {
 1114              		.loc 1 557 0
 1115 009a FB68     		ldr	r3, [r7, #12]
 1116 009c 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 1117 009e 002B     		cmp	r3, #0
 1118 00a0 04D0     		beq	.L79
 558:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****             LWIP_DEBUGF(IGMP_DEBUG, ("igmp_leavegroup: sending leaving group\n"));
 559:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****             IGMP_STATS_INC(igmp.leave_sent);
 560:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****             igmp_send(group, IGMP_LEAVE_GROUP);
 1119              		.loc 1 560 0
 1120 00a2 F868     		ldr	r0, [r7, #12]
 1121 00a4 4FF01701 		mov	r1, #23
 1122 00a8 FFF7FEFF 		bl	igmp_send
 1123              	.L79:
 561:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****           }
 562:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****           
 563:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****           /* Disable the group at the MAC level */
 564:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****           if (netif->igmp_mac_filter != NULL) {
 1124              		.loc 1 564 0
 1125 00ac 3B69     		ldr	r3, [r7, #16]
 1126 00ae 1B6B     		ldr	r3, [r3, #48]
 1127 00b0 002B     		cmp	r3, #0
 1128 00b2 06D0     		beq	.L80
 565:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****             LWIP_DEBUGF(IGMP_DEBUG, ("igmp_leavegroup: igmp_mac_filter(DEL "));
 566:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****             ip_addr_debug_print(IGMP_DEBUG, groupaddr);
 567:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****             LWIP_DEBUGF(IGMP_DEBUG, (") on if %p\n", netif));
 568:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****             netif->igmp_mac_filter(netif, groupaddr, IGMP_DEL_MAC_FILTER);
 1129              		.loc 1 568 0
 1130 00b4 3B69     		ldr	r3, [r7, #16]
 1131 00b6 1B6B     		ldr	r3, [r3, #48]
 1132 00b8 3869     		ldr	r0, [r7, #16]
 1133 00ba 3968     		ldr	r1, [r7, #0]
 1134 00bc 4FF00002 		mov	r2, #0
 1135 00c0 9847     		blx	r3
 1136              	.L80:
 569:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****           }
 570:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****           
 571:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****           LWIP_DEBUGF(IGMP_DEBUG, ("igmp_leavegroup: remove group: "));
 572:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****           ip_addr_debug_print(IGMP_DEBUG, groupaddr);
 573:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****           LWIP_DEBUGF(IGMP_DEBUG, ("\n"));          
 574:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****           
 575:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****           /* Free the group */
 576:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****           igmp_remove_group(group);
 1137              		.loc 1 576 0
 1138 00c2 F868     		ldr	r0, [r7, #12]
 1139 00c4 FFF7FEFF 		bl	igmp_remove_group
 1140 00c8 06E0     		b	.L81
 1141              	.L78:
 577:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****         } else {
 578:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****           /* Decrement group use */
 579:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****           group->use--;
 1142              		.loc 1 579 0
 1143 00ca FB68     		ldr	r3, [r7, #12]
 1144 00cc 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 1145 00ce 03F1FF33 		add	r3, r3, #-1
 1146 00d2 DAB2     		uxtb	r2, r3
 1147 00d4 FB68     		ldr	r3, [r7, #12]
 1148 00d6 1A74     		strb	r2, [r3, #16]
 1149              	.L81:
 580:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****         }
 581:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****         /* Leave on this interface */
 582:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****         err = ERR_OK;
 1150              		.loc 1 582 0
 1151 00d8 4FF00003 		mov	r3, #0
 1152 00dc FB75     		strb	r3, [r7, #23]
 1153              	.L76:
 583:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****       } else {
 584:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****         /* It's not a fatal error on "leavegroup" */
 585:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****         LWIP_DEBUGF(IGMP_DEBUG, ("igmp_leavegroup: not member of group\n"));
 586:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****       }
 587:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     }
 588:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     /* proceed to next network interface */
 589:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     netif = netif->next;
 1154              		.loc 1 589 0
 1155 00de 3B69     		ldr	r3, [r7, #16]
 1156 00e0 1B68     		ldr	r3, [r3, #0]
 1157 00e2 3B61     		str	r3, [r7, #16]
 1158              	.L75:
 542:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   while (netif != NULL) {
 1159              		.loc 1 542 0 discriminator 1
 1160 00e4 3B69     		ldr	r3, [r7, #16]
 1161 00e6 002B     		cmp	r3, #0
 1162 00e8 B7D1     		bne	.L82
 590:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   }
 591:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
 592:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   return err;
 1163              		.loc 1 592 0
 1164 00ea FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1165              	.L73:
 1166 00ec 5BB2     		sxtb	r3, r3
 593:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** }
 1167              		.loc 1 593 0
 1168 00ee 1846     		mov	r0, r3
 1169 00f0 07F11C07 		add	r7, r7, #28
 1170 00f4 BD46     		mov	sp, r7
 1171 00f6 90BD     		pop	{r4, r7, pc}
 1172              		.cfi_endproc
 1173              	.LFE9:
 1175              		.section	.text.igmp_tmr,"ax",%progbits
 1176              		.align	2
 1177              		.global	igmp_tmr
 1178              		.thumb
 1179              		.thumb_func
 1181              	igmp_tmr:
 1182              	.LFB10:
 594:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
 595:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** /**
 596:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * The igmp timer function (both for NO_SYS=1 and =0)
 597:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * Should be called every IGMP_TMR_INTERVAL milliseconds (100 ms is default).
 598:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  */
 599:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** void
 600:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** igmp_tmr(void)
 601:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** {
 1183              		.loc 1 601 0
 1184              		.cfi_startproc
 1185              		@ args = 0, pretend = 0, frame = 8
 1186              		@ frame_needed = 1, uses_anonymous_args = 0
 1187 0000 80B5     		push	{r7, lr}
 1188              	.LCFI29:
 1189              		.cfi_def_cfa_offset 8
 1190              		.cfi_offset 7, -8
 1191              		.cfi_offset 14, -4
 1192 0002 82B0     		sub	sp, sp, #8
 1193              	.LCFI30:
 1194              		.cfi_def_cfa_offset 16
 1195 0004 00AF     		add	r7, sp, #0
 1196              	.LCFI31:
 1197              		.cfi_def_cfa_register 7
 602:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   struct igmp_group *group = igmp_group_list;
 1198              		.loc 1 602 0
 1199 0006 40F20003 		movw	r3, #:lower16:igmp_group_list
 1200 000a C0F20003 		movt	r3, #:upper16:igmp_group_list
 1201 000e 1B68     		ldr	r3, [r3, #0]
 1202 0010 7B60     		str	r3, [r7, #4]
 603:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
 604:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   while (group != NULL) {
 1203              		.loc 1 604 0
 1204 0012 14E0     		b	.L84
 1205              	.L86:
 605:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     if (group->timer != 0) {
 1206              		.loc 1 605 0
 1207 0014 7B68     		ldr	r3, [r7, #4]
 1208 0016 DB89     		ldrh	r3, [r3, #14]
 1209 0018 002B     		cmp	r3, #0
 1210 001a 0DD0     		beq	.L85
 606:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****       group->timer -= 1;
 1211              		.loc 1 606 0
 1212 001c 7B68     		ldr	r3, [r7, #4]
 1213 001e DB89     		ldrh	r3, [r3, #14]
 1214 0020 03F1FF33 		add	r3, r3, #-1
 1215 0024 9AB2     		uxth	r2, r3
 1216 0026 7B68     		ldr	r3, [r7, #4]
 1217 0028 DA81     		strh	r2, [r3, #14]	@ movhi
 607:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****       if (group->timer == 0) {
 1218              		.loc 1 607 0
 1219 002a 7B68     		ldr	r3, [r7, #4]
 1220 002c DB89     		ldrh	r3, [r3, #14]
 1221 002e 002B     		cmp	r3, #0
 1222 0030 02D1     		bne	.L85
 608:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****         igmp_timeout(group);
 1223              		.loc 1 608 0
 1224 0032 7868     		ldr	r0, [r7, #4]
 1225 0034 FFF7FEFF 		bl	igmp_timeout
 1226              	.L85:
 609:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****       }
 610:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     }
 611:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     group = group->next;
 1227              		.loc 1 611 0
 1228 0038 7B68     		ldr	r3, [r7, #4]
 1229 003a 1B68     		ldr	r3, [r3, #0]
 1230 003c 7B60     		str	r3, [r7, #4]
 1231              	.L84:
 604:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   while (group != NULL) {
 1232              		.loc 1 604 0 discriminator 1
 1233 003e 7B68     		ldr	r3, [r7, #4]
 1234 0040 002B     		cmp	r3, #0
 1235 0042 E7D1     		bne	.L86
 612:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   }
 613:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** }
 1236              		.loc 1 613 0
 1237 0044 07F10807 		add	r7, r7, #8
 1238 0048 BD46     		mov	sp, r7
 1239 004a 80BD     		pop	{r7, pc}
 1240              		.cfi_endproc
 1241              	.LFE10:
 1243              		.section	.text.igmp_timeout,"ax",%progbits
 1244              		.align	2
 1245              		.global	igmp_timeout
 1246              		.thumb
 1247              		.thumb_func
 1249              	igmp_timeout:
 1250              	.LFB11:
 614:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
 615:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** /**
 616:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * Called if a timeout for one group is reached.
 617:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * Sends a report for this group.
 618:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  *
 619:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * @param group an igmp_group for which a timeout is reached
 620:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  */
 621:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** void
 622:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** igmp_timeout(struct igmp_group *group)
 623:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** {
 1251              		.loc 1 623 0
 1252              		.cfi_startproc
 1253              		@ args = 0, pretend = 0, frame = 8
 1254              		@ frame_needed = 1, uses_anonymous_args = 0
 1255 0000 80B5     		push	{r7, lr}
 1256              	.LCFI32:
 1257              		.cfi_def_cfa_offset 8
 1258              		.cfi_offset 7, -8
 1259              		.cfi_offset 14, -4
 1260 0002 82B0     		sub	sp, sp, #8
 1261              	.LCFI33:
 1262              		.cfi_def_cfa_offset 16
 1263 0004 00AF     		add	r7, sp, #0
 1264              	.LCFI34:
 1265              		.cfi_def_cfa_register 7
 1266 0006 7860     		str	r0, [r7, #4]
 624:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   /* If the state is IGMP_GROUP_DELAYING_MEMBER then we send a report for this group */
 625:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   if (group->group_state == IGMP_GROUP_DELAYING_MEMBER) {
 1267              		.loc 1 625 0
 1268 0008 7B68     		ldr	r3, [r7, #4]
 1269 000a 5B7B     		ldrb	r3, [r3, #13]	@ zero_extendqisi2
 1270 000c 012B     		cmp	r3, #1
 1271 000e 04D1     		bne	.L87
 626:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     LWIP_DEBUGF(IGMP_DEBUG, ("igmp_timeout: report membership for group with address "));
 627:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     ip_addr_debug_print(IGMP_DEBUG, &(group->group_address));
 628:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     LWIP_DEBUGF(IGMP_DEBUG, (" on if %p\n", group->interface));
 629:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
 630:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     igmp_send(group, IGMP_V2_MEMB_REPORT);
 1272              		.loc 1 630 0
 1273 0010 7868     		ldr	r0, [r7, #4]
 1274 0012 4FF01601 		mov	r1, #22
 1275 0016 FFF7FEFF 		bl	igmp_send
 1276              	.L87:
 631:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   }
 632:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** }
 1277              		.loc 1 632 0
 1278 001a 07F10807 		add	r7, r7, #8
 1279 001e BD46     		mov	sp, r7
 1280 0020 80BD     		pop	{r7, pc}
 1281              		.cfi_endproc
 1282              	.LFE11:
 1284 0022 00BF     		.section	.text.igmp_start_timer,"ax",%progbits
 1285              		.align	2
 1286              		.global	igmp_start_timer
 1287              		.thumb
 1288              		.thumb_func
 1290              	igmp_start_timer:
 1291              	.LFB12:
 633:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
 634:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** /**
 635:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * Start a timer for an igmp group
 636:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  *
 637:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * @param group the igmp_group for which to start a timer
 638:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * @param max_time the time in multiples of IGMP_TMR_INTERVAL (decrease with
 639:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  *        every call to igmp_tmr())
 640:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  */
 641:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** void
 642:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** igmp_start_timer(struct igmp_group *group, u8_t max_time)
 643:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** {
 1292              		.loc 1 643 0
 1293              		.cfi_startproc
 1294              		@ args = 0, pretend = 0, frame = 8
 1295              		@ frame_needed = 1, uses_anonymous_args = 0
 1296              		@ link register save eliminated.
 1297 0000 80B4     		push	{r7}
 1298              	.LCFI35:
 1299              		.cfi_def_cfa_offset 4
 1300              		.cfi_offset 7, -4
 1301 0002 83B0     		sub	sp, sp, #12
 1302              	.LCFI36:
 1303              		.cfi_def_cfa_offset 16
 1304 0004 00AF     		add	r7, sp, #0
 1305              	.LCFI37:
 1306              		.cfi_def_cfa_register 7
 1307 0006 7860     		str	r0, [r7, #4]
 1308 0008 0B46     		mov	r3, r1
 1309 000a FB70     		strb	r3, [r7, #3]
 644:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   /**
 645:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****    * @todo Important !! this should be random 0 -> max_time. Find out how to do this
 646:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****    */
 647:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   group->timer = max_time;
 1310              		.loc 1 647 0
 1311 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1312 000e 9AB2     		uxth	r2, r3
 1313 0010 7B68     		ldr	r3, [r7, #4]
 1314 0012 DA81     		strh	r2, [r3, #14]	@ movhi
 648:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** }
 1315              		.loc 1 648 0
 1316 0014 07F10C07 		add	r7, r7, #12
 1317 0018 BD46     		mov	sp, r7
 1318 001a 80BC     		pop	{r7}
 1319 001c 7047     		bx	lr
 1320              		.cfi_endproc
 1321              	.LFE12:
 1323 001e 00BF     		.section	.text.igmp_stop_timer,"ax",%progbits
 1324              		.align	2
 1325              		.global	igmp_stop_timer
 1326              		.thumb
 1327              		.thumb_func
 1329              	igmp_stop_timer:
 1330              	.LFB13:
 649:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
 650:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** /**
 651:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * Stop a timer for an igmp_group
 652:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  *
 653:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * @param group the igmp_group for which to stop the timer
 654:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  */
 655:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** void
 656:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** igmp_stop_timer(struct igmp_group *group)
 657:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** {
 1331              		.loc 1 657 0
 1332              		.cfi_startproc
 1333              		@ args = 0, pretend = 0, frame = 8
 1334              		@ frame_needed = 1, uses_anonymous_args = 0
 1335              		@ link register save eliminated.
 1336 0000 80B4     		push	{r7}
 1337              	.LCFI38:
 1338              		.cfi_def_cfa_offset 4
 1339              		.cfi_offset 7, -4
 1340 0002 83B0     		sub	sp, sp, #12
 1341              	.LCFI39:
 1342              		.cfi_def_cfa_offset 16
 1343 0004 00AF     		add	r7, sp, #0
 1344              	.LCFI40:
 1345              		.cfi_def_cfa_register 7
 1346 0006 7860     		str	r0, [r7, #4]
 658:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   group->timer = 0;
 1347              		.loc 1 658 0
 1348 0008 7B68     		ldr	r3, [r7, #4]
 1349 000a 4FF00002 		mov	r2, #0
 1350 000e DA81     		strh	r2, [r3, #14]	@ movhi
 659:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** }
 1351              		.loc 1 659 0
 1352 0010 07F10C07 		add	r7, r7, #12
 1353 0014 BD46     		mov	sp, r7
 1354 0016 80BC     		pop	{r7}
 1355 0018 7047     		bx	lr
 1356              		.cfi_endproc
 1357              	.LFE13:
 1359 001a 00BF     		.section	.text.igmp_delaying_member,"ax",%progbits
 1360              		.align	2
 1361              		.global	igmp_delaying_member
 1362              		.thumb
 1363              		.thumb_func
 1365              	igmp_delaying_member:
 1366              	.LFB14:
 660:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
 661:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** /**
 662:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * Delaying membership report for a group if necessary
 663:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  *
 664:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * @param group the igmp_group for which "delaying" membership report
 665:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * @param maxresp query delay
 666:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  */
 667:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** void
 668:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** igmp_delaying_member( struct igmp_group *group, u8_t maxresp)
 669:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** {
 1367              		.loc 1 669 0
 1368              		.cfi_startproc
 1369              		@ args = 0, pretend = 0, frame = 8
 1370              		@ frame_needed = 1, uses_anonymous_args = 0
 1371 0000 80B5     		push	{r7, lr}
 1372              	.LCFI41:
 1373              		.cfi_def_cfa_offset 8
 1374              		.cfi_offset 7, -8
 1375              		.cfi_offset 14, -4
 1376 0002 82B0     		sub	sp, sp, #8
 1377              	.LCFI42:
 1378              		.cfi_def_cfa_offset 16
 1379 0004 00AF     		add	r7, sp, #0
 1380              	.LCFI43:
 1381              		.cfi_def_cfa_register 7
 1382 0006 7860     		str	r0, [r7, #4]
 1383 0008 0B46     		mov	r3, r1
 1384 000a FB70     		strb	r3, [r7, #3]
 670:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   if ((group->group_state == IGMP_GROUP_IDLE_MEMBER) ||
 1385              		.loc 1 670 0
 1386 000c 7B68     		ldr	r3, [r7, #4]
 1387 000e 5B7B     		ldrb	r3, [r3, #13]	@ zero_extendqisi2
 1388 0010 022B     		cmp	r3, #2
 1389 0012 09D0     		beq	.L92
 671:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****      ((group->group_state == IGMP_GROUP_DELAYING_MEMBER) && (maxresp > group->timer))) {
 1390              		.loc 1 671 0 discriminator 1
 1391 0014 7B68     		ldr	r3, [r7, #4]
 1392 0016 5B7B     		ldrb	r3, [r3, #13]	@ zero_extendqisi2
 670:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   if ((group->group_state == IGMP_GROUP_IDLE_MEMBER) ||
 1393              		.loc 1 670 0 discriminator 1
 1394 0018 012B     		cmp	r3, #1
 1395 001a 11D1     		bne	.L91
 1396              		.loc 1 671 0
 1397 001c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1398 001e 9AB2     		uxth	r2, r3
 1399 0020 7B68     		ldr	r3, [r7, #4]
 1400 0022 DB89     		ldrh	r3, [r3, #14]
 1401 0024 9A42     		cmp	r2, r3
 1402 0026 0BD9     		bls	.L91
 1403              	.L92:
 672:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     igmp_start_timer(group, (maxresp)/2);
 1404              		.loc 1 672 0
 1405 0028 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1406 002a 4FEA5303 		lsr	r3, r3, #1
 1407 002e DBB2     		uxtb	r3, r3
 1408 0030 7868     		ldr	r0, [r7, #4]
 1409 0032 1946     		mov	r1, r3
 1410 0034 FFF7FEFF 		bl	igmp_start_timer
 673:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     group->group_state = IGMP_GROUP_DELAYING_MEMBER;
 1411              		.loc 1 673 0
 1412 0038 7B68     		ldr	r3, [r7, #4]
 1413 003a 4FF00102 		mov	r2, #1
 1414 003e 5A73     		strb	r2, [r3, #13]
 1415              	.L91:
 674:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   }
 675:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** }
 1416              		.loc 1 675 0
 1417 0040 07F10807 		add	r7, r7, #8
 1418 0044 BD46     		mov	sp, r7
 1419 0046 80BD     		pop	{r7, pc}
 1420              		.cfi_endproc
 1421              	.LFE14:
 1423              		.section	.text.igmp_ip_output_if,"ax",%progbits
 1424              		.align	2
 1425              		.global	igmp_ip_output_if
 1426              		.thumb
 1427              		.thumb_func
 1429              	igmp_ip_output_if:
 1430              	.LFB15:
 676:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
 677:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
 678:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** /**
 679:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * Sends an IP packet on a network interface. This function constructs the IP header
 680:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * and calculates the IP header checksum. If the source IP address is NULL,
 681:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * the IP address of the outgoing network interface is filled in as source address.
 682:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  *
 683:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * @param p the packet to send (p->payload points to the data, e.g. next
 684:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****             protocol header; if dest == IP_HDRINCL, p already includes an IP
 685:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****             header and p->payload points to that IP header)
 686:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * @param src the source IP address to send from (if src == IP_ADDR_ANY, the
 687:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  *         IP  address of the netif used to send is used as source address)
 688:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * @param dest the destination IP address to send the packet to
 689:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * @param ttl the TTL value to be set in the IP header
 690:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * @param proto the PROTOCOL to be set in the IP header
 691:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * @param netif the netif on which to send this packet
 692:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * @return ERR_OK if the packet was sent OK
 693:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  *         ERR_BUF if p doesn't have enough space for IP/LINK headers
 694:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  *         returns errors returned by netif->output
 695:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  */
 696:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** err_t
 697:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** igmp_ip_output_if(struct pbuf *p, struct ip_addr *src, struct ip_addr *dest,
 698:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****                   u8_t ttl, u8_t proto, struct netif *netif)
 699:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** {
 1431              		.loc 1 699 0
 1432              		.cfi_startproc
 1433              		@ args = 8, pretend = 0, frame = 24
 1434              		@ frame_needed = 1, uses_anonymous_args = 0
 1435 0000 80B5     		push	{r7, lr}
 1436              	.LCFI44:
 1437              		.cfi_def_cfa_offset 8
 1438              		.cfi_offset 7, -8
 1439              		.cfi_offset 14, -4
 1440 0002 8CB0     		sub	sp, sp, #48
 1441              	.LCFI45:
 1442              		.cfi_def_cfa_offset 56
 1443 0004 06AF     		add	r7, sp, #24
 1444              	.LCFI46:
 1445              		.cfi_def_cfa 7, 32
 1446 0006 F860     		str	r0, [r7, #12]
 1447 0008 B960     		str	r1, [r7, #8]
 1448 000a 7A60     		str	r2, [r7, #4]
 1449 000c FB70     		strb	r3, [r7, #3]
 700:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   /* This is the "router alert" option */
 701:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   u16_t ra[2];
 702:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   ra[0] = htons (ROUTER_ALERT);
 1450              		.loc 1 702 0
 1451 000e 49F20440 		movw	r0, #37892
 1452 0012 FFF7FEFF 		bl	htons
 1453 0016 0346     		mov	r3, r0
 1454 0018 BB82     		strh	r3, [r7, #20]	@ movhi
 703:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   ra[1] = 0x0000; /* Router shall examine packet */
 1455              		.loc 1 703 0
 1456 001a 4FF00003 		mov	r3, #0
 1457 001e FB82     		strh	r3, [r7, #22]	@ movhi
 704:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   return ip_output_if_opt(p, src, dest, ttl, 0, proto, netif, ra, ROUTER_ALERTLEN);
 1458              		.loc 1 704 0
 1459 0020 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1460 0022 4FF00002 		mov	r2, #0
 1461 0026 0092     		str	r2, [sp, #0]
 1462 0028 97F82020 		ldrb	r2, [r7, #32]	@ zero_extendqisi2
 1463 002c 0192     		str	r2, [sp, #4]
 1464 002e 7A6A     		ldr	r2, [r7, #36]
 1465 0030 0292     		str	r2, [sp, #8]
 1466 0032 07F11402 		add	r2, r7, #20
 1467 0036 0392     		str	r2, [sp, #12]
 1468 0038 4FF00402 		mov	r2, #4
 1469 003c 0492     		str	r2, [sp, #16]
 1470 003e F868     		ldr	r0, [r7, #12]
 1471 0040 B968     		ldr	r1, [r7, #8]
 1472 0042 7A68     		ldr	r2, [r7, #4]
 1473 0044 FFF7FEFF 		bl	ip_output_if_opt
 1474 0048 0346     		mov	r3, r0
 705:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** }
 1475              		.loc 1 705 0
 1476 004a 1846     		mov	r0, r3
 1477 004c 07F11807 		add	r7, r7, #24
 1478 0050 BD46     		mov	sp, r7
 1479 0052 80BD     		pop	{r7, pc}
 1480              		.cfi_endproc
 1481              	.LFE15:
 1483              		.section	.text.igmp_send,"ax",%progbits
 1484              		.align	2
 1485              		.global	igmp_send
 1486              		.thumb
 1487              		.thumb_func
 1489              	igmp_send:
 1490              	.LFB16:
 706:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
 707:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** /**
 708:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * Send an igmp packet to a specific group.
 709:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  *
 710:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * @param group the group to which to send the packet
 711:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  * @param type the type of igmp packet to send
 712:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****  */
 713:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** void
 714:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** igmp_send(struct igmp_group *group, u8_t type)
 715:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** {
 1491              		.loc 1 715 0
 1492              		.cfi_startproc
 1493              		@ args = 0, pretend = 0, frame = 24
 1494              		@ frame_needed = 1, uses_anonymous_args = 0
 1495 0000 80B5     		push	{r7, lr}
 1496              	.LCFI47:
 1497              		.cfi_def_cfa_offset 8
 1498              		.cfi_offset 7, -8
 1499              		.cfi_offset 14, -4
 1500 0002 88B0     		sub	sp, sp, #32
 1501              	.LCFI48:
 1502              		.cfi_def_cfa_offset 40
 1503 0004 02AF     		add	r7, sp, #8
 1504              	.LCFI49:
 1505              		.cfi_def_cfa 7, 32
 1506 0006 7860     		str	r0, [r7, #4]
 1507 0008 0B46     		mov	r3, r1
 1508 000a FB70     		strb	r3, [r7, #3]
 716:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   struct pbuf*     p    = NULL;
 1509              		.loc 1 716 0
 1510 000c 4FF00003 		mov	r3, #0
 1511 0010 3B61     		str	r3, [r7, #16]
 717:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   struct igmp_msg* igmp = NULL;
 1512              		.loc 1 717 0
 1513 0012 4FF00003 		mov	r3, #0
 1514 0016 FB60     		str	r3, [r7, #12]
 718:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   struct ip_addr   src  = {0};
 1515              		.loc 1 718 0
 1516 0018 4FF00003 		mov	r3, #0
 1517 001c BB60     		str	r3, [r7, #8]
 719:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   struct ip_addr*  dest = NULL;
 1518              		.loc 1 719 0
 1519 001e 4FF00003 		mov	r3, #0
 1520 0022 7B61     		str	r3, [r7, #20]
 720:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
 721:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   /* IP header + "router alert" option + IGMP header */
 722:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   p = pbuf_alloc(PBUF_TRANSPORT, IGMP_MINLEN, PBUF_RAM);
 1521              		.loc 1 722 0
 1522 0024 4FF00000 		mov	r0, #0
 1523 0028 4FF00801 		mov	r1, #8
 1524 002c 4FF00002 		mov	r2, #0
 1525 0030 FFF7FEFF 		bl	pbuf_alloc
 1526 0034 3861     		str	r0, [r7, #16]
 723:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   
 724:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   if (p) {
 1527              		.loc 1 724 0
 1528 0036 3B69     		ldr	r3, [r7, #16]
 1529 0038 002B     		cmp	r3, #0
 1530 003a 6AD0     		beq	.L96
 725:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     igmp = p->payload;
 1531              		.loc 1 725 0
 1532 003c 3B69     		ldr	r3, [r7, #16]
 1533 003e 5B68     		ldr	r3, [r3, #4]
 1534 0040 FB60     		str	r3, [r7, #12]
 726:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     LWIP_ASSERT("igmp_send: check that first pbuf can hold struct igmp_msg",
 727:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****                (p->len >= sizeof(struct igmp_msg)));
 728:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     ip_addr_set(&src, &((group->interface)->ip_addr));
 1535              		.loc 1 728 0
 1536 0042 7B68     		ldr	r3, [r7, #4]
 1537 0044 5B68     		ldr	r3, [r3, #4]
 1538 0046 03F10403 		add	r3, r3, #4
 1539 004a 002B     		cmp	r3, #0
 1540 004c 03D0     		beq	.L98
 1541              		.loc 1 728 0 is_stmt 0 discriminator 1
 1542 004e 7B68     		ldr	r3, [r7, #4]
 1543 0050 5B68     		ldr	r3, [r3, #4]
 1544 0052 5B68     		ldr	r3, [r3, #4]
 1545 0054 01E0     		b	.L99
 1546              	.L98:
 1547              		.loc 1 728 0 discriminator 2
 1548 0056 4FF00003 		mov	r3, #0
 1549              	.L99:
 1550              		.loc 1 728 0 discriminator 3
 1551 005a BB60     		str	r3, [r7, #8]
 729:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****      
 730:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     if (type == IGMP_V2_MEMB_REPORT) {
 1552              		.loc 1 730 0 is_stmt 1 discriminator 3
 1553 005c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1554 005e 162B     		cmp	r3, #22
 1555 0060 14D1     		bne	.L100
 731:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****       dest = &(group->group_address);
 1556              		.loc 1 731 0
 1557 0062 7B68     		ldr	r3, [r7, #4]
 1558 0064 03F10803 		add	r3, r3, #8
 1559 0068 7B61     		str	r3, [r7, #20]
 732:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****       IGMP_STATS_INC(igmp.report_sent);
 733:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****       ip_addr_set(&(igmp->igmp_group_address), &(group->group_address));
 1560              		.loc 1 733 0
 1561 006a 7B68     		ldr	r3, [r7, #4]
 1562 006c 03F10803 		add	r3, r3, #8
 1563 0070 002B     		cmp	r3, #0
 1564 0072 02D0     		beq	.L101
 1565              		.loc 1 733 0 is_stmt 0 discriminator 1
 1566 0074 7B68     		ldr	r3, [r7, #4]
 1567 0076 9B68     		ldr	r3, [r3, #8]
 1568 0078 01E0     		b	.L102
 1569              	.L101:
 1570              		.loc 1 733 0 discriminator 2
 1571 007a 4FF00003 		mov	r3, #0
 1572              	.L102:
 1573              		.loc 1 733 0 discriminator 3
 1574 007e FA68     		ldr	r2, [r7, #12]
 1575 0080 5360     		str	r3, [r2, #4]	@ unaligned
 734:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****       group->last_reporter_flag = 1; /* Remember we were the last to report */
 1576              		.loc 1 734 0 is_stmt 1 discriminator 3
 1577 0082 7B68     		ldr	r3, [r7, #4]
 1578 0084 4FF00102 		mov	r2, #1
 1579 0088 1A73     		strb	r2, [r3, #12]
 1580 008a 13E0     		b	.L103
 1581              	.L100:
 735:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     } else {
 736:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****       if (type == IGMP_LEAVE_GROUP) {
 1582              		.loc 1 736 0
 1583 008c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1584 008e 172B     		cmp	r3, #23
 1585 0090 10D1     		bne	.L103
 737:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****         dest = &allrouters;
 1586              		.loc 1 737 0
 1587 0092 40F20003 		movw	r3, #:lower16:allrouters
 1588 0096 C0F20003 		movt	r3, #:upper16:allrouters
 1589 009a 7B61     		str	r3, [r7, #20]
 738:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****         ip_addr_set(&(igmp->igmp_group_address), &(group->group_address));
 1590              		.loc 1 738 0
 1591 009c 7B68     		ldr	r3, [r7, #4]
 1592 009e 03F10803 		add	r3, r3, #8
 1593 00a2 002B     		cmp	r3, #0
 1594 00a4 02D0     		beq	.L104
 1595              		.loc 1 738 0 is_stmt 0 discriminator 1
 1596 00a6 7B68     		ldr	r3, [r7, #4]
 1597 00a8 9B68     		ldr	r3, [r3, #8]
 1598 00aa 01E0     		b	.L105
 1599              	.L104:
 1600              		.loc 1 738 0 discriminator 2
 1601 00ac 4FF00003 		mov	r3, #0
 1602              	.L105:
 1603              		.loc 1 738 0 discriminator 3
 1604 00b0 FA68     		ldr	r2, [r7, #12]
 1605 00b2 5360     		str	r3, [r2, #4]	@ unaligned
 1606              	.L103:
 739:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****       }
 740:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     }
 741:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
 742:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     if ((type == IGMP_V2_MEMB_REPORT) || (type == IGMP_LEAVE_GROUP)) {
 1607              		.loc 1 742 0 is_stmt 1
 1608 00b4 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1609 00b6 162B     		cmp	r3, #22
 1610 00b8 02D0     		beq	.L106
 1611              		.loc 1 742 0 is_stmt 0 discriminator 1
 1612 00ba FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1613 00bc 172B     		cmp	r3, #23
 1614 00be 25D1     		bne	.L107
 1615              	.L106:
 743:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****       igmp->igmp_msgtype  = type;
 1616              		.loc 1 743 0 is_stmt 1
 1617 00c0 FB68     		ldr	r3, [r7, #12]
 1618 00c2 FA78     		ldrb	r2, [r7, #3]
 1619 00c4 1A70     		strb	r2, [r3, #0]
 744:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****       igmp->igmp_maxresp  = 0;
 1620              		.loc 1 744 0
 1621 00c6 FB68     		ldr	r3, [r7, #12]
 1622 00c8 4FF00002 		mov	r2, #0
 1623 00cc 5A70     		strb	r2, [r3, #1]
 745:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****       igmp->igmp_checksum = 0;
 1624              		.loc 1 745 0
 1625 00ce FB68     		ldr	r3, [r7, #12]
 1626 00d0 4FF00002 		mov	r2, #0
 1627 00d4 9A70     		strb	r2, [r3, #2]
 1628 00d6 4FF00002 		mov	r2, #0
 1629 00da DA70     		strb	r2, [r3, #3]
 746:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****       igmp->igmp_checksum = inet_chksum( igmp, IGMP_MINLEN);
 1630              		.loc 1 746 0
 1631 00dc F868     		ldr	r0, [r7, #12]
 1632 00de 4FF00801 		mov	r1, #8
 1633 00e2 FFF7FEFF 		bl	inet_chksum
 1634 00e6 0346     		mov	r3, r0
 1635 00e8 1A46     		mov	r2, r3
 1636 00ea FB68     		ldr	r3, [r7, #12]
 1637 00ec 5A80     		strh	r2, [r3, #2]	@ unaligned
 747:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
 748:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****       igmp_ip_output_if(p, &src, dest, IGMP_TTL, IP_PROTO_IGMP, group->interface);
 1638              		.loc 1 748 0
 1639 00ee 7B68     		ldr	r3, [r7, #4]
 1640 00f0 5A68     		ldr	r2, [r3, #4]
 1641 00f2 07F10803 		add	r3, r7, #8
 1642 00f6 4FF00201 		mov	r1, #2
 1643 00fa 0091     		str	r1, [sp, #0]
 1644 00fc 0192     		str	r2, [sp, #4]
 1645 00fe 3869     		ldr	r0, [r7, #16]
 1646 0100 1946     		mov	r1, r3
 1647 0102 7A69     		ldr	r2, [r7, #20]
 1648 0104 4FF00103 		mov	r3, #1
 1649 0108 FFF7FEFF 		bl	igmp_ip_output_if
 1650              	.L107:
 749:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     }
 750:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** 
 751:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     pbuf_free(p);
 1651              		.loc 1 751 0
 1652 010c 3869     		ldr	r0, [r7, #16]
 1653 010e FFF7FEFF 		bl	pbuf_free
 1654              	.L96:
 752:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   } else {
 753:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****     LWIP_DEBUGF(IGMP_DEBUG, ("igmp_send: not enough memory for igmp_send\n"));
 754:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c ****   }
 755:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/ipv4/igmp.c **** }
 1655              		.loc 1 755 0
 1656 0112 07F11807 		add	r7, r7, #24
 1657 0116 BD46     		mov	sp, r7
 1658 0118 80BD     		pop	{r7, pc}
 1659              		.cfi_endproc
 1660              	.LFE16:
 1662 011a 00BF     		.text
 1663              	.Letext0:
 1664              		.file 2 "F:\\WORK\\SmartHome_checkout1\\XMC4500_RK_HTTPserver\\Dave\\Generated\\src\\ETH004\\01_lw
 1665              		.file 3 "F:\\WORK\\SmartHome_checkout1\\XMC4500_RK_HTTPserver\\Dave\\Generated\\src\\ETH004\\01_lw
 1666              		.file 4 "F:\\WORK\\SmartHome_checkout1\\XMC4500_RK_HTTPserver\\Dave\\Generated\\src\\ETH004\\01_lw
 1667              		.file 5 "F:\\WORK\\SmartHome_checkout1\\XMC4500_RK_HTTPserver\\Dave\\Generated\\src\\ETH004\\01_lw
 1668              		.file 6 "F:\\WORK\\SmartHome_checkout1\\XMC4500_RK_HTTPserver\\Dave\\Generated\\src\\ETH004\\01_lw
 1669              		.file 7 "F:\\WORK\\SmartHome_checkout1\\XMC4500_RK_HTTPserver\\Dave\\Generated\\src\\ETH004\\01_lw
 1670              		.file 8 "F:\\WORK\\SmartHome_checkout1\\XMC4500_RK_HTTPserver\\Dave\\Generated\\src\\ETH004\\01_lw
 1671              		.file 9 "F:\\WORK\\SmartHome_checkout1\\XMC4500_RK_HTTPserver\\Dave\\Generated\\src\\ETH004\\01_lw
DEFINED SYMBOLS
                            *ABS*:00000000 igmp.c
C:\Users\Mihai\AppData\Local\Temp\ccXppndG.s:20     .bss:00000000 $d
C:\Users\Mihai\AppData\Local\Temp\ccXppndG.s:21     .bss:00000000 igmp_group_list
C:\Users\Mihai\AppData\Local\Temp\ccXppndG.s:24     .bss:00000004 allsystems
C:\Users\Mihai\AppData\Local\Temp\ccXppndG.s:27     .bss:00000008 allrouters
C:\Users\Mihai\AppData\Local\Temp\ccXppndG.s:30     .text.igmp_init:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccXppndG.s:35     .text.igmp_init:00000000 igmp_init
C:\Users\Mihai\AppData\Local\Temp\ccXppndG.s:72     .text.igmp_start:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccXppndG.s:77     .text.igmp_start:00000000 igmp_start
C:\Users\Mihai\AppData\Local\Temp\ccXppndG.s:392    .text.igmp_lookup_group:00000000 igmp_lookup_group
C:\Users\Mihai\AppData\Local\Temp\ccXppndG.s:147    .text.igmp_stop:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccXppndG.s:152    .text.igmp_stop:00000000 igmp_stop
C:\Users\Mihai\AppData\Local\Temp\ccXppndG.s:257    .text.igmp_report_groups:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccXppndG.s:262    .text.igmp_report_groups:00000000 igmp_report_groups
C:\Users\Mihai\AppData\Local\Temp\ccXppndG.s:1365   .text.igmp_delaying_member:00000000 igmp_delaying_member
C:\Users\Mihai\AppData\Local\Temp\ccXppndG.s:316    .text.igmp_lookfor_group:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccXppndG.s:321    .text.igmp_lookfor_group:00000000 igmp_lookfor_group
C:\Users\Mihai\AppData\Local\Temp\ccXppndG.s:387    .text.igmp_lookup_group:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccXppndG.s:499    .text.igmp_remove_group:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccXppndG.s:504    .text.igmp_remove_group:00000000 igmp_remove_group
C:\Users\Mihai\AppData\Local\Temp\ccXppndG.s:596    .text.igmp_input:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccXppndG.s:601    .text.igmp_input:00000000 igmp_input
C:\Users\Mihai\AppData\Local\Temp\ccXppndG.s:847    .text.igmp_joingroup:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccXppndG.s:852    .text.igmp_joingroup:00000000 igmp_joingroup
C:\Users\Mihai\AppData\Local\Temp\ccXppndG.s:1489   .text.igmp_send:00000000 igmp_send
C:\Users\Mihai\AppData\Local\Temp\ccXppndG.s:1290   .text.igmp_start_timer:00000000 igmp_start_timer
C:\Users\Mihai\AppData\Local\Temp\ccXppndG.s:1015   .text.igmp_leavegroup:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccXppndG.s:1020   .text.igmp_leavegroup:00000000 igmp_leavegroup
C:\Users\Mihai\AppData\Local\Temp\ccXppndG.s:1176   .text.igmp_tmr:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccXppndG.s:1181   .text.igmp_tmr:00000000 igmp_tmr
C:\Users\Mihai\AppData\Local\Temp\ccXppndG.s:1249   .text.igmp_timeout:00000000 igmp_timeout
C:\Users\Mihai\AppData\Local\Temp\ccXppndG.s:1244   .text.igmp_timeout:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccXppndG.s:1285   .text.igmp_start_timer:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccXppndG.s:1324   .text.igmp_stop_timer:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccXppndG.s:1329   .text.igmp_stop_timer:00000000 igmp_stop_timer
C:\Users\Mihai\AppData\Local\Temp\ccXppndG.s:1360   .text.igmp_delaying_member:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccXppndG.s:1424   .text.igmp_ip_output_if:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccXppndG.s:1429   .text.igmp_ip_output_if:00000000 igmp_ip_output_if
C:\Users\Mihai\AppData\Local\Temp\ccXppndG.s:1484   .text.igmp_send:00000000 $t
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.1791a5ae2e936ca1033c1c44be394cc7
                           .group:00000000 wm4.ETH004_Conf.h.56.564c3f309c32b3c742fc91049cf66940
                           .group:00000000 wm4.lwipopts.h.73.a7a63bda1e8216abd1d90275eaaa0027
                           .group:00000000 wm4.arch.h.33.6fa4aa86d33d1490ae882caef7316405
                           .group:00000000 wm4.cpu.h.33.b213c7fd77614ebc3691cef18ad2ff22
                           .group:00000000 wm4.cc.h.66.ec134211c658dcc89de4610e4e7bab46
                           .group:00000000 wm4.arch.h.47.5153c52bfb94ee3b37299920afab6afd
                           .group:00000000 wm4.debug.h.43.557ecd6c90cc70b375bb8a29118be47b
                           .group:00000000 wm4.opt.h.94.d36882acafebb8726bce646fc8b2397b
                           .group:00000000 wm4.inet.h.46.b516065779826845d16d49f513869a2b
                           .group:00000000 wm4.ip_addr.h.79.9a0ce887ca8c88c22ad7686bcb5105df
                           .group:00000000 wm4.err.h.52.37c5d17538f8e8347a9c84196701e92d
                           .group:00000000 wm4.pbuf.h.43.e9a1ad12b97478787a109e22d5306820
                           .group:00000000 wm4.netif.h.77.eb641fb35cae7e4880920e0acf78586f
                           .group:00000000 wm4.igmp.h.52.4b87c73c5052131fa24f56c9d0dd53d2
                           .group:00000000 wm4.def.h.33.f5df81959e69d85e6b3a0a040438efaf
                           .group:00000000 wm4.mem.h.96.20770766e6c9e6c42af6bfa95ef5c63f
                           .group:00000000 wm4.ip.h.48.ad46847692d4d729760949b27e48a442
                           .group:00000000 wm4.icmp.h.44.450dbf91f594cc26ad19d086cdc83713
                           .group:00000000 wm4.udp.h.48.1a8dde095cd0a13580afaba1443e5a3f
                           .group:00000000 wm4.sys.h.65.4a0cd87b9e0d8bb4cd6b30e939b2ca7e
                           .group:00000000 wm4.tcp.h.55.5c30b9432fa60afaa85cbdd225b0c683
                           .group:00000000 wm4.memp_std.h.15.aec196dc1c3fb1142dd450db0c167cbf
                           .group:00000000 wm4.memp.h.86.dbc4cb1b8d6b9ea113f04174f716e4c0
                           .group:00000000 wm4.stats.h.147.58ec5b890fad5bbc2a7711ad8105f087
                           .group:00000000 wm4.newlib.h.8.a9901dc52d1357e3e94003403d43f8b5
                           .group:00000000 wm4.features.h.22.b72b3baab2bb2eab3661375590100b6b
                           .group:00000000 wm4.config.h.193.5fb8ef056cdff92dec3dee9552839d8c
                           .group:00000000 wm4._ansi.h.23.7aefdac4826acebbfc9f3822a0aeb14c
                           .group:00000000 wm4._default_types.h.6.5e12cd604db8ce00b62bb2f02708eaf3
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4.stddef.h.349.31f4c5baff3fa2689010b32028da9c47
                           .group:00000000 wm4.reent.h.16.9e42f0e588b85e70b2bf6572af57ce64
                           .group:00000000 wm4.stddef.h.187.9e651b6b8b16e149c1353259404973ea
                           .group:00000000 wm4.string.h.86.d5c872ff52e2712c985b588a0ef39f3c

UNDEFINED SYMBOLS
htonl
mem_free
memp_sizes
mem_malloc
ntohs
pbuf_header
pbuf_free
inet_chksum
ntohl
netif_list
htons
ip_output_if_opt
pbuf_alloc
