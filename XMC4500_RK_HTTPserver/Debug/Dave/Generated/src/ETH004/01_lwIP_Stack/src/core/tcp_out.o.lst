   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"tcp_out.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.tcp_output_set_header,"ax",%progbits
  20              		.align	2
  21              		.thumb
  22              		.thumb_func
  24              	tcp_output_set_header:
  25              	.LFB0:
  26              		.file 1 "../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c"
   1:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** /**
   2:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * @file
   3:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * Transmission Control Protocol, outgoing traffic
   4:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  *
   5:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * The output functions of TCP.
   6:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  *
   7:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  */
   8:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
   9:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** /*
  10:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * Copyright (c) 2001-2004 Swedish Institute of Computer Science.
  11:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * All rights reserved.
  12:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  *
  13:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * Redistribution and use in source and binary forms, with or without modification,
  14:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * are permitted provided that the following conditions are met:
  15:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  *
  16:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  17:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  *    this list of conditions and the following disclaimer.
  18:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  19:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  *    this list of conditions and the following disclaimer in the documentation
  20:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  *    and/or other materials provided with the distribution.
  21:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * 3. The name of the author may not be used to endorse or promote products
  22:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  *    derived from this software without specific prior written permission.
  23:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  *
  24:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
  25:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  26:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
  27:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
  28:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
  29:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  30:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  31:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
  32:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY
  33:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * OF SUCH DAMAGE.
  34:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  *
  35:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * This file is part of the lwIP TCP/IP stack.
  36:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  *
  37:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * Author: Adam Dunkels <adam@sics.se>
  38:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  *
  39:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  */
  40:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
  41:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** #include "lwip/opt.h"
  42:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
  43:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** #if LWIP_TCP /* don't build if not configured for use in lwipopts.h */
  44:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
  45:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** #include "lwip/tcp.h"
  46:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** #include "lwip/def.h"
  47:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** #include "lwip/mem.h"
  48:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** #include "lwip/memp.h"
  49:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** #include "lwip/sys.h"
  50:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** #include "lwip/ip_addr.h"
  51:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** #include "lwip/netif.h"
  52:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** #include "lwip/inet.h"
  53:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** #include "lwip/inet_chksum.h"
  54:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** #include "lwip/stats.h"
  55:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** #include "lwip/snmp.h"
  56:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
  57:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** #include <string.h>
  58:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
  59:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** /* Forward declarations.*/
  60:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** static void tcp_output_segment(struct tcp_seg *seg, struct tcp_pcb *pcb);
  61:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
  62:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** static struct tcp_hdr *
  63:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** tcp_output_set_header(struct tcp_pcb *pcb, struct pbuf *p, int optlen,
  64:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****                       u32_t seqno_be /* already in network byte order */)
  65:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** {
  27              		.loc 1 65 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 24
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 90B5     		push	{r4, r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 12
  34              		.cfi_offset 4, -12
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 87B0     		sub	sp, sp, #28
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 40
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43 0006 F860     		str	r0, [r7, #12]
  44 0008 B960     		str	r1, [r7, #8]
  45 000a 7A60     		str	r2, [r7, #4]
  46 000c 3B60     		str	r3, [r7, #0]
  66:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   struct tcp_hdr *tcphdr = p->payload;
  47              		.loc 1 66 0
  48 000e BB68     		ldr	r3, [r7, #8]
  49 0010 5B68     		ldr	r3, [r3, #4]
  50 0012 7B61     		str	r3, [r7, #20]
  67:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   tcphdr->src = htons(pcb->local_port);
  51              		.loc 1 67 0
  52 0014 FB68     		ldr	r3, [r7, #12]
  53 0016 1B8B     		ldrh	r3, [r3, #24]
  54 0018 1846     		mov	r0, r3
  55 001a FFF7FEFF 		bl	htons
  56 001e 0346     		mov	r3, r0
  57 0020 1A46     		mov	r2, r3
  58 0022 7B69     		ldr	r3, [r7, #20]
  59 0024 1A80     		strh	r2, [r3, #0]	@ unaligned
  68:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   tcphdr->dest = htons(pcb->remote_port);
  60              		.loc 1 68 0
  61 0026 FB68     		ldr	r3, [r7, #12]
  62 0028 1B8C     		ldrh	r3, [r3, #32]
  63 002a 1846     		mov	r0, r3
  64 002c FFF7FEFF 		bl	htons
  65 0030 0346     		mov	r3, r0
  66 0032 1A46     		mov	r2, r3
  67 0034 7B69     		ldr	r3, [r7, #20]
  68 0036 5A80     		strh	r2, [r3, #2]	@ unaligned
  69:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   tcphdr->seqno = seqno_be;
  69              		.loc 1 69 0
  70 0038 7B69     		ldr	r3, [r7, #20]
  71 003a 3A68     		ldr	r2, [r7, #0]
  72 003c 5A60     		str	r2, [r3, #4]	@ unaligned
  70:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   tcphdr->ackno = htonl(pcb->rcv_nxt);
  73              		.loc 1 70 0
  74 003e FB68     		ldr	r3, [r7, #12]
  75 0040 5B6A     		ldr	r3, [r3, #36]
  76 0042 1846     		mov	r0, r3
  77 0044 FFF7FEFF 		bl	htonl
  78 0048 0246     		mov	r2, r0
  79 004a 7B69     		ldr	r3, [r7, #20]
  80 004c 9A60     		str	r2, [r3, #8]	@ unaligned
  71:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   TCPH_FLAGS_SET(tcphdr, TCP_ACK);
  81              		.loc 1 71 0
  82 004e 7B69     		ldr	r3, [r7, #20]
  83 0050 9B89     		ldrh	r3, [r3, #12]	@ unaligned
  84 0052 9CB2     		uxth	r4, r3
  85 0054 4FF6C070 		movw	r0, #65472
  86 0058 FFF7FEFF 		bl	htons
  87 005c 0346     		mov	r3, r0
  88 005e 2340     		ands	r3, r3, r4
  89 0060 9CB2     		uxth	r4, r3
  90 0062 4FF01000 		mov	r0, #16
  91 0066 FFF7FEFF 		bl	htons
  92 006a 0346     		mov	r3, r0
  93 006c 2343     		orrs	r3, r3, r4
  94 006e 9AB2     		uxth	r2, r3
  95 0070 7B69     		ldr	r3, [r7, #20]
  96 0072 9A81     		strh	r2, [r3, #12]	@ unaligned
  72:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   tcphdr->wnd = htons(pcb->rcv_ann_wnd);
  97              		.loc 1 72 0
  98 0074 FB68     		ldr	r3, [r7, #12]
  99 0076 5B8D     		ldrh	r3, [r3, #42]
 100 0078 1846     		mov	r0, r3
 101 007a FFF7FEFF 		bl	htons
 102 007e 0346     		mov	r3, r0
 103 0080 1A46     		mov	r2, r3
 104 0082 7B69     		ldr	r3, [r7, #20]
 105 0084 DA81     		strh	r2, [r3, #14]	@ unaligned
  73:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   tcphdr->urgp = 0;
 106              		.loc 1 73 0
 107 0086 7B69     		ldr	r3, [r7, #20]
 108 0088 4FF00002 		mov	r2, #0
 109 008c 9A74     		strb	r2, [r3, #18]
 110 008e 4FF00002 		mov	r2, #0
 111 0092 DA74     		strb	r2, [r3, #19]
  74:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   TCPH_HDRLEN_SET(tcphdr, (5 + optlen / 4));
 112              		.loc 1 74 0
 113 0094 7B68     		ldr	r3, [r7, #4]
 114 0096 002B     		cmp	r3, #0
 115 0098 01DA     		bge	.L2
 116 009a 03F10303 		add	r3, r3, #3
 117              	.L2:
 118 009e 4FEAA303 		asr	r3, r3, #2
 119 00a2 9BB2     		uxth	r3, r3
 120 00a4 03F10503 		add	r3, r3, #5
 121 00a8 9BB2     		uxth	r3, r3
 122 00aa 4FEA0333 		lsl	r3, r3, #12
 123 00ae 9CB2     		uxth	r4, r3
 124 00b0 7B69     		ldr	r3, [r7, #20]
 125 00b2 9B89     		ldrh	r3, [r3, #12]	@ unaligned
 126 00b4 9BB2     		uxth	r3, r3
 127 00b6 1846     		mov	r0, r3
 128 00b8 FFF7FEFF 		bl	ntohs
 129 00bc 0346     		mov	r3, r0
 130 00be 03F03F03 		and	r3, r3, #63
 131 00c2 9BB2     		uxth	r3, r3
 132 00c4 2343     		orrs	r3, r3, r4
 133 00c6 9BB2     		uxth	r3, r3
 134 00c8 1846     		mov	r0, r3
 135 00ca FFF7FEFF 		bl	htons
 136 00ce 0346     		mov	r3, r0
 137 00d0 1A46     		mov	r2, r3
 138 00d2 7B69     		ldr	r3, [r7, #20]
 139 00d4 9A81     		strh	r2, [r3, #12]	@ unaligned
  75:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   tcphdr->chksum = 0;
 140              		.loc 1 75 0
 141 00d6 7B69     		ldr	r3, [r7, #20]
 142 00d8 4FF00002 		mov	r2, #0
 143 00dc 1A74     		strb	r2, [r3, #16]
 144 00de 4FF00002 		mov	r2, #0
 145 00e2 5A74     		strb	r2, [r3, #17]
  76:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
  77:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   /* If we're sending a packet, update the announced right window edge */
  78:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   pcb->rcv_ann_right_edge = pcb->rcv_nxt + pcb->rcv_ann_wnd;
 146              		.loc 1 78 0
 147 00e4 FB68     		ldr	r3, [r7, #12]
 148 00e6 5A6A     		ldr	r2, [r3, #36]
 149 00e8 FB68     		ldr	r3, [r7, #12]
 150 00ea 5B8D     		ldrh	r3, [r3, #42]
 151 00ec D218     		adds	r2, r2, r3
 152 00ee FB68     		ldr	r3, [r7, #12]
 153 00f0 DA62     		str	r2, [r3, #44]
  79:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
  80:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   return tcphdr;
 154              		.loc 1 80 0
 155 00f2 7B69     		ldr	r3, [r7, #20]
  81:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** }
 156              		.loc 1 81 0
 157 00f4 1846     		mov	r0, r3
 158 00f6 07F11C07 		add	r7, r7, #28
 159 00fa BD46     		mov	sp, r7
 160 00fc 90BD     		pop	{r4, r7, pc}
 161              		.cfi_endproc
 162              	.LFE0:
 164 00fe 00BF     		.section	.text.tcp_send_ctrl,"ax",%progbits
 165              		.align	2
 166              		.global	tcp_send_ctrl
 167              		.thumb
 168              		.thumb_func
 170              	tcp_send_ctrl:
 171              	.LFB1:
  82:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
  83:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** /**
  84:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * Called by tcp_close() to send a segment including flags but not data.
  85:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  *
  86:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * @param pcb the tcp_pcb over which to send a segment
  87:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * @param flags the flags to set in the segment header
  88:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * @return ERR_OK if sent, another err_t otherwise
  89:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  */
  90:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** err_t
  91:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** tcp_send_ctrl(struct tcp_pcb *pcb, u8_t flags)
  92:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** {
 172              		.loc 1 92 0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 8
 175              		@ frame_needed = 1, uses_anonymous_args = 0
 176 0000 80B5     		push	{r7, lr}
 177              	.LCFI3:
 178              		.cfi_def_cfa_offset 8
 179              		.cfi_offset 7, -8
 180              		.cfi_offset 14, -4
 181 0002 84B0     		sub	sp, sp, #16
 182              	.LCFI4:
 183              		.cfi_def_cfa_offset 24
 184 0004 02AF     		add	r7, sp, #8
 185              	.LCFI5:
 186              		.cfi_def_cfa 7, 16
 187 0006 7860     		str	r0, [r7, #4]
 188 0008 0B46     		mov	r3, r1
 189 000a FB70     		strb	r3, [r7, #3]
  93:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   /* no data, no length, flags, copy=1, no optdata */
  94:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   return tcp_enqueue(pcb, NULL, 0, flags, TCP_WRITE_FLAG_COPY, 0);
 190              		.loc 1 94 0
 191 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 192 000e 4FF00102 		mov	r2, #1
 193 0012 0092     		str	r2, [sp, #0]
 194 0014 4FF00002 		mov	r2, #0
 195 0018 0192     		str	r2, [sp, #4]
 196 001a 7868     		ldr	r0, [r7, #4]
 197 001c 4FF00001 		mov	r1, #0
 198 0020 4FF00002 		mov	r2, #0
 199 0024 FFF7FEFF 		bl	tcp_enqueue
 200 0028 0346     		mov	r3, r0
  95:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** }
 201              		.loc 1 95 0
 202 002a 1846     		mov	r0, r3
 203 002c 07F10807 		add	r7, r7, #8
 204 0030 BD46     		mov	sp, r7
 205 0032 80BD     		pop	{r7, pc}
 206              		.cfi_endproc
 207              	.LFE1:
 209              		.section	.text.tcp_write,"ax",%progbits
 210              		.align	2
 211              		.global	tcp_write
 212              		.thumb
 213              		.thumb_func
 215              	tcp_write:
 216              	.LFB2:
  96:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
  97:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** /**
  98:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * Write data for sending (but does not send it immediately).
  99:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  *
 100:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * It waits in the expectation of more data being sent soon (as
 101:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * it can send them more efficiently by combining them together).
 102:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * To prompt the system to send data now, call tcp_output() after
 103:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * calling tcp_write().
 104:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * 
 105:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * @param pcb Protocol control block of the TCP connection to enqueue data for.
 106:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * @param data pointer to the data to send
 107:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * @param len length (in bytes) of the data to send
 108:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * @param apiflags combination of following flags :
 109:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * - TCP_WRITE_FLAG_COPY (0x01) data will be copied into memory belonging to the stack
 110:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * - TCP_WRITE_FLAG_MORE (0x02) for TCP connection, PSH flag will be set on last segment sent,
 111:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * @return ERR_OK if enqueued, another err_t on error
 112:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * 
 113:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * @see tcp_write()
 114:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  */
 115:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** err_t
 116:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** tcp_write(struct tcp_pcb *pcb, const void *data, u16_t len, u8_t apiflags)
 117:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** {
 217              		.loc 1 117 0
 218              		.cfi_startproc
 219              		@ args = 0, pretend = 0, frame = 16
 220              		@ frame_needed = 1, uses_anonymous_args = 0
 221 0000 80B5     		push	{r7, lr}
 222              	.LCFI6:
 223              		.cfi_def_cfa_offset 8
 224              		.cfi_offset 7, -8
 225              		.cfi_offset 14, -4
 226 0002 86B0     		sub	sp, sp, #24
 227              	.LCFI7:
 228              		.cfi_def_cfa_offset 32
 229 0004 02AF     		add	r7, sp, #8
 230              	.LCFI8:
 231              		.cfi_def_cfa 7, 24
 232 0006 F860     		str	r0, [r7, #12]
 233 0008 B960     		str	r1, [r7, #8]
 234 000a FA80     		strh	r2, [r7, #6]	@ movhi
 235 000c 7B71     		strb	r3, [r7, #5]
 118:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   LWIP_DEBUGF(TCP_OUTPUT_DEBUG, ("tcp_write(pcb=%p, data=%p, len=%"U16_F", apiflags=%"U16_F")\n", (
 119:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     data, len, (u16_t)apiflags));
 120:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   /* connection is in valid state for data transmission? */
 121:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   if (pcb->state == ESTABLISHED ||
 236              		.loc 1 121 0
 237 000e FB68     		ldr	r3, [r7, #12]
 238 0010 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 239 0012 042B     		cmp	r3, #4
 240 0014 0BD0     		beq	.L7
 122:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****      pcb->state == CLOSE_WAIT ||
 241              		.loc 1 122 0 discriminator 1
 242 0016 FB68     		ldr	r3, [r7, #12]
 243 0018 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 121:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   if (pcb->state == ESTABLISHED ||
 244              		.loc 1 121 0 discriminator 1
 245 001a 072B     		cmp	r3, #7
 246 001c 07D0     		beq	.L7
 123:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****      pcb->state == SYN_SENT ||
 247              		.loc 1 123 0
 248 001e FB68     		ldr	r3, [r7, #12]
 249 0020 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 122:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****      pcb->state == CLOSE_WAIT ||
 250              		.loc 1 122 0
 251 0022 022B     		cmp	r3, #2
 252 0024 03D0     		beq	.L7
 124:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****      pcb->state == SYN_RCVD) {
 253              		.loc 1 124 0
 254 0026 FB68     		ldr	r3, [r7, #12]
 255 0028 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 123:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****      pcb->state == SYN_SENT ||
 256              		.loc 1 123 0
 257 002a 032B     		cmp	r3, #3
 258 002c 14D1     		bne	.L8
 259              	.L7:
 125:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     if (len > 0) {
 260              		.loc 1 125 0
 261 002e FB88     		ldrh	r3, [r7, #6]
 262 0030 002B     		cmp	r3, #0
 263 0032 0ED0     		beq	.L9
 126:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** #if LWIP_TCP_TIMESTAMPS
 127:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       return tcp_enqueue(pcb, (void *)data, len, 0, apiflags, 
 128:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****                          pcb->flags & TF_TIMESTAMP ? TF_SEG_OPTS_TS : 0);
 129:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** #else
 130:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       return tcp_enqueue(pcb, (void *)data, len, 0, apiflags, 0);
 264              		.loc 1 130 0
 265 0034 FB88     		ldrh	r3, [r7, #6]
 266 0036 7A79     		ldrb	r2, [r7, #5]	@ zero_extendqisi2
 267 0038 0092     		str	r2, [sp, #0]
 268 003a 4FF00002 		mov	r2, #0
 269 003e 0192     		str	r2, [sp, #4]
 270 0040 F868     		ldr	r0, [r7, #12]
 271 0042 B968     		ldr	r1, [r7, #8]
 272 0044 1A46     		mov	r2, r3
 273 0046 4FF00003 		mov	r3, #0
 274 004a FFF7FEFF 		bl	tcp_enqueue
 275 004e 0346     		mov	r3, r0
 276 0050 04E0     		b	.L10
 277              	.L9:
 131:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** #endif
 132:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     }
 133:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     return ERR_OK;
 278              		.loc 1 133 0
 279 0052 4FF00003 		mov	r3, #0
 280 0056 01E0     		b	.L10
 281              	.L8:
 134:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   } else {
 135:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_STATE | LWIP_DBG_LEVEL_SEVERE, ("tcp_write() called in 
 136:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     return ERR_CONN;
 282              		.loc 1 136 0
 283 0058 4FF0F803 		mov	r3, #248
 284              	.L10:
 285 005c 5BB2     		sxtb	r3, r3
 137:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   }
 138:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** }
 286              		.loc 1 138 0
 287 005e 1846     		mov	r0, r3
 288 0060 07F11007 		add	r7, r7, #16
 289 0064 BD46     		mov	sp, r7
 290 0066 80BD     		pop	{r7, pc}
 291              		.cfi_endproc
 292              	.LFE2:
 294              		.section	.text.tcp_enqueue,"ax",%progbits
 295              		.align	2
 296              		.global	tcp_enqueue
 297              		.thumb
 298              		.thumb_func
 300              	tcp_enqueue:
 301              	.LFB3:
 139:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 140:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** /**
 141:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * Enqueue data and/or TCP options for transmission
 142:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  *
 143:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * Called by tcp_connect(), tcp_listen_input(), tcp_send_ctrl() and tcp_write().
 144:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  *
 145:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * @param pcb Protocol control block for the TCP connection to enqueue data for.
 146:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * @param arg Pointer to the data to be enqueued for sending.
 147:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * @param len Data length in bytes
 148:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * @param flags tcp header flags to set in the outgoing segment
 149:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * @param apiflags combination of following flags :
 150:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * - TCP_WRITE_FLAG_COPY (0x01) data will be copied into memory belonging to the stack
 151:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * - TCP_WRITE_FLAG_MORE (0x02) for TCP connection, PSH flag will be set on last segment sent,
 152:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * @param optflags options to include in segment later on (see definition of struct tcp_seg)
 153:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  */
 154:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** err_t
 155:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** tcp_enqueue(struct tcp_pcb *pcb, void *arg, u16_t len,
 156:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****             u8_t flags, u8_t apiflags, u8_t optflags)
 157:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** {
 302              		.loc 1 157 0
 303              		.cfi_startproc
 304              		@ args = 8, pretend = 0, frame = 56
 305              		@ frame_needed = 1, uses_anonymous_args = 0
 306 0000 B0B5     		push	{r4, r5, r7, lr}
 307              	.LCFI9:
 308              		.cfi_def_cfa_offset 16
 309              		.cfi_offset 4, -16
 310              		.cfi_offset 5, -12
 311              		.cfi_offset 7, -8
 312              		.cfi_offset 14, -4
 313 0002 8EB0     		sub	sp, sp, #56
 314              	.LCFI10:
 315              		.cfi_def_cfa_offset 72
 316 0004 00AF     		add	r7, sp, #0
 317              	.LCFI11:
 318              		.cfi_def_cfa_register 7
 319 0006 F860     		str	r0, [r7, #12]
 320 0008 B960     		str	r1, [r7, #8]
 321 000a FA80     		strh	r2, [r7, #6]	@ movhi
 322 000c 7B71     		strb	r3, [r7, #5]
 158:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   struct pbuf *p;
 159:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   struct tcp_seg *seg, *useg, *queue;
 160:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   u32_t seqno;
 161:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   u16_t left, seglen;
 162:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   void *ptr;
 163:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   u16_t queuelen;
 164:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   u8_t optlen;
 165:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 166:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   LWIP_DEBUGF(TCP_OUTPUT_DEBUG, 
 167:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****               ("tcp_enqueue(pcb=%p, arg=%p, len=%"U16_F", flags=%"X16_F", apiflags=%"U16_F")\n",
 168:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****                (void *)pcb, arg, len, (u16_t)flags, (u16_t)apiflags));
 169:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   LWIP_ERROR("tcp_enqueue: packet needs payload, options, or SYN/FIN (programmer violates API)",
 323              		.loc 1 169 0
 324 000e FB88     		ldrh	r3, [r7, #6]
 325 0010 002B     		cmp	r3, #0
 326 0012 0BD1     		bne	.L12
 327              		.loc 1 169 0 is_stmt 0 discriminator 1
 328 0014 97F84C30 		ldrb	r3, [r7, #76]	@ zero_extendqisi2
 329 0018 002B     		cmp	r3, #0
 330 001a 07D1     		bne	.L12
 331              		.loc 1 169 0 discriminator 2
 332 001c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 333 001e 03F00303 		and	r3, r3, #3
 334 0022 002B     		cmp	r3, #0
 335 0024 02D1     		bne	.L12
 336              		.loc 1 169 0 discriminator 5
 337 0026 4FF0F603 		mov	r3, #246
 338 002a EAE2     		b	.L13
 339              	.L12:
 170:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****              ((len != 0) || (optflags != 0) || ((flags & (TCP_SYN | TCP_FIN)) != 0)),
 171:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****              return ERR_ARG;);
 172:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   LWIP_ERROR("tcp_enqueue: len != 0 || arg == NULL (programmer violates API)", 
 340              		.loc 1 172 0 is_stmt 1
 341 002c FB88     		ldrh	r3, [r7, #6]
 342 002e 002B     		cmp	r3, #0
 343 0030 05D1     		bne	.L14
 344              		.loc 1 172 0 is_stmt 0 discriminator 1
 345 0032 BB68     		ldr	r3, [r7, #8]
 346 0034 002B     		cmp	r3, #0
 347 0036 02D0     		beq	.L14
 348              		.loc 1 172 0 discriminator 4
 349 0038 4FF0F603 		mov	r3, #246
 350 003c E1E2     		b	.L13
 351              	.L14:
 173:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****              ((len != 0) || (arg == NULL)), return ERR_ARG;);
 174:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 175:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   /* fail on too much data */
 176:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   if (len > pcb->snd_buf) {
 352              		.loc 1 176 0 is_stmt 1
 353 003e FB68     		ldr	r3, [r7, #12]
 354 0040 B3F86E30 		ldrh	r3, [r3, #110]
 355 0044 FA88     		ldrh	r2, [r7, #6]
 356 0046 9A42     		cmp	r2, r3
 357 0048 0BD9     		bls	.L15
 177:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_WARNING,
 178:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       ("tcp_enqueue: too much data (len=%"U16_F" > snd_buf=%"U16_F")\n", len, pcb->snd_buf));
 179:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     pcb->flags |= TF_NAGLEMEMERR;
 358              		.loc 1 179 0
 359 004a FB68     		ldr	r3, [r7, #12]
 360 004c 93F82230 		ldrb	r3, [r3, #34]	@ zero_extendqisi2
 361 0050 63F07F03 		orn	r3, r3, #127
 362 0054 DAB2     		uxtb	r2, r3
 363 0056 FB68     		ldr	r3, [r7, #12]
 364 0058 83F82220 		strb	r2, [r3, #34]
 180:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     return ERR_MEM;
 365              		.loc 1 180 0
 366 005c 4FF0FF03 		mov	r3, #255
 367 0060 CFE2     		b	.L13
 368              	.L15:
 181:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   }
 182:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   left = len;
 369              		.loc 1 182 0
 370 0062 FB88     		ldrh	r3, [r7, #6]	@ movhi
 371 0064 FB84     		strh	r3, [r7, #38]	@ movhi
 183:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   ptr = arg;
 372              		.loc 1 183 0
 373 0066 BB68     		ldr	r3, [r7, #8]
 374 0068 3B62     		str	r3, [r7, #32]
 184:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 185:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   optlen = LWIP_TCP_OPT_LENGTH(optflags);
 375              		.loc 1 185 0
 376 006a 97F84C30 		ldrb	r3, [r7, #76]	@ zero_extendqisi2
 377 006e 03F00103 		and	r3, r3, #1
 378 0072 002B     		cmp	r3, #0
 379 0074 02D0     		beq	.L16
 380              		.loc 1 185 0 is_stmt 0 discriminator 1
 381 0076 4FF00402 		mov	r2, #4
 382 007a 01E0     		b	.L17
 383              	.L16:
 384              		.loc 1 185 0 discriminator 2
 385 007c 4FF00002 		mov	r2, #0
 386              	.L17:
 387              		.loc 1 185 0 discriminator 3
 388 0080 97F84C30 		ldrb	r3, [r7, #76]	@ zero_extendqisi2
 389 0084 03F00203 		and	r3, r3, #2
 390 0088 002B     		cmp	r3, #0
 391 008a 02D0     		beq	.L18
 392              		.loc 1 185 0 discriminator 4
 393 008c 4FF00C03 		mov	r3, #12
 394 0090 01E0     		b	.L19
 395              	.L18:
 396              		.loc 1 185 0 discriminator 5
 397 0092 4FF00003 		mov	r3, #0
 398              	.L19:
 399              		.loc 1 185 0 discriminator 6
 400 0096 D318     		adds	r3, r2, r3
 401 0098 7B77     		strb	r3, [r7, #29]
 186:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 187:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   /* seqno will be the sequence number of the first segment enqueued
 188:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****    * by the call to this function. */
 189:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   seqno = pcb->snd_lbb;
 402              		.loc 1 189 0 is_stmt 1 discriminator 6
 403 009a FB68     		ldr	r3, [r7, #12]
 404 009c 9B6E     		ldr	r3, [r3, #104]
 405 009e BB62     		str	r3, [r7, #40]
 190:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 191:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   LWIP_DEBUGF(TCP_QLEN_DEBUG, ("tcp_enqueue: queuelen: %"U16_F"\n", (u16_t)pcb->snd_queuelen));
 192:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 193:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   /* If total number of pbufs on the unsent/unacked queues exceeds the
 194:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****    * configured maximum, return an error */
 195:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   queuelen = pcb->snd_queuelen;
 406              		.loc 1 195 0 discriminator 6
 407 00a0 FB68     		ldr	r3, [r7, #12]
 408 00a2 B3F87030 		ldrh	r3, [r3, #112]	@ movhi
 409 00a6 FB83     		strh	r3, [r7, #30]	@ movhi
 196:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   /* check for configured max queuelen and possible overflow */
 197:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   if ((queuelen >= TCP_SND_QUEUELEN) || (queuelen > TCP_SNDQUEUELEN_OVERFLOW)) {
 410              		.loc 1 197 0 discriminator 6
 411 00a8 FB8B     		ldrh	r3, [r7, #30]
 412 00aa 0B2B     		cmp	r3, #11
 413 00ac 04D8     		bhi	.L20
 414              		.loc 1 197 0 is_stmt 0 discriminator 1
 415 00ae FA8B     		ldrh	r2, [r7, #30]
 416 00b0 4FF6FC73 		movw	r3, #65532
 417 00b4 9A42     		cmp	r2, r3
 418 00b6 0BD9     		bls	.L21
 419              	.L20:
 198:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_WARNING,
 199:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       ("tcp_enqueue: too long queue %"U16_F" (max %"U16_F")\n", queuelen, TCP_SND_QUEUELEN));
 200:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     TCP_STATS_INC(tcp.memerr);
 201:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     pcb->flags |= TF_NAGLEMEMERR;
 420              		.loc 1 201 0 is_stmt 1
 421 00b8 FB68     		ldr	r3, [r7, #12]
 422 00ba 93F82230 		ldrb	r3, [r3, #34]	@ zero_extendqisi2
 423 00be 63F07F03 		orn	r3, r3, #127
 424 00c2 DAB2     		uxtb	r2, r3
 425 00c4 FB68     		ldr	r3, [r7, #12]
 426 00c6 83F82220 		strb	r2, [r3, #34]
 202:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     return ERR_MEM;
 427              		.loc 1 202 0
 428 00ca 4FF0FF03 		mov	r3, #255
 429 00ce 98E2     		b	.L13
 430              	.L21:
 203:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   }
 204:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   if (queuelen != 0) {
 431              		.loc 1 204 0
 432 00d0 FB8B     		ldrh	r3, [r7, #30]
 433 00d2 002B     		cmp	r3, #0
 434 00d4 03D0     		beq	.L22
 205:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     LWIP_ASSERT("tcp_enqueue: pbufs on queue => at least one queue non-empty",
 435              		.loc 1 205 0
 436 00d6 FB68     		ldr	r3, [r7, #12]
 437 00d8 9B6F     		ldr	r3, [r3, #120]
 438 00da 002B     		cmp	r3, #0
 439 00dc 02E0     		b	.L23
 440              	.L22:
 206:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       pcb->unacked != NULL || pcb->unsent != NULL);
 207:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   } else {
 208:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     LWIP_ASSERT("tcp_enqueue: no pbufs on queue => both queues empty",
 441              		.loc 1 208 0
 442 00de FB68     		ldr	r3, [r7, #12]
 443 00e0 9B6F     		ldr	r3, [r3, #120]
 444 00e2 002B     		cmp	r3, #0
 445              	.L23:
 209:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       pcb->unacked == NULL && pcb->unsent == NULL);
 210:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   }
 211:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 212:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   /* First, break up the data into segments and tuck them together in
 213:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****    * the local "queue" variable. */
 214:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   useg = queue = seg = NULL;
 446              		.loc 1 214 0
 447 00e4 4FF00003 		mov	r3, #0
 448 00e8 7B63     		str	r3, [r7, #52]
 449 00ea 7B6B     		ldr	r3, [r7, #52]
 450 00ec FB62     		str	r3, [r7, #44]
 451 00ee FB6A     		ldr	r3, [r7, #44]
 452 00f0 3B63     		str	r3, [r7, #48]
 215:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   seglen = 0;
 453              		.loc 1 215 0
 454 00f2 4FF00003 		mov	r3, #0
 455 00f6 BB84     		strh	r3, [r7, #36]	@ movhi
 216:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   while (queue == NULL || left > 0) {
 456              		.loc 1 216 0
 457 00f8 2AE1     		b	.L24
 458              	.L36:
 217:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     /* The segment length (including options) should be at most the MSS */
 218:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     seglen = left > (pcb->mss - optlen) ? (pcb->mss - optlen) : left;
 459              		.loc 1 218 0
 460 00fa FA8C     		ldrh	r2, [r7, #38]
 461 00fc FB68     		ldr	r3, [r7, #12]
 462 00fe 1B8F     		ldrh	r3, [r3, #56]
 463 0100 1946     		mov	r1, r3
 464 0102 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 465 0104 CB1A     		subs	r3, r1, r3
 466 0106 9A42     		cmp	r2, r3
 467 0108 B8BF     		it	lt
 468 010a 1346     		movlt	r3, r2
 469 010c BB84     		strh	r3, [r7, #36]	@ movhi
 219:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 220:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     /* Allocate memory for tcp_seg, and fill in fields. */
 221:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     seg = memp_malloc(MEMP_TCP_SEG);
 470              		.loc 1 221 0
 471 010e 40F20003 		movw	r3, #:lower16:memp_sizes
 472 0112 C0F20003 		movt	r3, #:upper16:memp_sizes
 473 0116 1B89     		ldrh	r3, [r3, #8]
 474 0118 1846     		mov	r0, r3
 475 011a FFF7FEFF 		bl	mem_malloc
 476 011e 7863     		str	r0, [r7, #52]
 222:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     if (seg == NULL) {
 477              		.loc 1 222 0
 478 0120 7B6B     		ldr	r3, [r7, #52]
 479 0122 002B     		cmp	r3, #0
 480 0124 00F04B82 		beq	.L59
 481              	.L25:
 223:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SERIOUS, 
 224:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****                   ("tcp_enqueue: could not allocate memory for tcp_seg\n"));
 225:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       goto memerr;
 226:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     }
 227:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     seg->next = NULL;
 482              		.loc 1 227 0
 483 0128 7B6B     		ldr	r3, [r7, #52]
 484 012a 4FF00002 		mov	r2, #0
 485 012e 1A60     		str	r2, [r3, #0]
 228:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     seg->p = NULL;
 486              		.loc 1 228 0
 487 0130 7B6B     		ldr	r3, [r7, #52]
 488 0132 4FF00002 		mov	r2, #0
 489 0136 5A60     		str	r2, [r3, #4]
 229:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 230:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     /* first segment of to-be-queued data? */
 231:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     if (queue == NULL) {
 490              		.loc 1 231 0
 491 0138 FB6A     		ldr	r3, [r7, #44]
 492 013a 002B     		cmp	r3, #0
 493 013c 02D1     		bne	.L27
 232:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       queue = seg;
 494              		.loc 1 232 0
 495 013e 7B6B     		ldr	r3, [r7, #52]
 496 0140 FB62     		str	r3, [r7, #44]
 497 0142 02E0     		b	.L28
 498              	.L27:
 233:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     }
 234:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     /* subsequent segments of to-be-queued data */
 235:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     else {
 236:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       /* Attach the segment to the end of the queued segments */
 237:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       LWIP_ASSERT("useg != NULL", useg != NULL);
 238:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       useg->next = seg;
 499              		.loc 1 238 0
 500 0144 3B6B     		ldr	r3, [r7, #48]
 501 0146 7A6B     		ldr	r2, [r7, #52]
 502 0148 1A60     		str	r2, [r3, #0]
 503              	.L28:
 239:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     }
 240:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     /* remember last segment of to-be-queued data for next iteration */
 241:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     useg = seg;
 504              		.loc 1 241 0
 505 014a 7B6B     		ldr	r3, [r7, #52]
 506 014c 3B63     		str	r3, [r7, #48]
 242:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 243:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     /* If copy is set, memory should be allocated
 244:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****      * and data copied into pbuf, otherwise data comes from
 245:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****      * ROM or other static memory, and need not be copied.  */
 246:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     if (apiflags & TCP_WRITE_FLAG_COPY) {
 507              		.loc 1 246 0
 508 014e 97F84830 		ldrb	r3, [r7, #72]	@ zero_extendqisi2
 509 0152 03F00103 		and	r3, r3, #1
 510 0156 002B     		cmp	r3, #0
 511 0158 31D0     		beq	.L29
 247:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       if ((seg->p = pbuf_alloc(PBUF_TRANSPORT, seglen + optlen, PBUF_RAM)) == NULL) {
 512              		.loc 1 247 0
 513 015a 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 514 015c 9AB2     		uxth	r2, r3
 515 015e BB8C     		ldrh	r3, [r7, #36]	@ movhi
 516 0160 D318     		adds	r3, r2, r3
 517 0162 9BB2     		uxth	r3, r3
 518 0164 4FF00000 		mov	r0, #0
 519 0168 1946     		mov	r1, r3
 520 016a 4FF00002 		mov	r2, #0
 521 016e FFF7FEFF 		bl	pbuf_alloc
 522 0172 0246     		mov	r2, r0
 523 0174 7B6B     		ldr	r3, [r7, #52]
 524 0176 5A60     		str	r2, [r3, #4]
 525 0178 7B6B     		ldr	r3, [r7, #52]
 526 017a 5B68     		ldr	r3, [r3, #4]
 527 017c 002B     		cmp	r3, #0
 528 017e 00F02082 		beq	.L60
 529              	.L30:
 248:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****         LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SERIOUS, 
 249:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****                     ("tcp_enqueue : could not allocate memory for pbuf copy size %"U16_F"\n", segle
 250:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****         goto memerr;
 251:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       }
 252:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       LWIP_ASSERT("check that first pbuf can hold the complete seglen",
 253:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****                   (seg->p->len >= seglen + optlen));
 254:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       queuelen += pbuf_clen(seg->p);
 530              		.loc 1 254 0
 531 0182 7B6B     		ldr	r3, [r7, #52]
 532 0184 5B68     		ldr	r3, [r3, #4]
 533 0186 1846     		mov	r0, r3
 534 0188 FFF7FEFF 		bl	pbuf_clen
 535 018c 0346     		mov	r3, r0
 536 018e 1A46     		mov	r2, r3
 537 0190 FB8B     		ldrh	r3, [r7, #30]	@ movhi
 538 0192 D318     		adds	r3, r2, r3
 539 0194 FB83     		strh	r3, [r7, #30]	@ movhi
 255:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       if (arg != NULL) {
 540              		.loc 1 255 0
 541 0196 BB68     		ldr	r3, [r7, #8]
 542 0198 002B     		cmp	r3, #0
 543 019a 0AD0     		beq	.L31
 256:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****         MEMCPY((char *)seg->p->payload + optlen, ptr, seglen);
 544              		.loc 1 256 0
 545 019c 7B6B     		ldr	r3, [r7, #52]
 546 019e 5B68     		ldr	r3, [r3, #4]
 547 01a0 5A68     		ldr	r2, [r3, #4]
 548 01a2 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 549 01a4 D218     		adds	r2, r2, r3
 550 01a6 BB8C     		ldrh	r3, [r7, #36]
 551 01a8 1046     		mov	r0, r2
 552 01aa 396A     		ldr	r1, [r7, #32]
 553 01ac 1A46     		mov	r2, r3
 554 01ae FFF7FEFF 		bl	memcpy
 555              	.L31:
 257:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       }
 258:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       seg->dataptr = seg->p->payload;
 556              		.loc 1 258 0
 557 01b2 7B6B     		ldr	r3, [r7, #52]
 558 01b4 5B68     		ldr	r3, [r3, #4]
 559 01b6 5A68     		ldr	r2, [r3, #4]
 560 01b8 7B6B     		ldr	r3, [r7, #52]
 561 01ba 9A60     		str	r2, [r3, #8]
 562 01bc 46E0     		b	.L32
 563              	.L29:
 259:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     }
 260:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     /* do not copy data */
 261:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     else {
 262:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       /* First, allocate a pbuf for the headers. */
 263:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       if ((seg->p = pbuf_alloc(PBUF_TRANSPORT, optlen, PBUF_RAM)) == NULL) {
 564              		.loc 1 263 0
 565 01be 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 566 01c0 9BB2     		uxth	r3, r3
 567 01c2 4FF00000 		mov	r0, #0
 568 01c6 1946     		mov	r1, r3
 569 01c8 4FF00002 		mov	r2, #0
 570 01cc FFF7FEFF 		bl	pbuf_alloc
 571 01d0 0246     		mov	r2, r0
 572 01d2 7B6B     		ldr	r3, [r7, #52]
 573 01d4 5A60     		str	r2, [r3, #4]
 574 01d6 7B6B     		ldr	r3, [r7, #52]
 575 01d8 5B68     		ldr	r3, [r3, #4]
 576 01da 002B     		cmp	r3, #0
 577 01dc 00F0F381 		beq	.L61
 578              	.L33:
 264:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****         LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SERIOUS, 
 265:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****                     ("tcp_enqueue: could not allocate memory for header pbuf\n"));
 266:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****         goto memerr;
 267:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       }
 268:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       queuelen += pbuf_clen(seg->p);
 579              		.loc 1 268 0
 580 01e0 7B6B     		ldr	r3, [r7, #52]
 581 01e2 5B68     		ldr	r3, [r3, #4]
 582 01e4 1846     		mov	r0, r3
 583 01e6 FFF7FEFF 		bl	pbuf_clen
 584 01ea 0346     		mov	r3, r0
 585 01ec 1A46     		mov	r2, r3
 586 01ee FB8B     		ldrh	r3, [r7, #30]	@ movhi
 587 01f0 D318     		adds	r3, r2, r3
 588 01f2 FB83     		strh	r3, [r7, #30]	@ movhi
 269:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 270:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       /* Second, allocate a pbuf for holding the data.
 271:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****        * since the referenced data is available at least until it is sent out on the
 272:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****        * link (as it has to be ACKed by the remote party) we can safely use PBUF_ROM
 273:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****        * instead of PBUF_REF here.
 274:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****        */
 275:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       if (left > 0) {
 589              		.loc 1 275 0
 590 01f4 FB8C     		ldrh	r3, [r7, #38]
 591 01f6 002B     		cmp	r3, #0
 592 01f8 28D0     		beq	.L32
 276:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****         if ((p = pbuf_alloc(PBUF_RAW, seglen, PBUF_ROM)) == NULL) {
 593              		.loc 1 276 0
 594 01fa BB8C     		ldrh	r3, [r7, #36]
 595 01fc 4FF00300 		mov	r0, #3
 596 0200 1946     		mov	r1, r3
 597 0202 4FF00102 		mov	r2, #1
 598 0206 FFF7FEFF 		bl	pbuf_alloc
 599 020a 7861     		str	r0, [r7, #20]
 600 020c 7B69     		ldr	r3, [r7, #20]
 601 020e 002B     		cmp	r3, #0
 602 0210 09D1     		bne	.L34
 277:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****           /* If allocation fails, we have to deallocate the header pbuf as well. */
 278:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****           pbuf_free(seg->p);
 603              		.loc 1 278 0
 604 0212 7B6B     		ldr	r3, [r7, #52]
 605 0214 5B68     		ldr	r3, [r3, #4]
 606 0216 1846     		mov	r0, r3
 607 0218 FFF7FEFF 		bl	pbuf_free
 279:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****           seg->p = NULL;
 608              		.loc 1 279 0
 609 021c 7B6B     		ldr	r3, [r7, #52]
 610 021e 4FF00002 		mov	r2, #0
 611 0222 5A60     		str	r2, [r3, #4]
 280:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****           LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SERIOUS, 
 281:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****                       ("tcp_enqueue: could not allocate memory for zero-copy pbuf\n"));
 282:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****           goto memerr;
 612              		.loc 1 282 0
 613 0224 D4E1     		b	.L26
 614              	.L34:
 283:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****         }
 284:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****         ++queuelen;
 615              		.loc 1 284 0
 616 0226 FB8B     		ldrh	r3, [r7, #30]	@ movhi
 617 0228 03F10103 		add	r3, r3, #1
 618 022c FB83     		strh	r3, [r7, #30]	@ movhi
 285:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****         /* reference the non-volatile payload data */
 286:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****         p->payload = ptr;
 619              		.loc 1 286 0
 620 022e 7B69     		ldr	r3, [r7, #20]
 621 0230 3A6A     		ldr	r2, [r7, #32]
 622 0232 5A60     		str	r2, [r3, #4]
 287:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****         seg->dataptr = ptr;
 623              		.loc 1 287 0
 624 0234 7B6B     		ldr	r3, [r7, #52]
 625 0236 3A6A     		ldr	r2, [r7, #32]
 626 0238 9A60     		str	r2, [r3, #8]
 288:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 289:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****         /* Concatenate the headers and data pbufs together. */
 290:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****         pbuf_cat(seg->p/*header*/, p/*data*/);
 627              		.loc 1 290 0
 628 023a 7B6B     		ldr	r3, [r7, #52]
 629 023c 5B68     		ldr	r3, [r3, #4]
 630 023e 1846     		mov	r0, r3
 631 0240 7969     		ldr	r1, [r7, #20]
 632 0242 FFF7FEFF 		bl	pbuf_cat
 291:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****         p = NULL;
 633              		.loc 1 291 0
 634 0246 4FF00003 		mov	r3, #0
 635 024a 7B61     		str	r3, [r7, #20]
 636              	.L32:
 292:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       }
 293:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     }
 294:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 295:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     /* Now that there are more segments queued, we check again if the
 296:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     length of the queue exceeds the configured maximum or overflows. */
 297:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     if ((queuelen > TCP_SND_QUEUELEN) || (queuelen > TCP_SNDQUEUELEN_OVERFLOW)) {
 637              		.loc 1 297 0
 638 024c FB8B     		ldrh	r3, [r7, #30]
 639 024e 0C2B     		cmp	r3, #12
 640 0250 00F2BE81 		bhi	.L26
 641              		.loc 1 297 0 is_stmt 0 discriminator 1
 642 0254 FA8B     		ldrh	r2, [r7, #30]
 643 0256 4FF6FC73 		movw	r3, #65532
 644 025a 9A42     		cmp	r2, r3
 645 025c 00F2B881 		bhi	.L26
 298:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SERIOUS,
 299:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****         ("tcp_enqueue: queue too long %"U16_F" (%"U16_F")\n", queuelen, TCP_SND_QUEUELEN));
 300:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       goto memerr;
 301:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     }
 302:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 303:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     seg->len = seglen;
 646              		.loc 1 303 0 is_stmt 1
 647 0260 7B6B     		ldr	r3, [r7, #52]
 648 0262 BA8C     		ldrh	r2, [r7, #36]	@ movhi
 649 0264 9A81     		strh	r2, [r3, #12]	@ movhi
 304:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 305:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     /* build TCP header */
 306:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     if (pbuf_header(seg->p, TCP_HLEN)) {
 650              		.loc 1 306 0
 651 0266 7B6B     		ldr	r3, [r7, #52]
 652 0268 5B68     		ldr	r3, [r3, #4]
 653 026a 1846     		mov	r0, r3
 654 026c 4FF01401 		mov	r1, #20
 655 0270 FFF7FEFF 		bl	pbuf_header
 656 0274 0346     		mov	r3, r0
 657 0276 002B     		cmp	r3, #0
 658 0278 40F0A781 		bne	.L62
 659              	.L35:
 307:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_LEVEL_SERIOUS, ("tcp_enqueue: no room for TCP header 
 308:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       TCP_STATS_INC(tcp.err);
 309:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       goto memerr;
 310:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     }
 311:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     seg->tcphdr = seg->p->payload;
 660              		.loc 1 311 0
 661 027c 7B6B     		ldr	r3, [r7, #52]
 662 027e 5B68     		ldr	r3, [r3, #4]
 663 0280 5A68     		ldr	r2, [r3, #4]
 664 0282 7B6B     		ldr	r3, [r7, #52]
 665 0284 1A61     		str	r2, [r3, #16]
 312:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     seg->tcphdr->src = htons(pcb->local_port);
 666              		.loc 1 312 0
 667 0286 7B6B     		ldr	r3, [r7, #52]
 668 0288 1C69     		ldr	r4, [r3, #16]
 669 028a FB68     		ldr	r3, [r7, #12]
 670 028c 1B8B     		ldrh	r3, [r3, #24]
 671 028e 1846     		mov	r0, r3
 672 0290 FFF7FEFF 		bl	htons
 673 0294 0346     		mov	r3, r0
 674 0296 2380     		strh	r3, [r4, #0]	@ unaligned
 313:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     seg->tcphdr->dest = htons(pcb->remote_port);
 675              		.loc 1 313 0
 676 0298 7B6B     		ldr	r3, [r7, #52]
 677 029a 1C69     		ldr	r4, [r3, #16]
 678 029c FB68     		ldr	r3, [r7, #12]
 679 029e 1B8C     		ldrh	r3, [r3, #32]
 680 02a0 1846     		mov	r0, r3
 681 02a2 FFF7FEFF 		bl	htons
 682 02a6 0346     		mov	r3, r0
 683 02a8 6380     		strh	r3, [r4, #2]	@ unaligned
 314:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     seg->tcphdr->seqno = htonl(seqno);
 684              		.loc 1 314 0
 685 02aa 7B6B     		ldr	r3, [r7, #52]
 686 02ac 1C69     		ldr	r4, [r3, #16]
 687 02ae B86A     		ldr	r0, [r7, #40]
 688 02b0 FFF7FEFF 		bl	htonl
 689 02b4 0346     		mov	r3, r0
 690 02b6 6360     		str	r3, [r4, #4]	@ unaligned
 315:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     seg->tcphdr->urgp = 0;
 691              		.loc 1 315 0
 692 02b8 7B6B     		ldr	r3, [r7, #52]
 693 02ba 1B69     		ldr	r3, [r3, #16]
 694 02bc 4FF00002 		mov	r2, #0
 695 02c0 9A74     		strb	r2, [r3, #18]
 696 02c2 4FF00002 		mov	r2, #0
 697 02c6 DA74     		strb	r2, [r3, #19]
 316:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     TCPH_FLAGS_SET(seg->tcphdr, flags);
 698              		.loc 1 316 0
 699 02c8 7B6B     		ldr	r3, [r7, #52]
 700 02ca 1C69     		ldr	r4, [r3, #16]
 701 02cc 7B6B     		ldr	r3, [r7, #52]
 702 02ce 1B69     		ldr	r3, [r3, #16]
 703 02d0 9B89     		ldrh	r3, [r3, #12]	@ unaligned
 704 02d2 9DB2     		uxth	r5, r3
 705 02d4 4FF6C070 		movw	r0, #65472
 706 02d8 FFF7FEFF 		bl	htons
 707 02dc 0346     		mov	r3, r0
 708 02de 2B40     		ands	r3, r3, r5
 709 02e0 9DB2     		uxth	r5, r3
 710 02e2 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 711 02e4 9BB2     		uxth	r3, r3
 712 02e6 1846     		mov	r0, r3
 713 02e8 FFF7FEFF 		bl	htons
 714 02ec 0346     		mov	r3, r0
 715 02ee 2B43     		orrs	r3, r3, r5
 716 02f0 9BB2     		uxth	r3, r3
 717 02f2 A381     		strh	r3, [r4, #12]	@ unaligned
 317:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     /* don't fill in tcphdr->ackno and tcphdr->wnd until later */
 318:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 319:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     seg->flags = optflags;
 718              		.loc 1 319 0
 719 02f4 7B6B     		ldr	r3, [r7, #52]
 720 02f6 97F84C20 		ldrb	r2, [r7, #76]
 721 02fa 9A73     		strb	r2, [r3, #14]
 320:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 321:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     /* Set the length of the header */
 322:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     TCPH_HDRLEN_SET(seg->tcphdr, (5 + optlen / 4));
 722              		.loc 1 322 0
 723 02fc 7B6B     		ldr	r3, [r7, #52]
 724 02fe 1C69     		ldr	r4, [r3, #16]
 725 0300 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 726 0302 4FEA9303 		lsr	r3, r3, #2
 727 0306 DBB2     		uxtb	r3, r3
 728 0308 03F10503 		add	r3, r3, #5
 729 030c 9BB2     		uxth	r3, r3
 730 030e 4FEA0333 		lsl	r3, r3, #12
 731 0312 9DB2     		uxth	r5, r3
 732 0314 7B6B     		ldr	r3, [r7, #52]
 733 0316 1B69     		ldr	r3, [r3, #16]
 734 0318 9B89     		ldrh	r3, [r3, #12]	@ unaligned
 735 031a 9BB2     		uxth	r3, r3
 736 031c 1846     		mov	r0, r3
 737 031e FFF7FEFF 		bl	ntohs
 738 0322 0346     		mov	r3, r0
 739 0324 03F03F03 		and	r3, r3, #63
 740 0328 9BB2     		uxth	r3, r3
 741 032a 2B43     		orrs	r3, r3, r5
 742 032c 9BB2     		uxth	r3, r3
 743 032e 1846     		mov	r0, r3
 744 0330 FFF7FEFF 		bl	htons
 745 0334 0346     		mov	r3, r0
 746 0336 A381     		strh	r3, [r4, #12]	@ unaligned
 323:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_TRACE, ("tcp_enqueue: queueing %"U32_F":%"U32_F" (0x%"X
 324:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       ntohl(seg->tcphdr->seqno),
 325:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       ntohl(seg->tcphdr->seqno) + TCP_TCPLEN(seg),
 326:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       (u16_t)flags));
 327:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 328:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     left -= seglen;
 747              		.loc 1 328 0
 748 0338 FA8C     		ldrh	r2, [r7, #38]	@ movhi
 749 033a BB8C     		ldrh	r3, [r7, #36]	@ movhi
 750 033c D31A     		subs	r3, r2, r3
 751 033e FB84     		strh	r3, [r7, #38]	@ movhi
 329:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     seqno += seglen;
 752              		.loc 1 329 0
 753 0340 BB8C     		ldrh	r3, [r7, #36]
 754 0342 BA6A     		ldr	r2, [r7, #40]
 755 0344 D318     		adds	r3, r2, r3
 756 0346 BB62     		str	r3, [r7, #40]
 330:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     ptr = (void *)((u8_t *)ptr + seglen);
 757              		.loc 1 330 0
 758 0348 BB8C     		ldrh	r3, [r7, #36]
 759 034a 3A6A     		ldr	r2, [r7, #32]
 760 034c D318     		adds	r3, r2, r3
 761 034e 3B62     		str	r3, [r7, #32]
 762              	.L24:
 216:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   while (queue == NULL || left > 0) {
 763              		.loc 1 216 0 discriminator 1
 764 0350 FB6A     		ldr	r3, [r7, #44]
 765 0352 002B     		cmp	r3, #0
 766 0354 3FF4D1AE 		beq	.L36
 216:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   while (queue == NULL || left > 0) {
 767              		.loc 1 216 0 is_stmt 0 discriminator 2
 768 0358 FB8C     		ldrh	r3, [r7, #38]
 769 035a 002B     		cmp	r3, #0
 770 035c 7FF4CDAE 		bne	.L36
 331:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   }
 332:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 333:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   /* Now that the data to be enqueued has been broken up into TCP
 334:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   segments in the queue variable, we add them to the end of the
 335:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   pcb->unsent queue. */
 336:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   if (pcb->unsent == NULL) {
 771              		.loc 1 336 0 is_stmt 1
 772 0360 FB68     		ldr	r3, [r7, #12]
 773 0362 5B6F     		ldr	r3, [r3, #116]
 774 0364 002B     		cmp	r3, #0
 775 0366 03D1     		bne	.L37
 337:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     useg = NULL;
 776              		.loc 1 337 0
 777 0368 4FF00003 		mov	r3, #0
 778 036c 3B63     		str	r3, [r7, #48]
 779 036e 0AE0     		b	.L38
 780              	.L37:
 338:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   }
 339:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   else {
 340:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     for (useg = pcb->unsent; useg->next != NULL; useg = useg->next);
 781              		.loc 1 340 0
 782 0370 FB68     		ldr	r3, [r7, #12]
 783 0372 5B6F     		ldr	r3, [r3, #116]
 784 0374 3B63     		str	r3, [r7, #48]
 785 0376 02E0     		b	.L39
 786              	.L40:
 787              		.loc 1 340 0 is_stmt 0 discriminator 2
 788 0378 3B6B     		ldr	r3, [r7, #48]
 789 037a 1B68     		ldr	r3, [r3, #0]
 790 037c 3B63     		str	r3, [r7, #48]
 791              	.L39:
 792              		.loc 1 340 0 discriminator 1
 793 037e 3B6B     		ldr	r3, [r7, #48]
 794 0380 1B68     		ldr	r3, [r3, #0]
 795 0382 002B     		cmp	r3, #0
 796 0384 F8D1     		bne	.L40
 797              	.L38:
 341:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   }
 342:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   /* { useg is last segment on the unsent queue, NULL if list is empty } */
 343:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 344:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   /* If there is room in the last pbuf on the unsent queue,
 345:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   chain the first pbuf on the queue together with that. */
 346:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   if (useg != NULL &&
 798              		.loc 1 346 0 is_stmt 1
 799 0386 3B6B     		ldr	r3, [r7, #48]
 800 0388 002B     		cmp	r3, #0
 801 038a 00F0B680 		beq	.L41
 347:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     TCP_TCPLEN(useg) != 0 &&
 802              		.loc 1 347 0 discriminator 1
 803 038e 3B6B     		ldr	r3, [r7, #48]
 804 0390 9B89     		ldrh	r3, [r3, #12]
 805 0392 1C46     		mov	r4, r3
 806 0394 3B6B     		ldr	r3, [r7, #48]
 807 0396 1B69     		ldr	r3, [r3, #16]
 808 0398 9B89     		ldrh	r3, [r3, #12]	@ unaligned
 809 039a 9BB2     		uxth	r3, r3
 810 039c 1846     		mov	r0, r3
 811 039e FFF7FEFF 		bl	ntohs
 812 03a2 0346     		mov	r3, r0
 813 03a4 03F00303 		and	r3, r3, #3
 814 03a8 002B     		cmp	r3, #0
 815 03aa 0CBF     		ite	eq
 816 03ac 0023     		moveq	r3, #0
 817 03ae 0123     		movne	r3, #1
 818 03b0 DBB2     		uxtb	r3, r3
 819 03b2 E318     		adds	r3, r4, r3
 346:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   if (useg != NULL &&
 820              		.loc 1 346 0 discriminator 1
 821 03b4 002B     		cmp	r3, #0
 822 03b6 00F0A080 		beq	.L41
 348:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     !(TCPH_FLAGS(useg->tcphdr) & (TCP_SYN | TCP_FIN)) &&
 823              		.loc 1 348 0
 824 03ba 3B6B     		ldr	r3, [r7, #48]
 825 03bc 1B69     		ldr	r3, [r3, #16]
 826 03be 9B89     		ldrh	r3, [r3, #12]	@ unaligned
 827 03c0 9BB2     		uxth	r3, r3
 828 03c2 1846     		mov	r0, r3
 829 03c4 FFF7FEFF 		bl	ntohs
 830 03c8 0346     		mov	r3, r0
 831 03ca 03F00303 		and	r3, r3, #3
 347:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     TCP_TCPLEN(useg) != 0 &&
 832              		.loc 1 347 0
 833 03ce 002B     		cmp	r3, #0
 834 03d0 40F09380 		bne	.L41
 349:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     (!(flags & (TCP_SYN | TCP_FIN)) || (flags == TCP_FIN)) &&
 835              		.loc 1 349 0
 836 03d4 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 837 03d6 03F00303 		and	r3, r3, #3
 348:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     !(TCPH_FLAGS(useg->tcphdr) & (TCP_SYN | TCP_FIN)) &&
 838              		.loc 1 348 0
 839 03da 002B     		cmp	r3, #0
 840 03dc 03D0     		beq	.L42
 841              		.loc 1 349 0
 842 03de 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 843 03e0 012B     		cmp	r3, #1
 844 03e2 40F08A80 		bne	.L41
 845              	.L42:
 350:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     /* fit within max seg size */
 351:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     (useg->len + queue->len <= pcb->mss) &&
 846              		.loc 1 351 0 discriminator 1
 847 03e6 3B6B     		ldr	r3, [r7, #48]
 848 03e8 9B89     		ldrh	r3, [r3, #12]
 849 03ea 1A46     		mov	r2, r3
 850 03ec FB6A     		ldr	r3, [r7, #44]
 851 03ee 9B89     		ldrh	r3, [r3, #12]
 852 03f0 D218     		adds	r2, r2, r3
 853 03f2 FB68     		ldr	r3, [r7, #12]
 854 03f4 1B8F     		ldrh	r3, [r3, #56]
 349:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     (!(flags & (TCP_SYN | TCP_FIN)) || (flags == TCP_FIN)) &&
 855              		.loc 1 349 0 discriminator 1
 856 03f6 9A42     		cmp	r2, r3
 857 03f8 7FDC     		bgt	.L41
 352:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     /* only concatenate segments with the same options */
 353:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     (useg->flags == queue->flags) &&
 858              		.loc 1 353 0
 859 03fa 3B6B     		ldr	r3, [r7, #48]
 860 03fc 9A7B     		ldrb	r2, [r3, #14]	@ zero_extendqisi2
 861 03fe FB6A     		ldr	r3, [r7, #44]
 862 0400 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
 351:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     (useg->len + queue->len <= pcb->mss) &&
 863              		.loc 1 351 0
 864 0402 9A42     		cmp	r2, r3
 865 0404 79D1     		bne	.L41
 354:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     /* segments are consecutive */
 355:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     (ntohl(useg->tcphdr->seqno) + useg->len == ntohl(queue->tcphdr->seqno)) ) {
 866              		.loc 1 355 0
 867 0406 3B6B     		ldr	r3, [r7, #48]
 868 0408 1B69     		ldr	r3, [r3, #16]
 869 040a 5B68     		ldr	r3, [r3, #4]	@ unaligned
 870 040c 1846     		mov	r0, r3
 871 040e FFF7FEFF 		bl	ntohl
 872 0412 0246     		mov	r2, r0
 873 0414 3B6B     		ldr	r3, [r7, #48]
 874 0416 9B89     		ldrh	r3, [r3, #12]
 875 0418 D418     		adds	r4, r2, r3
 876 041a FB6A     		ldr	r3, [r7, #44]
 877 041c 1B69     		ldr	r3, [r3, #16]
 878 041e 5B68     		ldr	r3, [r3, #4]	@ unaligned
 879 0420 1846     		mov	r0, r3
 880 0422 FFF7FEFF 		bl	ntohl
 881 0426 0346     		mov	r3, r0
 353:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     (useg->flags == queue->flags) &&
 882              		.loc 1 353 0
 883 0428 9C42     		cmp	r4, r3
 884 042a 66D1     		bne	.L41
 356:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     /* Remove TCP header from first segment of our to-be-queued list */
 357:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     if(pbuf_header(queue->p, -(TCP_HLEN + optlen))) {
 885              		.loc 1 357 0
 886 042c FB6A     		ldr	r3, [r7, #44]
 887 042e 5A68     		ldr	r2, [r3, #4]
 888 0430 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 889 0432 99B2     		uxth	r1, r3
 890 0434 4FF6EC73 		movw	r3, #65516
 891 0438 CFF6FF73 		movt	r3, 65535
 892 043c 5B1A     		subs	r3, r3, r1
 893 043e 9BB2     		uxth	r3, r3
 894 0440 9BB2     		uxth	r3, r3
 895 0442 1BB2     		sxth	r3, r3
 896 0444 1046     		mov	r0, r2
 897 0446 1946     		mov	r1, r3
 898 0448 FFF7FEFF 		bl	pbuf_header
 899 044c 0346     		mov	r3, r0
 900 044e 002B     		cmp	r3, #0
 901 0450 40F0BD80 		bne	.L63
 902              	.L43:
 358:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       /* Can we cope with this failing?  Just assert for now */
 359:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       LWIP_ASSERT("pbuf_header failed\n", 0);
 360:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       TCP_STATS_INC(tcp.err);
 361:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       goto memerr;
 362:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     }
 363:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     if (queue->p->len == 0) {
 903              		.loc 1 363 0
 904 0454 FB6A     		ldr	r3, [r7, #44]
 905 0456 5B68     		ldr	r3, [r3, #4]
 906 0458 5B89     		ldrh	r3, [r3, #10]
 907 045a 002B     		cmp	r3, #0
 908 045c 12D1     		bne	.L44
 909              	.LBB2:
 364:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       /* free the first (header-only) pbuf if it is now empty (contained only headers) */
 365:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       struct pbuf *old_q = queue->p;
 910              		.loc 1 365 0
 911 045e FB6A     		ldr	r3, [r7, #44]
 912 0460 5B68     		ldr	r3, [r3, #4]
 913 0462 BB61     		str	r3, [r7, #24]
 366:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       queue->p = queue->p->next;
 914              		.loc 1 366 0
 915 0464 FB6A     		ldr	r3, [r7, #44]
 916 0466 5B68     		ldr	r3, [r3, #4]
 917 0468 1A68     		ldr	r2, [r3, #0]
 918 046a FB6A     		ldr	r3, [r7, #44]
 919 046c 5A60     		str	r2, [r3, #4]
 367:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       old_q->next = NULL;
 920              		.loc 1 367 0
 921 046e BB69     		ldr	r3, [r7, #24]
 922 0470 4FF00002 		mov	r2, #0
 923 0474 1A60     		str	r2, [r3, #0]
 368:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       queuelen--;
 924              		.loc 1 368 0
 925 0476 FB8B     		ldrh	r3, [r7, #30]	@ movhi
 926 0478 03F1FF33 		add	r3, r3, #-1
 927 047c FB83     		strh	r3, [r7, #30]	@ movhi
 369:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       pbuf_free(old_q);
 928              		.loc 1 369 0
 929 047e B869     		ldr	r0, [r7, #24]
 930 0480 FFF7FEFF 		bl	pbuf_free
 931              	.L44:
 932              	.LBE2:
 370:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     }
 371:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     if (flags & TCP_FIN) {
 933              		.loc 1 371 0
 934 0484 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 935 0486 03F00103 		and	r3, r3, #1
 936 048a 002B     		cmp	r3, #0
 937 048c 11D0     		beq	.L45
 372:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       /* the new segment contains only FIN, no data -> put the FIN into the last segment */
 373:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       LWIP_ASSERT("FIN enqueued together with data", queue->p == NULL && queue->len == 0);
 938              		.loc 1 373 0
 939 048e FB6A     		ldr	r3, [r7, #44]
 940 0490 5B68     		ldr	r3, [r3, #4]
 941 0492 002B     		cmp	r3, #0
 374:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       TCPH_SET_FLAG(useg->tcphdr, TCP_FIN);
 942              		.loc 1 374 0
 943 0494 3B6B     		ldr	r3, [r7, #48]
 944 0496 1C69     		ldr	r4, [r3, #16]
 945 0498 3B6B     		ldr	r3, [r7, #48]
 946 049a 1B69     		ldr	r3, [r3, #16]
 947 049c 9B89     		ldrh	r3, [r3, #12]	@ unaligned
 948 049e 9DB2     		uxth	r5, r3
 949 04a0 4FF00100 		mov	r0, #1
 950 04a4 FFF7FEFF 		bl	htons
 951 04a8 0346     		mov	r3, r0
 952 04aa 2B43     		orrs	r3, r3, r5
 953 04ac 9BB2     		uxth	r3, r3
 954 04ae A381     		strh	r3, [r4, #12]	@ unaligned
 955 04b0 16E0     		b	.L47
 956              	.L45:
 375:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     } else {
 376:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       LWIP_ASSERT("zero-length pbuf", (queue->p != NULL) && (queue->p->len > 0));
 957              		.loc 1 376 0
 958 04b2 FB6A     		ldr	r3, [r7, #44]
 959 04b4 5B68     		ldr	r3, [r3, #4]
 960 04b6 002B     		cmp	r3, #0
 377:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       pbuf_cat(useg->p, queue->p);
 961              		.loc 1 377 0
 962 04b8 3B6B     		ldr	r3, [r7, #48]
 963 04ba 5A68     		ldr	r2, [r3, #4]
 964 04bc FB6A     		ldr	r3, [r7, #44]
 965 04be 5B68     		ldr	r3, [r3, #4]
 966 04c0 1046     		mov	r0, r2
 967 04c2 1946     		mov	r1, r3
 968 04c4 FFF7FEFF 		bl	pbuf_cat
 378:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       useg->len += queue->len;
 969              		.loc 1 378 0
 970 04c8 3B6B     		ldr	r3, [r7, #48]
 971 04ca 9A89     		ldrh	r2, [r3, #12]
 972 04cc FB6A     		ldr	r3, [r7, #44]
 973 04ce 9B89     		ldrh	r3, [r3, #12]
 974 04d0 D318     		adds	r3, r2, r3
 975 04d2 9AB2     		uxth	r2, r3
 976 04d4 3B6B     		ldr	r3, [r7, #48]
 977 04d6 9A81     		strh	r2, [r3, #12]	@ movhi
 379:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       useg->next = queue->next;
 978              		.loc 1 379 0
 979 04d8 FB6A     		ldr	r3, [r7, #44]
 980 04da 1A68     		ldr	r2, [r3, #0]
 981 04dc 3B6B     		ldr	r3, [r7, #48]
 982 04de 1A60     		str	r2, [r3, #0]
 983              	.L47:
 380:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     }
 381:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 382:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_OUTPUT_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_STATE, ("tcp_enqueue: chaining segment
 383:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     if (seg == queue) {
 984              		.loc 1 383 0
 985 04e0 7A6B     		ldr	r2, [r7, #52]
 986 04e2 FB6A     		ldr	r3, [r7, #44]
 987 04e4 9A42     		cmp	r2, r3
 988 04e6 04D1     		bne	.L49
 384:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       seg = useg;
 989              		.loc 1 384 0
 990 04e8 3B6B     		ldr	r3, [r7, #48]
 991 04ea 7B63     		str	r3, [r7, #52]
 385:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       seglen = useg->len;
 992              		.loc 1 385 0
 993 04ec 3B6B     		ldr	r3, [r7, #48]
 994 04ee 9B89     		ldrh	r3, [r3, #12]	@ movhi
 995 04f0 BB84     		strh	r3, [r7, #36]	@ movhi
 996              	.L49:
 386:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     }
 387:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     memp_free(MEMP_TCP_SEG, queue);
 997              		.loc 1 387 0
 998 04f2 F86A     		ldr	r0, [r7, #44]
 999 04f4 FFF7FEFF 		bl	mem_free
 1000 04f8 09E0     		b	.L50
 1001              	.L41:
 388:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   }
 389:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   else {
 390:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     /* empty list */
 391:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     if (useg == NULL) {
 1002              		.loc 1 391 0
 1003 04fa 3B6B     		ldr	r3, [r7, #48]
 1004 04fc 002B     		cmp	r3, #0
 1005 04fe 03D1     		bne	.L51
 392:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       /* initialize list with this segment */
 393:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       pcb->unsent = queue;
 1006              		.loc 1 393 0
 1007 0500 FB68     		ldr	r3, [r7, #12]
 1008 0502 FA6A     		ldr	r2, [r7, #44]
 1009 0504 5A67     		str	r2, [r3, #116]
 1010 0506 02E0     		b	.L50
 1011              	.L51:
 394:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     }
 395:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     /* enqueue segment */
 396:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     else {
 397:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       useg->next = queue;
 1012              		.loc 1 397 0
 1013 0508 3B6B     		ldr	r3, [r7, #48]
 1014 050a FA6A     		ldr	r2, [r7, #44]
 1015 050c 1A60     		str	r2, [r3, #0]
 1016              	.L50:
 398:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     }
 399:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   }
 400:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   if ((flags & TCP_SYN) || (flags & TCP_FIN)) {
 1017              		.loc 1 400 0
 1018 050e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1019 0510 03F00203 		and	r3, r3, #2
 1020 0514 002B     		cmp	r3, #0
 1021 0516 04D1     		bne	.L52
 1022              		.loc 1 400 0 is_stmt 0 discriminator 1
 1023 0518 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1024 051a 03F00103 		and	r3, r3, #1
 1025 051e 002B     		cmp	r3, #0
 1026 0520 03D0     		beq	.L53
 1027              	.L52:
 401:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     ++len;
 1028              		.loc 1 401 0 is_stmt 1
 1029 0522 FB88     		ldrh	r3, [r7, #6]	@ movhi
 1030 0524 03F10103 		add	r3, r3, #1
 1031 0528 FB80     		strh	r3, [r7, #6]	@ movhi
 1032              	.L53:
 402:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   }
 403:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   if (flags & TCP_FIN) {
 1033              		.loc 1 403 0
 1034 052a 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1035 052c 03F00103 		and	r3, r3, #1
 1036 0530 002B     		cmp	r3, #0
 1037 0532 08D0     		beq	.L54
 404:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     pcb->flags |= TF_FIN;
 1038              		.loc 1 404 0
 1039 0534 FB68     		ldr	r3, [r7, #12]
 1040 0536 93F82230 		ldrb	r3, [r3, #34]	@ zero_extendqisi2
 1041 053a 43F02003 		orr	r3, r3, #32
 1042 053e DAB2     		uxtb	r2, r3
 1043 0540 FB68     		ldr	r3, [r7, #12]
 1044 0542 83F82220 		strb	r2, [r3, #34]
 1045              	.L54:
 405:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   }
 406:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   pcb->snd_lbb += len;
 1046              		.loc 1 406 0
 1047 0546 FB68     		ldr	r3, [r7, #12]
 1048 0548 9A6E     		ldr	r2, [r3, #104]
 1049 054a FB88     		ldrh	r3, [r7, #6]
 1050 054c D218     		adds	r2, r2, r3
 1051 054e FB68     		ldr	r3, [r7, #12]
 1052 0550 9A66     		str	r2, [r3, #104]
 407:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 408:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   pcb->snd_buf -= len;
 1053              		.loc 1 408 0
 1054 0552 FB68     		ldr	r3, [r7, #12]
 1055 0554 B3F86E20 		ldrh	r2, [r3, #110]
 1056 0558 FB88     		ldrh	r3, [r7, #6]	@ movhi
 1057 055a D31A     		subs	r3, r2, r3
 1058 055c 9AB2     		uxth	r2, r3
 1059 055e FB68     		ldr	r3, [r7, #12]
 1060 0560 A3F86E20 		strh	r2, [r3, #110]	@ movhi
 409:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 410:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   /* update number of segments on the queues */
 411:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   pcb->snd_queuelen = queuelen;
 1061              		.loc 1 411 0
 1062 0564 FB68     		ldr	r3, [r7, #12]
 1063 0566 FA8B     		ldrh	r2, [r7, #30]	@ movhi
 1064 0568 A3F87020 		strh	r2, [r3, #112]	@ movhi
 412:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   LWIP_DEBUGF(TCP_QLEN_DEBUG, ("tcp_enqueue: %"S16_F" (after enqueued)\n", pcb->snd_queuelen));
 413:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   if (pcb->snd_queuelen != 0) {
 1065              		.loc 1 413 0
 1066 056c FB68     		ldr	r3, [r7, #12]
 1067 056e B3F87030 		ldrh	r3, [r3, #112]
 1068 0572 002B     		cmp	r3, #0
 1069 0574 02D0     		beq	.L55
 414:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     LWIP_ASSERT("tcp_enqueue: valid queue length",
 1070              		.loc 1 414 0
 1071 0576 FB68     		ldr	r3, [r7, #12]
 1072 0578 9B6F     		ldr	r3, [r3, #120]
 1073 057a 002B     		cmp	r3, #0
 1074              	.L55:
 415:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       pcb->unacked != NULL || pcb->unsent != NULL);
 416:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   }
 417:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 418:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   /* Set the PSH flag in the last segment that we enqueued, but only
 419:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   if the segment has data (indicated by seglen > 0). */
 420:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   if (seg != NULL && seglen > 0 && seg->tcphdr != NULL && ((apiflags & TCP_WRITE_FLAG_MORE)==0)) {
 1075              		.loc 1 420 0
 1076 057c 7B6B     		ldr	r3, [r7, #52]
 1077 057e 002B     		cmp	r3, #0
 1078 0580 1AD0     		beq	.L56
 1079              		.loc 1 420 0 is_stmt 0 discriminator 1
 1080 0582 BB8C     		ldrh	r3, [r7, #36]
 1081 0584 002B     		cmp	r3, #0
 1082 0586 17D0     		beq	.L56
 1083 0588 7B6B     		ldr	r3, [r7, #52]
 1084 058a 1B69     		ldr	r3, [r3, #16]
 1085 058c 002B     		cmp	r3, #0
 1086 058e 13D0     		beq	.L56
 1087 0590 97F84830 		ldrb	r3, [r7, #72]	@ zero_extendqisi2
 1088 0594 03F00203 		and	r3, r3, #2
 1089 0598 002B     		cmp	r3, #0
 1090 059a 0DD1     		bne	.L56
 421:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     TCPH_SET_FLAG(seg->tcphdr, TCP_PSH);
 1091              		.loc 1 421 0 is_stmt 1
 1092 059c 7B6B     		ldr	r3, [r7, #52]
 1093 059e 1C69     		ldr	r4, [r3, #16]
 1094 05a0 7B6B     		ldr	r3, [r7, #52]
 1095 05a2 1B69     		ldr	r3, [r3, #16]
 1096 05a4 9B89     		ldrh	r3, [r3, #12]	@ unaligned
 1097 05a6 9DB2     		uxth	r5, r3
 1098 05a8 4FF00800 		mov	r0, #8
 1099 05ac FFF7FEFF 		bl	htons
 1100 05b0 0346     		mov	r3, r0
 1101 05b2 2B43     		orrs	r3, r3, r5
 1102 05b4 9BB2     		uxth	r3, r3
 1103 05b6 A381     		strh	r3, [r4, #12]	@ unaligned
 1104              	.L56:
 422:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   }
 423:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 424:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   return ERR_OK;
 1105              		.loc 1 424 0
 1106 05b8 4FF00003 		mov	r3, #0
 1107 05bc 21E0     		b	.L13
 1108              	.L59:
 225:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       goto memerr;
 1109              		.loc 1 225 0
 1110 05be 00BF     		nop
 1111 05c0 06E0     		b	.L26
 1112              	.L60:
 250:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****         goto memerr;
 1113              		.loc 1 250 0
 1114 05c2 00BF     		nop
 1115 05c4 04E0     		b	.L26
 1116              	.L61:
 266:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****         goto memerr;
 1117              		.loc 1 266 0
 1118 05c6 00BF     		nop
 1119 05c8 02E0     		b	.L26
 1120              	.L62:
 309:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       goto memerr;
 1121              		.loc 1 309 0
 1122 05ca 00BF     		nop
 1123 05cc 00E0     		b	.L26
 1124              	.L63:
 361:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       goto memerr;
 1125              		.loc 1 361 0
 1126 05ce 00BF     		nop
 1127              	.L26:
 425:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** memerr:
 426:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   pcb->flags |= TF_NAGLEMEMERR;
 1128              		.loc 1 426 0
 1129 05d0 FB68     		ldr	r3, [r7, #12]
 1130 05d2 93F82230 		ldrb	r3, [r3, #34]	@ zero_extendqisi2
 1131 05d6 63F07F03 		orn	r3, r3, #127
 1132 05da DAB2     		uxtb	r2, r3
 1133 05dc FB68     		ldr	r3, [r7, #12]
 1134 05de 83F82220 		strb	r2, [r3, #34]
 427:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   TCP_STATS_INC(tcp.memerr);
 428:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 429:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   if (queue != NULL) {
 1135              		.loc 1 429 0
 1136 05e2 FB6A     		ldr	r3, [r7, #44]
 1137 05e4 002B     		cmp	r3, #0
 1138 05e6 02D0     		beq	.L57
 430:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     tcp_segs_free(queue);
 1139              		.loc 1 430 0
 1140 05e8 F86A     		ldr	r0, [r7, #44]
 1141 05ea FFF7FEFF 		bl	tcp_segs_free
 1142              	.L57:
 431:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   }
 432:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   if (pcb->snd_queuelen != 0) {
 1143              		.loc 1 432 0
 1144 05ee FB68     		ldr	r3, [r7, #12]
 1145 05f0 B3F87030 		ldrh	r3, [r3, #112]
 1146 05f4 002B     		cmp	r3, #0
 1147 05f6 02D0     		beq	.L58
 433:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     LWIP_ASSERT("tcp_enqueue: valid queue length", pcb->unacked != NULL ||
 1148              		.loc 1 433 0
 1149 05f8 FB68     		ldr	r3, [r7, #12]
 1150 05fa 9B6F     		ldr	r3, [r3, #120]
 1151 05fc 002B     		cmp	r3, #0
 1152              	.L58:
 434:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       pcb->unsent != NULL);
 435:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   }
 436:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   LWIP_DEBUGF(TCP_QLEN_DEBUG | LWIP_DBG_STATE, ("tcp_enqueue: %"S16_F" (with mem err)\n", pcb->snd_
 437:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   return ERR_MEM;
 1153              		.loc 1 437 0
 1154 05fe 4FF0FF03 		mov	r3, #255
 1155              	.L13:
 1156 0602 5BB2     		sxtb	r3, r3
 438:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** }
 1157              		.loc 1 438 0
 1158 0604 1846     		mov	r0, r3
 1159 0606 07F13807 		add	r7, r7, #56
 1160 060a BD46     		mov	sp, r7
 1161 060c B0BD     		pop	{r4, r5, r7, pc}
 1162              		.cfi_endproc
 1163              	.LFE3:
 1165 060e 00BF     		.section	.text.tcp_send_empty_ack,"ax",%progbits
 1166              		.align	2
 1167              		.global	tcp_send_empty_ack
 1168              		.thumb
 1169              		.thumb_func
 1171              	tcp_send_empty_ack:
 1172              	.LFB4:
 439:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 440:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 441:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** #if LWIP_TCP_TIMESTAMPS
 442:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** /* Build a timestamp option (12 bytes long) at the specified options pointer)
 443:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  *
 444:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * @param pcb tcp_pcb
 445:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * @param opts option pointer where to store the timestamp option
 446:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  */
 447:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** static void
 448:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** tcp_build_timestamp_option(struct tcp_pcb *pcb, u32_t *opts)
 449:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** {
 450:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   /* Pad with two NOP options to make everything nicely aligned */
 451:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   opts[0] = htonl(0x0101080A);
 452:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   opts[1] = htonl(sys_now());
 453:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   opts[2] = htonl(pcb->ts_recent);
 454:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** }
 455:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** #endif
 456:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 457:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** /** Send an ACK without data.
 458:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  *
 459:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * @param pcb Protocol control block for the TCP connection to send the ACK
 460:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  */
 461:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** err_t
 462:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** tcp_send_empty_ack(struct tcp_pcb *pcb)
 463:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** {
 1173              		.loc 1 463 0
 1174              		.cfi_startproc
 1175              		@ args = 0, pretend = 0, frame = 16
 1176              		@ frame_needed = 1, uses_anonymous_args = 0
 1177 0000 90B5     		push	{r4, r7, lr}
 1178              	.LCFI12:
 1179              		.cfi_def_cfa_offset 12
 1180              		.cfi_offset 4, -12
 1181              		.cfi_offset 7, -8
 1182              		.cfi_offset 14, -4
 1183 0002 87B0     		sub	sp, sp, #28
 1184              	.LCFI13:
 1185              		.cfi_def_cfa_offset 40
 1186 0004 02AF     		add	r7, sp, #8
 1187              	.LCFI14:
 1188              		.cfi_def_cfa 7, 32
 1189 0006 7860     		str	r0, [r7, #4]
 464:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   struct pbuf *p;
 465:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** #if (LWIP_TCP_TIMESTAMPS || CHECKSUM_GEN_TCP)
 466:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   struct tcp_hdr *tcphdr;
 467:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** #endif
 468:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   u8_t optlen = 0;
 1190              		.loc 1 468 0
 1191 0008 4FF00003 		mov	r3, #0
 1192 000c FB73     		strb	r3, [r7, #15]
 469:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 470:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** #if LWIP_TCP_TIMESTAMPS
 471:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   if (pcb->flags & TF_TIMESTAMP) {
 472:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     optlen = LWIP_TCP_OPT_LENGTH(TF_SEG_OPTS_TS);
 473:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   }
 474:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** #endif
 475:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   p = pbuf_alloc(PBUF_IP, TCP_HLEN + optlen, PBUF_RAM);
 1193              		.loc 1 475 0
 1194 000e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1195 0010 9BB2     		uxth	r3, r3
 1196 0012 03F11403 		add	r3, r3, #20
 1197 0016 9BB2     		uxth	r3, r3
 1198 0018 4FF00100 		mov	r0, #1
 1199 001c 1946     		mov	r1, r3
 1200 001e 4FF00002 		mov	r2, #0
 1201 0022 FFF7FEFF 		bl	pbuf_alloc
 1202 0026 B860     		str	r0, [r7, #8]
 476:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   if (p == NULL) {
 1203              		.loc 1 476 0
 1204 0028 BB68     		ldr	r3, [r7, #8]
 1205 002a 002B     		cmp	r3, #0
 1206 002c 02D1     		bne	.L65
 477:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_OUTPUT_DEBUG, ("tcp_output: (ACK) could not allocate pbuf\n"));
 478:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     return ERR_BUF;
 1207              		.loc 1 478 0
 1208 002e 4FF0FE03 		mov	r3, #254
 1209 0032 28E0     		b	.L66
 1210              	.L65:
 479:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   }
 480:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   LWIP_DEBUGF(TCP_OUTPUT_DEBUG, 
 481:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****               ("tcp_output: sending ACK for %"U32_F"\n", pcb->rcv_nxt));
 482:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   /* remove ACK flags from the PCB, as we send an empty ACK now */
 483:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   pcb->flags &= ~(TF_ACK_DELAY | TF_ACK_NOW);
 1211              		.loc 1 483 0
 1212 0034 7B68     		ldr	r3, [r7, #4]
 1213 0036 93F82230 		ldrb	r3, [r3, #34]	@ zero_extendqisi2
 1214 003a 23F00303 		bic	r3, r3, #3
 1215 003e DAB2     		uxtb	r2, r3
 1216 0040 7B68     		ldr	r3, [r7, #4]
 1217 0042 83F82220 		strb	r2, [r3, #34]
 484:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 485:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** #if (LWIP_TCP_TIMESTAMPS || CHECKSUM_GEN_TCP)
 486:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   tcphdr = tcp_output_set_header(pcb, p, optlen, htonl(pcb->snd_nxt));
 487:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** #else
 488:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   tcp_output_set_header(pcb, p, optlen, htonl(pcb->snd_nxt));
 1218              		.loc 1 488 0
 1219 0046 FC7B     		ldrb	r4, [r7, #15]	@ zero_extendqisi2
 1220 0048 7B68     		ldr	r3, [r7, #4]
 1221 004a 9B6D     		ldr	r3, [r3, #88]
 1222 004c 1846     		mov	r0, r3
 1223 004e FFF7FEFF 		bl	htonl
 1224 0052 0346     		mov	r3, r0
 1225 0054 7868     		ldr	r0, [r7, #4]
 1226 0056 B968     		ldr	r1, [r7, #8]
 1227 0058 2246     		mov	r2, r4
 1228 005a FFF7FEFF 		bl	tcp_output_set_header
 489:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** #endif
 490:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 491:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   /* NB. MSS option is only sent on SYNs, so ignore it here */
 492:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** #if LWIP_TCP_TIMESTAMPS
 493:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   pcb->ts_lastacksent = pcb->rcv_nxt;
 494:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 495:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   if (pcb->flags & TF_TIMESTAMP) {
 496:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     tcp_build_timestamp_option(pcb, (u32_t *)(tcphdr + 1));
 497:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   }
 498:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** #endif 
 499:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 500:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** #if CHECKSUM_GEN_TCP
 501:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   tcphdr->chksum = inet_chksum_pseudo(p, &(pcb->local_ip), &(pcb->remote_ip),
 502:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****         IP_PROTO_TCP, p->tot_len);
 503:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** #endif
 504:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** #if LWIP_NETIF_HWADDRHINT
 505:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   ip_output_hinted(p, &(pcb->local_ip), &(pcb->remote_ip), pcb->ttl, pcb->tos,
 506:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       IP_PROTO_TCP, &(pcb->addr_hint));
 507:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** #else /* LWIP_NETIF_HWADDRHINT*/
 508:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   ip_output(p, &(pcb->local_ip), &(pcb->remote_ip), pcb->ttl, pcb->tos,
 1229              		.loc 1 508 0
 1230 005e 7968     		ldr	r1, [r7, #4]
 1231 0060 7B68     		ldr	r3, [r7, #4]
 1232 0062 03F10402 		add	r2, r3, #4
 1233 0066 7B68     		ldr	r3, [r7, #4]
 1234 0068 DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 1235 006a 7868     		ldr	r0, [r7, #4]
 1236 006c 807A     		ldrb	r0, [r0, #10]	@ zero_extendqisi2
 1237 006e 0090     		str	r0, [sp, #0]
 1238 0070 4FF00600 		mov	r0, #6
 1239 0074 0190     		str	r0, [sp, #4]
 1240 0076 B868     		ldr	r0, [r7, #8]
 1241 0078 FFF7FEFF 		bl	ip_output
 509:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       IP_PROTO_TCP);
 510:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** #endif /* LWIP_NETIF_HWADDRHINT*/
 511:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   pbuf_free(p);
 1242              		.loc 1 511 0
 1243 007c B868     		ldr	r0, [r7, #8]
 1244 007e FFF7FEFF 		bl	pbuf_free
 512:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 513:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   return ERR_OK;
 1245              		.loc 1 513 0
 1246 0082 4FF00003 		mov	r3, #0
 1247              	.L66:
 1248 0086 5BB2     		sxtb	r3, r3
 514:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** }
 1249              		.loc 1 514 0
 1250 0088 1846     		mov	r0, r3
 1251 008a 07F11407 		add	r7, r7, #20
 1252 008e BD46     		mov	sp, r7
 1253 0090 90BD     		pop	{r4, r7, pc}
 1254              		.cfi_endproc
 1255              	.LFE4:
 1257 0092 00BF     		.section	.text.tcp_output,"ax",%progbits
 1258              		.align	2
 1259              		.global	tcp_output
 1260              		.thumb
 1261              		.thumb_func
 1263              	tcp_output:
 1264              	.LFB5:
 515:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 516:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** /**
 517:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * Find out what we can send and send it
 518:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  *
 519:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * @param pcb Protocol control block for the TCP connection to send data
 520:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * @return ERR_OK if data has been sent or nothing to send
 521:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  *         another err_t on error
 522:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  */
 523:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** err_t
 524:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** tcp_output(struct tcp_pcb *pcb)
 525:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** {
 1265              		.loc 1 525 0
 1266              		.cfi_startproc
 1267              		@ args = 0, pretend = 0, frame = 32
 1268              		@ frame_needed = 1, uses_anonymous_args = 0
 1269 0000 B0B5     		push	{r4, r5, r7, lr}
 1270              	.LCFI15:
 1271              		.cfi_def_cfa_offset 16
 1272              		.cfi_offset 4, -16
 1273              		.cfi_offset 5, -12
 1274              		.cfi_offset 7, -8
 1275              		.cfi_offset 14, -4
 1276 0002 88B0     		sub	sp, sp, #32
 1277              	.LCFI16:
 1278              		.cfi_def_cfa_offset 48
 1279 0004 00AF     		add	r7, sp, #0
 1280              	.LCFI17:
 1281              		.cfi_def_cfa_register 7
 1282 0006 7860     		str	r0, [r7, #4]
 526:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   struct tcp_seg *seg, *useg;
 527:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   u32_t wnd, snd_nxt;
 528:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** #if TCP_CWND_DEBUG
 529:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   s16_t i = 0;
 530:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** #endif /* TCP_CWND_DEBUG */
 531:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 532:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   /* First, check if we are invoked by the TCP input processing
 533:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****      code. If so, we do not output anything. Instead, we rely on the
 534:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****      input processing code to call us when input processing is done
 535:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****      with. */
 536:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   if (tcp_input_pcb == pcb) {
 1283              		.loc 1 536 0
 1284 0008 40F20003 		movw	r3, #:lower16:tcp_input_pcb
 1285 000c C0F20003 		movt	r3, #:upper16:tcp_input_pcb
 1286 0010 1A68     		ldr	r2, [r3, #0]
 1287 0012 7B68     		ldr	r3, [r7, #4]
 1288 0014 9A42     		cmp	r2, r3
 1289 0016 02D1     		bne	.L68
 537:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     return ERR_OK;
 1290              		.loc 1 537 0
 1291 0018 4FF00003 		mov	r3, #0
 1292 001c 61E1     		b	.L69
 1293              	.L68:
 538:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   }
 539:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 540:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   wnd = LWIP_MIN(pcb->snd_wnd, pcb->cwnd);
 1294              		.loc 1 540 0
 1295 001e 7B68     		ldr	r3, [r7, #4]
 1296 0020 B3F85220 		ldrh	r2, [r3, #82]
 1297 0024 7B68     		ldr	r3, [r7, #4]
 1298 0026 B3F85C30 		ldrh	r3, [r3, #92]
 1299 002a 9A42     		cmp	r2, r3
 1300 002c 38BF     		it	cc
 1301 002e 1346     		movcc	r3, r2
 1302 0030 9BB2     		uxth	r3, r3
 1303 0032 3B61     		str	r3, [r7, #16]
 541:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 542:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   seg = pcb->unsent;
 1304              		.loc 1 542 0
 1305 0034 7B68     		ldr	r3, [r7, #4]
 1306 0036 5B6F     		ldr	r3, [r3, #116]
 1307 0038 FB61     		str	r3, [r7, #28]
 543:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 544:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   /* If the TF_ACK_NOW flag is set and no data will be sent (either
 545:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****    * because the ->unsent queue is empty or because the window does
 546:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****    * not allow it), construct an empty ACK segment and send it.
 547:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****    *
 548:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****    * If data is to be sent, we will just piggyback the ACK (see below).
 549:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****    */
 550:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   if (pcb->flags & TF_ACK_NOW &&
 1308              		.loc 1 550 0
 1309 003a 7B68     		ldr	r3, [r7, #4]
 1310 003c 93F82230 		ldrb	r3, [r3, #34]	@ zero_extendqisi2
 1311 0040 03F00203 		and	r3, r3, #2
 1312 0044 002B     		cmp	r3, #0
 1313 0046 17D0     		beq	.L70
 1314              		.loc 1 550 0 is_stmt 0 discriminator 1
 1315 0048 FB69     		ldr	r3, [r7, #28]
 1316 004a 002B     		cmp	r3, #0
 1317 004c 0FD0     		beq	.L71
 551:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****      (seg == NULL ||
 552:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       ntohl(seg->tcphdr->seqno) - pcb->lastack + seg->len > wnd)) {
 1318              		.loc 1 552 0 is_stmt 1
 1319 004e FB69     		ldr	r3, [r7, #28]
 1320 0050 1B69     		ldr	r3, [r3, #16]
 1321 0052 5B68     		ldr	r3, [r3, #4]	@ unaligned
 1322 0054 1846     		mov	r0, r3
 1323 0056 FFF7FEFF 		bl	ntohl
 1324 005a 0246     		mov	r2, r0
 1325 005c 7B68     		ldr	r3, [r7, #4]
 1326 005e DB6C     		ldr	r3, [r3, #76]
 1327 0060 D21A     		subs	r2, r2, r3
 1328 0062 FB69     		ldr	r3, [r7, #28]
 1329 0064 9B89     		ldrh	r3, [r3, #12]
 1330 0066 D218     		adds	r2, r2, r3
 551:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****      (seg == NULL ||
 1331              		.loc 1 551 0
 1332 0068 3B69     		ldr	r3, [r7, #16]
 1333 006a 9A42     		cmp	r2, r3
 1334 006c 04D9     		bls	.L70
 1335              	.L71:
 553:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****      return tcp_send_empty_ack(pcb);
 1336              		.loc 1 553 0
 1337 006e 7868     		ldr	r0, [r7, #4]
 1338 0070 FFF7FEFF 		bl	tcp_send_empty_ack
 1339 0074 0346     		mov	r3, r0
 1340 0076 34E1     		b	.L69
 1341              	.L70:
 554:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   }
 555:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 556:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   /* useg should point to last segment on unacked queue */
 557:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   useg = pcb->unacked;
 1342              		.loc 1 557 0
 1343 0078 7B68     		ldr	r3, [r7, #4]
 1344 007a 9B6F     		ldr	r3, [r3, #120]
 1345 007c BB61     		str	r3, [r7, #24]
 558:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   if (useg != NULL) {
 1346              		.loc 1 558 0
 1347 007e BB69     		ldr	r3, [r7, #24]
 1348 0080 002B     		cmp	r3, #0
 1349 0082 00F0E980 		beq	.L75
 559:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     for (; useg->next != NULL; useg = useg->next);
 1350              		.loc 1 559 0
 1351 0086 02E0     		b	.L73
 1352              	.L74:
 1353              		.loc 1 559 0 is_stmt 0 discriminator 2
 1354 0088 BB69     		ldr	r3, [r7, #24]
 1355 008a 1B68     		ldr	r3, [r3, #0]
 1356 008c BB61     		str	r3, [r7, #24]
 1357              	.L73:
 1358              		.loc 1 559 0 discriminator 1
 1359 008e BB69     		ldr	r3, [r7, #24]
 1360 0090 1B68     		ldr	r3, [r3, #0]
 1361 0092 002B     		cmp	r3, #0
 1362 0094 F8D1     		bne	.L74
 560:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   }
 561:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 562:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** #if TCP_OUTPUT_DEBUG
 563:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   if (seg == NULL) {
 564:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_OUTPUT_DEBUG, ("tcp_output: nothing to send (%p)\n",
 565:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****                                    (void*)pcb->unsent));
 566:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   }
 567:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** #endif /* TCP_OUTPUT_DEBUG */
 568:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** #if TCP_CWND_DEBUG
 569:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   if (seg == NULL) {
 570:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_CWND_DEBUG, ("tcp_output: snd_wnd %"U16_F
 571:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****                                  ", cwnd %"U16_F", wnd %"U32_F
 572:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****                                  ", seg == NULL, ack %"U32_F"\n",
 573:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****                                  pcb->snd_wnd, pcb->cwnd, wnd, pcb->lastack));
 574:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   } else {
 575:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_CWND_DEBUG, 
 576:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****                 ("tcp_output: snd_wnd %"U16_F", cwnd %"U16_F", wnd %"U32_F
 577:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****                  ", effwnd %"U32_F", seq %"U32_F", ack %"U32_F"\n",
 578:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****                  pcb->snd_wnd, pcb->cwnd, wnd,
 579:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****                  ntohl(seg->tcphdr->seqno) - pcb->lastack + seg->len,
 580:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****                  ntohl(seg->tcphdr->seqno), pcb->lastack));
 581:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   }
 582:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** #endif /* TCP_CWND_DEBUG */
 583:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   /* data available and window allows it to be sent? */
 584:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   while (seg != NULL &&
 1363              		.loc 1 584 0 is_stmt 1
 1364 0096 DFE0     		b	.L75
 1365              	.L90:
 585:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****          ntohl(seg->tcphdr->seqno) - pcb->lastack + seg->len <= wnd) {
 586:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     LWIP_ASSERT("RST not expected here!", 
 1366              		.loc 1 586 0
 1367 0098 FB69     		ldr	r3, [r7, #28]
 1368 009a 1B69     		ldr	r3, [r3, #16]
 1369 009c 9B89     		ldrh	r3, [r3, #12]	@ unaligned
 1370 009e 9BB2     		uxth	r3, r3
 1371 00a0 1846     		mov	r0, r3
 1372 00a2 FFF7FEFF 		bl	ntohs
 587:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****                 (TCPH_FLAGS(seg->tcphdr) & TCP_RST) == 0);
 588:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     /* Stop sending if the nagle algorithm would prevent it
 589:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****      * Don't stop:
 590:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****      * - if tcp_enqueue had a memory error before (prevent delayed ACK timeout) or
 591:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****      * - if FIN was already enqueued for this PCB (SYN is always alone in a segment -
 592:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****      *   either seg->next != NULL or pcb->unacked == NULL;
 593:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****      *   RST is no sent using tcp_enqueue/tcp_output.
 594:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****      */
 595:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     if((tcp_do_output_nagle(pcb) == 0) &&
 1373              		.loc 1 595 0
 1374 00a6 7B68     		ldr	r3, [r7, #4]
 1375 00a8 9B6F     		ldr	r3, [r3, #120]
 1376 00aa 002B     		cmp	r3, #0
 1377 00ac 16D0     		beq	.L76
 1378              		.loc 1 595 0 is_stmt 0 discriminator 2
 1379 00ae 7B68     		ldr	r3, [r7, #4]
 1380 00b0 93F82230 		ldrb	r3, [r3, #34]	@ zero_extendqisi2
 1381 00b4 03F04403 		and	r3, r3, #68
 1382 00b8 002B     		cmp	r3, #0
 1383 00ba 0FD1     		bne	.L76
 1384              		.loc 1 595 0 discriminator 3
 1385 00bc 7B68     		ldr	r3, [r7, #4]
 1386 00be 5B6F     		ldr	r3, [r3, #116]
 1387 00c0 002B     		cmp	r3, #0
 1388 00c2 0ED0     		beq	.L77
 1389              		.loc 1 595 0 discriminator 4
 1390 00c4 7B68     		ldr	r3, [r7, #4]
 1391 00c6 5B6F     		ldr	r3, [r3, #116]
 1392 00c8 1B68     		ldr	r3, [r3, #0]
 1393 00ca 002B     		cmp	r3, #0
 1394 00cc 06D1     		bne	.L76
 1395              		.loc 1 595 0 discriminator 6
 1396 00ce 7B68     		ldr	r3, [r7, #4]
 1397 00d0 5B6F     		ldr	r3, [r3, #116]
 1398 00d2 9A89     		ldrh	r2, [r3, #12]
 1399 00d4 7B68     		ldr	r3, [r7, #4]
 1400 00d6 1B8F     		ldrh	r3, [r3, #56]
 1401 00d8 9A42     		cmp	r2, r3
 1402 00da 02D3     		bcc	.L77
 1403              	.L76:
 1404              		.loc 1 595 0 discriminator 1
 1405 00dc 4FF00103 		mov	r3, #1
 1406 00e0 01E0     		b	.L78
 1407              	.L77:
 1408              		.loc 1 595 0 discriminator 5
 1409 00e2 4FF00003 		mov	r3, #0
 1410              	.L78:
 1411              		.loc 1 595 0 discriminator 7
 1412 00e6 002B     		cmp	r3, #0
 1413 00e8 07D1     		bne	.L79
 596:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       ((pcb->flags & (TF_NAGLEMEMERR | TF_FIN)) == 0)){
 1414              		.loc 1 596 0 is_stmt 1 discriminator 1
 1415 00ea 7B68     		ldr	r3, [r7, #4]
 1416 00ec 93F82230 		ldrb	r3, [r3, #34]	@ zero_extendqisi2
 1417 00f0 03F0A003 		and	r3, r3, #160
 595:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     if((tcp_do_output_nagle(pcb) == 0) &&
 1418              		.loc 1 595 0 discriminator 1
 1419 00f4 002B     		cmp	r3, #0
 1420 00f6 00F0C480 		beq	.L92
 1421              	.L79:
 597:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       break;
 598:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     }
 599:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** #if TCP_CWND_DEBUG
 600:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_CWND_DEBUG, ("tcp_output: snd_wnd %"U16_F", cwnd %"U16_F", wnd %"U32_F", effwnd
 601:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****                             pcb->snd_wnd, pcb->cwnd, wnd,
 602:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****                             ntohl(seg->tcphdr->seqno) + seg->len -
 603:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****                             pcb->lastack,
 604:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****                             ntohl(seg->tcphdr->seqno), pcb->lastack, i));
 605:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     ++i;
 606:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** #endif /* TCP_CWND_DEBUG */
 607:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 608:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     pcb->unsent = seg->next;
 1422              		.loc 1 608 0
 1423 00fa FB69     		ldr	r3, [r7, #28]
 1424 00fc 1A68     		ldr	r2, [r3, #0]
 1425 00fe 7B68     		ldr	r3, [r7, #4]
 1426 0100 5A67     		str	r2, [r3, #116]
 609:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 610:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     if (pcb->state != SYN_SENT) {
 1427              		.loc 1 610 0
 1428 0102 7B68     		ldr	r3, [r7, #4]
 1429 0104 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 1430 0106 022B     		cmp	r3, #2
 1431 0108 16D0     		beq	.L81
 611:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       TCPH_SET_FLAG(seg->tcphdr, TCP_ACK);
 1432              		.loc 1 611 0
 1433 010a FB69     		ldr	r3, [r7, #28]
 1434 010c 1C69     		ldr	r4, [r3, #16]
 1435 010e FB69     		ldr	r3, [r7, #28]
 1436 0110 1B69     		ldr	r3, [r3, #16]
 1437 0112 9B89     		ldrh	r3, [r3, #12]	@ unaligned
 1438 0114 9DB2     		uxth	r5, r3
 1439 0116 4FF01000 		mov	r0, #16
 1440 011a FFF7FEFF 		bl	htons
 1441 011e 0346     		mov	r3, r0
 1442 0120 2B43     		orrs	r3, r3, r5
 1443 0122 9BB2     		uxth	r3, r3
 1444 0124 A381     		strh	r3, [r4, #12]	@ unaligned
 612:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       pcb->flags &= ~(TF_ACK_DELAY | TF_ACK_NOW);
 1445              		.loc 1 612 0
 1446 0126 7B68     		ldr	r3, [r7, #4]
 1447 0128 93F82230 		ldrb	r3, [r3, #34]	@ zero_extendqisi2
 1448 012c 23F00303 		bic	r3, r3, #3
 1449 0130 DAB2     		uxtb	r2, r3
 1450 0132 7B68     		ldr	r3, [r7, #4]
 1451 0134 83F82220 		strb	r2, [r3, #34]
 1452              	.L81:
 613:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     }
 614:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 615:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     tcp_output_segment(seg, pcb);
 1453              		.loc 1 615 0
 1454 0138 F869     		ldr	r0, [r7, #28]
 1455 013a 7968     		ldr	r1, [r7, #4]
 1456 013c FFF7FEFF 		bl	tcp_output_segment
 616:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     snd_nxt = ntohl(seg->tcphdr->seqno) + TCP_TCPLEN(seg);
 1457              		.loc 1 616 0
 1458 0140 FB69     		ldr	r3, [r7, #28]
 1459 0142 1B69     		ldr	r3, [r3, #16]
 1460 0144 5B68     		ldr	r3, [r3, #4]	@ unaligned
 1461 0146 1846     		mov	r0, r3
 1462 0148 FFF7FEFF 		bl	ntohl
 1463 014c 0446     		mov	r4, r0
 1464 014e FB69     		ldr	r3, [r7, #28]
 1465 0150 9B89     		ldrh	r3, [r3, #12]
 1466 0152 1D46     		mov	r5, r3
 1467 0154 FB69     		ldr	r3, [r7, #28]
 1468 0156 1B69     		ldr	r3, [r3, #16]
 1469 0158 9B89     		ldrh	r3, [r3, #12]	@ unaligned
 1470 015a 9BB2     		uxth	r3, r3
 1471 015c 1846     		mov	r0, r3
 1472 015e FFF7FEFF 		bl	ntohs
 1473 0162 0346     		mov	r3, r0
 1474 0164 03F00303 		and	r3, r3, #3
 1475 0168 002B     		cmp	r3, #0
 1476 016a 0CBF     		ite	eq
 1477 016c 0023     		moveq	r3, #0
 1478 016e 0123     		movne	r3, #1
 1479 0170 DBB2     		uxtb	r3, r3
 1480 0172 EB18     		adds	r3, r5, r3
 1481 0174 E318     		adds	r3, r4, r3
 1482 0176 FB60     		str	r3, [r7, #12]
 617:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     if (TCP_SEQ_LT(pcb->snd_nxt, snd_nxt)) {
 1483              		.loc 1 617 0
 1484 0178 7B68     		ldr	r3, [r7, #4]
 1485 017a 9A6D     		ldr	r2, [r3, #88]
 1486 017c FB68     		ldr	r3, [r7, #12]
 1487 017e D31A     		subs	r3, r2, r3
 1488 0180 002B     		cmp	r3, #0
 1489 0182 02DA     		bge	.L82
 618:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       pcb->snd_nxt = snd_nxt;
 1490              		.loc 1 618 0
 1491 0184 7B68     		ldr	r3, [r7, #4]
 1492 0186 FA68     		ldr	r2, [r7, #12]
 1493 0188 9A65     		str	r2, [r3, #88]
 1494              	.L82:
 619:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     }
 620:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     /* put segment on unacknowledged list if length > 0 */
 621:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     if (TCP_TCPLEN(seg) > 0) {
 1495              		.loc 1 621 0
 1496 018a FB69     		ldr	r3, [r7, #28]
 1497 018c 9B89     		ldrh	r3, [r3, #12]
 1498 018e 1C46     		mov	r4, r3
 1499 0190 FB69     		ldr	r3, [r7, #28]
 1500 0192 1B69     		ldr	r3, [r3, #16]
 1501 0194 9B89     		ldrh	r3, [r3, #12]	@ unaligned
 1502 0196 9BB2     		uxth	r3, r3
 1503 0198 1846     		mov	r0, r3
 1504 019a FFF7FEFF 		bl	ntohs
 1505 019e 0346     		mov	r3, r0
 1506 01a0 03F00303 		and	r3, r3, #3
 1507 01a4 002B     		cmp	r3, #0
 1508 01a6 0CBF     		ite	eq
 1509 01a8 0023     		moveq	r3, #0
 1510 01aa 0123     		movne	r3, #1
 1511 01ac DBB2     		uxtb	r3, r3
 1512 01ae E318     		adds	r3, r4, r3
 1513 01b0 002B     		cmp	r3, #0
 1514 01b2 4BDD     		ble	.L83
 622:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       seg->next = NULL;
 1515              		.loc 1 622 0
 1516 01b4 FB69     		ldr	r3, [r7, #28]
 1517 01b6 4FF00002 		mov	r2, #0
 1518 01ba 1A60     		str	r2, [r3, #0]
 623:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       /* unacked list is empty? */
 624:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       if (pcb->unacked == NULL) {
 1519              		.loc 1 624 0
 1520 01bc 7B68     		ldr	r3, [r7, #4]
 1521 01be 9B6F     		ldr	r3, [r3, #120]
 1522 01c0 002B     		cmp	r3, #0
 1523 01c2 05D1     		bne	.L84
 625:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****         pcb->unacked = seg;
 1524              		.loc 1 625 0
 1525 01c4 7B68     		ldr	r3, [r7, #4]
 1526 01c6 FA69     		ldr	r2, [r7, #28]
 1527 01c8 9A67     		str	r2, [r3, #120]
 626:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****         useg = seg;
 1528              		.loc 1 626 0
 1529 01ca FB69     		ldr	r3, [r7, #28]
 1530 01cc BB61     		str	r3, [r7, #24]
 1531 01ce 40E0     		b	.L85
 1532              	.L84:
 627:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       /* unacked list is not empty? */
 628:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       } else {
 629:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****         /* In the case of fast retransmit, the packet should not go to the tail
 630:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****          * of the unacked queue, but rather somewhere before it. We need to check for
 631:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****          * this case. -STJ Jul 27, 2004 */
 632:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****         if (TCP_SEQ_LT(ntohl(seg->tcphdr->seqno), ntohl(useg->tcphdr->seqno))){
 1533              		.loc 1 632 0
 1534 01d0 FB69     		ldr	r3, [r7, #28]
 1535 01d2 1B69     		ldr	r3, [r3, #16]
 1536 01d4 5B68     		ldr	r3, [r3, #4]	@ unaligned
 1537 01d6 1846     		mov	r0, r3
 1538 01d8 FFF7FEFF 		bl	ntohl
 1539 01dc 0446     		mov	r4, r0
 1540 01de BB69     		ldr	r3, [r7, #24]
 1541 01e0 1B69     		ldr	r3, [r3, #16]
 1542 01e2 5B68     		ldr	r3, [r3, #4]	@ unaligned
 1543 01e4 1846     		mov	r0, r3
 1544 01e6 FFF7FEFF 		bl	ntohl
 1545 01ea 0346     		mov	r3, r0
 1546 01ec E31A     		subs	r3, r4, r3
 1547 01ee 002B     		cmp	r3, #0
 1548 01f0 25DA     		bge	.L86
 1549              	.LBB3:
 633:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****           /* add segment to before tail of unacked list, keeping the list sorted */
 634:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****           struct tcp_seg **cur_seg = &(pcb->unacked);
 1550              		.loc 1 634 0
 1551 01f2 7B68     		ldr	r3, [r7, #4]
 1552 01f4 03F17803 		add	r3, r3, #120
 1553 01f8 7B61     		str	r3, [r7, #20]
 635:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****           while (*cur_seg &&
 1554              		.loc 1 635 0
 1555 01fa 02E0     		b	.L87
 1556              	.L89:
 636:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****             TCP_SEQ_LT(ntohl((*cur_seg)->tcphdr->seqno), ntohl(seg->tcphdr->seqno))) {
 637:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****               cur_seg = &((*cur_seg)->next );
 1557              		.loc 1 637 0
 1558 01fc 7B69     		ldr	r3, [r7, #20]
 1559 01fe 1B68     		ldr	r3, [r3, #0]
 1560 0200 7B61     		str	r3, [r7, #20]
 1561              	.L87:
 635:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****           while (*cur_seg &&
 1562              		.loc 1 635 0 discriminator 1
 1563 0202 7B69     		ldr	r3, [r7, #20]
 1564 0204 1B68     		ldr	r3, [r3, #0]
 1565 0206 002B     		cmp	r3, #0
 1566 0208 11D0     		beq	.L88
 636:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****             TCP_SEQ_LT(ntohl((*cur_seg)->tcphdr->seqno), ntohl(seg->tcphdr->seqno))) {
 1567              		.loc 1 636 0 discriminator 2
 1568 020a 7B69     		ldr	r3, [r7, #20]
 1569 020c 1B68     		ldr	r3, [r3, #0]
 1570 020e 1B69     		ldr	r3, [r3, #16]
 1571 0210 5B68     		ldr	r3, [r3, #4]	@ unaligned
 1572 0212 1846     		mov	r0, r3
 1573 0214 FFF7FEFF 		bl	ntohl
 1574 0218 0446     		mov	r4, r0
 1575 021a FB69     		ldr	r3, [r7, #28]
 1576 021c 1B69     		ldr	r3, [r3, #16]
 1577 021e 5B68     		ldr	r3, [r3, #4]	@ unaligned
 1578 0220 1846     		mov	r0, r3
 1579 0222 FFF7FEFF 		bl	ntohl
 1580 0226 0346     		mov	r3, r0
 1581 0228 E31A     		subs	r3, r4, r3
 635:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****           while (*cur_seg &&
 1582              		.loc 1 635 0 discriminator 2
 1583 022a 002B     		cmp	r3, #0
 1584 022c E6DB     		blt	.L89
 1585              	.L88:
 638:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****           }
 639:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****           seg->next = (*cur_seg);
 1586              		.loc 1 639 0
 1587 022e 7B69     		ldr	r3, [r7, #20]
 1588 0230 1A68     		ldr	r2, [r3, #0]
 1589 0232 FB69     		ldr	r3, [r7, #28]
 1590 0234 1A60     		str	r2, [r3, #0]
 640:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****           (*cur_seg) = seg;
 1591              		.loc 1 640 0
 1592 0236 7B69     		ldr	r3, [r7, #20]
 1593 0238 FA69     		ldr	r2, [r7, #28]
 1594 023a 1A60     		str	r2, [r3, #0]
 1595 023c 09E0     		b	.L85
 1596              	.L86:
 1597              	.LBE3:
 641:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****         } else {
 642:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****           /* add segment to tail of unacked list */
 643:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****           useg->next = seg;
 1598              		.loc 1 643 0
 1599 023e BB69     		ldr	r3, [r7, #24]
 1600 0240 FA69     		ldr	r2, [r7, #28]
 1601 0242 1A60     		str	r2, [r3, #0]
 644:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****           useg = useg->next;
 1602              		.loc 1 644 0
 1603 0244 BB69     		ldr	r3, [r7, #24]
 1604 0246 1B68     		ldr	r3, [r3, #0]
 1605 0248 BB61     		str	r3, [r7, #24]
 1606 024a 02E0     		b	.L85
 1607              	.L83:
 645:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****         }
 646:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       }
 647:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     /* do not queue empty segments on the unacked list */
 648:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     } else {
 649:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       tcp_seg_free(seg);
 1608              		.loc 1 649 0
 1609 024c F869     		ldr	r0, [r7, #28]
 1610 024e FFF7FEFF 		bl	tcp_seg_free
 1611              	.L85:
 650:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     }
 651:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     seg = pcb->unsent;
 1612              		.loc 1 651 0
 1613 0252 7B68     		ldr	r3, [r7, #4]
 1614 0254 5B6F     		ldr	r3, [r3, #116]
 1615 0256 FB61     		str	r3, [r7, #28]
 1616              	.L75:
 584:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   while (seg != NULL &&
 1617              		.loc 1 584 0 discriminator 1
 1618 0258 FB69     		ldr	r3, [r7, #28]
 1619 025a 002B     		cmp	r3, #0
 1620 025c 12D0     		beq	.L80
 585:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****          ntohl(seg->tcphdr->seqno) - pcb->lastack + seg->len <= wnd) {
 1621              		.loc 1 585 0 discriminator 2
 1622 025e FB69     		ldr	r3, [r7, #28]
 1623 0260 1B69     		ldr	r3, [r3, #16]
 1624 0262 5B68     		ldr	r3, [r3, #4]	@ unaligned
 1625 0264 1846     		mov	r0, r3
 1626 0266 FFF7FEFF 		bl	ntohl
 1627 026a 0246     		mov	r2, r0
 1628 026c 7B68     		ldr	r3, [r7, #4]
 1629 026e DB6C     		ldr	r3, [r3, #76]
 1630 0270 D21A     		subs	r2, r2, r3
 1631 0272 FB69     		ldr	r3, [r7, #28]
 1632 0274 9B89     		ldrh	r3, [r3, #12]
 1633 0276 D218     		adds	r2, r2, r3
 584:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   while (seg != NULL &&
 1634              		.loc 1 584 0 discriminator 2
 1635 0278 3B69     		ldr	r3, [r7, #16]
 1636 027a 9A42     		cmp	r2, r3
 1637 027c 7FF60CAF 		bls	.L90
 1638 0280 00E0     		b	.L80
 1639              	.L92:
 597:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       break;
 1640              		.loc 1 597 0
 1641 0282 00BF     		nop
 1642              	.L80:
 652:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   }
 653:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 654:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   if (seg != NULL && pcb->persist_backoff == 0 && 
 1643              		.loc 1 654 0
 1644 0284 FB69     		ldr	r3, [r7, #28]
 1645 0286 002B     		cmp	r3, #0
 1646 0288 20D0     		beq	.L91
 1647              		.loc 1 654 0 is_stmt 0 discriminator 1
 1648 028a 7B68     		ldr	r3, [r7, #4]
 1649 028c 93F89C30 		ldrb	r3, [r3, #156]	@ zero_extendqisi2
 1650 0290 002B     		cmp	r3, #0
 1651 0292 1BD1     		bne	.L91
 655:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       ntohl(seg->tcphdr->seqno) - pcb->lastack + seg->len > pcb->snd_wnd) {
 1652              		.loc 1 655 0 is_stmt 1 discriminator 1
 1653 0294 FB69     		ldr	r3, [r7, #28]
 1654 0296 1B69     		ldr	r3, [r3, #16]
 1655 0298 5B68     		ldr	r3, [r3, #4]	@ unaligned
 1656 029a 1846     		mov	r0, r3
 1657 029c FFF7FEFF 		bl	ntohl
 1658 02a0 0246     		mov	r2, r0
 1659 02a2 7B68     		ldr	r3, [r7, #4]
 1660 02a4 DB6C     		ldr	r3, [r3, #76]
 1661 02a6 D21A     		subs	r2, r2, r3
 1662 02a8 FB69     		ldr	r3, [r7, #28]
 1663 02aa 9B89     		ldrh	r3, [r3, #12]
 1664 02ac D218     		adds	r2, r2, r3
 1665 02ae 7B68     		ldr	r3, [r7, #4]
 1666 02b0 B3F85C30 		ldrh	r3, [r3, #92]
 654:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   if (seg != NULL && pcb->persist_backoff == 0 && 
 1667              		.loc 1 654 0 discriminator 1
 1668 02b4 9A42     		cmp	r2, r3
 1669 02b6 09D9     		bls	.L91
 656:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     /* prepare for persist timer */
 657:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     pcb->persist_cnt = 0;
 1670              		.loc 1 657 0
 1671 02b8 7B68     		ldr	r3, [r7, #4]
 1672 02ba 4FF00002 		mov	r2, #0
 1673 02be C3F89820 		str	r2, [r3, #152]
 658:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     pcb->persist_backoff = 1;
 1674              		.loc 1 658 0
 1675 02c2 7B68     		ldr	r3, [r7, #4]
 1676 02c4 4FF00102 		mov	r2, #1
 1677 02c8 83F89C20 		strb	r2, [r3, #156]
 1678              	.L91:
 659:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   }
 660:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 661:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   pcb->flags &= ~TF_NAGLEMEMERR;
 1679              		.loc 1 661 0
 1680 02cc 7B68     		ldr	r3, [r7, #4]
 1681 02ce 93F82230 		ldrb	r3, [r3, #34]	@ zero_extendqisi2
 1682 02d2 03F07F03 		and	r3, r3, #127
 1683 02d6 DAB2     		uxtb	r2, r3
 1684 02d8 7B68     		ldr	r3, [r7, #4]
 1685 02da 83F82220 		strb	r2, [r3, #34]
 662:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   return ERR_OK;
 1686              		.loc 1 662 0
 1687 02de 4FF00003 		mov	r3, #0
 1688              	.L69:
 1689 02e2 5BB2     		sxtb	r3, r3
 663:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** }
 1690              		.loc 1 663 0
 1691 02e4 1846     		mov	r0, r3
 1692 02e6 07F12007 		add	r7, r7, #32
 1693 02ea BD46     		mov	sp, r7
 1694 02ec B0BD     		pop	{r4, r5, r7, pc}
 1695              		.cfi_endproc
 1696              	.LFE5:
 1698 02ee 00BF     		.section	.text.tcp_output_segment,"ax",%progbits
 1699              		.align	2
 1700              		.thumb
 1701              		.thumb_func
 1703              	tcp_output_segment:
 1704              	.LFB6:
 664:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 665:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** /**
 666:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * Called by tcp_output() to actually send a TCP segment over IP.
 667:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  *
 668:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * @param seg the tcp_seg to send
 669:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * @param pcb the tcp_pcb for the TCP connection used to send the segment
 670:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  */
 671:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** static void
 672:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** tcp_output_segment(struct tcp_seg *seg, struct tcp_pcb *pcb)
 673:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** {
 1705              		.loc 1 673 0
 1706              		.cfi_startproc
 1707              		@ args = 0, pretend = 0, frame = 24
 1708              		@ frame_needed = 1, uses_anonymous_args = 0
 1709 0000 90B5     		push	{r4, r7, lr}
 1710              	.LCFI18:
 1711              		.cfi_def_cfa_offset 12
 1712              		.cfi_offset 4, -12
 1713              		.cfi_offset 7, -8
 1714              		.cfi_offset 14, -4
 1715 0002 89B0     		sub	sp, sp, #36
 1716              	.LCFI19:
 1717              		.cfi_def_cfa_offset 48
 1718 0004 02AF     		add	r7, sp, #8
 1719              	.LCFI20:
 1720              		.cfi_def_cfa 7, 40
 1721 0006 7860     		str	r0, [r7, #4]
 1722 0008 3960     		str	r1, [r7, #0]
 674:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   u16_t len;
 675:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   struct netif *netif;
 676:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   u32_t *opts;
 677:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 678:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   /** @bug Exclude retransmitted segments from this count. */
 679:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   snmp_inc_tcpoutsegs();
 680:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 681:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   /* The TCP header has already been constructed, but the ackno and
 682:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****    wnd fields remain. */
 683:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   seg->tcphdr->ackno = htonl(pcb->rcv_nxt);
 1723              		.loc 1 683 0
 1724 000a 7B68     		ldr	r3, [r7, #4]
 1725 000c 1C69     		ldr	r4, [r3, #16]
 1726 000e 3B68     		ldr	r3, [r7, #0]
 1727 0010 5B6A     		ldr	r3, [r3, #36]
 1728 0012 1846     		mov	r0, r3
 1729 0014 FFF7FEFF 		bl	htonl
 1730 0018 0346     		mov	r3, r0
 1731 001a A360     		str	r3, [r4, #8]	@ unaligned
 684:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 685:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   /* advertise our receive window size in this TCP segment */
 686:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   seg->tcphdr->wnd = htons(pcb->rcv_ann_wnd);
 1732              		.loc 1 686 0
 1733 001c 7B68     		ldr	r3, [r7, #4]
 1734 001e 1C69     		ldr	r4, [r3, #16]
 1735 0020 3B68     		ldr	r3, [r7, #0]
 1736 0022 5B8D     		ldrh	r3, [r3, #42]
 1737 0024 1846     		mov	r0, r3
 1738 0026 FFF7FEFF 		bl	htons
 1739 002a 0346     		mov	r3, r0
 1740 002c E381     		strh	r3, [r4, #14]	@ unaligned
 687:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 688:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   pcb->rcv_ann_right_edge = pcb->rcv_nxt + pcb->rcv_ann_wnd;
 1741              		.loc 1 688 0
 1742 002e 3B68     		ldr	r3, [r7, #0]
 1743 0030 5A6A     		ldr	r2, [r3, #36]
 1744 0032 3B68     		ldr	r3, [r7, #0]
 1745 0034 5B8D     		ldrh	r3, [r3, #42]
 1746 0036 D218     		adds	r2, r2, r3
 1747 0038 3B68     		ldr	r3, [r7, #0]
 1748 003a DA62     		str	r2, [r3, #44]
 689:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 690:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   /* Add any requested options.  NB MSS option is only set on SYN
 691:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****      packets, so ignore it here */
 692:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   opts = (u32_t *)(seg->tcphdr + 1);
 1749              		.loc 1 692 0
 1750 003c 7B68     		ldr	r3, [r7, #4]
 1751 003e 1B69     		ldr	r3, [r3, #16]
 1752 0040 03F11403 		add	r3, r3, #20
 1753 0044 7B61     		str	r3, [r7, #20]
 693:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   if (seg->flags & TF_SEG_OPTS_MSS) {
 1754              		.loc 1 693 0
 1755 0046 7B68     		ldr	r3, [r7, #4]
 1756 0048 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
 1757 004a 03F00103 		and	r3, r3, #1
 1758 004e 002B     		cmp	r3, #0
 1759 0050 0CD0     		beq	.L94
 694:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     TCP_BUILD_MSS_OPTION(*opts);
 1760              		.loc 1 694 0
 1761 0052 40F2A650 		movw	r0, #1446
 1762 0056 C0F20420 		movt	r0, 516
 1763 005a FFF7FEFF 		bl	htonl
 1764 005e 0246     		mov	r2, r0
 1765 0060 7B69     		ldr	r3, [r7, #20]
 1766 0062 1A60     		str	r2, [r3, #0]
 695:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     opts += 1;
 1767              		.loc 1 695 0
 1768 0064 7B69     		ldr	r3, [r7, #20]
 1769 0066 03F10403 		add	r3, r3, #4
 1770 006a 7B61     		str	r3, [r7, #20]
 1771              	.L94:
 696:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   }
 697:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** #if LWIP_TCP_TIMESTAMPS
 698:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   pcb->ts_lastacksent = pcb->rcv_nxt;
 699:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 700:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   if (seg->flags & TF_SEG_OPTS_TS) {
 701:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     tcp_build_timestamp_option(pcb, opts);
 702:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     opts += 3;
 703:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   }
 704:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** #endif
 705:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 706:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   /* If we don't have a local IP address, we get one by
 707:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****      calling ip_route(). */
 708:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   if (ip_addr_isany(&(pcb->local_ip))) {
 1772              		.loc 1 708 0
 1773 006c 3B68     		ldr	r3, [r7, #0]
 1774 006e 002B     		cmp	r3, #0
 1775 0070 03D0     		beq	.L95
 1776              		.loc 1 708 0 is_stmt 0 discriminator 1
 1777 0072 3B68     		ldr	r3, [r7, #0]
 1778 0074 1B68     		ldr	r3, [r3, #0]
 1779 0076 002B     		cmp	r3, #0
 1780 0078 15D1     		bne	.L96
 1781              	.L95:
 709:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     netif = ip_route(&(pcb->remote_ip));
 1782              		.loc 1 709 0 is_stmt 1
 1783 007a 3B68     		ldr	r3, [r7, #0]
 1784 007c 03F10403 		add	r3, r3, #4
 1785 0080 1846     		mov	r0, r3
 1786 0082 FFF7FEFF 		bl	ip_route
 1787 0086 3861     		str	r0, [r7, #16]
 710:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     if (netif == NULL) {
 1788              		.loc 1 710 0
 1789 0088 3B69     		ldr	r3, [r7, #16]
 1790 008a 002B     		cmp	r3, #0
 1791 008c 61D0     		beq	.L103
 1792              	.L97:
 711:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       return;
 712:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     }
 713:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     ip_addr_set(&(pcb->local_ip), &(netif->ip_addr));
 1793              		.loc 1 713 0
 1794 008e 3B69     		ldr	r3, [r7, #16]
 1795 0090 03F10403 		add	r3, r3, #4
 1796 0094 002B     		cmp	r3, #0
 1797 0096 02D0     		beq	.L99
 1798              		.loc 1 713 0 is_stmt 0 discriminator 1
 1799 0098 3B69     		ldr	r3, [r7, #16]
 1800 009a 5B68     		ldr	r3, [r3, #4]
 1801 009c 01E0     		b	.L100
 1802              	.L99:
 1803              		.loc 1 713 0 discriminator 2
 1804 009e 4FF00003 		mov	r3, #0
 1805              	.L100:
 1806              		.loc 1 713 0 discriminator 3
 1807 00a2 3A68     		ldr	r2, [r7, #0]
 1808 00a4 1360     		str	r3, [r2, #0]
 1809              	.L96:
 714:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   }
 715:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 716:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   /* Set retransmission timer running if it is not currently enabled */
 717:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   if(pcb->rtime == -1)
 1810              		.loc 1 717 0 is_stmt 1
 1811 00a6 3B68     		ldr	r3, [r7, #0]
 1812 00a8 DB8E     		ldrh	r3, [r3, #54]
 1813 00aa 1BB2     		sxth	r3, r3
 1814 00ac B3F1FF3F 		cmp	r3, #-1
 1815 00b0 03D1     		bne	.L101
 718:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     pcb->rtime = 0;
 1816              		.loc 1 718 0
 1817 00b2 3B68     		ldr	r3, [r7, #0]
 1818 00b4 4FF00002 		mov	r2, #0
 1819 00b8 DA86     		strh	r2, [r3, #54]	@ movhi
 1820              	.L101:
 719:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 720:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   if (pcb->rttest == 0) {
 1821              		.loc 1 720 0
 1822 00ba 3B68     		ldr	r3, [r7, #0]
 1823 00bc DB6B     		ldr	r3, [r3, #60]
 1824 00be 002B     		cmp	r3, #0
 1825 00c0 0FD1     		bne	.L102
 721:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     pcb->rttest = tcp_ticks;
 1826              		.loc 1 721 0
 1827 00c2 40F20003 		movw	r3, #:lower16:tcp_ticks
 1828 00c6 C0F20003 		movt	r3, #:upper16:tcp_ticks
 1829 00ca 1A68     		ldr	r2, [r3, #0]
 1830 00cc 3B68     		ldr	r3, [r7, #0]
 1831 00ce DA63     		str	r2, [r3, #60]
 722:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     pcb->rtseq = ntohl(seg->tcphdr->seqno);
 1832              		.loc 1 722 0
 1833 00d0 7B68     		ldr	r3, [r7, #4]
 1834 00d2 1B69     		ldr	r3, [r3, #16]
 1835 00d4 5B68     		ldr	r3, [r3, #4]	@ unaligned
 1836 00d6 1846     		mov	r0, r3
 1837 00d8 FFF7FEFF 		bl	ntohl
 1838 00dc 0246     		mov	r2, r0
 1839 00de 3B68     		ldr	r3, [r7, #0]
 1840 00e0 1A64     		str	r2, [r3, #64]
 1841              	.L102:
 723:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 724:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_RTO_DEBUG, ("tcp_output_segment: rtseq %"U32_F"\n", pcb->rtseq));
 725:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   }
 726:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   LWIP_DEBUGF(TCP_OUTPUT_DEBUG, ("tcp_output_segment: %"U32_F":%"U32_F"\n",
 727:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****           htonl(seg->tcphdr->seqno), htonl(seg->tcphdr->seqno) +
 728:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****           seg->len));
 729:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 730:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   len = (u16_t)((u8_t *)seg->tcphdr - (u8_t *)seg->p->payload);
 1842              		.loc 1 730 0
 1843 00e2 7B68     		ldr	r3, [r7, #4]
 1844 00e4 1B69     		ldr	r3, [r3, #16]
 1845 00e6 1A46     		mov	r2, r3
 1846 00e8 7B68     		ldr	r3, [r7, #4]
 1847 00ea 5B68     		ldr	r3, [r3, #4]
 1848 00ec 5B68     		ldr	r3, [r3, #4]
 1849 00ee D31A     		subs	r3, r2, r3
 1850 00f0 FB81     		strh	r3, [r7, #14]	@ movhi
 731:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 732:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   seg->p->len -= len;
 1851              		.loc 1 732 0
 1852 00f2 7B68     		ldr	r3, [r7, #4]
 1853 00f4 5B68     		ldr	r3, [r3, #4]
 1854 00f6 7A68     		ldr	r2, [r7, #4]
 1855 00f8 5268     		ldr	r2, [r2, #4]
 1856 00fa 5189     		ldrh	r1, [r2, #10]
 1857 00fc FA89     		ldrh	r2, [r7, #14]	@ movhi
 1858 00fe 8A1A     		subs	r2, r1, r2
 1859 0100 92B2     		uxth	r2, r2
 1860 0102 5A81     		strh	r2, [r3, #10]	@ movhi
 733:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   seg->p->tot_len -= len;
 1861              		.loc 1 733 0
 1862 0104 7B68     		ldr	r3, [r7, #4]
 1863 0106 5B68     		ldr	r3, [r3, #4]
 1864 0108 7A68     		ldr	r2, [r7, #4]
 1865 010a 5268     		ldr	r2, [r2, #4]
 1866 010c 1189     		ldrh	r1, [r2, #8]
 1867 010e FA89     		ldrh	r2, [r7, #14]	@ movhi
 1868 0110 8A1A     		subs	r2, r1, r2
 1869 0112 92B2     		uxth	r2, r2
 1870 0114 1A81     		strh	r2, [r3, #8]	@ movhi
 734:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 735:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   seg->p->payload = seg->tcphdr;
 1871              		.loc 1 735 0
 1872 0116 7B68     		ldr	r3, [r7, #4]
 1873 0118 5B68     		ldr	r3, [r3, #4]
 1874 011a 7A68     		ldr	r2, [r7, #4]
 1875 011c 1269     		ldr	r2, [r2, #16]
 1876 011e 5A60     		str	r2, [r3, #4]
 736:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 737:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   seg->tcphdr->chksum = 0;
 1877              		.loc 1 737 0
 1878 0120 7B68     		ldr	r3, [r7, #4]
 1879 0122 1B69     		ldr	r3, [r3, #16]
 1880 0124 4FF00002 		mov	r2, #0
 1881 0128 1A74     		strb	r2, [r3, #16]
 1882 012a 4FF00002 		mov	r2, #0
 1883 012e 5A74     		strb	r2, [r3, #17]
 738:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** #if CHECKSUM_GEN_TCP
 739:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   seg->tcphdr->chksum = inet_chksum_pseudo(seg->p,
 740:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****              &(pcb->local_ip),
 741:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****              &(pcb->remote_ip),
 742:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****              IP_PROTO_TCP, seg->p->tot_len);
 743:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** #endif
 744:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   TCP_STATS_INC(tcp.xmit);
 745:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 746:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** #if LWIP_NETIF_HWADDRHINT
 747:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   ip_output_hinted(seg->p, &(pcb->local_ip), &(pcb->remote_ip), pcb->ttl, pcb->tos,
 748:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       IP_PROTO_TCP, &(pcb->addr_hint));
 749:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** #else /* LWIP_NETIF_HWADDRHINT*/
 750:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   ip_output(seg->p, &(pcb->local_ip), &(pcb->remote_ip), pcb->ttl, pcb->tos,
 1884              		.loc 1 750 0
 1885 0130 7B68     		ldr	r3, [r7, #4]
 1886 0132 5868     		ldr	r0, [r3, #4]
 1887 0134 3968     		ldr	r1, [r7, #0]
 1888 0136 3B68     		ldr	r3, [r7, #0]
 1889 0138 03F10402 		add	r2, r3, #4
 1890 013c 3B68     		ldr	r3, [r7, #0]
 1891 013e DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 1892 0140 3C68     		ldr	r4, [r7, #0]
 1893 0142 A47A     		ldrb	r4, [r4, #10]	@ zero_extendqisi2
 1894 0144 0094     		str	r4, [sp, #0]
 1895 0146 4FF00604 		mov	r4, #6
 1896 014a 0194     		str	r4, [sp, #4]
 1897 014c FFF7FEFF 		bl	ip_output
 1898 0150 00E0     		b	.L93
 1899              	.L103:
 711:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       return;
 1900              		.loc 1 711 0
 1901 0152 00BF     		nop
 1902              	.L93:
 751:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       IP_PROTO_TCP);
 752:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** #endif /* LWIP_NETIF_HWADDRHINT*/
 753:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** }
 1903              		.loc 1 753 0
 1904 0154 07F11C07 		add	r7, r7, #28
 1905 0158 BD46     		mov	sp, r7
 1906 015a 90BD     		pop	{r4, r7, pc}
 1907              		.cfi_endproc
 1908              	.LFE6:
 1910              		.section	.text.tcp_rst,"ax",%progbits
 1911              		.align	2
 1912              		.global	tcp_rst
 1913              		.thumb
 1914              		.thumb_func
 1916              	tcp_rst:
 1917              	.LFB7:
 754:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 755:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** /**
 756:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * Send a TCP RESET packet (empty segment with RST flag set) either to
 757:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * abort a connection or to show that there is no matching local connection
 758:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * for a received segment.
 759:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  *
 760:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * Called by tcp_abort() (to abort a local connection), tcp_input() (if no
 761:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * matching local pcb was found), tcp_listen_input() (if incoming segment
 762:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * has ACK flag set) and tcp_process() (received segment in the wrong state)
 763:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  *
 764:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * Since a RST segment is in most cases not sent for an active connection,
 765:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * tcp_rst() has a number of arguments that are taken from a tcp_pcb for
 766:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * most other segment output functions.
 767:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  *
 768:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * @param seqno the sequence number to use for the outgoing segment
 769:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * @param ackno the acknowledge number to use for the outgoing segment
 770:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * @param local_ip the local IP address to send the segment from
 771:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * @param remote_ip the remote IP address to send the segment to
 772:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * @param local_port the local TCP port to send the segment from
 773:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * @param remote_port the remote TCP port to send the segment to
 774:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  */
 775:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** void
 776:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** tcp_rst(u32_t seqno, u32_t ackno,
 777:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   struct ip_addr *local_ip, struct ip_addr *remote_ip,
 778:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   u16_t local_port, u16_t remote_port)
 779:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** {
 1918              		.loc 1 779 0
 1919              		.cfi_startproc
 1920              		@ args = 8, pretend = 0, frame = 24
 1921              		@ frame_needed = 1, uses_anonymous_args = 0
 1922 0000 90B5     		push	{r4, r7, lr}
 1923              	.LCFI21:
 1924              		.cfi_def_cfa_offset 12
 1925              		.cfi_offset 4, -12
 1926              		.cfi_offset 7, -8
 1927              		.cfi_offset 14, -4
 1928 0002 89B0     		sub	sp, sp, #36
 1929              	.LCFI22:
 1930              		.cfi_def_cfa_offset 48
 1931 0004 02AF     		add	r7, sp, #8
 1932              	.LCFI23:
 1933              		.cfi_def_cfa 7, 40
 1934 0006 F860     		str	r0, [r7, #12]
 1935 0008 B960     		str	r1, [r7, #8]
 1936 000a 7A60     		str	r2, [r7, #4]
 1937 000c 3B60     		str	r3, [r7, #0]
 780:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   struct pbuf *p;
 781:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   struct tcp_hdr *tcphdr;
 782:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   p = pbuf_alloc(PBUF_IP, TCP_HLEN, PBUF_RAM);
 1938              		.loc 1 782 0
 1939 000e 4FF00100 		mov	r0, #1
 1940 0012 4FF01401 		mov	r1, #20
 1941 0016 4FF00002 		mov	r2, #0
 1942 001a FFF7FEFF 		bl	pbuf_alloc
 1943 001e 7861     		str	r0, [r7, #20]
 783:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   if (p == NULL) {
 1944              		.loc 1 783 0
 1945 0020 7B69     		ldr	r3, [r7, #20]
 1946 0022 002B     		cmp	r3, #0
 1947 0024 6CD0     		beq	.L107
 1948              	.L105:
 784:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       LWIP_DEBUGF(TCP_DEBUG, ("tcp_rst: could not allocate memory for pbuf\n"));
 785:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       return;
 786:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   }
 787:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   LWIP_ASSERT("check that first pbuf can hold struct tcp_hdr",
 788:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****               (p->len >= sizeof(struct tcp_hdr)));
 789:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 790:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   tcphdr = p->payload;
 1949              		.loc 1 790 0
 1950 0026 7B69     		ldr	r3, [r7, #20]
 1951 0028 5B68     		ldr	r3, [r3, #4]
 1952 002a 3B61     		str	r3, [r7, #16]
 791:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   tcphdr->src = htons(local_port);
 1953              		.loc 1 791 0
 1954 002c 3B8D     		ldrh	r3, [r7, #40]
 1955 002e 1846     		mov	r0, r3
 1956 0030 FFF7FEFF 		bl	htons
 1957 0034 0346     		mov	r3, r0
 1958 0036 1A46     		mov	r2, r3
 1959 0038 3B69     		ldr	r3, [r7, #16]
 1960 003a 1A80     		strh	r2, [r3, #0]	@ unaligned
 792:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   tcphdr->dest = htons(remote_port);
 1961              		.loc 1 792 0
 1962 003c BB8D     		ldrh	r3, [r7, #44]
 1963 003e 1846     		mov	r0, r3
 1964 0040 FFF7FEFF 		bl	htons
 1965 0044 0346     		mov	r3, r0
 1966 0046 1A46     		mov	r2, r3
 1967 0048 3B69     		ldr	r3, [r7, #16]
 1968 004a 5A80     		strh	r2, [r3, #2]	@ unaligned
 793:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   tcphdr->seqno = htonl(seqno);
 1969              		.loc 1 793 0
 1970 004c F868     		ldr	r0, [r7, #12]
 1971 004e FFF7FEFF 		bl	htonl
 1972 0052 0246     		mov	r2, r0
 1973 0054 3B69     		ldr	r3, [r7, #16]
 1974 0056 5A60     		str	r2, [r3, #4]	@ unaligned
 794:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   tcphdr->ackno = htonl(ackno);
 1975              		.loc 1 794 0
 1976 0058 B868     		ldr	r0, [r7, #8]
 1977 005a FFF7FEFF 		bl	htonl
 1978 005e 0246     		mov	r2, r0
 1979 0060 3B69     		ldr	r3, [r7, #16]
 1980 0062 9A60     		str	r2, [r3, #8]	@ unaligned
 795:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   TCPH_FLAGS_SET(tcphdr, TCP_RST | TCP_ACK);
 1981              		.loc 1 795 0
 1982 0064 3B69     		ldr	r3, [r7, #16]
 1983 0066 9B89     		ldrh	r3, [r3, #12]	@ unaligned
 1984 0068 9CB2     		uxth	r4, r3
 1985 006a 4FF6C070 		movw	r0, #65472
 1986 006e FFF7FEFF 		bl	htons
 1987 0072 0346     		mov	r3, r0
 1988 0074 2340     		ands	r3, r3, r4
 1989 0076 9CB2     		uxth	r4, r3
 1990 0078 4FF01400 		mov	r0, #20
 1991 007c FFF7FEFF 		bl	htons
 1992 0080 0346     		mov	r3, r0
 1993 0082 2343     		orrs	r3, r3, r4
 1994 0084 9AB2     		uxth	r2, r3
 1995 0086 3B69     		ldr	r3, [r7, #16]
 1996 0088 9A81     		strh	r2, [r3, #12]	@ unaligned
 796:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   tcphdr->wnd = htons(TCP_WND);
 1997              		.loc 1 796 0
 1998 008a 40F64C30 		movw	r0, #2892
 1999 008e FFF7FEFF 		bl	htons
 2000 0092 0346     		mov	r3, r0
 2001 0094 1A46     		mov	r2, r3
 2002 0096 3B69     		ldr	r3, [r7, #16]
 2003 0098 DA81     		strh	r2, [r3, #14]	@ unaligned
 797:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   tcphdr->urgp = 0;
 2004              		.loc 1 797 0
 2005 009a 3B69     		ldr	r3, [r7, #16]
 2006 009c 4FF00002 		mov	r2, #0
 2007 00a0 9A74     		strb	r2, [r3, #18]
 2008 00a2 4FF00002 		mov	r2, #0
 2009 00a6 DA74     		strb	r2, [r3, #19]
 798:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   TCPH_HDRLEN_SET(tcphdr, 5);
 2010              		.loc 1 798 0
 2011 00a8 3B69     		ldr	r3, [r7, #16]
 2012 00aa 9B89     		ldrh	r3, [r3, #12]	@ unaligned
 2013 00ac 9BB2     		uxth	r3, r3
 2014 00ae 1846     		mov	r0, r3
 2015 00b0 FFF7FEFF 		bl	ntohs
 2016 00b4 0346     		mov	r3, r0
 2017 00b6 03F03F03 		and	r3, r3, #63
 2018 00ba 9BB2     		uxth	r3, r3
 2019 00bc 43F4A043 		orr	r3, r3, #20480
 2020 00c0 9BB2     		uxth	r3, r3
 2021 00c2 1846     		mov	r0, r3
 2022 00c4 FFF7FEFF 		bl	htons
 2023 00c8 0346     		mov	r3, r0
 2024 00ca 1A46     		mov	r2, r3
 2025 00cc 3B69     		ldr	r3, [r7, #16]
 2026 00ce 9A81     		strh	r2, [r3, #12]	@ unaligned
 799:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 800:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   tcphdr->chksum = 0;
 2027              		.loc 1 800 0
 2028 00d0 3B69     		ldr	r3, [r7, #16]
 2029 00d2 4FF00002 		mov	r2, #0
 2030 00d6 1A74     		strb	r2, [r3, #16]
 2031 00d8 4FF00002 		mov	r2, #0
 2032 00dc 5A74     		strb	r2, [r3, #17]
 801:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** #if CHECKSUM_GEN_TCP
 802:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   tcphdr->chksum = inet_chksum_pseudo(p, local_ip, remote_ip,
 803:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****               IP_PROTO_TCP, p->tot_len);
 804:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** #endif
 805:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   TCP_STATS_INC(tcp.xmit);
 806:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   snmp_inc_tcpoutrsts();
 807:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****    /* Send output with hardcoded TTL since we have no access to the pcb */
 808:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   ip_output(p, local_ip, remote_ip, TCP_TTL, 0, IP_PROTO_TCP);
 2033              		.loc 1 808 0
 2034 00de 4FF00003 		mov	r3, #0
 2035 00e2 0093     		str	r3, [sp, #0]
 2036 00e4 4FF00603 		mov	r3, #6
 2037 00e8 0193     		str	r3, [sp, #4]
 2038 00ea 7869     		ldr	r0, [r7, #20]
 2039 00ec 7968     		ldr	r1, [r7, #4]
 2040 00ee 3A68     		ldr	r2, [r7, #0]
 2041 00f0 4FF0FF03 		mov	r3, #255
 2042 00f4 FFF7FEFF 		bl	ip_output
 809:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   pbuf_free(p);
 2043              		.loc 1 809 0
 2044 00f8 7869     		ldr	r0, [r7, #20]
 2045 00fa FFF7FEFF 		bl	pbuf_free
 2046 00fe 00E0     		b	.L104
 2047              	.L107:
 785:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       return;
 2048              		.loc 1 785 0
 2049 0100 00BF     		nop
 2050              	.L104:
 810:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   LWIP_DEBUGF(TCP_RST_DEBUG, ("tcp_rst: seqno %"U32_F" ackno %"U32_F".\n", seqno, ackno));
 811:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** }
 2051              		.loc 1 811 0
 2052 0102 07F11C07 		add	r7, r7, #28
 2053 0106 BD46     		mov	sp, r7
 2054 0108 90BD     		pop	{r4, r7, pc}
 2055              		.cfi_endproc
 2056              	.LFE7:
 2058 010a 00BF     		.section	.text.tcp_rexmit_rto,"ax",%progbits
 2059              		.align	2
 2060              		.global	tcp_rexmit_rto
 2061              		.thumb
 2062              		.thumb_func
 2064              	tcp_rexmit_rto:
 2065              	.LFB8:
 812:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 813:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** /**
 814:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * Requeue all unacked segments for retransmission
 815:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  *
 816:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * Called by tcp_slowtmr() for slow retransmission.
 817:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  *
 818:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * @param pcb the tcp_pcb for which to re-enqueue all unacked segments
 819:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  */
 820:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** void
 821:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** tcp_rexmit_rto(struct tcp_pcb *pcb)
 822:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** {
 2066              		.loc 1 822 0
 2067              		.cfi_startproc
 2068              		@ args = 0, pretend = 0, frame = 16
 2069              		@ frame_needed = 1, uses_anonymous_args = 0
 2070 0000 80B5     		push	{r7, lr}
 2071              	.LCFI24:
 2072              		.cfi_def_cfa_offset 8
 2073              		.cfi_offset 7, -8
 2074              		.cfi_offset 14, -4
 2075 0002 84B0     		sub	sp, sp, #16
 2076              	.LCFI25:
 2077              		.cfi_def_cfa_offset 24
 2078 0004 00AF     		add	r7, sp, #0
 2079              	.LCFI26:
 2080              		.cfi_def_cfa_register 7
 2081 0006 7860     		str	r0, [r7, #4]
 823:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   struct tcp_seg *seg;
 824:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 825:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   if (pcb->unacked == NULL) {
 2082              		.loc 1 825 0
 2083 0008 7B68     		ldr	r3, [r7, #4]
 2084 000a 9B6F     		ldr	r3, [r3, #120]
 2085 000c 002B     		cmp	r3, #0
 2086 000e 27D0     		beq	.L113
 2087              	.L109:
 826:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     return;
 827:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   }
 828:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 829:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   /* Move all unacked segments to the head of the unsent queue */
 830:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   for (seg = pcb->unacked; seg->next != NULL; seg = seg->next);
 2088              		.loc 1 830 0
 2089 0010 7B68     		ldr	r3, [r7, #4]
 2090 0012 9B6F     		ldr	r3, [r3, #120]
 2091 0014 FB60     		str	r3, [r7, #12]
 2092 0016 02E0     		b	.L111
 2093              	.L112:
 2094              		.loc 1 830 0 is_stmt 0 discriminator 2
 2095 0018 FB68     		ldr	r3, [r7, #12]
 2096 001a 1B68     		ldr	r3, [r3, #0]
 2097 001c FB60     		str	r3, [r7, #12]
 2098              	.L111:
 2099              		.loc 1 830 0 discriminator 1
 2100 001e FB68     		ldr	r3, [r7, #12]
 2101 0020 1B68     		ldr	r3, [r3, #0]
 2102 0022 002B     		cmp	r3, #0
 2103 0024 F8D1     		bne	.L112
 831:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   /* concatenate unsent queue after unacked queue */
 832:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   seg->next = pcb->unsent;
 2104              		.loc 1 832 0 is_stmt 1
 2105 0026 7B68     		ldr	r3, [r7, #4]
 2106 0028 5A6F     		ldr	r2, [r3, #116]
 2107 002a FB68     		ldr	r3, [r7, #12]
 2108 002c 1A60     		str	r2, [r3, #0]
 833:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   /* unsent queue is the concatenated queue (of unacked, unsent) */
 834:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   pcb->unsent = pcb->unacked;
 2109              		.loc 1 834 0
 2110 002e 7B68     		ldr	r3, [r7, #4]
 2111 0030 9A6F     		ldr	r2, [r3, #120]
 2112 0032 7B68     		ldr	r3, [r7, #4]
 2113 0034 5A67     		str	r2, [r3, #116]
 835:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   /* unacked queue is now empty */
 836:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   pcb->unacked = NULL;
 2114              		.loc 1 836 0
 2115 0036 7B68     		ldr	r3, [r7, #4]
 2116 0038 4FF00002 		mov	r2, #0
 2117 003c 9A67     		str	r2, [r3, #120]
 837:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 838:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   /* increment number of retransmissions */
 839:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   ++pcb->nrtx;
 2118              		.loc 1 839 0
 2119 003e 7B68     		ldr	r3, [r7, #4]
 2120 0040 93F84A30 		ldrb	r3, [r3, #74]	@ zero_extendqisi2
 2121 0044 03F10103 		add	r3, r3, #1
 2122 0048 DAB2     		uxtb	r2, r3
 2123 004a 7B68     		ldr	r3, [r7, #4]
 2124 004c 83F84A20 		strb	r2, [r3, #74]
 840:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 841:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   /* Don't take any RTT measurements after retransmitting. */
 842:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   pcb->rttest = 0;
 2125              		.loc 1 842 0
 2126 0050 7B68     		ldr	r3, [r7, #4]
 2127 0052 4FF00002 		mov	r2, #0
 2128 0056 DA63     		str	r2, [r3, #60]
 843:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 844:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   /* Do the actual retransmission */
 845:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   tcp_output(pcb);
 2129              		.loc 1 845 0
 2130 0058 7868     		ldr	r0, [r7, #4]
 2131 005a FFF7FEFF 		bl	tcp_output
 2132 005e 00E0     		b	.L108
 2133              	.L113:
 826:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     return;
 2134              		.loc 1 826 0
 2135 0060 00BF     		nop
 2136              	.L108:
 846:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** }
 2137              		.loc 1 846 0
 2138 0062 07F11007 		add	r7, r7, #16
 2139 0066 BD46     		mov	sp, r7
 2140 0068 80BD     		pop	{r7, pc}
 2141              		.cfi_endproc
 2142              	.LFE8:
 2144 006a 00BF     		.section	.text.tcp_rexmit,"ax",%progbits
 2145              		.align	2
 2146              		.global	tcp_rexmit
 2147              		.thumb
 2148              		.thumb_func
 2150              	tcp_rexmit:
 2151              	.LFB9:
 847:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 848:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** /**
 849:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * Requeue the first unacked segment for retransmission
 850:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  *
 851:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * Called by tcp_receive() for fast retramsmit.
 852:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  *
 853:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * @param pcb the tcp_pcb for which to retransmit the first unacked segment
 854:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  */
 855:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** void
 856:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** tcp_rexmit(struct tcp_pcb *pcb)
 857:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** {
 2152              		.loc 1 857 0
 2153              		.cfi_startproc
 2154              		@ args = 0, pretend = 0, frame = 16
 2155              		@ frame_needed = 1, uses_anonymous_args = 0
 2156 0000 90B5     		push	{r4, r7, lr}
 2157              	.LCFI27:
 2158              		.cfi_def_cfa_offset 12
 2159              		.cfi_offset 4, -12
 2160              		.cfi_offset 7, -8
 2161              		.cfi_offset 14, -4
 2162 0002 85B0     		sub	sp, sp, #20
 2163              	.LCFI28:
 2164              		.cfi_def_cfa_offset 32
 2165 0004 00AF     		add	r7, sp, #0
 2166              	.LCFI29:
 2167              		.cfi_def_cfa_register 7
 2168 0006 7860     		str	r0, [r7, #4]
 858:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   struct tcp_seg *seg;
 859:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   struct tcp_seg **cur_seg;
 860:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 861:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   if (pcb->unacked == NULL) {
 2169              		.loc 1 861 0
 2170 0008 7B68     		ldr	r3, [r7, #4]
 2171 000a 9B6F     		ldr	r3, [r3, #120]
 2172 000c 002B     		cmp	r3, #0
 2173 000e 39D0     		beq	.L120
 2174              	.L115:
 862:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     return;
 863:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   }
 864:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 865:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   /* Move the first unacked segment to the unsent queue */
 866:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   /* Keep the unsent queue sorted. */
 867:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   seg = pcb->unacked;
 2175              		.loc 1 867 0
 2176 0010 7B68     		ldr	r3, [r7, #4]
 2177 0012 9B6F     		ldr	r3, [r3, #120]
 2178 0014 BB60     		str	r3, [r7, #8]
 868:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   pcb->unacked = seg->next;
 2179              		.loc 1 868 0
 2180 0016 BB68     		ldr	r3, [r7, #8]
 2181 0018 1A68     		ldr	r2, [r3, #0]
 2182 001a 7B68     		ldr	r3, [r7, #4]
 2183 001c 9A67     		str	r2, [r3, #120]
 869:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 870:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   cur_seg = &(pcb->unsent);
 2184              		.loc 1 870 0
 2185 001e 7B68     		ldr	r3, [r7, #4]
 2186 0020 03F17403 		add	r3, r3, #116
 2187 0024 FB60     		str	r3, [r7, #12]
 871:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   while (*cur_seg &&
 2188              		.loc 1 871 0
 2189 0026 02E0     		b	.L117
 2190              	.L119:
 872:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     TCP_SEQ_LT(ntohl((*cur_seg)->tcphdr->seqno), ntohl(seg->tcphdr->seqno))) {
 873:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       cur_seg = &((*cur_seg)->next );
 2191              		.loc 1 873 0
 2192 0028 FB68     		ldr	r3, [r7, #12]
 2193 002a 1B68     		ldr	r3, [r3, #0]
 2194 002c FB60     		str	r3, [r7, #12]
 2195              	.L117:
 871:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   while (*cur_seg &&
 2196              		.loc 1 871 0 discriminator 1
 2197 002e FB68     		ldr	r3, [r7, #12]
 2198 0030 1B68     		ldr	r3, [r3, #0]
 2199 0032 002B     		cmp	r3, #0
 2200 0034 11D0     		beq	.L118
 872:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     TCP_SEQ_LT(ntohl((*cur_seg)->tcphdr->seqno), ntohl(seg->tcphdr->seqno))) {
 2201              		.loc 1 872 0 discriminator 2
 2202 0036 FB68     		ldr	r3, [r7, #12]
 2203 0038 1B68     		ldr	r3, [r3, #0]
 2204 003a 1B69     		ldr	r3, [r3, #16]
 2205 003c 5B68     		ldr	r3, [r3, #4]	@ unaligned
 2206 003e 1846     		mov	r0, r3
 2207 0040 FFF7FEFF 		bl	ntohl
 2208 0044 0446     		mov	r4, r0
 2209 0046 BB68     		ldr	r3, [r7, #8]
 2210 0048 1B69     		ldr	r3, [r3, #16]
 2211 004a 5B68     		ldr	r3, [r3, #4]	@ unaligned
 2212 004c 1846     		mov	r0, r3
 2213 004e FFF7FEFF 		bl	ntohl
 2214 0052 0346     		mov	r3, r0
 2215 0054 E31A     		subs	r3, r4, r3
 871:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   while (*cur_seg &&
 2216              		.loc 1 871 0 discriminator 2
 2217 0056 002B     		cmp	r3, #0
 2218 0058 E6DB     		blt	.L119
 2219              	.L118:
 874:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   }
 875:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   seg->next = *cur_seg;
 2220              		.loc 1 875 0
 2221 005a FB68     		ldr	r3, [r7, #12]
 2222 005c 1A68     		ldr	r2, [r3, #0]
 2223 005e BB68     		ldr	r3, [r7, #8]
 2224 0060 1A60     		str	r2, [r3, #0]
 876:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   *cur_seg = seg;
 2225              		.loc 1 876 0
 2226 0062 FB68     		ldr	r3, [r7, #12]
 2227 0064 BA68     		ldr	r2, [r7, #8]
 2228 0066 1A60     		str	r2, [r3, #0]
 877:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 878:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   ++pcb->nrtx;
 2229              		.loc 1 878 0
 2230 0068 7B68     		ldr	r3, [r7, #4]
 2231 006a 93F84A30 		ldrb	r3, [r3, #74]	@ zero_extendqisi2
 2232 006e 03F10103 		add	r3, r3, #1
 2233 0072 DAB2     		uxtb	r2, r3
 2234 0074 7B68     		ldr	r3, [r7, #4]
 2235 0076 83F84A20 		strb	r2, [r3, #74]
 879:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 880:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   /* Don't take any rtt measurements after retransmitting. */
 881:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   pcb->rttest = 0;
 2236              		.loc 1 881 0
 2237 007a 7B68     		ldr	r3, [r7, #4]
 2238 007c 4FF00002 		mov	r2, #0
 2239 0080 DA63     		str	r2, [r3, #60]
 2240 0082 00E0     		b	.L114
 2241              	.L120:
 862:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     return;
 2242              		.loc 1 862 0
 2243 0084 00BF     		nop
 2244              	.L114:
 882:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 883:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   /* Do the actual retransmission. */
 884:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   snmp_inc_tcpretranssegs();
 885:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   /* No need to call tcp_output: we are always called from tcp_input()
 886:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****      and thus tcp_output directly returns. */
 887:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** }
 2245              		.loc 1 887 0
 2246 0086 07F11407 		add	r7, r7, #20
 2247 008a BD46     		mov	sp, r7
 2248 008c 90BD     		pop	{r4, r7, pc}
 2249              		.cfi_endproc
 2250              	.LFE9:
 2252 008e 00BF     		.section	.text.tcp_rexmit_fast,"ax",%progbits
 2253              		.align	2
 2254              		.global	tcp_rexmit_fast
 2255              		.thumb
 2256              		.thumb_func
 2258              	tcp_rexmit_fast:
 2259              	.LFB10:
 888:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 889:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 890:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** /**
 891:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * Handle retransmission after three dupacks received
 892:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  *
 893:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * @param pcb the tcp_pcb for which to retransmit the first unacked segment
 894:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  */
 895:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** void 
 896:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** tcp_rexmit_fast(struct tcp_pcb *pcb)
 897:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** {
 2260              		.loc 1 897 0
 2261              		.cfi_startproc
 2262              		@ args = 0, pretend = 0, frame = 8
 2263              		@ frame_needed = 1, uses_anonymous_args = 0
 2264 0000 80B5     		push	{r7, lr}
 2265              	.LCFI30:
 2266              		.cfi_def_cfa_offset 8
 2267              		.cfi_offset 7, -8
 2268              		.cfi_offset 14, -4
 2269 0002 82B0     		sub	sp, sp, #8
 2270              	.LCFI31:
 2271              		.cfi_def_cfa_offset 16
 2272 0004 00AF     		add	r7, sp, #0
 2273              	.LCFI32:
 2274              		.cfi_def_cfa_register 7
 2275 0006 7860     		str	r0, [r7, #4]
 898:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   if (pcb->unacked != NULL && !(pcb->flags & TF_INFR)) {
 2276              		.loc 1 898 0
 2277 0008 7B68     		ldr	r3, [r7, #4]
 2278 000a 9B6F     		ldr	r3, [r3, #120]
 2279 000c 002B     		cmp	r3, #0
 2280 000e 4ED0     		beq	.L121
 2281              		.loc 1 898 0 is_stmt 0 discriminator 1
 2282 0010 7B68     		ldr	r3, [r7, #4]
 2283 0012 93F82230 		ldrb	r3, [r3, #34]	@ zero_extendqisi2
 2284 0016 03F00403 		and	r3, r3, #4
 2285 001a 002B     		cmp	r3, #0
 2286 001c 47D1     		bne	.L121
 899:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     /* This is fast retransmit. Retransmit the first unacked segment. */
 900:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_FR_DEBUG, 
 901:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****                 ("tcp_receive: dupacks %"U16_F" (%"U32_F
 902:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****                  "), fast retransmit %"U32_F"\n",
 903:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****                  (u16_t)pcb->dupacks, pcb->lastack,
 904:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****                  ntohl(pcb->unacked->tcphdr->seqno)));
 905:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     tcp_rexmit(pcb);
 2287              		.loc 1 905 0 is_stmt 1
 2288 001e 7868     		ldr	r0, [r7, #4]
 2289 0020 FFF7FEFF 		bl	tcp_rexmit
 906:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 907:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     /* Set ssthresh to half of the minimum of the current
 908:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****      * cwnd and the advertised window */
 909:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     if (pcb->cwnd > pcb->snd_wnd)
 2290              		.loc 1 909 0
 2291 0024 7B68     		ldr	r3, [r7, #4]
 2292 0026 B3F85220 		ldrh	r2, [r3, #82]
 2293 002a 7B68     		ldr	r3, [r7, #4]
 2294 002c B3F85C30 		ldrh	r3, [r3, #92]
 2295 0030 9A42     		cmp	r2, r3
 2296 0032 09D9     		bls	.L123
 910:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       pcb->ssthresh = pcb->snd_wnd / 2;
 2297              		.loc 1 910 0
 2298 0034 7B68     		ldr	r3, [r7, #4]
 2299 0036 B3F85C30 		ldrh	r3, [r3, #92]
 2300 003a 4FEA5303 		lsr	r3, r3, #1
 2301 003e 9AB2     		uxth	r2, r3
 2302 0040 7B68     		ldr	r3, [r7, #4]
 2303 0042 A3F85420 		strh	r2, [r3, #84]	@ movhi
 2304 0046 08E0     		b	.L124
 2305              	.L123:
 911:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     else
 912:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       pcb->ssthresh = pcb->cwnd / 2;
 2306              		.loc 1 912 0
 2307 0048 7B68     		ldr	r3, [r7, #4]
 2308 004a B3F85230 		ldrh	r3, [r3, #82]
 2309 004e 4FEA5303 		lsr	r3, r3, #1
 2310 0052 9AB2     		uxth	r2, r3
 2311 0054 7B68     		ldr	r3, [r7, #4]
 2312 0056 A3F85420 		strh	r2, [r3, #84]	@ movhi
 2313              	.L124:
 913:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     
 914:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     /* The minimum value for ssthresh should be 2 MSS */
 915:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     if (pcb->ssthresh < 2*pcb->mss) {
 2314              		.loc 1 915 0
 2315 005a 7B68     		ldr	r3, [r7, #4]
 2316 005c B3F85430 		ldrh	r3, [r3, #84]
 2317 0060 1A46     		mov	r2, r3
 2318 0062 7B68     		ldr	r3, [r7, #4]
 2319 0064 1B8F     		ldrh	r3, [r3, #56]
 2320 0066 4FEA4303 		lsl	r3, r3, #1
 2321 006a 9A42     		cmp	r2, r3
 2322 006c 07DA     		bge	.L125
 916:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       LWIP_DEBUGF(TCP_FR_DEBUG, 
 917:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****                   ("tcp_receive: The minimum value for ssthresh %"U16_F
 918:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****                    " should be min 2 mss %"U16_F"...\n",
 919:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****                    pcb->ssthresh, 2*pcb->mss));
 920:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****       pcb->ssthresh = 2*pcb->mss;
 2323              		.loc 1 920 0
 2324 006e 7B68     		ldr	r3, [r7, #4]
 2325 0070 1B8F     		ldrh	r3, [r3, #56]
 2326 0072 4FEA4303 		lsl	r3, r3, #1
 2327 0076 9AB2     		uxth	r2, r3
 2328 0078 7B68     		ldr	r3, [r7, #4]
 2329 007a A3F85420 		strh	r2, [r3, #84]	@ movhi
 2330              	.L125:
 921:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     }
 922:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     
 923:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     pcb->cwnd = pcb->ssthresh + 3 * pcb->mss;
 2331              		.loc 1 923 0
 2332 007e 7B68     		ldr	r3, [r7, #4]
 2333 0080 B3F85420 		ldrh	r2, [r3, #84]
 2334 0084 7B68     		ldr	r3, [r7, #4]
 2335 0086 1B8F     		ldrh	r3, [r3, #56]
 2336 0088 1946     		mov	r1, r3	@ movhi
 2337 008a 4FEA4101 		lsl	r1, r1, #1
 2338 008e CB18     		adds	r3, r1, r3
 2339 0090 9BB2     		uxth	r3, r3
 2340 0092 D318     		adds	r3, r2, r3
 2341 0094 9AB2     		uxth	r2, r3
 2342 0096 7B68     		ldr	r3, [r7, #4]
 2343 0098 A3F85220 		strh	r2, [r3, #82]	@ movhi
 924:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     pcb->flags |= TF_INFR;
 2344              		.loc 1 924 0
 2345 009c 7B68     		ldr	r3, [r7, #4]
 2346 009e 93F82230 		ldrb	r3, [r3, #34]	@ zero_extendqisi2
 2347 00a2 43F00403 		orr	r3, r3, #4
 2348 00a6 DAB2     		uxtb	r2, r3
 2349 00a8 7B68     		ldr	r3, [r7, #4]
 2350 00aa 83F82220 		strb	r2, [r3, #34]
 2351              	.L121:
 925:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   } 
 926:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** }
 2352              		.loc 1 926 0
 2353 00ae 07F10807 		add	r7, r7, #8
 2354 00b2 BD46     		mov	sp, r7
 2355 00b4 80BD     		pop	{r7, pc}
 2356              		.cfi_endproc
 2357              	.LFE10:
 2359 00b6 00BF     		.section	.text.tcp_keepalive,"ax",%progbits
 2360              		.align	2
 2361              		.global	tcp_keepalive
 2362              		.thumb
 2363              		.thumb_func
 2365              	tcp_keepalive:
 2366              	.LFB11:
 927:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 928:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 929:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** /**
 930:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * Send keepalive packets to keep a connection active although
 931:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * no data is sent over it.
 932:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  *
 933:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * Called by tcp_slowtmr()
 934:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  *
 935:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * @param pcb the tcp_pcb for which to send a keepalive packet
 936:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  */
 937:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** void
 938:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** tcp_keepalive(struct tcp_pcb *pcb)
 939:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** {
 2367              		.loc 1 939 0
 2368              		.cfi_startproc
 2369              		@ args = 0, pretend = 0, frame = 16
 2370              		@ frame_needed = 1, uses_anonymous_args = 0
 2371 0000 80B5     		push	{r7, lr}
 2372              	.LCFI33:
 2373              		.cfi_def_cfa_offset 8
 2374              		.cfi_offset 7, -8
 2375              		.cfi_offset 14, -4
 2376 0002 86B0     		sub	sp, sp, #24
 2377              	.LCFI34:
 2378              		.cfi_def_cfa_offset 32
 2379 0004 02AF     		add	r7, sp, #8
 2380              	.LCFI35:
 2381              		.cfi_def_cfa 7, 24
 2382 0006 7860     		str	r0, [r7, #4]
 940:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   struct pbuf *p;
 941:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** #if CHECKSUM_GEN_TCP
 942:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   struct tcp_hdr *tcphdr;
 943:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** #endif
 944:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 945:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   LWIP_DEBUGF(TCP_DEBUG, ("tcp_keepalive: sending KEEPALIVE probe to %"U16_F".%"U16_F".%"U16_F".%"U
 946:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****                           ip4_addr1(&pcb->remote_ip), ip4_addr2(&pcb->remote_ip),
 947:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****                           ip4_addr3(&pcb->remote_ip), ip4_addr4(&pcb->remote_ip)));
 948:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 949:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   LWIP_DEBUGF(TCP_DEBUG, ("tcp_keepalive: tcp_ticks %"U32_F"   pcb->tmr %"U32_F" pcb->keep_cnt_sent
 950:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****                           tcp_ticks, pcb->tmr, pcb->keep_cnt_sent));
 951:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****    
 952:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   p = pbuf_alloc(PBUF_IP, TCP_HLEN, PBUF_RAM);
 2383              		.loc 1 952 0
 2384 0008 4FF00100 		mov	r0, #1
 2385 000c 4FF01401 		mov	r1, #20
 2386 0010 4FF00002 		mov	r2, #0
 2387 0014 FFF7FEFF 		bl	pbuf_alloc
 2388 0018 F860     		str	r0, [r7, #12]
 953:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****    
 954:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   if(p == NULL) {
 2389              		.loc 1 954 0
 2390 001a FB68     		ldr	r3, [r7, #12]
 2391 001c 002B     		cmp	r3, #0
 2392 001e 20D0     		beq	.L129
 2393              	.L127:
 955:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_DEBUG, 
 956:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****                 ("tcp_keepalive: could not allocate memory for pbuf\n"));
 957:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     return;
 958:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   }
 959:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   LWIP_ASSERT("check that first pbuf can hold struct tcp_hdr",
 960:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****               (p->len >= sizeof(struct tcp_hdr)));
 961:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 962:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** #if CHECKSUM_GEN_TCP
 963:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   tcphdr = tcp_output_set_header(pcb, p, 0, htonl(pcb->snd_nxt - 1));
 964:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** #else
 965:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   tcp_output_set_header(pcb, p, 0, htonl(pcb->snd_nxt - 1));
 2394              		.loc 1 965 0
 2395 0020 7B68     		ldr	r3, [r7, #4]
 2396 0022 9B6D     		ldr	r3, [r3, #88]
 2397 0024 03F1FF33 		add	r3, r3, #-1
 2398 0028 1846     		mov	r0, r3
 2399 002a FFF7FEFF 		bl	htonl
 2400 002e 0346     		mov	r3, r0
 2401 0030 7868     		ldr	r0, [r7, #4]
 2402 0032 F968     		ldr	r1, [r7, #12]
 2403 0034 4FF00002 		mov	r2, #0
 2404 0038 FFF7FEFF 		bl	tcp_output_set_header
 966:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** #endif
 967:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 968:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** #if CHECKSUM_GEN_TCP
 969:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   tcphdr->chksum = inet_chksum_pseudo(p, &pcb->local_ip, &pcb->remote_ip,
 970:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****                                       IP_PROTO_TCP, p->tot_len);
 971:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** #endif
 972:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   TCP_STATS_INC(tcp.xmit);
 973:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 974:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   /* Send output to IP */
 975:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** #if LWIP_NETIF_HWADDRHINT
 976:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   ip_output_hinted(p, &pcb->local_ip, &pcb->remote_ip, pcb->ttl, 0, IP_PROTO_TCP,
 977:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     &(pcb->addr_hint));
 978:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** #else /* LWIP_NETIF_HWADDRHINT*/
 979:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   ip_output(p, &pcb->local_ip, &pcb->remote_ip, pcb->ttl, 0, IP_PROTO_TCP);
 2405              		.loc 1 979 0
 2406 003c 7968     		ldr	r1, [r7, #4]
 2407 003e 7B68     		ldr	r3, [r7, #4]
 2408 0040 03F10402 		add	r2, r3, #4
 2409 0044 7B68     		ldr	r3, [r7, #4]
 2410 0046 DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 2411 0048 4FF00000 		mov	r0, #0
 2412 004c 0090     		str	r0, [sp, #0]
 2413 004e 4FF00600 		mov	r0, #6
 2414 0052 0190     		str	r0, [sp, #4]
 2415 0054 F868     		ldr	r0, [r7, #12]
 2416 0056 FFF7FEFF 		bl	ip_output
 980:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** #endif /* LWIP_NETIF_HWADDRHINT*/
 981:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 982:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   pbuf_free(p);
 2417              		.loc 1 982 0
 2418 005a F868     		ldr	r0, [r7, #12]
 2419 005c FFF7FEFF 		bl	pbuf_free
 2420 0060 00E0     		b	.L126
 2421              	.L129:
 957:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     return;
 2422              		.loc 1 957 0
 2423 0062 00BF     		nop
 2424              	.L126:
 983:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 984:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   LWIP_DEBUGF(TCP_DEBUG, ("tcp_keepalive: seqno %"U32_F" ackno %"U32_F".\n",
 985:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****                           pcb->snd_nxt - 1, pcb->rcv_nxt));
 986:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** }
 2425              		.loc 1 986 0
 2426 0064 07F11007 		add	r7, r7, #16
 2427 0068 BD46     		mov	sp, r7
 2428 006a 80BD     		pop	{r7, pc}
 2429              		.cfi_endproc
 2430              	.LFE11:
 2432              		.section	.text.tcp_zero_window_probe,"ax",%progbits
 2433              		.align	2
 2434              		.global	tcp_zero_window_probe
 2435              		.thumb
 2436              		.thumb_func
 2438              	tcp_zero_window_probe:
 2439              	.LFB12:
 987:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 988:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
 989:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** /**
 990:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * Send persist timer zero-window probes to keep a connection active
 991:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * when a window update is lost.
 992:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  *
 993:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * Called by tcp_slowtmr()
 994:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  *
 995:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  * @param pcb the tcp_pcb for which to send a zero-window probe packet
 996:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****  */
 997:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** void
 998:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** tcp_zero_window_probe(struct tcp_pcb *pcb)
 999:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** {
 2440              		.loc 1 999 0
 2441              		.cfi_startproc
 2442              		@ args = 0, pretend = 0, frame = 24
 2443              		@ frame_needed = 1, uses_anonymous_args = 0
 2444 0000 90B5     		push	{r4, r7, lr}
 2445              	.LCFI36:
 2446              		.cfi_def_cfa_offset 12
 2447              		.cfi_offset 4, -12
 2448              		.cfi_offset 7, -8
 2449              		.cfi_offset 14, -4
 2450 0002 89B0     		sub	sp, sp, #36
 2451              	.LCFI37:
 2452              		.cfi_def_cfa_offset 48
 2453 0004 02AF     		add	r7, sp, #8
 2454              	.LCFI38:
 2455              		.cfi_def_cfa 7, 40
 2456 0006 7860     		str	r0, [r7, #4]
1000:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   struct pbuf *p;
1001:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   struct tcp_hdr *tcphdr;
1002:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   struct tcp_seg *seg;
1003:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   u16_t len;
1004:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   u8_t is_fin;
1005:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
1006:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   LWIP_DEBUGF(TCP_DEBUG, 
1007:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****               ("tcp_zero_window_probe: sending ZERO WINDOW probe to %"
1008:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****                U16_F".%"U16_F".%"U16_F".%"U16_F"\n",
1009:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****                ip4_addr1(&pcb->remote_ip), ip4_addr2(&pcb->remote_ip),
1010:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****                ip4_addr3(&pcb->remote_ip), ip4_addr4(&pcb->remote_ip)));
1011:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
1012:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   LWIP_DEBUGF(TCP_DEBUG, 
1013:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****               ("tcp_zero_window_probe: tcp_ticks %"U32_F
1014:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****                "   pcb->tmr %"U32_F" pcb->keep_cnt_sent %"U16_F"\n", 
1015:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****                tcp_ticks, pcb->tmr, pcb->keep_cnt_sent));
1016:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
1017:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   seg = pcb->unacked;
 2457              		.loc 1 1017 0
 2458 0008 7B68     		ldr	r3, [r7, #4]
 2459 000a 9B6F     		ldr	r3, [r3, #120]
 2460 000c 7B61     		str	r3, [r7, #20]
1018:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
1019:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   if(seg == NULL)
 2461              		.loc 1 1019 0
 2462 000e 7B69     		ldr	r3, [r7, #20]
 2463 0010 002B     		cmp	r3, #0
 2464 0012 02D1     		bne	.L131
1020:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     seg = pcb->unsent;
 2465              		.loc 1 1020 0
 2466 0014 7B68     		ldr	r3, [r7, #4]
 2467 0016 5B6F     		ldr	r3, [r3, #116]
 2468 0018 7B61     		str	r3, [r7, #20]
 2469              	.L131:
1021:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
1022:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   if(seg == NULL)
 2470              		.loc 1 1022 0
 2471 001a 7B69     		ldr	r3, [r7, #20]
 2472 001c 002B     		cmp	r3, #0
 2473 001e 66D0     		beq	.L141
 2474              	.L132:
1023:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     return;
1024:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
1025:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   is_fin = ((TCPH_FLAGS(seg->tcphdr) & TCP_FIN) != 0) && (seg->len == 0);
 2475              		.loc 1 1025 0
 2476 0020 7B69     		ldr	r3, [r7, #20]
 2477 0022 1B69     		ldr	r3, [r3, #16]
 2478 0024 9B89     		ldrh	r3, [r3, #12]	@ unaligned
 2479 0026 9BB2     		uxth	r3, r3
 2480 0028 1846     		mov	r0, r3
 2481 002a FFF7FEFF 		bl	ntohs
 2482 002e 0346     		mov	r3, r0
 2483 0030 03F00103 		and	r3, r3, #1
 2484 0034 002B     		cmp	r3, #0
 2485 0036 06D0     		beq	.L134
 2486              		.loc 1 1025 0 is_stmt 0 discriminator 1
 2487 0038 7B69     		ldr	r3, [r7, #20]
 2488 003a 9B89     		ldrh	r3, [r3, #12]
 2489 003c 002B     		cmp	r3, #0
 2490 003e 02D1     		bne	.L134
 2491              		.loc 1 1025 0 discriminator 3
 2492 0040 4FF00103 		mov	r3, #1
 2493 0044 01E0     		b	.L135
 2494              	.L134:
 2495              		.loc 1 1025 0 discriminator 2
 2496 0046 4FF00003 		mov	r3, #0
 2497              	.L135:
 2498              		.loc 1 1025 0 discriminator 4
 2499 004a FB74     		strb	r3, [r7, #19]
1026:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   len = is_fin ? TCP_HLEN : TCP_HLEN + 1;
 2500              		.loc 1 1026 0 is_stmt 1 discriminator 4
 2501 004c FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 2502 004e 002B     		cmp	r3, #0
 2503 0050 02D0     		beq	.L136
 2504              		.loc 1 1026 0 is_stmt 0 discriminator 1
 2505 0052 4FF01403 		mov	r3, #20
 2506 0056 01E0     		b	.L137
 2507              	.L136:
 2508              		.loc 1 1026 0 discriminator 2
 2509 0058 4FF01503 		mov	r3, #21
 2510              	.L137:
 2511              		.loc 1 1026 0 discriminator 3
 2512 005c 3B82     		strh	r3, [r7, #16]	@ movhi
1027:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
1028:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   p = pbuf_alloc(PBUF_IP, len, PBUF_RAM);
 2513              		.loc 1 1028 0 is_stmt 1 discriminator 3
 2514 005e 3B8A     		ldrh	r3, [r7, #16]
 2515 0060 4FF00100 		mov	r0, #1
 2516 0064 1946     		mov	r1, r3
 2517 0066 4FF00002 		mov	r2, #0
 2518 006a FFF7FEFF 		bl	pbuf_alloc
 2519 006e F860     		str	r0, [r7, #12]
1029:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   if(p == NULL) {
 2520              		.loc 1 1029 0 discriminator 3
 2521 0070 FB68     		ldr	r3, [r7, #12]
 2522 0072 002B     		cmp	r3, #0
 2523 0074 3DD0     		beq	.L142
 2524              	.L138:
1030:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     LWIP_DEBUGF(TCP_DEBUG, ("tcp_zero_window_probe: no memory for pbuf\n"));
1031:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     return;
1032:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   }
1033:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   LWIP_ASSERT("check that first pbuf can hold struct tcp_hdr",
1034:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****               (p->len >= sizeof(struct tcp_hdr)));
1035:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
1036:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   tcphdr = tcp_output_set_header(pcb, p, 0, seg->tcphdr->seqno);
 2525              		.loc 1 1036 0
 2526 0076 7B69     		ldr	r3, [r7, #20]
 2527 0078 1B69     		ldr	r3, [r3, #16]
 2528 007a 5B68     		ldr	r3, [r3, #4]	@ unaligned
 2529 007c 7868     		ldr	r0, [r7, #4]
 2530 007e F968     		ldr	r1, [r7, #12]
 2531 0080 4FF00002 		mov	r2, #0
 2532 0084 FFF7FEFF 		bl	tcp_output_set_header
 2533 0088 B860     		str	r0, [r7, #8]
1037:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
1038:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   if (is_fin) {
 2534              		.loc 1 1038 0
 2535 008a FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 2536 008c 002B     		cmp	r3, #0
 2537 008e 13D0     		beq	.L139
1039:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     /* FIN segment, no data */
1040:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     TCPH_FLAGS_SET(tcphdr, TCP_ACK | TCP_FIN);
 2538              		.loc 1 1040 0
 2539 0090 BB68     		ldr	r3, [r7, #8]
 2540 0092 9B89     		ldrh	r3, [r3, #12]	@ unaligned
 2541 0094 9CB2     		uxth	r4, r3
 2542 0096 4FF6C070 		movw	r0, #65472
 2543 009a FFF7FEFF 		bl	htons
 2544 009e 0346     		mov	r3, r0
 2545 00a0 2340     		ands	r3, r3, r4
 2546 00a2 9CB2     		uxth	r4, r3
 2547 00a4 4FF01100 		mov	r0, #17
 2548 00a8 FFF7FEFF 		bl	htons
 2549 00ac 0346     		mov	r3, r0
 2550 00ae 2343     		orrs	r3, r3, r4
 2551 00b0 9AB2     		uxth	r2, r3
 2552 00b2 BB68     		ldr	r3, [r7, #8]
 2553 00b4 9A81     		strh	r2, [r3, #12]	@ unaligned
 2554 00b6 07E0     		b	.L140
 2555              	.L139:
1041:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   } else {
1042:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     /* Data segment, copy in one byte from the head of the unacked queue */
1043:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     *((char *)p->payload + sizeof(struct tcp_hdr)) = *(char *)seg->dataptr;
 2556              		.loc 1 1043 0
 2557 00b8 FB68     		ldr	r3, [r7, #12]
 2558 00ba 5B68     		ldr	r3, [r3, #4]
 2559 00bc 03F11403 		add	r3, r3, #20
 2560 00c0 7A69     		ldr	r2, [r7, #20]
 2561 00c2 9268     		ldr	r2, [r2, #8]
 2562 00c4 1278     		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 2563 00c6 1A70     		strb	r2, [r3, #0]
 2564              	.L140:
1044:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   }
1045:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
1046:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** #if CHECKSUM_GEN_TCP
1047:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   tcphdr->chksum = inet_chksum_pseudo(p, &pcb->local_ip, &pcb->remote_ip,
1048:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****                                       IP_PROTO_TCP, p->tot_len);
1049:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** #endif
1050:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   TCP_STATS_INC(tcp.xmit);
1051:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
1052:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   /* Send output to IP */
1053:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** #if LWIP_NETIF_HWADDRHINT
1054:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   ip_output_hinted(p, &pcb->local_ip, &pcb->remote_ip, pcb->ttl, 0, IP_PROTO_TCP,
1055:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     &(pcb->addr_hint));
1056:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** #else /* LWIP_NETIF_HWADDRHINT*/
1057:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   ip_output(p, &pcb->local_ip, &pcb->remote_ip, pcb->ttl, 0, IP_PROTO_TCP);
 2565              		.loc 1 1057 0
 2566 00c8 7968     		ldr	r1, [r7, #4]
 2567 00ca 7B68     		ldr	r3, [r7, #4]
 2568 00cc 03F10402 		add	r2, r3, #4
 2569 00d0 7B68     		ldr	r3, [r7, #4]
 2570 00d2 DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 2571 00d4 4FF00000 		mov	r0, #0
 2572 00d8 0090     		str	r0, [sp, #0]
 2573 00da 4FF00600 		mov	r0, #6
 2574 00de 0190     		str	r0, [sp, #4]
 2575 00e0 F868     		ldr	r0, [r7, #12]
 2576 00e2 FFF7FEFF 		bl	ip_output
1058:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** #endif /* LWIP_NETIF_HWADDRHINT*/
1059:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
1060:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   pbuf_free(p);
 2577              		.loc 1 1060 0
 2578 00e6 F868     		ldr	r0, [r7, #12]
 2579 00e8 FFF7FEFF 		bl	pbuf_free
 2580 00ec 02E0     		b	.L130
 2581              	.L141:
1023:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     return;
 2582              		.loc 1 1023 0
 2583 00ee 00BF     		nop
 2584 00f0 00E0     		b	.L130
 2585              	.L142:
1031:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****     return;
 2586              		.loc 1 1031 0
 2587 00f2 00BF     		nop
 2588              	.L130:
1061:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** 
1062:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****   LWIP_DEBUGF(TCP_DEBUG, ("tcp_zero_window_probe: seqno %"U32_F
1063:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****                           " ackno %"U32_F".\n",
1064:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c ****                           pcb->snd_nxt - 1, pcb->rcv_nxt));
1065:../Dave/Generated/src/ETH004/01_lwIP_Stack/src/core/tcp_out.c **** }
 2589              		.loc 1 1065 0
 2590 00f4 07F11C07 		add	r7, r7, #28
 2591 00f8 BD46     		mov	sp, r7
 2592 00fa 90BD     		pop	{r4, r7, pc}
 2593              		.cfi_endproc
 2594              	.LFE12:
 2596              		.text
 2597              	.Letext0:
 2598              		.file 2 "F:\\WORK\\SmartHome_checkout1\\XMC4500_RK_HTTPserver\\Dave\\Generated\\src\\ETH004\\01_lw
 2599              		.file 3 "F:\\WORK\\SmartHome_checkout1\\XMC4500_RK_HTTPserver\\Dave\\Generated\\src\\ETH004\\01_lw
 2600              		.file 4 "F:\\WORK\\SmartHome_checkout1\\XMC4500_RK_HTTPserver\\Dave\\Generated\\src\\ETH004\\01_lw
 2601              		.file 5 "F:\\WORK\\SmartHome_checkout1\\XMC4500_RK_HTTPserver\\Dave\\Generated\\src\\ETH004\\01_lw
 2602              		.file 6 "F:\\WORK\\SmartHome_checkout1\\XMC4500_RK_HTTPserver\\Dave\\Generated\\src\\ETH004\\01_lw
 2603              		.file 7 "F:\\WORK\\SmartHome_checkout1\\XMC4500_RK_HTTPserver\\Dave\\Generated\\src\\ETH004\\01_lw
 2604              		.file 8 "F:\\WORK\\SmartHome_checkout1\\XMC4500_RK_HTTPserver\\Dave\\Generated\\src\\ETH004\\01_lw
DEFINED SYMBOLS
                            *ABS*:00000000 tcp_out.c
C:\Users\Mihai\AppData\Local\Temp\ccTNgqxT.s:20     .text.tcp_output_set_header:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccTNgqxT.s:24     .text.tcp_output_set_header:00000000 tcp_output_set_header
C:\Users\Mihai\AppData\Local\Temp\ccTNgqxT.s:165    .text.tcp_send_ctrl:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccTNgqxT.s:170    .text.tcp_send_ctrl:00000000 tcp_send_ctrl
C:\Users\Mihai\AppData\Local\Temp\ccTNgqxT.s:300    .text.tcp_enqueue:00000000 tcp_enqueue
C:\Users\Mihai\AppData\Local\Temp\ccTNgqxT.s:210    .text.tcp_write:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccTNgqxT.s:215    .text.tcp_write:00000000 tcp_write
C:\Users\Mihai\AppData\Local\Temp\ccTNgqxT.s:295    .text.tcp_enqueue:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccTNgqxT.s:1166   .text.tcp_send_empty_ack:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccTNgqxT.s:1171   .text.tcp_send_empty_ack:00000000 tcp_send_empty_ack
C:\Users\Mihai\AppData\Local\Temp\ccTNgqxT.s:1258   .text.tcp_output:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccTNgqxT.s:1263   .text.tcp_output:00000000 tcp_output
C:\Users\Mihai\AppData\Local\Temp\ccTNgqxT.s:1703   .text.tcp_output_segment:00000000 tcp_output_segment
C:\Users\Mihai\AppData\Local\Temp\ccTNgqxT.s:1699   .text.tcp_output_segment:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccTNgqxT.s:1911   .text.tcp_rst:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccTNgqxT.s:1916   .text.tcp_rst:00000000 tcp_rst
C:\Users\Mihai\AppData\Local\Temp\ccTNgqxT.s:2059   .text.tcp_rexmit_rto:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccTNgqxT.s:2064   .text.tcp_rexmit_rto:00000000 tcp_rexmit_rto
C:\Users\Mihai\AppData\Local\Temp\ccTNgqxT.s:2145   .text.tcp_rexmit:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccTNgqxT.s:2150   .text.tcp_rexmit:00000000 tcp_rexmit
C:\Users\Mihai\AppData\Local\Temp\ccTNgqxT.s:2253   .text.tcp_rexmit_fast:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccTNgqxT.s:2258   .text.tcp_rexmit_fast:00000000 tcp_rexmit_fast
C:\Users\Mihai\AppData\Local\Temp\ccTNgqxT.s:2360   .text.tcp_keepalive:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccTNgqxT.s:2365   .text.tcp_keepalive:00000000 tcp_keepalive
C:\Users\Mihai\AppData\Local\Temp\ccTNgqxT.s:2433   .text.tcp_zero_window_probe:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccTNgqxT.s:2438   .text.tcp_zero_window_probe:00000000 tcp_zero_window_probe
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.1791a5ae2e936ca1033c1c44be394cc7
                           .group:00000000 wm4.ETH004_Conf.h.56.564c3f309c32b3c742fc91049cf66940
                           .group:00000000 wm4.lwipopts.h.73.a7a63bda1e8216abd1d90275eaaa0027
                           .group:00000000 wm4.arch.h.33.6fa4aa86d33d1490ae882caef7316405
                           .group:00000000 wm4.cpu.h.33.b213c7fd77614ebc3691cef18ad2ff22
                           .group:00000000 wm4.cc.h.66.ec134211c658dcc89de4610e4e7bab46
                           .group:00000000 wm4.arch.h.47.5153c52bfb94ee3b37299920afab6afd
                           .group:00000000 wm4.debug.h.43.557ecd6c90cc70b375bb8a29118be47b
                           .group:00000000 wm4.opt.h.94.d36882acafebb8726bce646fc8b2397b
                           .group:00000000 wm4.sys.h.65.4a0cd87b9e0d8bb4cd6b30e939b2ca7e
                           .group:00000000 wm4.mem.h.96.20770766e6c9e6c42af6bfa95ef5c63f
                           .group:00000000 wm4.err.h.52.37c5d17538f8e8347a9c84196701e92d
                           .group:00000000 wm4.pbuf.h.43.e9a1ad12b97478787a109e22d5306820
                           .group:00000000 wm4.def.h.33.d779a3244e06cea9e944e5db86767de8
                           .group:00000000 wm4.inet.h.46.a1c378d398e089f18dd6ade9b427826c
                           .group:00000000 wm4.ip_addr.h.79.9a0ce887ca8c88c22ad7686bcb5105df
                           .group:00000000 wm4.netif.h.53.c13431a64f0e73a26710e71455725e84
                           .group:00000000 wm4.ip.h.48.ad46847692d4d729760949b27e48a442
                           .group:00000000 wm4.icmp.h.44.450dbf91f594cc26ad19d086cdc83713
                           .group:00000000 wm4.tcp.h.55.5c30b9432fa60afaa85cbdd225b0c683
                           .group:00000000 wm4.memp_std.h.15.aec196dc1c3fb1142dd450db0c167cbf
                           .group:00000000 wm4.memp.h.86.dbc4cb1b8d6b9ea113f04174f716e4c0
                           .group:00000000 wm4.stats.h.147.58ec5b890fad5bbc2a7711ad8105f087
                           .group:00000000 wm4.udp.h.48.1a8dde095cd0a13580afaba1443e5a3f
                           .group:00000000 wm4.snmp.h.231.ffb5dc2779dd945785c887dfa42d86eb
                           .group:00000000 wm4.newlib.h.8.a9901dc52d1357e3e94003403d43f8b5
                           .group:00000000 wm4.features.h.22.b72b3baab2bb2eab3661375590100b6b
                           .group:00000000 wm4.config.h.193.5fb8ef056cdff92dec3dee9552839d8c
                           .group:00000000 wm4._ansi.h.23.7aefdac4826acebbfc9f3822a0aeb14c
                           .group:00000000 wm4._default_types.h.6.5e12cd604db8ce00b62bb2f02708eaf3
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4.stddef.h.349.31f4c5baff3fa2689010b32028da9c47
                           .group:00000000 wm4.reent.h.16.9e42f0e588b85e70b2bf6572af57ce64
                           .group:00000000 wm4.stddef.h.187.9e651b6b8b16e149c1353259404973ea
                           .group:00000000 wm4.string.h.86.d5c872ff52e2712c985b588a0ef39f3c

UNDEFINED SYMBOLS
htons
htonl
ntohs
memp_sizes
mem_malloc
pbuf_alloc
pbuf_clen
memcpy
pbuf_free
pbuf_cat
pbuf_header
ntohl
mem_free
tcp_segs_free
ip_output
tcp_input_pcb
tcp_seg_free
ip_route
tcp_ticks
