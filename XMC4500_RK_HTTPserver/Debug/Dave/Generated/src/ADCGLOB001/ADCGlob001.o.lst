   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"ADCGlob001.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.ADCGLOB001_Init,"ax",%progbits
  20              		.align	2
  21              		.global	ADCGLOB001_Init
  22              		.thumb
  23              		.thumb_func
  25              	ADCGLOB001_Init:
  26              	.LFB117:
  27              		.file 1 "../Dave/Generated/src/ADCGLOB001/ADCGlob001.c"
   1:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /*******************************************************************************
   2:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** **  DAVE App Name : ADCGLOB001       App Version: 1.0.28               
   3:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** **  This file is generated by DAVE, User modification to this file will be    **
   4:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** **  overwritten at the next code generation.                                  **
   5:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** *******************************************************************************/
   6:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
   7:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /*******************************************************************************
   8:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  Copyright (c) 2014, Infineon Technologies AG                                 **
   9:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  All rights reserved.                                                         **
  10:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                                                                               **
  11:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  Redistribution and use in source and binary forms, with or without           **
  12:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  modification,are permitted provided that the following conditions are met:   **
  13:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                                                                               **
  14:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  *Redistributions of source code must retain the above copyright notice,      **
  15:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  this list of conditions and the following disclaimer.                        **
  16:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  *Redistributions in binary form must reproduce the above copyright notice,   **
  17:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  this list of conditions and the following disclaimer in the documentation    **
  18:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  and/or other materials provided with the distribution.                       **
  19:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  *Neither the name of the copyright holders nor the names of its contributors **
  20:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  may be used to endorse or promote products derived from this software without**
  21:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  specific prior written permission.                                           **
  22:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                                                                               **
  23:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"  **
  24:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE    **
  25:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE   **
  26:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  ARE  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE   **
  27:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  LIABLE  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR         **
  28:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF         **
  29:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  SUBSTITUTE GOODS OR  SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS    **
  30:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN      **
  31:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)       **
  32:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE   **
  33:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  POSSIBILITY OF SUCH DAMAGE.                                                  **
  34:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                                                                               **
  35:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  To improve the quality of the software, users are encouraged to share        **
  36:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  modifications, enhancements or bug fixes with Infineon Technologies AG       **
  37:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  dave@infineon.com).                                                          **
  38:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                                                                               **
  39:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  *******************************************************************************
  40:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  **                                                                           **
  41:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  **                                                                           **
  42:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  ** PLATFORM : Infineon XMC4000/XMC1000 Series                                **
  43:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  **                                                                           **
  44:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  ** COMPILER : Compiler Independent                                           **
  45:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  **                                                                           **
  46:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  ** AUTHOR : App Developer                                                    **
  47:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  **                                                                           **
  48:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  ** MAY BE CHANGED BY USER [yes/no]: Yes                                      **
  49:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  **                                                                           **
  50:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  ** MODIFICATION DATE : Apr 25, 2014                                          **
  51:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  **                                                                           **
  52:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  ******************************************************************************/
  53:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
  54:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /*******************************************************************************
  55:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  **                       Author(s) Identity                                  **
  56:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  *******************************************************************************
  57:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  **                                                                           **
  58:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  ** Initials           Name                                                   **
  59:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  ** --------------------------------------------------------------------------**
  60:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  ** Neelakanta        App Developer                                           **
  61:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  ** SSAM              Sridhar Sampath                                         **
  62:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  ******************************************************************************/
  63:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
  64:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /**
  65:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * @file ADCGLOB001.c
  66:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  *
  67:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * @brief
  68:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * This is global ADC App which allows the sharing of global ADC resources.
  69:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  *
  70:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * Change History:
  71:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * Date       version       Details
  72:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * 12-Dec-2012   1.0.5    Initial code added for XMC1000
  73:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * 18-Jan-2013   1.0.6    Merging with XMC1000 done
  74:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * 24-Apr-2013   1.0.12   Ported to XMC4500 step AB and
  75:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  *                        Source Result selection Feature added
  76:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * 10-Jun-2013   1.0.14   1. Supported for XMC1100 device,
  77:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  *                        2. Comment in header section - the Device series name is
  78:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  *                           made as XMC1000
  79:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * 27-Jun-2013   1.0.16   Global limits made unavailable for adc004 app
  80:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * 29-Aug-2013   1.0.18   XMC1200/XMC1300 New Sofware IDS added.
  81:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  *                        Unused code removed
  82:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * 31-Oct-2013   1.0.20   1. The macro name ADCGLOB001_DBG002_FUNCTION_ENTRY is
  83:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  *                        corrected as ADCGLOB001_FUNCTION_ENTRY
  84:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  *                        2. Analog Clock divider value minimum 1 was generated
  85:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  *                        and now it is made as 0 for XMC1000 devices.
  86:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * 14-Nov-2013   1.0.22   CLK001_Init() for XMC4000 devices CLK002_Init() for
  87:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  *                        XMC1000 devices is removed in ADCGLOB001_Init()
  88:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  *                        function, since this CLK00x_Init() function is called
  89:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  *                        at the beginning  of the DAVE_Init() function.
  90:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * 29-Jan-2014   1.0.24   Error codes are added in various functions, that can
  91:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  *                        be logged with DBG002 App.
  92:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * 25-Apr-2014   1.0.28   Double clock for MSB conversion option removed,
  93:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  *                        Sampling time calculation for XMC1 devices modified with accelerated mode
  94:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  *                        Startup calibration API Modified.
  95:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  */
  96:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
  97:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /*******************************************************************************
  98:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  ** INCLUDE FILES                                                             **
  99:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  ******************************************************************************/
 100:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 101:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** #include <DAVE3.h>
 102:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 103:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 104:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /*****************************************************************************
 105:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****               DUMMY DEFINTIONS OF DEBUG LOG MACROS
 106:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** *****************************************************************************/
 107:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /*These definitions are included here to avoid compilation errors,
 108:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  since the DBG002 app is not part of the project. All the macros are defined
 109:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  as empty*/
 110:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** #ifndef _DBG002_H_
 111:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 112:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** #define DBG002_RegisterCallBack(A,B,C)
 113:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** #define DBG002_I(e)
 114:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** #define DBG002_IG(e,g)
 115:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** #define DBG002_IH(e,h)
 116:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** #define DBG002_IP(e,p)
 117:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** #define DBG002_IGH(e,g,h)
 118:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** #define DBG002_IGP(e,g,p)
 119:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** #define DBG002_IHP(e,h,p)
 120:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** #define DBG002_IGHP(e,g,h,p)
 121:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** #define DBG002_N(e)
 122:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** #define DBG002_NG(e,g)
 123:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** #define DBG002_NH(e,h)
 124:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** #define DBG002_NP(e,p)
 125:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** #define DBG002_NGH(e,g,h)
 126:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** #define DBG002_NGP(e,g,p)
 127:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** #define DBG002_NHP(e,h,p)
 128:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** #define DBG002_NGHP(e,g,h,p)
 129:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** #define DBG002_ID(e)
 130:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** #define DBG002_IS(e)
 131:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** #define DBG002_ISG(e,g)
 132:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** #define DBG002_SAFETY_CRITICAL(groupid,messageid,length,value)
 133:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** #define DBG002_CRITICAL(groupid,messageid,length,value)
 134:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** #define DBG002_ERROR(groupid,messageid,length,value)
 135:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** #define DBG002_WARNING(groupid,messageid,length,value)
 136:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** #define DBG002_INFO(groupid,messageid,length,value)
 137:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** #define DBG002_TRACE(groupid,messageid,length,value)
 138:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** #define DBG002_FUNCTION_ENTRY(GID, Status)
 139:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** #define DBG002_FUNCTION_EXIT(GID, Status)
 140:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 141:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** #define DBG002_MESSAGEID_LITERAL
 142:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 143:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** #endif/* End of defintions of dummy Debug Log macros*/
 144:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 145:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 146:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /*******************************************************************************
 147:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** **                      Private Macro Definitions                             **
 148:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** *******************************************************************************/
 149:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** #define APP_GID DBG002_GID_ADCGLOB001
 150:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 151:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /**
 152:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * @cond INTERNAL_DOCS
 153:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  */
 154:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /*******************************************************************************
 155:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  **                              API DEFINITION
 156:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  *******************************************************************************/
 157:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 158:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /**
 159:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  *This function initialize all VADC Global registers based on GUI configuration.
 160:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  */
 161:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** void ADCGLOB001_Init(void)
 162:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** {
  28              		.loc 1 162 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 82B0     		sub	sp, sp, #8
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 16
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
 163:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     status_t Status = (uint32_t)ADCGLOB001_OPER_NOT_ALLOWED;
  43              		.loc 1 163 0
  44 0006 4FF00103 		mov	r3, #1
  45 000a 7B60     		str	r3, [r7, #4]
 164:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 165:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if(ADCGLOB001_Handle0.kDynamicDataPtr->StateType == ADCGLOB001_UNINITIALIZED )
  46              		.loc 1 165 0
  47 000c 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
  48 0010 C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
  49 0014 5B68     		ldr	r3, [r3, #4]
  50 0016 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
  51 0018 002B     		cmp	r3, #0
  52 001a 40F0BC80 		bne	.L1
 166:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {        
 167:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         /* Bring ADC Module Out of Reset
 168:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****          *  This is not applicable for XMC1000
 169:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****          */
 170:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         RESET001_DeassertReset(PER0_VADC);
  53              		.loc 1 170 0
  54 001e 4FF00100 		mov	r0, #1
  55 0022 FFF7FEFF 		bl	RESET001_DeassertReset
 171:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         /* Bring the module out of disabled state.*/
 172:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         CLR_BIT( ADCGLOB001_Handle0.kGlobalPtr->CLC, VADC_CLC_DISR_Pos);
  56              		.loc 1 172 0
  57 0026 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
  58 002a C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
  59 002e 1A68     		ldr	r2, [r3, #0]
  60 0030 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
  61 0034 C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
  62 0038 1B68     		ldr	r3, [r3, #0]
  63 003a 1B68     		ldr	r3, [r3, #0]
  64 003c 23F00103 		bic	r3, r3, #1
  65 0040 1360     		str	r3, [r2, #0]
 173:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         /**
 174:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****          * Make divider bit fields writable.
 175:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****          * Configure Divider Factor for the Analog Internal Clock.
 176:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****          * Configure Divider Factor for the Arbiter Clock.
 177:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****          * Configure Double Clock for the MSB Conversion.
 178:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****          */
 179:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         ADCGLOB001_Handle0.kGlobalPtr->GLOBCFG = \
  66              		.loc 1 179 0
  67 0042 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
  68 0046 C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
  69 004a 1A68     		ldr	r2, [r3, #0]
 180:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 (uint32_t)(((uint32_t)1<<VADC_GLOBCFG_DIVWC_Pos)| \
 181:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                         (((uint32_t)ADCGLOB001_Handle0.kArbiterClkDivider <<VADC_GLOBCFG_DIVD_Pos) 
  70              		.loc 1 181 0
  71 004c 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
  72 0050 C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
  73 0054 5B7B     		ldrb	r3, [r3, #13]	@ zero_extendqisi2
  74 0056 4FEA0323 		lsl	r3, r3, #8
  75 005a 03F44071 		and	r1, r3, #768
 182:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                         (((uint32_t)ADCGLOB001_Handle0.kAnalogClkDivider <<VADC_GLOBCFG_DIVA_Pos)&V
  76              		.loc 1 182 0
  77 005e 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
  78 0062 C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
  79 0066 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
  80 0068 03F01F03 		and	r3, r3, #31
 180:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 (uint32_t)(((uint32_t)1<<VADC_GLOBCFG_DIVWC_Pos)| \
  81              		.loc 1 180 0
  82 006c 0B43     		orrs	r3, r3, r1
  83 006e 43F40043 		orr	r3, r3, #32768
 179:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         ADCGLOB001_Handle0.kGlobalPtr->GLOBCFG = \
  84              		.loc 1 179 0
  85 0072 C2F88030 		str	r3, [r2, #128]
 183:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         /* Make the divider bit fields write protected */
 184:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         CLR_BIT( ADCGLOB001_Handle0.kGlobalPtr->GLOBCFG, VADC_GLOBCFG_DIVWC_Pos);
  86              		.loc 1 184 0
  87 0076 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
  88 007a C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
  89 007e 1A68     		ldr	r2, [r3, #0]
  90 0080 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
  91 0084 C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
  92 0088 1B68     		ldr	r3, [r3, #0]
  93 008a D3F88030 		ldr	r3, [r3, #128]
  94 008e 23F40043 		bic	r3, r3, #32768
  95 0092 C2F88030 		str	r3, [r2, #128]
 185:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 186:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         /**
 187:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****          * Configure Class0 Sample Time Control for Standard Conversion.
 188:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****          * Configure Class0 Sample Time Control for EMUX Conversion.
 189:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****          * Configure Class0 Conversion Mode for Standard Conversion.
 190:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****          * Configure Class0 Conversion Mode for EMUX Conversion.
 191:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****          */
 192:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         ADCGLOB001_Handle0.kGlobalPtr->GLOBICLASS[0] = \
  96              		.loc 1 192 0
  97 0096 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
  98 009a C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
  99 009e 1A68     		ldr	r2, [r3, #0]
 193:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 (uint32_t)((((uint32_t)ADCGLOB001_Handle0.kEMUXConversionModeClass0 << VADC_GLOBICL
 100              		.loc 1 193 0
 101 00a0 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
 102 00a4 C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
 103 00a8 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 104 00aa 4FEA0363 		lsl	r3, r3, #24
 105 00ae 03F0E061 		and	r1, r3, #117440512
 194:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                         (((uint32_t)ADCGLOB001_Handle0.kEMUXSampleTimeControlClass0 <<VADC_GLOBICLA
 106              		.loc 1 194 0
 107 00b2 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
 108 00b6 C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
 109 00ba 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 110 00bc 4FEA0343 		lsl	r3, r3, #16
 111 00c0 03F4F813 		and	r3, r3, #2031616
 193:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 (uint32_t)((((uint32_t)ADCGLOB001_Handle0.kEMUXConversionModeClass0 << VADC_GLOBICL
 112              		.loc 1 193 0
 113 00c4 1943     		orrs	r1, r1, r3
 195:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                         (((uint32_t)ADCGLOB001_Handle0.kConversionModeClass0 <<VADC_GLOBICLASS_CMS_
 114              		.loc 1 195 0
 115 00c6 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
 116 00ca C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
 117 00ce 9B7C     		ldrb	r3, [r3, #18]	@ zero_extendqisi2
 118 00d0 4FEA0323 		lsl	r3, r3, #8
 119 00d4 03F4E063 		and	r3, r3, #1792
 194:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                         (((uint32_t)ADCGLOB001_Handle0.kEMUXSampleTimeControlClass0 <<VADC_GLOBICLA
 120              		.loc 1 194 0
 121 00d8 1943     		orrs	r1, r1, r3
 196:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                         (((uint32_t)ADCGLOB001_Handle0.kSampleTimeControlClass0 <<VADC_GLOBICLASS_S
 122              		.loc 1 196 0
 123 00da 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
 124 00de C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
 125 00e2 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
 126 00e4 03F01F03 		and	r3, r3, #31
 193:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 (uint32_t)((((uint32_t)ADCGLOB001_Handle0.kEMUXConversionModeClass0 << VADC_GLOBICL
 127              		.loc 1 193 0
 128 00e8 0B43     		orrs	r3, r3, r1
 192:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         ADCGLOB001_Handle0.kGlobalPtr->GLOBICLASS[0] = \
 129              		.loc 1 192 0
 130 00ea C2F8A030 		str	r3, [r2, #160]
 197:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         /**
 198:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****          * Configure Class1 Sample Time Control for Standard Conversion.
 199:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****          * Configure Class1 Sample Time Control for EMUX Conversion.
 200:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****          * Configure Class1 Conversion Mode for Standard Conversion.
 201:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****          * Configure Class1 Conversion Mode for EMUX Conversion.
 202:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****          */
 203:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         ADCGLOB001_Handle0.kGlobalPtr->GLOBICLASS[1] = \
 131              		.loc 1 203 0
 132 00ee 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
 133 00f2 C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
 134 00f6 1A68     		ldr	r2, [r3, #0]
 204:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 (uint32_t)((((uint32_t)ADCGLOB001_Handle0.kEMUXConversionModeClass1 << VADC_GLOBICL
 135              		.loc 1 204 0
 136 00f8 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
 137 00fc C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
 138 0100 5B7D     		ldrb	r3, [r3, #21]	@ zero_extendqisi2
 139 0102 4FEA0363 		lsl	r3, r3, #24
 140 0106 03F0E061 		and	r1, r3, #117440512
 205:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                         (((uint32_t)ADCGLOB001_Handle0.kEMUXSampleTimeControlClass1 <<VADC_GLOBICLA
 141              		.loc 1 205 0
 142 010a 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
 143 010e C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
 144 0112 5B7C     		ldrb	r3, [r3, #17]	@ zero_extendqisi2
 145 0114 4FEA0343 		lsl	r3, r3, #16
 146 0118 03F4F813 		and	r3, r3, #2031616
 204:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 (uint32_t)((((uint32_t)ADCGLOB001_Handle0.kEMUXConversionModeClass1 << VADC_GLOBICL
 147              		.loc 1 204 0
 148 011c 1943     		orrs	r1, r1, r3
 206:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                         (((uint32_t)ADCGLOB001_Handle0.kConversionModeClass1 <<VADC_GLOBICLASS_CMS_
 149              		.loc 1 206 0
 150 011e 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
 151 0122 C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
 152 0126 DB7C     		ldrb	r3, [r3, #19]	@ zero_extendqisi2
 153 0128 4FEA0323 		lsl	r3, r3, #8
 154 012c 03F4E063 		and	r3, r3, #1792
 205:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                         (((uint32_t)ADCGLOB001_Handle0.kEMUXSampleTimeControlClass1 <<VADC_GLOBICLA
 155              		.loc 1 205 0
 156 0130 1943     		orrs	r1, r1, r3
 207:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                         (((uint32_t)ADCGLOB001_Handle0.kSampleTimeControlClass1<<VADC_GLOBICLASS_ST
 157              		.loc 1 207 0
 158 0132 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
 159 0136 C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
 160 013a DB7B     		ldrb	r3, [r3, #15]	@ zero_extendqisi2
 161 013c 03F01F03 		and	r3, r3, #31
 204:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 (uint32_t)((((uint32_t)ADCGLOB001_Handle0.kEMUXConversionModeClass1 << VADC_GLOBICL
 162              		.loc 1 204 0
 163 0140 0B43     		orrs	r3, r3, r1
 203:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         ADCGLOB001_Handle0.kGlobalPtr->GLOBICLASS[1] = \
 164              		.loc 1 203 0
 165 0142 C2F8A430 		str	r3, [r2, #164]
 208:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 209:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         /* Configure the lower and upper boundary based on the GUI configuration.*/
 210:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         ADCGLOB001_Handle0.kGlobalPtr->GLOBBOUND = \
 166              		.loc 1 210 0
 167 0146 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
 168 014a C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
 169 014e 1968     		ldr	r1, [r3, #0]
 211:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 (uint32_t)((((uint32_t)ADCGLOB001_Handle0.KGlobBoundary1 <<VADC_GLOBBOUND_BOUNDARY1
 170              		.loc 1 211 0
 171 0150 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
 172 0154 C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
 173 0158 5B89     		ldrh	r3, [r3, #10]
 174 015a 4FEA0342 		lsl	r2, r3, #16
 175 015e 4FF00003 		mov	r3, #0
 176 0162 C0F6FF73 		movt	r3, 4095
 177 0166 1340     		ands	r3, r3, r2
 212:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                         (((uint32_t)ADCGLOB001_Handle0.KGlobBoundary0 <<VADC_GLOBBOUND_BOUNDARY0_Po
 178              		.loc 1 212 0
 179 0168 40F20002 		movw	r2, #:lower16:ADCGLOB001_Handle0
 180 016c C0F20002 		movt	r2, #:upper16:ADCGLOB001_Handle0
 181 0170 1289     		ldrh	r2, [r2, #8]
 182 0172 4FEA0252 		lsl	r2, r2, #20
 183 0176 4FEA1252 		lsr	r2, r2, #20
 211:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 (uint32_t)((((uint32_t)ADCGLOB001_Handle0.KGlobBoundary1 <<VADC_GLOBBOUND_BOUNDARY1
 184              		.loc 1 211 0
 185 017a 1343     		orrs	r3, r3, r2
 210:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         ADCGLOB001_Handle0.kGlobalPtr->GLOBBOUND = \
 186              		.loc 1 210 0
 187 017c C1F8B830 		str	r3, [r1, #184]
 213:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         ADCGLOB001_Handle0.kDynamicDataPtr->StateType = ADCGLOB001_INITIALIZED;
 188              		.loc 1 213 0
 189 0180 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
 190 0184 C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
 191 0188 5B68     		ldr	r3, [r3, #4]
 192 018a 4FF00102 		mov	r2, #1
 193 018e 1A70     		strb	r2, [r3, #0]
 214:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         Status &= (uint32_t)DAVEApp_SUCCESS;
 194              		.loc 1 214 0
 195 0190 4FF00003 		mov	r3, #0
 196 0194 7B60     		str	r3, [r7, #4]
 197              	.L1:
 215:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     } else {
 216:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****       DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, 1, &Status);
 217:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 218:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 219:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** }
 198              		.loc 1 219 0
 199 0196 07F10807 		add	r7, r7, #8
 200 019a BD46     		mov	sp, r7
 201 019c 80BD     		pop	{r7, pc}
 202              		.cfi_endproc
 203              	.LFE117:
 205 019e 00BF     		.section	.text.ADCGLOB001_DeInit,"ax",%progbits
 206              		.align	2
 207              		.global	ADCGLOB001_DeInit
 208              		.thumb
 209              		.thumb_func
 211              	ADCGLOB001_DeInit:
 212              	.LFB118:
 220:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 221:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /**
 222:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * This function will de-initialize VADC Global registers.
 223:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  */
 224:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** status_t ADCGLOB001_DeInit(const ADCGLOB001_HandleType * HandlePtr)
 225:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** {
 213              		.loc 1 225 0
 214              		.cfi_startproc
 215              		@ args = 0, pretend = 0, frame = 16
 216              		@ frame_needed = 1, uses_anonymous_args = 0
 217              		@ link register save eliminated.
 218 0000 80B4     		push	{r7}
 219              	.LCFI3:
 220              		.cfi_def_cfa_offset 4
 221              		.cfi_offset 7, -4
 222 0002 85B0     		sub	sp, sp, #20
 223              	.LCFI4:
 224              		.cfi_def_cfa_offset 24
 225 0004 00AF     		add	r7, sp, #0
 226              	.LCFI5:
 227              		.cfi_def_cfa_register 7
 228 0006 7860     		str	r0, [r7, #4]
 226:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     status_t Status = (uint32_t)ADCGLOB001_OPER_NOT_ALLOWED;
 229              		.loc 1 226 0
 230 0008 4FF00103 		mov	r3, #1
 231 000c FB60     		str	r3, [r7, #12]
 227:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 228:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if(HandlePtr->kDynamicDataPtr->StateType == ADCGLOB001_INITIALIZED )
 232              		.loc 1 228 0
 233 000e 7B68     		ldr	r3, [r7, #4]
 234 0010 5B68     		ldr	r3, [r3, #4]
 235 0012 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 236 0014 012B     		cmp	r3, #1
 237 0016 37D1     		bne	.L4
 229:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 230:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         /* Bring the module out of disabled state */
 231:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         CLR_BIT( HandlePtr->kGlobalPtr->CLC, VADC_CLC_DISR_Pos);
 238              		.loc 1 231 0
 239 0018 7B68     		ldr	r3, [r7, #4]
 240 001a 1B68     		ldr	r3, [r3, #0]
 241 001c 7A68     		ldr	r2, [r7, #4]
 242 001e 1268     		ldr	r2, [r2, #0]
 243 0020 1268     		ldr	r2, [r2, #0]
 244 0022 22F00102 		bic	r2, r2, #1
 245 0026 1A60     		str	r2, [r3, #0]
 232:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 233:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         /* Make divider bit fields writable and deconfigure Analog Internal Clock,
 234:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****      Arbiter Clock & MSB Conversion bits.*/
 235:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         HandlePtr->kGlobalPtr->GLOBCFG = \
 246              		.loc 1 235 0
 247 0028 7B68     		ldr	r3, [r7, #4]
 248 002a 1A68     		ldr	r2, [r3, #0]
 249 002c 4FF66043 		movw	r3, #64608
 250 0030 CFF6FF73 		movt	r3, 65535
 251 0034 C2F88030 		str	r3, [r2, #128]
 236:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 (((uint32_t)1<<VADC_GLOBCFG_DIVWC_Pos)|((~(VADC_GLOBCFG_DIVD_Msk))& \
 237:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                         (~(VADC_GLOBCFG_DCMSB_Msk)) & (~(VADC_GLOBCFG_DIVA_Msk))));
 238:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 239:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         /* Again make the divider bit fields write protected */
 240:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         CLR_BIT( HandlePtr->kGlobalPtr->GLOBCFG, VADC_GLOBCFG_DIVWC_Pos);
 252              		.loc 1 240 0
 253 0038 7B68     		ldr	r3, [r7, #4]
 254 003a 1B68     		ldr	r3, [r3, #0]
 255 003c 7A68     		ldr	r2, [r7, #4]
 256 003e 1268     		ldr	r2, [r2, #0]
 257 0040 D2F88020 		ldr	r2, [r2, #128]
 258 0044 22F40042 		bic	r2, r2, #32768
 259 0048 C3F88020 		str	r2, [r3, #128]
 241:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 242:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         /*
 243:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****          * Configure Class0 Sample Time Control for Standard Conversion into default
 244:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****          *  mode.
 245:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****          * Configure Class0 Conversion Mode for Standard Conversion into default mode.
 246:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****          * Configure Class0 Sample Time Control for EMUX Conversion into default mode.
 247:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****          * Configure Class0  Conversion Mode for EMUX Conversion into default mode.
 248:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****          */
 249:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         HandlePtr->kGlobalPtr->GLOBICLASS[0] = \
 260              		.loc 1 249 0
 261 004c 7B68     		ldr	r3, [r7, #4]
 262 004e 1A68     		ldr	r2, [r3, #0]
 263 0050 4FF6E003 		movw	r3, #63712
 264 0054 CFF6E003 		movt	r3, 63712
 265 0058 C2F8A030 		str	r3, [r2, #160]
 250:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 ((~(VADC_GLOBICLASS_CME_Msk))&(~(VADC_GLOBICLASS_STCE_Msk))& \
 251:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                         (~(VADC_GLOBICLASS_CMS_Msk))&(~(VADC_GLOBICLASS_STCS_Msk)));
 252:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         /*
 253:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****          * Configure Class1 Sample Time Control for Standard Conversion into default
 254:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****          *  mode.
 255:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****          * Configure Class1 Conversion Mode for Standard Conversion into default mode.
 256:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****          * Configure Class1 Sample Time Control for EMUX Conversion into default mode.
 257:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****          * Configure Class1  Conversion Mode for EMUX Conversion into default mode.
 258:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****          */
 259:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         HandlePtr->kGlobalPtr->GLOBICLASS[1] = \
 266              		.loc 1 259 0
 267 005c 7B68     		ldr	r3, [r7, #4]
 268 005e 1A68     		ldr	r2, [r3, #0]
 269 0060 4FF6E003 		movw	r3, #63712
 270 0064 CFF6E003 		movt	r3, 63712
 271 0068 C2F8A430 		str	r3, [r2, #164]
 260:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 ((~(VADC_GLOBICLASS_CME_Msk))&(~(VADC_GLOBICLASS_STCE_Msk))& \
 261:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                         (~(VADC_GLOBICLASS_CMS_Msk))&(~(VADC_GLOBICLASS_STCS_Msk)));
 262:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 263:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         /* Configure global lower and upper boundary value into default value.*/
 264:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         HandlePtr->kGlobalPtr->GLOBBOUND = \
 272              		.loc 1 264 0
 273 006c 7B68     		ldr	r3, [r7, #4]
 274 006e 1B68     		ldr	r3, [r3, #0]
 275 0070 4FF0F022 		mov	r2, #-268374016
 276 0074 C3F8B820 		str	r2, [r3, #184]
 265:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 ((~(VADC_GLOBBOUND_BOUNDARY1_Msk))&(~(VADC_GLOBBOUND_BOUNDARY0_Msk)));
 266:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 267:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         HandlePtr->kDynamicDataPtr->StateType = ADCGLOB001_UNINITIALIZED;
 277              		.loc 1 267 0
 278 0078 7B68     		ldr	r3, [r7, #4]
 279 007a 5B68     		ldr	r3, [r3, #4]
 280 007c 4FF00002 		mov	r2, #0
 281 0080 1A70     		strb	r2, [r3, #0]
 268:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         Status = (uint32_t)DAVEApp_SUCCESS;
 282              		.loc 1 268 0
 283 0082 4FF00003 		mov	r3, #0
 284 0086 FB60     		str	r3, [r7, #12]
 285              	.L4:
 269:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     } else {
 270:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****       DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, 1, &Status);
 271:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 272:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 273:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     return Status;
 286              		.loc 1 273 0
 287 0088 FB68     		ldr	r3, [r7, #12]
 274:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** }
 288              		.loc 1 274 0
 289 008a 1846     		mov	r0, r3
 290 008c 07F11407 		add	r7, r7, #20
 291 0090 BD46     		mov	sp, r7
 292 0092 80BC     		pop	{r7}
 293 0094 7047     		bx	lr
 294              		.cfi_endproc
 295              	.LFE118:
 297 0096 00BF     		.section	.text.ADCGLOB001_CLKRequestDisable,"ax",%progbits
 298              		.align	2
 299              		.global	ADCGLOB001_CLKRequestDisable
 300              		.thumb
 301              		.thumb_func
 303              	ADCGLOB001_CLKRequestDisable:
 304              	.LFB119:
 275:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 276:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /**
 277:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * This function disable the control of the module.
 278:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  */
 279:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** status_t ADCGLOB001_CLKRequestDisable(const ADCGLOB001_HandleType * HandlePtr)
 280:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** {
 305              		.loc 1 280 0
 306              		.cfi_startproc
 307              		@ args = 0, pretend = 0, frame = 16
 308              		@ frame_needed = 1, uses_anonymous_args = 0
 309              		@ link register save eliminated.
 310 0000 80B4     		push	{r7}
 311              	.LCFI6:
 312              		.cfi_def_cfa_offset 4
 313              		.cfi_offset 7, -4
 314 0002 85B0     		sub	sp, sp, #20
 315              	.LCFI7:
 316              		.cfi_def_cfa_offset 24
 317 0004 00AF     		add	r7, sp, #0
 318              	.LCFI8:
 319              		.cfi_def_cfa_register 7
 320 0006 7860     		str	r0, [r7, #4]
 281:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     status_t Status = (uint32_t)ADCGLOB001_OPER_NOT_ALLOWED;
 321              		.loc 1 281 0
 322 0008 4FF00103 		mov	r3, #1
 323 000c FB60     		str	r3, [r7, #12]
 282:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 283:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (HandlePtr->kDynamicDataPtr->StateType == ADCGLOB001_INITIALIZED)
 324              		.loc 1 283 0
 325 000e 7B68     		ldr	r3, [r7, #4]
 326 0010 5B68     		ldr	r3, [r3, #4]
 327 0012 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 328 0014 012B     		cmp	r3, #1
 329 0016 0AD1     		bne	.L7
 284:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 285:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 286:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         /* Bring the module in disabled state
 287:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****          * Module Disable Request Bit
 288:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****          * 0 : enable the module clock
 289:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****          * 1 : stop the module clock */
 290:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 291:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         SET_BIT( HandlePtr->kGlobalPtr->CLC, VADC_CLC_DISR_Pos);
 330              		.loc 1 291 0
 331 0018 7B68     		ldr	r3, [r7, #4]
 332 001a 1B68     		ldr	r3, [r3, #0]
 333 001c 7A68     		ldr	r2, [r7, #4]
 334 001e 1268     		ldr	r2, [r2, #0]
 335 0020 1268     		ldr	r2, [r2, #0]
 336 0022 42F00102 		orr	r2, r2, #1
 337 0026 1A60     		str	r2, [r3, #0]
 292:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 293:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         Status = (uint32_t)DAVEApp_SUCCESS;
 338              		.loc 1 293 0
 339 0028 4FF00003 		mov	r3, #0
 340 002c FB60     		str	r3, [r7, #12]
 341              	.L7:
 294:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 295:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 296:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 297:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (Status != (uint32_t)DAVEApp_SUCCESS)
 298:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 299:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****       DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, 1, &Status);
 300:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 301:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 302:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     return Status;
 342              		.loc 1 302 0
 343 002e FB68     		ldr	r3, [r7, #12]
 303:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** }
 344              		.loc 1 303 0
 345 0030 1846     		mov	r0, r3
 346 0032 07F11407 		add	r7, r7, #20
 347 0036 BD46     		mov	sp, r7
 348 0038 80BC     		pop	{r7}
 349 003a 7047     		bx	lr
 350              		.cfi_endproc
 351              	.LFE119:
 353              		.section	.text.ADCGLOB001_CLKRequestEnable,"ax",%progbits
 354              		.align	2
 355              		.global	ADCGLOB001_CLKRequestEnable
 356              		.thumb
 357              		.thumb_func
 359              	ADCGLOB001_CLKRequestEnable:
 360              	.LFB120:
 304:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /**
 305:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * This function enable the control of the module.
 306:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  */
 307:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** status_t ADCGLOB001_CLKRequestEnable(const ADCGLOB001_HandleType * HandlePtr)
 308:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** {
 361              		.loc 1 308 0
 362              		.cfi_startproc
 363              		@ args = 0, pretend = 0, frame = 16
 364              		@ frame_needed = 1, uses_anonymous_args = 0
 365              		@ link register save eliminated.
 366 0000 80B4     		push	{r7}
 367              	.LCFI9:
 368              		.cfi_def_cfa_offset 4
 369              		.cfi_offset 7, -4
 370 0002 85B0     		sub	sp, sp, #20
 371              	.LCFI10:
 372              		.cfi_def_cfa_offset 24
 373 0004 00AF     		add	r7, sp, #0
 374              	.LCFI11:
 375              		.cfi_def_cfa_register 7
 376 0006 7860     		str	r0, [r7, #4]
 309:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     status_t Status = (uint32_t)ADCGLOB001_OPER_NOT_ALLOWED;
 377              		.loc 1 309 0
 378 0008 4FF00103 		mov	r3, #1
 379 000c FB60     		str	r3, [r7, #12]
 310:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 311:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (HandlePtr->kDynamicDataPtr->StateType == ADCGLOB001_INITIALIZED)
 380              		.loc 1 311 0
 381 000e 7B68     		ldr	r3, [r7, #4]
 382 0010 5B68     		ldr	r3, [r3, #4]
 383 0012 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 384 0014 012B     		cmp	r3, #1
 385 0016 0AD1     		bne	.L10
 312:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 313:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         /* Bring the module out of disabled state */
 314:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 315:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         CLR_BIT( HandlePtr->kGlobalPtr->CLC, VADC_CLC_DISR_Pos);
 386              		.loc 1 315 0
 387 0018 7B68     		ldr	r3, [r7, #4]
 388 001a 1B68     		ldr	r3, [r3, #0]
 389 001c 7A68     		ldr	r2, [r7, #4]
 390 001e 1268     		ldr	r2, [r2, #0]
 391 0020 1268     		ldr	r2, [r2, #0]
 392 0022 22F00102 		bic	r2, r2, #1
 393 0026 1A60     		str	r2, [r3, #0]
 316:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 317:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         Status = (uint32_t)DAVEApp_SUCCESS;
 394              		.loc 1 317 0
 395 0028 4FF00003 		mov	r3, #0
 396 002c FB60     		str	r3, [r7, #12]
 397              	.L10:
 318:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 319:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 320:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (Status != (uint32_t)DAVEApp_SUCCESS)
 321:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 322:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****       DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, 1, &Status);
 323:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 324:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 325:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     return Status;
 398              		.loc 1 325 0
 399 002e FB68     		ldr	r3, [r7, #12]
 326:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** }
 400              		.loc 1 326 0
 401 0030 1846     		mov	r0, r3
 402 0032 07F11407 		add	r7, r7, #20
 403 0036 BD46     		mov	sp, r7
 404 0038 80BC     		pop	{r7}
 405 003a 7047     		bx	lr
 406              		.cfi_endproc
 407              	.LFE120:
 409              		.section	.text.ADCGLOB001_SetStartUpCalibration,"ax",%progbits
 410              		.align	2
 411              		.global	ADCGLOB001_SetStartUpCalibration
 412              		.thumb
 413              		.thumb_func
 415              	ADCGLOB001_SetStartUpCalibration:
 416              	.LFB121:
 327:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /**
 328:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * This function Initiate the start-up calibration phase.
 329:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  */
 330:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 331:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** status_t ADCGLOB001_SetStartUpCalibration(
 332:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         const ADCGLOB001_HandleType *HandlePtr
 333:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** )
 334:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** {
 417              		.loc 1 334 0
 418              		.cfi_startproc
 419              		@ args = 0, pretend = 0, frame = 16
 420              		@ frame_needed = 1, uses_anonymous_args = 0
 421              		@ link register save eliminated.
 422 0000 80B4     		push	{r7}
 423              	.LCFI12:
 424              		.cfi_def_cfa_offset 4
 425              		.cfi_offset 7, -4
 426 0002 85B0     		sub	sp, sp, #20
 427              	.LCFI13:
 428              		.cfi_def_cfa_offset 24
 429 0004 00AF     		add	r7, sp, #0
 430              	.LCFI14:
 431              		.cfi_def_cfa_register 7
 432 0006 7860     		str	r0, [r7, #4]
 335:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     status_t Status = (uint32_t)ADCGLOB001_OPER_NOT_ALLOWED;
 433              		.loc 1 335 0
 434 0008 4FF00103 		mov	r3, #1
 435 000c FB60     		str	r3, [r7, #12]
 336:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 337:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (HandlePtr->kDynamicDataPtr->StateType == ADCGLOB001_INITIALIZED)
 436              		.loc 1 337 0
 437 000e 7B68     		ldr	r3, [r7, #4]
 438 0010 5B68     		ldr	r3, [r3, #4]
 439 0012 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 440 0014 012B     		cmp	r3, #1
 441 0016 0CD1     		bne	.L13
 338:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 339:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         /* Initiate Start-Up Calibration */
 340:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 341:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         SET_BIT( HandlePtr->kGlobalPtr->GLOBCFG, VADC_GLOBCFG_SUCAL_Pos);
 442              		.loc 1 341 0
 443 0018 7B68     		ldr	r3, [r7, #4]
 444 001a 1B68     		ldr	r3, [r3, #0]
 445 001c 7A68     		ldr	r2, [r7, #4]
 446 001e 1268     		ldr	r2, [r2, #0]
 447 0020 D2F88020 		ldr	r2, [r2, #128]
 448 0024 42F00042 		orr	r2, r2, #-2147483648
 449 0028 C3F88020 		str	r2, [r3, #128]
 342:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 343:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         Status = (uint32_t)DAVEApp_SUCCESS;
 450              		.loc 1 343 0
 451 002c 4FF00003 		mov	r3, #0
 452 0030 FB60     		str	r3, [r7, #12]
 453              	.L13:
 344:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 345:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 346:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (Status != (uint32_t)DAVEApp_SUCCESS)
 347:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 348:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****       DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, 1, &Status);
 349:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 350:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 351:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     return Status;
 454              		.loc 1 351 0
 455 0032 FB68     		ldr	r3, [r7, #12]
 352:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** }
 456              		.loc 1 352 0
 457 0034 1846     		mov	r0, r3
 458 0036 07F11407 		add	r7, r7, #20
 459 003a BD46     		mov	sp, r7
 460 003c 80BC     		pop	{r7}
 461 003e 7047     		bx	lr
 462              		.cfi_endproc
 463              	.LFE121:
 465              		.section	.text.ADCGLOB001_StartUpCalibrationInit,"ax",%progbits
 466              		.align	2
 467              		.global	ADCGLOB001_StartUpCalibrationInit
 468              		.thumb
 469              		.thumb_func
 471              	ADCGLOB001_StartUpCalibrationInit:
 472              	.LFB122:
 353:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /**
 354:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * This function Initialise the calibration based on GUI configuration.
 355:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  */
 356:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** status_t ADCGLOB001_StartUpCalibrationInit(void)
 357:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** {
 473              		.loc 1 357 0
 474              		.cfi_startproc
 475              		@ args = 0, pretend = 0, frame = 8
 476              		@ frame_needed = 1, uses_anonymous_args = 0
 477              		@ link register save eliminated.
 478 0000 80B4     		push	{r7}
 479              	.LCFI15:
 480              		.cfi_def_cfa_offset 4
 481              		.cfi_offset 7, -4
 482 0002 83B0     		sub	sp, sp, #12
 483              	.LCFI16:
 484              		.cfi_def_cfa_offset 16
 485 0004 00AF     		add	r7, sp, #0
 486              	.LCFI17:
 487              		.cfi_def_cfa_register 7
 358:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     status_t Status = (uint32_t)ADCGLOB001_OPER_NOT_ALLOWED;
 488              		.loc 1 358 0
 489 0006 4FF00103 		mov	r3, #1
 490 000a 7B60     		str	r3, [r7, #4]
 359:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 360:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if(ADCGLOB001_Handle0.kDynamicDataPtr->StateType == ADCGLOB001_INITIALIZED )
 491              		.loc 1 360 0
 492 000c 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
 493 0010 C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
 494 0014 5B68     		ldr	r3, [r3, #4]
 495 0016 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 496 0018 012B     		cmp	r3, #1
 497 001a 19D1     		bne	.L16
 361:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 362:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         /* Initialise Calibration */
 363:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 364:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         if(ADCGLOB001_Handle0.keStartCalib == (uint8_t)1)
 498              		.loc 1 364 0
 499 001c 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
 500 0020 C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
 501 0024 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 502 0026 012B     		cmp	r3, #1
 503 0028 0FD1     		bne	.L17
 365:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         {
 366:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             /* Initiate Start-Up Calibration */
 367:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             SET_BIT( ADCGLOB001_Handle0.kGlobalPtr->GLOBCFG, VADC_GLOBCFG_SUCAL_Pos);
 504              		.loc 1 367 0
 505 002a 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
 506 002e C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
 507 0032 1A68     		ldr	r2, [r3, #0]
 508 0034 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
 509 0038 C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
 510 003c 1B68     		ldr	r3, [r3, #0]
 511 003e D3F88030 		ldr	r3, [r3, #128]
 512 0042 43F00043 		orr	r3, r3, #-2147483648
 513 0046 C2F88030 		str	r3, [r2, #128]
 514              	.L17:
 368:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             
 369:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         }
 370:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 371:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         Status = (uint32_t)DAVEApp_SUCCESS;
 515              		.loc 1 371 0
 516 004a 4FF00003 		mov	r3, #0
 517 004e 7B60     		str	r3, [r7, #4]
 518              	.L16:
 372:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 373:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 374:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (Status != (uint32_t)DAVEApp_SUCCESS)
 375:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 376:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****       DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, 1, &Status);
 377:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 378:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 379:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     return Status;
 519              		.loc 1 379 0
 520 0050 7B68     		ldr	r3, [r7, #4]
 380:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** }
 521              		.loc 1 380 0
 522 0052 1846     		mov	r0, r3
 523 0054 07F10C07 		add	r7, r7, #12
 524 0058 BD46     		mov	sp, r7
 525 005a 80BC     		pop	{r7}
 526 005c 7047     		bx	lr
 527              		.cfi_endproc
 528              	.LFE122:
 530 005e 00BF     		.section	.text.ADCGLOB001_EnableSleepModeControl,"ax",%progbits
 531              		.align	2
 532              		.global	ADCGLOB001_EnableSleepModeControl
 533              		.thumb
 534              		.thumb_func
 536              	ADCGLOB001_EnableSleepModeControl:
 537              	.LFB123:
 381:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 382:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /**
 383:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * This function Enables Sleep Mode Control.Which is used to control module?s
 384:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * reaction to sleep mode.
 385:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  */
 386:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** status_t ADCGLOB001_EnableSleepModeControl(
 387:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         const ADCGLOB001_HandleType * HandlePtr
 388:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** )
 389:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** {
 538              		.loc 1 389 0
 539              		.cfi_startproc
 540              		@ args = 0, pretend = 0, frame = 16
 541              		@ frame_needed = 1, uses_anonymous_args = 0
 542              		@ link register save eliminated.
 543 0000 80B4     		push	{r7}
 544              	.LCFI18:
 545              		.cfi_def_cfa_offset 4
 546              		.cfi_offset 7, -4
 547 0002 85B0     		sub	sp, sp, #20
 548              	.LCFI19:
 549              		.cfi_def_cfa_offset 24
 550 0004 00AF     		add	r7, sp, #0
 551              	.LCFI20:
 552              		.cfi_def_cfa_register 7
 553 0006 7860     		str	r0, [r7, #4]
 390:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     status_t Status = (uint32_t)ADCGLOB001_OPER_NOT_ALLOWED;
 554              		.loc 1 390 0
 555 0008 4FF00103 		mov	r3, #1
 556 000c FB60     		str	r3, [r7, #12]
 391:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 392:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (HandlePtr->kDynamicDataPtr->StateType == ADCGLOB001_INITIALIZED)
 557              		.loc 1 392 0
 558 000e 7B68     		ldr	r3, [r7, #4]
 559 0010 5B68     		ldr	r3, [r3, #4]
 560 0012 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 561 0014 012B     		cmp	r3, #1
 562 0016 0AD1     		bne	.L20
 393:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 394:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         /* Reset  Sleep Mode Enable Control bit*/
 395:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         CLR_BIT( HandlePtr->kGlobalPtr->CLC, VADC_CLC_EDIS_Pos);
 563              		.loc 1 395 0
 564 0018 7B68     		ldr	r3, [r7, #4]
 565 001a 1B68     		ldr	r3, [r3, #0]
 566 001c 7A68     		ldr	r2, [r7, #4]
 567 001e 1268     		ldr	r2, [r2, #0]
 568 0020 1268     		ldr	r2, [r2, #0]
 569 0022 22F00802 		bic	r2, r2, #8
 570 0026 1A60     		str	r2, [r3, #0]
 396:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 397:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         Status = (uint32_t)DAVEApp_SUCCESS;
 571              		.loc 1 397 0
 572 0028 4FF00003 		mov	r3, #0
 573 002c FB60     		str	r3, [r7, #12]
 574              	.L20:
 398:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 399:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 400:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (Status != (uint32_t)DAVEApp_SUCCESS)
 401:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 402:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****       DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, 1, &Status);
 403:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 404:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 405:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     return Status;
 575              		.loc 1 405 0
 576 002e FB68     		ldr	r3, [r7, #12]
 406:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** }
 577              		.loc 1 406 0
 578 0030 1846     		mov	r0, r3
 579 0032 07F11407 		add	r7, r7, #20
 580 0036 BD46     		mov	sp, r7
 581 0038 80BC     		pop	{r7}
 582 003a 7047     		bx	lr
 583              		.cfi_endproc
 584              	.LFE123:
 586              		.section	.text.ADCGLOB001_DisregardSleepModeControl,"ax",%progbits
 587              		.align	2
 588              		.global	ADCGLOB001_DisregardSleepModeControl
 589              		.thumb
 590              		.thumb_func
 592              	ADCGLOB001_DisregardSleepModeControl:
 593              	.LFB124:
 407:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /**
 408:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * This function disregards Sleep Mode Control.
 409:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  */
 410:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** status_t ADCGLOB001_DisregardSleepModeControl(
 411:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         const ADCGLOB001_HandleType * HandlePtr
 412:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** )
 413:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** {
 594              		.loc 1 413 0
 595              		.cfi_startproc
 596              		@ args = 0, pretend = 0, frame = 16
 597              		@ frame_needed = 1, uses_anonymous_args = 0
 598              		@ link register save eliminated.
 599 0000 80B4     		push	{r7}
 600              	.LCFI21:
 601              		.cfi_def_cfa_offset 4
 602              		.cfi_offset 7, -4
 603 0002 85B0     		sub	sp, sp, #20
 604              	.LCFI22:
 605              		.cfi_def_cfa_offset 24
 606 0004 00AF     		add	r7, sp, #0
 607              	.LCFI23:
 608              		.cfi_def_cfa_register 7
 609 0006 7860     		str	r0, [r7, #4]
 414:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     status_t Status = (uint32_t)ADCGLOB001_OPER_NOT_ALLOWED;
 610              		.loc 1 414 0
 611 0008 4FF00103 		mov	r3, #1
 612 000c FB60     		str	r3, [r7, #12]
 415:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 416:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (HandlePtr->kDynamicDataPtr->StateType == ADCGLOB001_INITIALIZED)
 613              		.loc 1 416 0
 614 000e 7B68     		ldr	r3, [r7, #4]
 615 0010 5B68     		ldr	r3, [r3, #4]
 616 0012 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 617 0014 012B     		cmp	r3, #1
 618 0016 0AD1     		bne	.L23
 417:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 418:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         /* set  Sleep Mode Enable Control bit*/
 419:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         SET_BIT( HandlePtr->kGlobalPtr->CLC, VADC_CLC_EDIS_Pos);
 619              		.loc 1 419 0
 620 0018 7B68     		ldr	r3, [r7, #4]
 621 001a 1B68     		ldr	r3, [r3, #0]
 622 001c 7A68     		ldr	r2, [r7, #4]
 623 001e 1268     		ldr	r2, [r2, #0]
 624 0020 1268     		ldr	r2, [r2, #0]
 625 0022 42F00802 		orr	r2, r2, #8
 626 0026 1A60     		str	r2, [r3, #0]
 420:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 421:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         Status = (uint32_t)DAVEApp_SUCCESS;
 627              		.loc 1 421 0
 628 0028 4FF00003 		mov	r3, #0
 629 002c FB60     		str	r3, [r7, #12]
 630              	.L23:
 422:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 423:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 424:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (Status != (uint32_t)DAVEApp_SUCCESS)
 425:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 426:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, 1, &Status);
 427:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 428:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 429:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     return Status;
 631              		.loc 1 429 0
 632 002e FB68     		ldr	r3, [r7, #12]
 430:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** }
 633              		.loc 1 430 0
 634 0030 1846     		mov	r0, r3
 635 0032 07F11407 		add	r7, r7, #20
 636 0036 BD46     		mov	sp, r7
 637 0038 80BC     		pop	{r7}
 638 003a 7047     		bx	lr
 639              		.cfi_endproc
 640              	.LFE124:
 642              		.section	.text.ADCGLOB001_SetGlobClass0ConvMode,"ax",%progbits
 643              		.align	2
 644              		.global	ADCGLOB001_SetGlobClass0ConvMode
 645              		.thumb
 646              		.thumb_func
 648              	ADCGLOB001_SetGlobClass0ConvMode:
 649              	.LFB125:
 431:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 432:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /**
 433:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * This function configure the class 0 conversion mode for standard conversions.
 434:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  */
 435:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** status_t ADCGLOB001_SetGlobClass0ConvMode(
 436:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         const ADCGLOB001_HandleType * HandlePtr,
 437:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         ADCGLOB001_ConversionMode ConversionModeVal
 438:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** )
 439:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** {
 650              		.loc 1 439 0
 651              		.cfi_startproc
 652              		@ args = 0, pretend = 0, frame = 16
 653              		@ frame_needed = 1, uses_anonymous_args = 0
 654              		@ link register save eliminated.
 655 0000 80B4     		push	{r7}
 656              	.LCFI24:
 657              		.cfi_def_cfa_offset 4
 658              		.cfi_offset 7, -4
 659 0002 85B0     		sub	sp, sp, #20
 660              	.LCFI25:
 661              		.cfi_def_cfa_offset 24
 662 0004 00AF     		add	r7, sp, #0
 663              	.LCFI26:
 664              		.cfi_def_cfa_register 7
 665 0006 7860     		str	r0, [r7, #4]
 666 0008 0B46     		mov	r3, r1
 667 000a FB70     		strb	r3, [r7, #3]
 440:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     status_t Status = (uint32_t)ADCGLOB001_OPER_NOT_ALLOWED;
 668              		.loc 1 440 0
 669 000c 4FF00103 		mov	r3, #1
 670 0010 FB60     		str	r3, [r7, #12]
 441:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 442:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (HandlePtr->kDynamicDataPtr->StateType == ADCGLOB001_INITIALIZED)
 671              		.loc 1 442 0
 672 0012 7B68     		ldr	r3, [r7, #4]
 673 0014 5B68     		ldr	r3, [r3, #4]
 674 0016 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 675 0018 012B     		cmp	r3, #1
 676 001a 1CD1     		bne	.L26
 443:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 444:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         if((ConversionModeVal < (ADCGLOB001_ConversionMode)3) ||
 677              		.loc 1 444 0
 678 001c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 679 001e 022B     		cmp	r3, #2
 680 0020 02D9     		bls	.L27
 681              		.loc 1 444 0 is_stmt 0 discriminator 1
 682 0022 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 683 0024 052B     		cmp	r3, #5
 684 0026 13D1     		bne	.L28
 685              	.L27:
 445:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 (ConversionModeVal ==(ADCGLOB001_ConversionMode)5)) {
 446:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             /* Set the global class0 conversion mode */
 447:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             WR_REG( HandlePtr->kGlobalPtr->GLOBICLASS[0],
 686              		.loc 1 447 0 is_stmt 1
 687 0028 7B68     		ldr	r3, [r7, #4]
 688 002a 1B68     		ldr	r3, [r3, #0]
 689 002c FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 690 002e 4FEA0222 		lsl	r2, r2, #8
 691 0032 02F4E061 		and	r1, r2, #1792
 692 0036 7A68     		ldr	r2, [r7, #4]
 693 0038 1268     		ldr	r2, [r2, #0]
 694 003a D2F8A020 		ldr	r2, [r2, #160]
 695 003e 22F4E062 		bic	r2, r2, #1792
 696 0042 0A43     		orrs	r2, r2, r1
 697 0044 C3F8A020 		str	r2, [r3, #160]
 448:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                     VADC_GLOBICLASS_CMS_Msk,
 449:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                     VADC_GLOBICLASS_CMS_Pos,
 450:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                     (uint32_t)ConversionModeVal
 451:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             );
 452:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 453:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             Status = (uint32_t)DAVEApp_SUCCESS;
 698              		.loc 1 453 0
 699 0048 4FF00003 		mov	r3, #0
 700 004c FB60     		str	r3, [r7, #12]
 701 004e 02E0     		b	.L26
 702              	.L28:
 454:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         }
 455:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         else
 456:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         {
 457:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             Status = (uint32_t)ADCGLOB001_INVALID_PARAM_ERROR;
 703              		.loc 1 457 0
 704 0050 4FF00203 		mov	r3, #2
 705 0054 FB60     		str	r3, [r7, #12]
 706              	.L26:
 458:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, 1, &Status);
 459:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         }
 460:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 461:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 462:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (Status != (uint32_t)DAVEApp_SUCCESS)
 463:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 464:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, 1, &Status);
 465:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 466:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 467:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     return Status;
 707              		.loc 1 467 0
 708 0056 FB68     		ldr	r3, [r7, #12]
 468:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** }
 709              		.loc 1 468 0
 710 0058 1846     		mov	r0, r3
 711 005a 07F11407 		add	r7, r7, #20
 712 005e BD46     		mov	sp, r7
 713 0060 80BC     		pop	{r7}
 714 0062 7047     		bx	lr
 715              		.cfi_endproc
 716              	.LFE125:
 718              		.section	.text.ADCGLOB001_SetGlobClass0SampleTime,"ax",%progbits
 719              		.align	2
 720              		.global	ADCGLOB001_SetGlobClass0SampleTime
 721              		.thumb
 722              		.thumb_func
 724              	ADCGLOB001_SetGlobClass0SampleTime:
 725              	.LFB126:
 469:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /**
 470:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * This function configure the class 0 Sample Time Control for Standard
 471:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * Conversions.
 472:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  */
 473:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 474:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** status_t ADCGLOB001_SetGlobClass0SampleTime(
 475:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         const ADCGLOB001_HandleType * HandlePtr,
 476:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         uint8_t SampleTime
 477:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** )
 478:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** {
 726              		.loc 1 478 0
 727              		.cfi_startproc
 728              		@ args = 0, pretend = 0, frame = 16
 729              		@ frame_needed = 1, uses_anonymous_args = 0
 730              		@ link register save eliminated.
 731 0000 80B4     		push	{r7}
 732              	.LCFI27:
 733              		.cfi_def_cfa_offset 4
 734              		.cfi_offset 7, -4
 735 0002 85B0     		sub	sp, sp, #20
 736              	.LCFI28:
 737              		.cfi_def_cfa_offset 24
 738 0004 00AF     		add	r7, sp, #0
 739              	.LCFI29:
 740              		.cfi_def_cfa_register 7
 741 0006 7860     		str	r0, [r7, #4]
 742 0008 0B46     		mov	r3, r1
 743 000a FB70     		strb	r3, [r7, #3]
 479:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     status_t Status = (uint32_t)ADCGLOB001_OPER_NOT_ALLOWED;
 744              		.loc 1 479 0
 745 000c 4FF00103 		mov	r3, #1
 746 0010 FB60     		str	r3, [r7, #12]
 480:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 481:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (HandlePtr->kDynamicDataPtr->StateType == ADCGLOB001_INITIALIZED)
 747              		.loc 1 481 0
 748 0012 7B68     		ldr	r3, [r7, #4]
 749 0014 5B68     		ldr	r3, [r3, #4]
 750 0016 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 751 0018 012B     		cmp	r3, #1
 752 001a 17D1     		bne	.L31
 482:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 483:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         if(SampleTime < (uint8_t)32){
 753              		.loc 1 483 0
 754 001c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 755 001e 1F2B     		cmp	r3, #31
 756 0020 11D8     		bhi	.L32
 484:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             /* Set the global class0 Sample Time */
 485:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             WR_REG( HandlePtr->kGlobalPtr->GLOBICLASS[0],
 757              		.loc 1 485 0
 758 0022 7B68     		ldr	r3, [r7, #4]
 759 0024 1B68     		ldr	r3, [r3, #0]
 760 0026 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 761 0028 02F01F01 		and	r1, r2, #31
 762 002c 7A68     		ldr	r2, [r7, #4]
 763 002e 1268     		ldr	r2, [r2, #0]
 764 0030 D2F8A020 		ldr	r2, [r2, #160]
 765 0034 22F01F02 		bic	r2, r2, #31
 766 0038 0A43     		orrs	r2, r2, r1
 767 003a C3F8A020 		str	r2, [r3, #160]
 486:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                     VADC_GLOBICLASS_STCS_Msk,
 487:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                     VADC_GLOBICLASS_STCS_Pos,
 488:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                     (uint32_t)SampleTime
 489:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             );
 490:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 491:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             Status = (uint32_t)DAVEApp_SUCCESS;
 768              		.loc 1 491 0
 769 003e 4FF00003 		mov	r3, #0
 770 0042 FB60     		str	r3, [r7, #12]
 771 0044 02E0     		b	.L31
 772              	.L32:
 492:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         }
 493:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         else
 494:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         {
 495:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             Status = (uint32_t)ADCGLOB001_INVALID_PARAM_ERROR;
 773              		.loc 1 495 0
 774 0046 4FF00203 		mov	r3, #2
 775 004a FB60     		str	r3, [r7, #12]
 776              	.L31:
 496:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, 1, &Status);
 497:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         }
 498:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 499:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 500:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (Status != (uint32_t)DAVEApp_SUCCESS)
 501:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 502:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, 1, &Status);
 503:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 504:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 505:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     return Status;
 777              		.loc 1 505 0
 778 004c FB68     		ldr	r3, [r7, #12]
 506:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 507:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** }
 779              		.loc 1 507 0
 780 004e 1846     		mov	r0, r3
 781 0050 07F11407 		add	r7, r7, #20
 782 0054 BD46     		mov	sp, r7
 783 0056 80BC     		pop	{r7}
 784 0058 7047     		bx	lr
 785              		.cfi_endproc
 786              	.LFE126:
 788 005a 00BF     		.section	.text.ADCGLOB001_SetGlobClass0EmuxConvMode,"ax",%progbits
 789              		.align	2
 790              		.global	ADCGLOB001_SetGlobClass0EmuxConvMode
 791              		.thumb
 792              		.thumb_func
 794              	ADCGLOB001_SetGlobClass0EmuxConvMode:
 795              	.LFB127:
 508:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /**
 509:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * This function configure the class 0 Conversion Mode for EMUX Conversions.
 510:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  */
 511:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** status_t ADCGLOB001_SetGlobClass0EmuxConvMode(
 512:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         const ADCGLOB001_HandleType * HandlePtr,
 513:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         ADCGLOB001_ConversionMode ConversionModeVal
 514:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** )
 515:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** {
 796              		.loc 1 515 0
 797              		.cfi_startproc
 798              		@ args = 0, pretend = 0, frame = 16
 799              		@ frame_needed = 1, uses_anonymous_args = 0
 800              		@ link register save eliminated.
 801 0000 80B4     		push	{r7}
 802              	.LCFI30:
 803              		.cfi_def_cfa_offset 4
 804              		.cfi_offset 7, -4
 805 0002 85B0     		sub	sp, sp, #20
 806              	.LCFI31:
 807              		.cfi_def_cfa_offset 24
 808 0004 00AF     		add	r7, sp, #0
 809              	.LCFI32:
 810              		.cfi_def_cfa_register 7
 811 0006 7860     		str	r0, [r7, #4]
 812 0008 0B46     		mov	r3, r1
 813 000a FB70     		strb	r3, [r7, #3]
 516:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     status_t Status = (uint32_t)ADCGLOB001_OPER_NOT_ALLOWED;
 814              		.loc 1 516 0
 815 000c 4FF00103 		mov	r3, #1
 816 0010 FB60     		str	r3, [r7, #12]
 517:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 518:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (HandlePtr->kDynamicDataPtr->StateType == ADCGLOB001_INITIALIZED)
 817              		.loc 1 518 0
 818 0012 7B68     		ldr	r3, [r7, #4]
 819 0014 5B68     		ldr	r3, [r3, #4]
 820 0016 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 821 0018 012B     		cmp	r3, #1
 822 001a 1CD1     		bne	.L35
 519:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 520:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         if((ConversionModeVal < (ADCGLOB001_ConversionMode)3) ||
 823              		.loc 1 520 0
 824 001c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 825 001e 022B     		cmp	r3, #2
 826 0020 02D9     		bls	.L36
 827              		.loc 1 520 0 is_stmt 0 discriminator 1
 828 0022 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 829 0024 052B     		cmp	r3, #5
 830 0026 13D1     		bne	.L37
 831              	.L36:
 521:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 (ConversionModeVal ==(ADCGLOB001_ConversionMode)5)) {
 522:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             /* Set the global class0 External Multiplexer conversion mode*/
 523:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             WR_REG( HandlePtr->kGlobalPtr->GLOBICLASS[0],
 832              		.loc 1 523 0 is_stmt 1
 833 0028 7B68     		ldr	r3, [r7, #4]
 834 002a 1B68     		ldr	r3, [r3, #0]
 835 002c FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 836 002e 4FEA0262 		lsl	r2, r2, #24
 837 0032 02F0E061 		and	r1, r2, #117440512
 838 0036 7A68     		ldr	r2, [r7, #4]
 839 0038 1268     		ldr	r2, [r2, #0]
 840 003a D2F8A020 		ldr	r2, [r2, #160]
 841 003e 22F0E062 		bic	r2, r2, #117440512
 842 0042 0A43     		orrs	r2, r2, r1
 843 0044 C3F8A020 		str	r2, [r3, #160]
 524:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                     VADC_GLOBICLASS_CME_Msk,
 525:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                     VADC_GLOBICLASS_CME_Pos,
 526:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                     (uint32_t)ConversionModeVal
 527:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             );
 528:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             Status = (uint32_t)DAVEApp_SUCCESS;
 844              		.loc 1 528 0
 845 0048 4FF00003 		mov	r3, #0
 846 004c FB60     		str	r3, [r7, #12]
 847 004e 02E0     		b	.L35
 848              	.L37:
 529:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 530:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         }
 531:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         else
 532:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         {
 533:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             Status = (uint32_t)ADCGLOB001_INVALID_PARAM_ERROR;
 849              		.loc 1 533 0
 850 0050 4FF00203 		mov	r3, #2
 851 0054 FB60     		str	r3, [r7, #12]
 852              	.L35:
 534:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, 1, &Status);
 535:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         }
 536:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 537:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 538:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (Status != (uint32_t)DAVEApp_SUCCESS)
 539:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 540:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, 1, &Status);
 541:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 542:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 543:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     return Status;
 853              		.loc 1 543 0
 854 0056 FB68     		ldr	r3, [r7, #12]
 544:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 545:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** }
 855              		.loc 1 545 0
 856 0058 1846     		mov	r0, r3
 857 005a 07F11407 		add	r7, r7, #20
 858 005e BD46     		mov	sp, r7
 859 0060 80BC     		pop	{r7}
 860 0062 7047     		bx	lr
 861              		.cfi_endproc
 862              	.LFE127:
 864              		.section	.text.ADCGLOB001_SetGlobClass0EmuxSampleTime,"ax",%progbits
 865              		.align	2
 866              		.global	ADCGLOB001_SetGlobClass0EmuxSampleTime
 867              		.thumb
 868              		.thumb_func
 870              	ADCGLOB001_SetGlobClass0EmuxSampleTime:
 871              	.LFB128:
 546:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 547:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /**
 548:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * This function configure the class 0 Sample Time Control for EMUX Conversions.
 549:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  */
 550:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** status_t ADCGLOB001_SetGlobClass0EmuxSampleTime(
 551:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         const ADCGLOB001_HandleType * HandlePtr,
 552:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         uint8_t SampleTime
 553:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** )
 554:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** {
 872              		.loc 1 554 0
 873              		.cfi_startproc
 874              		@ args = 0, pretend = 0, frame = 16
 875              		@ frame_needed = 1, uses_anonymous_args = 0
 876              		@ link register save eliminated.
 877 0000 80B4     		push	{r7}
 878              	.LCFI33:
 879              		.cfi_def_cfa_offset 4
 880              		.cfi_offset 7, -4
 881 0002 85B0     		sub	sp, sp, #20
 882              	.LCFI34:
 883              		.cfi_def_cfa_offset 24
 884 0004 00AF     		add	r7, sp, #0
 885              	.LCFI35:
 886              		.cfi_def_cfa_register 7
 887 0006 7860     		str	r0, [r7, #4]
 888 0008 0B46     		mov	r3, r1
 889 000a FB70     		strb	r3, [r7, #3]
 555:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     status_t Status = (uint32_t)ADCGLOB001_OPER_NOT_ALLOWED;
 890              		.loc 1 555 0
 891 000c 4FF00103 		mov	r3, #1
 892 0010 FB60     		str	r3, [r7, #12]
 556:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 557:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (HandlePtr->kDynamicDataPtr->StateType == ADCGLOB001_INITIALIZED)
 893              		.loc 1 557 0
 894 0012 7B68     		ldr	r3, [r7, #4]
 895 0014 5B68     		ldr	r3, [r3, #4]
 896 0016 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 897 0018 012B     		cmp	r3, #1
 898 001a 19D1     		bne	.L40
 558:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 559:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         if(SampleTime < (uint8_t)32){
 899              		.loc 1 559 0
 900 001c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 901 001e 1F2B     		cmp	r3, #31
 902 0020 13D8     		bhi	.L41
 560:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 561:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             /* Set the global class0 External Multiplexer Sample Time */
 562:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             WR_REG( HandlePtr->kGlobalPtr->GLOBICLASS[0],
 903              		.loc 1 562 0
 904 0022 7B68     		ldr	r3, [r7, #4]
 905 0024 1B68     		ldr	r3, [r3, #0]
 906 0026 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 907 0028 4FEA0242 		lsl	r2, r2, #16
 908 002c 02F4F811 		and	r1, r2, #2031616
 909 0030 7A68     		ldr	r2, [r7, #4]
 910 0032 1268     		ldr	r2, [r2, #0]
 911 0034 D2F8A020 		ldr	r2, [r2, #160]
 912 0038 22F4F812 		bic	r2, r2, #2031616
 913 003c 0A43     		orrs	r2, r2, r1
 914 003e C3F8A020 		str	r2, [r3, #160]
 563:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                     VADC_GLOBICLASS_STCE_Msk,
 564:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                     VADC_GLOBICLASS_STCE_Pos,
 565:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                     (uint32_t)SampleTime
 566:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             );
 567:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 568:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             Status = (uint32_t)DAVEApp_SUCCESS;
 915              		.loc 1 568 0
 916 0042 4FF00003 		mov	r3, #0
 917 0046 FB60     		str	r3, [r7, #12]
 918 0048 02E0     		b	.L40
 919              	.L41:
 569:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 570:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         }
 571:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         else
 572:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         {
 573:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             Status = (uint32_t)ADCGLOB001_INVALID_PARAM_ERROR;
 920              		.loc 1 573 0
 921 004a 4FF00203 		mov	r3, #2
 922 004e FB60     		str	r3, [r7, #12]
 923              	.L40:
 574:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, 1, &Status);
 575:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         }
 576:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 577:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 578:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (Status != (uint32_t)DAVEApp_SUCCESS)
 579:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 580:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, 1, &Status);
 581:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 582:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 583:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     return Status;
 924              		.loc 1 583 0
 925 0050 FB68     		ldr	r3, [r7, #12]
 584:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** }
 926              		.loc 1 584 0
 927 0052 1846     		mov	r0, r3
 928 0054 07F11407 		add	r7, r7, #20
 929 0058 BD46     		mov	sp, r7
 930 005a 80BC     		pop	{r7}
 931 005c 7047     		bx	lr
 932              		.cfi_endproc
 933              	.LFE128:
 935 005e 00BF     		.section	.text.ADCGLOB001_SetGlobClass1ConvMode,"ax",%progbits
 936              		.align	2
 937              		.global	ADCGLOB001_SetGlobClass1ConvMode
 938              		.thumb
 939              		.thumb_func
 941              	ADCGLOB001_SetGlobClass1ConvMode:
 942              	.LFB129:
 585:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /**
 586:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * This function configure the class 1 conversion mode for standard conversions.
 587:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  */
 588:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** status_t ADCGLOB001_SetGlobClass1ConvMode(
 589:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         const ADCGLOB001_HandleType * HandlePtr,
 590:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         ADCGLOB001_ConversionMode ConversionModeVal
 591:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** )
 592:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** {
 943              		.loc 1 592 0
 944              		.cfi_startproc
 945              		@ args = 0, pretend = 0, frame = 16
 946              		@ frame_needed = 1, uses_anonymous_args = 0
 947              		@ link register save eliminated.
 948 0000 80B4     		push	{r7}
 949              	.LCFI36:
 950              		.cfi_def_cfa_offset 4
 951              		.cfi_offset 7, -4
 952 0002 85B0     		sub	sp, sp, #20
 953              	.LCFI37:
 954              		.cfi_def_cfa_offset 24
 955 0004 00AF     		add	r7, sp, #0
 956              	.LCFI38:
 957              		.cfi_def_cfa_register 7
 958 0006 7860     		str	r0, [r7, #4]
 959 0008 0B46     		mov	r3, r1
 960 000a FB70     		strb	r3, [r7, #3]
 593:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     status_t Status = (uint32_t)ADCGLOB001_OPER_NOT_ALLOWED;
 961              		.loc 1 593 0
 962 000c 4FF00103 		mov	r3, #1
 963 0010 FB60     		str	r3, [r7, #12]
 594:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 595:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (HandlePtr->kDynamicDataPtr->StateType == ADCGLOB001_INITIALIZED)
 964              		.loc 1 595 0
 965 0012 7B68     		ldr	r3, [r7, #4]
 966 0014 5B68     		ldr	r3, [r3, #4]
 967 0016 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 968 0018 012B     		cmp	r3, #1
 969 001a 1CD1     		bne	.L44
 596:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 597:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         if((ConversionModeVal < (ADCGLOB001_ConversionMode)3) ||
 970              		.loc 1 597 0
 971 001c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 972 001e 022B     		cmp	r3, #2
 973 0020 02D9     		bls	.L45
 974              		.loc 1 597 0 is_stmt 0 discriminator 1
 975 0022 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 976 0024 052B     		cmp	r3, #5
 977 0026 13D1     		bne	.L46
 978              	.L45:
 598:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 (ConversionModeVal ==(ADCGLOB001_ConversionMode)5)) {
 599:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             /* Set the global class 1 conversion mode */
 600:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             WR_REG( HandlePtr->kGlobalPtr->GLOBICLASS[1],
 979              		.loc 1 600 0 is_stmt 1
 980 0028 7B68     		ldr	r3, [r7, #4]
 981 002a 1B68     		ldr	r3, [r3, #0]
 982 002c FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 983 002e 4FEA0222 		lsl	r2, r2, #8
 984 0032 02F4E061 		and	r1, r2, #1792
 985 0036 7A68     		ldr	r2, [r7, #4]
 986 0038 1268     		ldr	r2, [r2, #0]
 987 003a D2F8A420 		ldr	r2, [r2, #164]
 988 003e 22F4E062 		bic	r2, r2, #1792
 989 0042 0A43     		orrs	r2, r2, r1
 990 0044 C3F8A420 		str	r2, [r3, #164]
 601:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                     VADC_GLOBICLASS_CMS_Msk,
 602:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                     VADC_GLOBICLASS_CMS_Pos,
 603:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                     (uint32_t)ConversionModeVal
 604:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             );
 605:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 606:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             Status = (uint32_t)DAVEApp_SUCCESS;
 991              		.loc 1 606 0
 992 0048 4FF00003 		mov	r3, #0
 993 004c FB60     		str	r3, [r7, #12]
 994 004e 02E0     		b	.L44
 995              	.L46:
 607:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 608:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         }
 609:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         else
 610:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         {
 611:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             Status = (uint32_t)ADCGLOB001_INVALID_PARAM_ERROR;
 996              		.loc 1 611 0
 997 0050 4FF00203 		mov	r3, #2
 998 0054 FB60     		str	r3, [r7, #12]
 999              	.L44:
 612:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, 1, &Status);
 613:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         }
 614:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 615:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 616:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (Status != (uint32_t)DAVEApp_SUCCESS)
 617:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 618:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, 1, &Status);
 619:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 620:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 621:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     return Status;
 1000              		.loc 1 621 0
 1001 0056 FB68     		ldr	r3, [r7, #12]
 622:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** }
 1002              		.loc 1 622 0
 1003 0058 1846     		mov	r0, r3
 1004 005a 07F11407 		add	r7, r7, #20
 1005 005e BD46     		mov	sp, r7
 1006 0060 80BC     		pop	{r7}
 1007 0062 7047     		bx	lr
 1008              		.cfi_endproc
 1009              	.LFE129:
 1011              		.section	.text.ADCGLOB001_SetGlobClass1SampleTime,"ax",%progbits
 1012              		.align	2
 1013              		.global	ADCGLOB001_SetGlobClass1SampleTime
 1014              		.thumb
 1015              		.thumb_func
 1017              	ADCGLOB001_SetGlobClass1SampleTime:
 1018              	.LFB130:
 623:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /**
 624:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * This function configure the class 1 Sample Time Control for Standard
 625:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * Conversions.
 626:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  */
 627:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** status_t ADCGLOB001_SetGlobClass1SampleTime(
 628:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         const ADCGLOB001_HandleType * HandlePtr,
 629:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         uint8_t SampleTime
 630:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** )
 631:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** {
 1019              		.loc 1 631 0
 1020              		.cfi_startproc
 1021              		@ args = 0, pretend = 0, frame = 16
 1022              		@ frame_needed = 1, uses_anonymous_args = 0
 1023              		@ link register save eliminated.
 1024 0000 80B4     		push	{r7}
 1025              	.LCFI39:
 1026              		.cfi_def_cfa_offset 4
 1027              		.cfi_offset 7, -4
 1028 0002 85B0     		sub	sp, sp, #20
 1029              	.LCFI40:
 1030              		.cfi_def_cfa_offset 24
 1031 0004 00AF     		add	r7, sp, #0
 1032              	.LCFI41:
 1033              		.cfi_def_cfa_register 7
 1034 0006 7860     		str	r0, [r7, #4]
 1035 0008 0B46     		mov	r3, r1
 1036 000a FB70     		strb	r3, [r7, #3]
 632:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     status_t Status = (uint32_t)ADCGLOB001_OPER_NOT_ALLOWED;
 1037              		.loc 1 632 0
 1038 000c 4FF00103 		mov	r3, #1
 1039 0010 FB60     		str	r3, [r7, #12]
 633:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 634:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (HandlePtr->kDynamicDataPtr->StateType == ADCGLOB001_INITIALIZED)
 1040              		.loc 1 634 0
 1041 0012 7B68     		ldr	r3, [r7, #4]
 1042 0014 5B68     		ldr	r3, [r3, #4]
 1043 0016 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1044 0018 012B     		cmp	r3, #1
 1045 001a 17D1     		bne	.L49
 635:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 636:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 637:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         if(SampleTime < (uint8_t)32){
 1046              		.loc 1 637 0
 1047 001c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1048 001e 1F2B     		cmp	r3, #31
 1049 0020 11D8     		bhi	.L50
 638:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             /* Write the global class 1 Sample Time */
 639:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             WR_REG( HandlePtr->kGlobalPtr->GLOBICLASS[1],
 1050              		.loc 1 639 0
 1051 0022 7B68     		ldr	r3, [r7, #4]
 1052 0024 1B68     		ldr	r3, [r3, #0]
 1053 0026 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1054 0028 02F01F01 		and	r1, r2, #31
 1055 002c 7A68     		ldr	r2, [r7, #4]
 1056 002e 1268     		ldr	r2, [r2, #0]
 1057 0030 D2F8A420 		ldr	r2, [r2, #164]
 1058 0034 22F01F02 		bic	r2, r2, #31
 1059 0038 0A43     		orrs	r2, r2, r1
 1060 003a C3F8A420 		str	r2, [r3, #164]
 640:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                     VADC_GLOBICLASS_STCS_Msk,
 641:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                     VADC_GLOBICLASS_STCS_Pos,
 642:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                     (uint32_t)SampleTime
 643:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             );
 644:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 645:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             Status = (uint32_t)DAVEApp_SUCCESS;
 1061              		.loc 1 645 0
 1062 003e 4FF00003 		mov	r3, #0
 1063 0042 FB60     		str	r3, [r7, #12]
 1064 0044 02E0     		b	.L49
 1065              	.L50:
 646:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 647:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         }
 648:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         else
 649:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         {
 650:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             Status = (uint32_t)ADCGLOB001_INVALID_PARAM_ERROR;
 1066              		.loc 1 650 0
 1067 0046 4FF00203 		mov	r3, #2
 1068 004a FB60     		str	r3, [r7, #12]
 1069              	.L49:
 651:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, 1, &Status);
 652:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         }
 653:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 654:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 655:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (Status != (uint32_t)DAVEApp_SUCCESS)
 656:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 657:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, 1, &Status);
 658:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 659:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 660:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     return Status;
 1070              		.loc 1 660 0
 1071 004c FB68     		ldr	r3, [r7, #12]
 661:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** }
 1072              		.loc 1 661 0
 1073 004e 1846     		mov	r0, r3
 1074 0050 07F11407 		add	r7, r7, #20
 1075 0054 BD46     		mov	sp, r7
 1076 0056 80BC     		pop	{r7}
 1077 0058 7047     		bx	lr
 1078              		.cfi_endproc
 1079              	.LFE130:
 1081 005a 00BF     		.section	.text.ADCGLOB001_SetGlobClass1EmuxConvMode,"ax",%progbits
 1082              		.align	2
 1083              		.global	ADCGLOB001_SetGlobClass1EmuxConvMode
 1084              		.thumb
 1085              		.thumb_func
 1087              	ADCGLOB001_SetGlobClass1EmuxConvMode:
 1088              	.LFB131:
 662:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 663:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /**
 664:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * This function configure the class 1 Conversion Mode for EMUX Conversions.
 665:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  */
 666:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** status_t ADCGLOB001_SetGlobClass1EmuxConvMode(
 667:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         const ADCGLOB001_HandleType * HandlePtr,
 668:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         ADCGLOB001_ConversionMode ConversionModeVal
 669:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** )
 670:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** {
 1089              		.loc 1 670 0
 1090              		.cfi_startproc
 1091              		@ args = 0, pretend = 0, frame = 16
 1092              		@ frame_needed = 1, uses_anonymous_args = 0
 1093              		@ link register save eliminated.
 1094 0000 80B4     		push	{r7}
 1095              	.LCFI42:
 1096              		.cfi_def_cfa_offset 4
 1097              		.cfi_offset 7, -4
 1098 0002 85B0     		sub	sp, sp, #20
 1099              	.LCFI43:
 1100              		.cfi_def_cfa_offset 24
 1101 0004 00AF     		add	r7, sp, #0
 1102              	.LCFI44:
 1103              		.cfi_def_cfa_register 7
 1104 0006 7860     		str	r0, [r7, #4]
 1105 0008 0B46     		mov	r3, r1
 1106 000a FB70     		strb	r3, [r7, #3]
 671:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     status_t Status = (uint32_t)ADCGLOB001_OPER_NOT_ALLOWED;
 1107              		.loc 1 671 0
 1108 000c 4FF00103 		mov	r3, #1
 1109 0010 FB60     		str	r3, [r7, #12]
 672:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 673:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (HandlePtr->kDynamicDataPtr->StateType == ADCGLOB001_INITIALIZED)
 1110              		.loc 1 673 0
 1111 0012 7B68     		ldr	r3, [r7, #4]
 1112 0014 5B68     		ldr	r3, [r3, #4]
 1113 0016 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1114 0018 012B     		cmp	r3, #1
 1115 001a 1CD1     		bne	.L53
 674:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 675:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         if((ConversionModeVal < (ADCGLOB001_ConversionMode)3) ||
 1116              		.loc 1 675 0
 1117 001c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1118 001e 022B     		cmp	r3, #2
 1119 0020 02D9     		bls	.L54
 1120              		.loc 1 675 0 is_stmt 0 discriminator 1
 1121 0022 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1122 0024 052B     		cmp	r3, #5
 1123 0026 13D1     		bne	.L55
 1124              	.L54:
 676:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 (ConversionModeVal ==(ADCGLOB001_ConversionMode)5)) {
 677:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             /* Write the global class1 External Multiplexer conversion mode */
 678:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 679:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             WR_REG( HandlePtr->kGlobalPtr->GLOBICLASS[1],
 1125              		.loc 1 679 0 is_stmt 1
 1126 0028 7B68     		ldr	r3, [r7, #4]
 1127 002a 1B68     		ldr	r3, [r3, #0]
 1128 002c FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1129 002e 4FEA0262 		lsl	r2, r2, #24
 1130 0032 02F0E061 		and	r1, r2, #117440512
 1131 0036 7A68     		ldr	r2, [r7, #4]
 1132 0038 1268     		ldr	r2, [r2, #0]
 1133 003a D2F8A420 		ldr	r2, [r2, #164]
 1134 003e 22F0E062 		bic	r2, r2, #117440512
 1135 0042 0A43     		orrs	r2, r2, r1
 1136 0044 C3F8A420 		str	r2, [r3, #164]
 680:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                     VADC_GLOBICLASS_CME_Msk,
 681:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                     VADC_GLOBICLASS_CME_Pos,
 682:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                     (uint32_t)ConversionModeVal
 683:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             );
 684:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             Status = (uint32_t)DAVEApp_SUCCESS;
 1137              		.loc 1 684 0
 1138 0048 4FF00003 		mov	r3, #0
 1139 004c FB60     		str	r3, [r7, #12]
 1140 004e 02E0     		b	.L53
 1141              	.L55:
 685:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         }
 686:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         else
 687:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         {
 688:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             Status = (uint32_t)ADCGLOB001_INVALID_PARAM_ERROR;
 1142              		.loc 1 688 0
 1143 0050 4FF00203 		mov	r3, #2
 1144 0054 FB60     		str	r3, [r7, #12]
 1145              	.L53:
 689:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, 1, &Status);
 690:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         }
 691:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 692:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 693:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (Status != (uint32_t)DAVEApp_SUCCESS)
 694:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 695:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, 1, &Status);
 696:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 697:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 698:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     return Status;
 1146              		.loc 1 698 0
 1147 0056 FB68     		ldr	r3, [r7, #12]
 699:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** }
 1148              		.loc 1 699 0
 1149 0058 1846     		mov	r0, r3
 1150 005a 07F11407 		add	r7, r7, #20
 1151 005e BD46     		mov	sp, r7
 1152 0060 80BC     		pop	{r7}
 1153 0062 7047     		bx	lr
 1154              		.cfi_endproc
 1155              	.LFE131:
 1157              		.section	.text.ADCGLOB001_SetGlobClass1EmuxSampleTime,"ax",%progbits
 1158              		.align	2
 1159              		.global	ADCGLOB001_SetGlobClass1EmuxSampleTime
 1160              		.thumb
 1161              		.thumb_func
 1163              	ADCGLOB001_SetGlobClass1EmuxSampleTime:
 1164              	.LFB132:
 700:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 701:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /**
 702:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * This function configure the class 1 Sample Time Control for EMUX Conversions.
 703:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  */
 704:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** status_t ADCGLOB001_SetGlobClass1EmuxSampleTime(
 705:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         const ADCGLOB001_HandleType * HandlePtr,
 706:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         uint8_t SampleTime
 707:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** )
 708:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** {
 1165              		.loc 1 708 0
 1166              		.cfi_startproc
 1167              		@ args = 0, pretend = 0, frame = 16
 1168              		@ frame_needed = 1, uses_anonymous_args = 0
 1169              		@ link register save eliminated.
 1170 0000 80B4     		push	{r7}
 1171              	.LCFI45:
 1172              		.cfi_def_cfa_offset 4
 1173              		.cfi_offset 7, -4
 1174 0002 85B0     		sub	sp, sp, #20
 1175              	.LCFI46:
 1176              		.cfi_def_cfa_offset 24
 1177 0004 00AF     		add	r7, sp, #0
 1178              	.LCFI47:
 1179              		.cfi_def_cfa_register 7
 1180 0006 7860     		str	r0, [r7, #4]
 1181 0008 0B46     		mov	r3, r1
 1182 000a FB70     		strb	r3, [r7, #3]
 709:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     status_t Status = (uint32_t)ADCGLOB001_OPER_NOT_ALLOWED;
 1183              		.loc 1 709 0
 1184 000c 4FF00103 		mov	r3, #1
 1185 0010 FB60     		str	r3, [r7, #12]
 710:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 711:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (HandlePtr->kDynamicDataPtr->StateType == ADCGLOB001_INITIALIZED)
 1186              		.loc 1 711 0
 1187 0012 7B68     		ldr	r3, [r7, #4]
 1188 0014 5B68     		ldr	r3, [r3, #4]
 1189 0016 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1190 0018 012B     		cmp	r3, #1
 1191 001a 19D1     		bne	.L58
 712:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 713:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         if(SampleTime < (uint8_t)32){
 1192              		.loc 1 713 0
 1193 001c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1194 001e 1F2B     		cmp	r3, #31
 1195 0020 13D8     		bhi	.L59
 714:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             /* Write the global class1 External Multiplexer Sample Time */
 715:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             WR_REG( HandlePtr->kGlobalPtr->GLOBICLASS[1],
 1196              		.loc 1 715 0
 1197 0022 7B68     		ldr	r3, [r7, #4]
 1198 0024 1B68     		ldr	r3, [r3, #0]
 1199 0026 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1200 0028 4FEA0242 		lsl	r2, r2, #16
 1201 002c 02F4F811 		and	r1, r2, #2031616
 1202 0030 7A68     		ldr	r2, [r7, #4]
 1203 0032 1268     		ldr	r2, [r2, #0]
 1204 0034 D2F8A420 		ldr	r2, [r2, #164]
 1205 0038 22F4F812 		bic	r2, r2, #2031616
 1206 003c 0A43     		orrs	r2, r2, r1
 1207 003e C3F8A420 		str	r2, [r3, #164]
 716:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                     VADC_GLOBICLASS_STCE_Msk,
 717:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                     VADC_GLOBICLASS_STCE_Pos,
 718:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                     (uint32_t)SampleTime
 719:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             );
 720:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             Status = (uint32_t)DAVEApp_SUCCESS;
 1208              		.loc 1 720 0
 1209 0042 4FF00003 		mov	r3, #0
 1210 0046 FB60     		str	r3, [r7, #12]
 1211 0048 02E0     		b	.L58
 1212              	.L59:
 721:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 722:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         }
 723:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         else
 724:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         {
 725:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             Status = (uint32_t)ADCGLOB001_INVALID_PARAM_ERROR;
 1213              		.loc 1 725 0
 1214 004a 4FF00203 		mov	r3, #2
 1215 004e FB60     		str	r3, [r7, #12]
 1216              	.L58:
 726:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, 1, &Status);
 727:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         }
 728:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 729:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 730:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (Status != (uint32_t)DAVEApp_SUCCESS)
 731:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 732:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, 1, &Status);
 733:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 734:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 735:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     return Status;
 1217              		.loc 1 735 0
 1218 0050 FB68     		ldr	r3, [r7, #12]
 736:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** }
 1219              		.loc 1 736 0
 1220 0052 1846     		mov	r0, r3
 1221 0054 07F11407 		add	r7, r7, #20
 1222 0058 BD46     		mov	sp, r7
 1223 005a 80BC     		pop	{r7}
 1224 005c 7047     		bx	lr
 1225              		.cfi_endproc
 1226              	.LFE132:
 1228 005e 00BF     		.section	.text.ADCGLOB001_GetDisableBitStatus,"ax",%progbits
 1229              		.align	2
 1230              		.global	ADCGLOB001_GetDisableBitStatus
 1231              		.thumb
 1232              		.thumb_func
 1234              	ADCGLOB001_GetDisableBitStatus:
 1235              	.LFB133:
 737:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /**
 738:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * This function gives the status of Module Disable bit.
 739:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  */
 740:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** status_t ADCGLOB001_GetDisableBitStatus(
 741:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         const ADCGLOB001_HandleType * HandlePtr,
 742:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         uint8_t *StatusValue
 743:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** )
 744:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** {
 1236              		.loc 1 744 0
 1237              		.cfi_startproc
 1238              		@ args = 0, pretend = 0, frame = 16
 1239              		@ frame_needed = 1, uses_anonymous_args = 0
 1240              		@ link register save eliminated.
 1241 0000 80B4     		push	{r7}
 1242              	.LCFI48:
 1243              		.cfi_def_cfa_offset 4
 1244              		.cfi_offset 7, -4
 1245 0002 85B0     		sub	sp, sp, #20
 1246              	.LCFI49:
 1247              		.cfi_def_cfa_offset 24
 1248 0004 00AF     		add	r7, sp, #0
 1249              	.LCFI50:
 1250              		.cfi_def_cfa_register 7
 1251 0006 7860     		str	r0, [r7, #4]
 1252 0008 3960     		str	r1, [r7, #0]
 745:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     status_t Status = (uint32_t)ADCGLOB001_OPER_NOT_ALLOWED;
 1253              		.loc 1 745 0
 1254 000a 4FF00103 		mov	r3, #1
 1255 000e FB60     		str	r3, [r7, #12]
 746:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 747:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (HandlePtr->kDynamicDataPtr->StateType == ADCGLOB001_INITIALIZED)
 1256              		.loc 1 747 0
 1257 0010 7B68     		ldr	r3, [r7, #4]
 1258 0012 5B68     		ldr	r3, [r3, #4]
 1259 0014 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1260 0016 012B     		cmp	r3, #1
 1261 0018 0CD1     		bne	.L62
 748:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 749:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         /*Read the status value */
 750:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 751:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         *StatusValue = (uint8_t) RD_REG( HandlePtr->kGlobalPtr->CLC,
 1262              		.loc 1 751 0
 1263 001a 7B68     		ldr	r3, [r7, #4]
 1264 001c 1B68     		ldr	r3, [r3, #0]
 1265 001e 1B68     		ldr	r3, [r3, #0]
 1266 0020 03F00203 		and	r3, r3, #2
 1267 0024 4FEA5303 		lsr	r3, r3, #1
 1268 0028 DAB2     		uxtb	r2, r3
 1269 002a 3B68     		ldr	r3, [r7, #0]
 1270 002c 1A70     		strb	r2, [r3, #0]
 752:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 VADC_CLC_DISS_Msk,
 753:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 VADC_CLC_DISS_Pos
 754:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         );
 755:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         Status = (uint32_t)DAVEApp_SUCCESS;
 1271              		.loc 1 755 0
 1272 002e 4FF00003 		mov	r3, #0
 1273 0032 FB60     		str	r3, [r7, #12]
 1274              	.L62:
 756:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 757:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 758:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (Status != (uint32_t)DAVEApp_SUCCESS)
 759:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 760:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, 1, &Status);
 761:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 762:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 763:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     return Status;
 1275              		.loc 1 763 0
 1276 0034 FB68     		ldr	r3, [r7, #12]
 764:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** }
 1277              		.loc 1 764 0
 1278 0036 1846     		mov	r0, r3
 1279 0038 07F11407 		add	r7, r7, #20
 1280 003c BD46     		mov	sp, r7
 1281 003e 80BC     		pop	{r7}
 1282 0040 7047     		bx	lr
 1283              		.cfi_endproc
 1284              	.LFE133:
 1286 0042 00BF     		.section	.text.ADCGLOB001_GetIdValue,"ax",%progbits
 1287              		.align	2
 1288              		.global	ADCGLOB001_GetIdValue
 1289              		.thumb
 1290              		.thumb_func
 1292              	ADCGLOB001_GetIdValue:
 1293              	.LFB134:
 765:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /**
 766:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * This function gives the Id Value.
 767:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  */
 768:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 769:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** status_t ADCGLOB001_GetIdValue(
 770:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         const ADCGLOB001_HandleType * HandlePtr,
 771:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         uint32_t *IDValue
 772:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** )
 773:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** {
 1294              		.loc 1 773 0
 1295              		.cfi_startproc
 1296              		@ args = 0, pretend = 0, frame = 16
 1297              		@ frame_needed = 1, uses_anonymous_args = 0
 1298              		@ link register save eliminated.
 1299 0000 80B4     		push	{r7}
 1300              	.LCFI51:
 1301              		.cfi_def_cfa_offset 4
 1302              		.cfi_offset 7, -4
 1303 0002 85B0     		sub	sp, sp, #20
 1304              	.LCFI52:
 1305              		.cfi_def_cfa_offset 24
 1306 0004 00AF     		add	r7, sp, #0
 1307              	.LCFI53:
 1308              		.cfi_def_cfa_register 7
 1309 0006 7860     		str	r0, [r7, #4]
 1310 0008 3960     		str	r1, [r7, #0]
 774:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     status_t Status = (uint32_t)ADCGLOB001_OPER_NOT_ALLOWED;
 1311              		.loc 1 774 0
 1312 000a 4FF00103 		mov	r3, #1
 1313 000e FB60     		str	r3, [r7, #12]
 775:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 776:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (HandlePtr->kDynamicDataPtr->StateType == ADCGLOB001_INITIALIZED)
 1314              		.loc 1 776 0
 1315 0010 7B68     		ldr	r3, [r7, #4]
 1316 0012 5B68     		ldr	r3, [r3, #4]
 1317 0014 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1318 0016 012B     		cmp	r3, #1
 1319 0018 07D1     		bne	.L65
 777:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 778:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         /*Read the ID value */
 779:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         *IDValue =(uint32_t)HandlePtr->kGlobalPtr->ID;
 1320              		.loc 1 779 0
 1321 001a 7B68     		ldr	r3, [r7, #4]
 1322 001c 1B68     		ldr	r3, [r3, #0]
 1323 001e 9A68     		ldr	r2, [r3, #8]
 1324 0020 3B68     		ldr	r3, [r7, #0]
 1325 0022 1A60     		str	r2, [r3, #0]
 780:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 781:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         Status = (uint32_t)DAVEApp_SUCCESS;
 1326              		.loc 1 781 0
 1327 0024 4FF00003 		mov	r3, #0
 1328 0028 FB60     		str	r3, [r7, #12]
 1329              	.L65:
 782:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 783:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 784:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (Status != (uint32_t)DAVEApp_SUCCESS)
 785:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 786:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, 1, &Status);
 787:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 788:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 789:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     return Status;
 1330              		.loc 1 789 0
 1331 002a FB68     		ldr	r3, [r7, #12]
 790:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** }
 1332              		.loc 1 790 0
 1333 002c 1846     		mov	r0, r3
 1334 002e 07F11407 		add	r7, r7, #20
 1335 0032 BD46     		mov	sp, r7
 1336 0034 80BC     		pop	{r7}
 1337 0036 7047     		bx	lr
 1338              		.cfi_endproc
 1339              	.LFE134:
 1341              		.section	.text.ADCGLOB001_GTFRConvtrDiagnoGrp,"ax",%progbits
 1342              		.align	2
 1343              		.global	ADCGLOB001_GTFRConvtrDiagnoGrp
 1344              		.thumb
 1345              		.thumb_func
 1347              	ADCGLOB001_GTFRConvtrDiagnoGrp:
 1348              	.LFB135:
 791:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /**
 792:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * This function configure the group number to be used for converter diagnostics
 793:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * conversions.
 794:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  */
 795:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 796:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** status_t ADCGLOB001_GTFRConvtrDiagnoGrp(const ADCGLOB001_HandleType * HandlePtr,
 797:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         uint8_t GroupValue
 798:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** )
 799:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** {
 1349              		.loc 1 799 0
 1350              		.cfi_startproc
 1351              		@ args = 0, pretend = 0, frame = 16
 1352              		@ frame_needed = 1, uses_anonymous_args = 0
 1353              		@ link register save eliminated.
 1354 0000 80B4     		push	{r7}
 1355              	.LCFI54:
 1356              		.cfi_def_cfa_offset 4
 1357              		.cfi_offset 7, -4
 1358 0002 85B0     		sub	sp, sp, #20
 1359              	.LCFI55:
 1360              		.cfi_def_cfa_offset 24
 1361 0004 00AF     		add	r7, sp, #0
 1362              	.LCFI56:
 1363              		.cfi_def_cfa_register 7
 1364 0006 7860     		str	r0, [r7, #4]
 1365 0008 0B46     		mov	r3, r1
 1366 000a FB70     		strb	r3, [r7, #3]
 800:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     status_t Status = (uint32_t)ADCGLOB001_OPER_NOT_ALLOWED;
 1367              		.loc 1 800 0
 1368 000c 4FF00103 		mov	r3, #1
 1369 0010 FB60     		str	r3, [r7, #12]
 801:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 802:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (HandlePtr->kDynamicDataPtr->StateType == ADCGLOB001_INITIALIZED)
 1370              		.loc 1 802 0
 1371 0012 7B68     		ldr	r3, [r7, #4]
 1372 0014 5B68     		ldr	r3, [r3, #4]
 1373 0016 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1374 0018 012B     		cmp	r3, #1
 1375 001a 30D1     		bne	.L68
 803:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 804:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         if(GroupValue < (uint8_t)16){
 1376              		.loc 1 804 0
 1377 001c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1378 001e 0F2B     		cmp	r3, #15
 1379 0020 2AD8     		bhi	.L69
 805:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             /*clear the group number.*/
 806:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             HandlePtr->kGlobalPtr->GLOBTF = (VADC_GLOBTF_CDWC_Msk|
 1380              		.loc 1 806 0
 1381 0022 7B68     		ldr	r3, [r7, #4]
 1382 0024 1A68     		ldr	r2, [r3, #0]
 807:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                     ((HandlePtr->kGlobalPtr->GLOBTF)& (~(VADC_GLOBTF_CDGR_Msk))));
 1383              		.loc 1 807 0
 1384 0026 7B68     		ldr	r3, [r7, #4]
 1385 0028 1B68     		ldr	r3, [r3, #0]
 1386 002a D3F86031 		ldr	r3, [r3, #352]
 806:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             HandlePtr->kGlobalPtr->GLOBTF = (VADC_GLOBTF_CDWC_Msk|
 1387              		.loc 1 806 0
 1388 002e 23F40043 		bic	r3, r3, #32768
 1389 0032 23F0F003 		bic	r3, r3, #240
 1390 0036 43F40043 		orr	r3, r3, #32768
 1391 003a C2F86031 		str	r3, [r2, #352]
 808:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             /*Write the group number to be used for converter diagnostics conversions.*/
 809:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             HandlePtr->kGlobalPtr->GLOBTF |= (VADC_GLOBTF_CDWC_Msk |
 1392              		.loc 1 809 0
 1393 003e 7B68     		ldr	r3, [r7, #4]
 1394 0040 1B68     		ldr	r3, [r3, #0]
 1395 0042 7A68     		ldr	r2, [r7, #4]
 1396 0044 1268     		ldr	r2, [r2, #0]
 1397 0046 D2F86011 		ldr	r1, [r2, #352]
 810:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                     (((uint32_t)GroupValue << VADC_GLOBTF_CDGR_Pos) & VADC_GLOBTF_CDGR_Msk));
 1398              		.loc 1 810 0
 1399 004a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1400 004c 4FEA0212 		lsl	r2, r2, #4
 1401 0050 D2B2     		uxtb	r2, r2
 809:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             HandlePtr->kGlobalPtr->GLOBTF |= (VADC_GLOBTF_CDWC_Msk |
 1402              		.loc 1 809 0
 1403 0052 0A43     		orrs	r2, r2, r1
 1404 0054 42F40042 		orr	r2, r2, #32768
 1405 0058 C3F86021 		str	r2, [r3, #352]
 811:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 812:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             /*Clear the Write Control for Conversion Diagnostics*/
 813:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             CLR_BIT(HandlePtr->kGlobalPtr->GLOBTF, VADC_GLOBTF_CDWC_Pos);
 1406              		.loc 1 813 0
 1407 005c 7B68     		ldr	r3, [r7, #4]
 1408 005e 1B68     		ldr	r3, [r3, #0]
 1409 0060 7A68     		ldr	r2, [r7, #4]
 1410 0062 1268     		ldr	r2, [r2, #0]
 1411 0064 D2F86021 		ldr	r2, [r2, #352]
 1412 0068 22F40042 		bic	r2, r2, #32768
 1413 006c C3F86021 		str	r2, [r3, #352]
 814:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             Status = (uint32_t)DAVEApp_SUCCESS;
 1414              		.loc 1 814 0
 1415 0070 4FF00003 		mov	r3, #0
 1416 0074 FB60     		str	r3, [r7, #12]
 1417 0076 02E0     		b	.L68
 1418              	.L69:
 815:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         }
 816:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         else
 817:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         {
 818:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             Status = (uint32_t)ADCGLOB001_INVALID_PARAM_ERROR;
 1419              		.loc 1 818 0
 1420 0078 4FF00203 		mov	r3, #2
 1421 007c FB60     		str	r3, [r7, #12]
 1422              	.L68:
 819:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, 1, &Status);
 820:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         }
 821:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 822:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 823:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (Status != (uint32_t)DAVEApp_SUCCESS)
 824:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 825:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, 1, &Status);
 826:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 827:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 828:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     return Status;
 1423              		.loc 1 828 0
 1424 007e FB68     		ldr	r3, [r7, #12]
 829:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** }
 1425              		.loc 1 829 0
 1426 0080 1846     		mov	r0, r3
 1427 0082 07F11407 		add	r7, r7, #20
 1428 0086 BD46     		mov	sp, r7
 1429 0088 80BC     		pop	{r7}
 1430 008a 7047     		bx	lr
 1431              		.cfi_endproc
 1432              	.LFE135:
 1434              		.section	.text.ADCGLOB001_GTFRConvtrDiagnoEnable,"ax",%progbits
 1435              		.align	2
 1436              		.global	ADCGLOB001_GTFRConvtrDiagnoEnable
 1437              		.thumb
 1438              		.thumb_func
 1440              	ADCGLOB001_GTFRConvtrDiagnoEnable:
 1441              	.LFB136:
 830:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /**
 831:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * This function configure the Converter Diagnostics pull devices connected as
 832:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * selected by bitfield CDSEL.
 833:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  */
 834:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** status_t ADCGLOB001_GTFRConvtrDiagnoEnable(
 835:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         const ADCGLOB001_HandleType * HandlePtr
 836:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** )
 837:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** {
 1442              		.loc 1 837 0
 1443              		.cfi_startproc
 1444              		@ args = 0, pretend = 0, frame = 16
 1445              		@ frame_needed = 1, uses_anonymous_args = 0
 1446              		@ link register save eliminated.
 1447 0000 80B4     		push	{r7}
 1448              	.LCFI57:
 1449              		.cfi_def_cfa_offset 4
 1450              		.cfi_offset 7, -4
 1451 0002 85B0     		sub	sp, sp, #20
 1452              	.LCFI58:
 1453              		.cfi_def_cfa_offset 24
 1454 0004 00AF     		add	r7, sp, #0
 1455              	.LCFI59:
 1456              		.cfi_def_cfa_register 7
 1457 0006 7860     		str	r0, [r7, #4]
 838:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     status_t Status = (uint32_t)ADCGLOB001_OPER_NOT_ALLOWED;
 1458              		.loc 1 838 0
 1459 0008 4FF00103 		mov	r3, #1
 1460 000c FB60     		str	r3, [r7, #12]
 839:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 840:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (HandlePtr->kDynamicDataPtr->StateType == ADCGLOB001_INITIALIZED)
 1461              		.loc 1 840 0
 1462 000e 7B68     		ldr	r3, [r7, #4]
 1463 0010 5B68     		ldr	r3, [r3, #4]
 1464 0012 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1465 0014 012B     		cmp	r3, #1
 1466 0016 16D1     		bne	.L72
 841:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 842:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         /*Enable the Converter Diagnostics*/
 843:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         HandlePtr->kGlobalPtr->GLOBTF |=
 1467              		.loc 1 843 0
 1468 0018 7B68     		ldr	r3, [r7, #4]
 1469 001a 1B68     		ldr	r3, [r3, #0]
 1470 001c 7A68     		ldr	r2, [r7, #4]
 1471 001e 1268     		ldr	r2, [r2, #0]
 1472 0020 D2F86021 		ldr	r2, [r2, #352]
 1473 0024 42F40142 		orr	r2, r2, #33024
 1474 0028 C3F86021 		str	r2, [r3, #352]
 844:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 (VADC_GLOBTF_CDWC_Msk | VADC_GLOBTF_CDEN_Msk);
 845:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         /*Clear the Write Control for Conversion Diagnostics*/
 846:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         CLR_BIT(HandlePtr->kGlobalPtr->GLOBTF, VADC_GLOBTF_CDWC_Pos);
 1475              		.loc 1 846 0
 1476 002c 7B68     		ldr	r3, [r7, #4]
 1477 002e 1B68     		ldr	r3, [r3, #0]
 1478 0030 7A68     		ldr	r2, [r7, #4]
 1479 0032 1268     		ldr	r2, [r2, #0]
 1480 0034 D2F86021 		ldr	r2, [r2, #352]
 1481 0038 22F40042 		bic	r2, r2, #32768
 1482 003c C3F86021 		str	r2, [r3, #352]
 847:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         Status = (uint32_t)DAVEApp_SUCCESS;
 1483              		.loc 1 847 0
 1484 0040 4FF00003 		mov	r3, #0
 1485 0044 FB60     		str	r3, [r7, #12]
 1486              	.L72:
 848:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 849:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 850:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (Status != (uint32_t)DAVEApp_SUCCESS)
 851:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 852:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, 1, &Status);
 853:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 854:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 855:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     return Status;
 1487              		.loc 1 855 0
 1488 0046 FB68     		ldr	r3, [r7, #12]
 856:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** }
 1489              		.loc 1 856 0
 1490 0048 1846     		mov	r0, r3
 1491 004a 07F11407 		add	r7, r7, #20
 1492 004e BD46     		mov	sp, r7
 1493 0050 80BC     		pop	{r7}
 1494 0052 7047     		bx	lr
 1495              		.cfi_endproc
 1496              	.LFE136:
 1498              		.section	.text.ADCGLOB001_GTFRConvtrDiagnoPullDevicesSelect,"ax",%progbits
 1499              		.align	2
 1500              		.global	ADCGLOB001_GTFRConvtrDiagnoPullDevicesSelect
 1501              		.thumb
 1502              		.thumb_func
 1504              	ADCGLOB001_GTFRConvtrDiagnoPullDevicesSelect:
 1505              	.LFB137:
 857:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /**
 858:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * This function configure the Converter Diagnostics Pull-Devices Select value.
 859:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  */
 860:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** status_t ADCGLOB001_GTFRConvtrDiagnoPullDevicesSelect(
 861:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         const ADCGLOB001_HandleType * HandlePtr,
 862:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         uint8_t SelectValue
 863:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** )
 864:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** {
 1506              		.loc 1 864 0
 1507              		.cfi_startproc
 1508              		@ args = 0, pretend = 0, frame = 16
 1509              		@ frame_needed = 1, uses_anonymous_args = 0
 1510              		@ link register save eliminated.
 1511 0000 80B4     		push	{r7}
 1512              	.LCFI60:
 1513              		.cfi_def_cfa_offset 4
 1514              		.cfi_offset 7, -4
 1515 0002 85B0     		sub	sp, sp, #20
 1516              	.LCFI61:
 1517              		.cfi_def_cfa_offset 24
 1518 0004 00AF     		add	r7, sp, #0
 1519              	.LCFI62:
 1520              		.cfi_def_cfa_register 7
 1521 0006 7860     		str	r0, [r7, #4]
 1522 0008 0B46     		mov	r3, r1
 1523 000a FB70     		strb	r3, [r7, #3]
 865:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     status_t Status = (uint32_t)ADCGLOB001_OPER_NOT_ALLOWED;
 1524              		.loc 1 865 0
 1525 000c 4FF00103 		mov	r3, #1
 1526 0010 FB60     		str	r3, [r7, #12]
 866:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 867:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (HandlePtr->kDynamicDataPtr->StateType == ADCGLOB001_INITIALIZED)
 1527              		.loc 1 867 0
 1528 0012 7B68     		ldr	r3, [r7, #4]
 1529 0014 5B68     		ldr	r3, [r3, #4]
 1530 0016 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1531 0018 012B     		cmp	r3, #1
 1532 001a 2FD1     		bne	.L75
 868:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 869:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         if(SelectValue < (uint8_t)4){
 1533              		.loc 1 869 0
 1534 001c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1535 001e 032B     		cmp	r3, #3
 1536 0020 29D8     		bhi	.L76
 870:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             /*Clear Converter Diagnostics Pull-Devices Select value  */
 871:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             HandlePtr->kGlobalPtr->GLOBTF = (VADC_GLOBTF_CDWC_Msk|
 1537              		.loc 1 871 0
 1538 0022 7B68     		ldr	r3, [r7, #4]
 1539 0024 1B68     		ldr	r3, [r3, #0]
 872:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                     ((HandlePtr->kGlobalPtr->GLOBTF)& (~(VADC_GLOBTF_CDSEL_Msk))));
 1540              		.loc 1 872 0
 1541 0026 7A68     		ldr	r2, [r7, #4]
 1542 0028 1268     		ldr	r2, [r2, #0]
 1543 002a D2F86021 		ldr	r2, [r2, #352]
 871:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             HandlePtr->kGlobalPtr->GLOBTF = (VADC_GLOBTF_CDWC_Msk|
 1544              		.loc 1 871 0
 1545 002e 22F40642 		bic	r2, r2, #34304
 1546 0032 42F40042 		orr	r2, r2, #32768
 1547 0036 C3F86021 		str	r2, [r3, #352]
 873:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 874:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             /* Write the Converter Diagnostics Pull-Devices Select value */
 875:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             HandlePtr->kGlobalPtr->GLOBTF |= (VADC_GLOBTF_CDWC_Msk |
 1548              		.loc 1 875 0
 1549 003a 7B68     		ldr	r3, [r7, #4]
 1550 003c 1B68     		ldr	r3, [r3, #0]
 1551 003e 7A68     		ldr	r2, [r7, #4]
 1552 0040 1268     		ldr	r2, [r2, #0]
 1553 0042 D2F86011 		ldr	r1, [r2, #352]
 876:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                     (((uint32_t)SelectValue << VADC_GLOBTF_CDSEL_Pos) & VADC_GLOBTF_CDSEL_Msk));
 1554              		.loc 1 876 0
 1555 0046 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1556 0048 4FEA4222 		lsl	r2, r2, #9
 1557 004c 02F4C062 		and	r2, r2, #1536
 875:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             HandlePtr->kGlobalPtr->GLOBTF |= (VADC_GLOBTF_CDWC_Msk |
 1558              		.loc 1 875 0
 1559 0050 0A43     		orrs	r2, r2, r1
 1560 0052 42F40042 		orr	r2, r2, #32768
 1561 0056 C3F86021 		str	r2, [r3, #352]
 877:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             /*Clear the Write Control for Conversion Diagnostics*/
 878:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 879:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             CLR_BIT(HandlePtr->kGlobalPtr->GLOBTF, VADC_GLOBTF_CDWC_Pos);
 1562              		.loc 1 879 0
 1563 005a 7B68     		ldr	r3, [r7, #4]
 1564 005c 1B68     		ldr	r3, [r3, #0]
 1565 005e 7A68     		ldr	r2, [r7, #4]
 1566 0060 1268     		ldr	r2, [r2, #0]
 1567 0062 D2F86021 		ldr	r2, [r2, #352]
 1568 0066 22F40042 		bic	r2, r2, #32768
 1569 006a C3F86021 		str	r2, [r3, #352]
 880:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             Status = (uint32_t)DAVEApp_SUCCESS;
 1570              		.loc 1 880 0
 1571 006e 4FF00003 		mov	r3, #0
 1572 0072 FB60     		str	r3, [r7, #12]
 1573 0074 02E0     		b	.L75
 1574              	.L76:
 881:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         }
 882:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         else
 883:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         {
 884:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             Status = (uint32_t)ADCGLOB001_INVALID_PARAM_ERROR;
 1575              		.loc 1 884 0
 1576 0076 4FF00203 		mov	r3, #2
 1577 007a FB60     		str	r3, [r7, #12]
 1578              	.L75:
 885:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, 1, &Status);
 886:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         }
 887:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 888:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (Status != (uint32_t)DAVEApp_SUCCESS)
 889:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 890:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, 1, &Status);
 891:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 892:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 893:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     return Status;
 1579              		.loc 1 893 0
 1580 007c FB68     		ldr	r3, [r7, #12]
 894:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** }
 1581              		.loc 1 894 0
 1582 007e 1846     		mov	r0, r3
 1583 0080 07F11407 		add	r7, r7, #20
 1584 0084 BD46     		mov	sp, r7
 1585 0086 80BC     		pop	{r7}
 1586 0088 7047     		bx	lr
 1587              		.cfi_endproc
 1588              	.LFE137:
 1590 008a 00BF     		.section	.text.ADCGLOB001_GTFRPullDwnDiagnoEnable,"ax",%progbits
 1591              		.align	2
 1592              		.global	ADCGLOB001_GTFRPullDwnDiagnoEnable
 1593              		.thumb
 1594              		.thumb_func
 1596              	ADCGLOB001_GTFRPullDwnDiagnoEnable:
 1597              	.LFB138:
 895:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 896:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /**
 897:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * This function configure the Pull-Down Diagnostics Enable register.
 898:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  */
 899:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** status_t ADCGLOB001_GTFRPullDwnDiagnoEnable(
 900:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         const ADCGLOB001_HandleType * HandlePtr
 901:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** )
 902:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** {
 1598              		.loc 1 902 0
 1599              		.cfi_startproc
 1600              		@ args = 0, pretend = 0, frame = 16
 1601              		@ frame_needed = 1, uses_anonymous_args = 0
 1602              		@ link register save eliminated.
 1603 0000 80B4     		push	{r7}
 1604              	.LCFI63:
 1605              		.cfi_def_cfa_offset 4
 1606              		.cfi_offset 7, -4
 1607 0002 85B0     		sub	sp, sp, #20
 1608              	.LCFI64:
 1609              		.cfi_def_cfa_offset 24
 1610 0004 00AF     		add	r7, sp, #0
 1611              	.LCFI65:
 1612              		.cfi_def_cfa_register 7
 1613 0006 7860     		str	r0, [r7, #4]
 903:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     status_t Status = (uint32_t)ADCGLOB001_OPER_NOT_ALLOWED;
 1614              		.loc 1 903 0
 1615 0008 4FF00103 		mov	r3, #1
 1616 000c FB60     		str	r3, [r7, #12]
 904:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 905:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (HandlePtr->kDynamicDataPtr->StateType == ADCGLOB001_INITIALIZED)
 1617              		.loc 1 905 0
 1618 000e 7B68     		ldr	r3, [r7, #4]
 1619 0010 5B68     		ldr	r3, [r3, #4]
 1620 0012 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1621 0014 012B     		cmp	r3, #1
 1622 0016 16D1     		bne	.L79
 906:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 907:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         /*Enable the Pull-Down Diagnostics */
 908:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         HandlePtr->kGlobalPtr->GLOBTF |=
 1623              		.loc 1 908 0
 1624 0018 7B68     		ldr	r3, [r7, #4]
 1625 001a 1B68     		ldr	r3, [r3, #0]
 1626 001c 7A68     		ldr	r2, [r7, #4]
 1627 001e 1268     		ldr	r2, [r2, #0]
 1628 0020 D2F86021 		ldr	r2, [r2, #352]
 1629 0024 42F40102 		orr	r2, r2, #8454144
 1630 0028 C3F86021 		str	r2, [r3, #352]
 909:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 (VADC_GLOBTF_MDWC_Msk | VADC_GLOBTF_PDD_Msk);
 910:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         /*Clear the Write Control for Multiplexer Diagnostics*/
 911:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         CLR_BIT(HandlePtr->kGlobalPtr->GLOBTF, VADC_GLOBTF_MDWC_Pos);
 1631              		.loc 1 911 0
 1632 002c 7B68     		ldr	r3, [r7, #4]
 1633 002e 1B68     		ldr	r3, [r3, #0]
 1634 0030 7A68     		ldr	r2, [r7, #4]
 1635 0032 1268     		ldr	r2, [r2, #0]
 1636 0034 D2F86021 		ldr	r2, [r2, #352]
 1637 0038 22F40002 		bic	r2, r2, #8388608
 1638 003c C3F86021 		str	r2, [r3, #352]
 912:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 913:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         Status = (uint32_t)DAVEApp_SUCCESS;
 1639              		.loc 1 913 0
 1640 0040 4FF00003 		mov	r3, #0
 1641 0044 FB60     		str	r3, [r7, #12]
 1642              	.L79:
 914:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 915:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 916:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (Status != (uint32_t)DAVEApp_SUCCESS)
 917:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 918:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, 1, &Status);
 919:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 920:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 921:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     return Status;
 1643              		.loc 1 921 0
 1644 0046 FB68     		ldr	r3, [r7, #12]
 922:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** }
 1645              		.loc 1 922 0
 1646 0048 1846     		mov	r0, r3
 1647 004a 07F11407 		add	r7, r7, #20
 1648 004e BD46     		mov	sp, r7
 1649 0050 80BC     		pop	{r7}
 1650 0052 7047     		bx	lr
 1651              		.cfi_endproc
 1652              	.LFE138:
 1654              		.text
 1655              	.Letext0:
 1656              		.file 2 "c:\\dave-3.1.10\\arm-gcc\\bin\\../lib/gcc/arm-none-eabi/4.7.4/../../../../arm-none-eabi/i
 1657              		.file 3 "C:\\DAVE-3.1.10\\eclipse\\/../CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 1658              		.file 4 "F:\\WORK\\SmartHome_checkout1\\XMC4500_RK_HTTPserver\\Dave\\Generated\\inc\\DAVESupport/.
 1659              		.file 5 "F:\\WORK\\SmartHome_checkout1\\XMC4500_RK_HTTPserver\\Dave\\Generated\\inc\\DAVESupport/.
 1660              		.file 6 "F:\\WORK\\SmartHome_checkout1\\XMC4500_RK_HTTPserver\\Dave\\Generated\\inc\\DAVESupport/.
 1661              		.file 7 "C:\\DAVE-3.1.10\\eclipse\\/../CMSIS/Include/core_cm4.h"
 1662              		.file 8 "F:\\WORK\\SmartHome_checkout1\\XMC4500_RK_HTTPserver\\Dave\\Generated\\inc\\DAVESupport/.
DEFINED SYMBOLS
                            *ABS*:00000000 ADCGlob001.c
C:\Users\Mihai\AppData\Local\Temp\cctkRw8F.s:20     .text.ADCGLOB001_Init:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\cctkRw8F.s:25     .text.ADCGLOB001_Init:00000000 ADCGLOB001_Init
C:\Users\Mihai\AppData\Local\Temp\cctkRw8F.s:206    .text.ADCGLOB001_DeInit:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\cctkRw8F.s:211    .text.ADCGLOB001_DeInit:00000000 ADCGLOB001_DeInit
C:\Users\Mihai\AppData\Local\Temp\cctkRw8F.s:298    .text.ADCGLOB001_CLKRequestDisable:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\cctkRw8F.s:303    .text.ADCGLOB001_CLKRequestDisable:00000000 ADCGLOB001_CLKRequestDisable
C:\Users\Mihai\AppData\Local\Temp\cctkRw8F.s:354    .text.ADCGLOB001_CLKRequestEnable:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\cctkRw8F.s:359    .text.ADCGLOB001_CLKRequestEnable:00000000 ADCGLOB001_CLKRequestEnable
C:\Users\Mihai\AppData\Local\Temp\cctkRw8F.s:410    .text.ADCGLOB001_SetStartUpCalibration:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\cctkRw8F.s:415    .text.ADCGLOB001_SetStartUpCalibration:00000000 ADCGLOB001_SetStartUpCalibration
C:\Users\Mihai\AppData\Local\Temp\cctkRw8F.s:466    .text.ADCGLOB001_StartUpCalibrationInit:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\cctkRw8F.s:471    .text.ADCGLOB001_StartUpCalibrationInit:00000000 ADCGLOB001_StartUpCalibrationInit
C:\Users\Mihai\AppData\Local\Temp\cctkRw8F.s:531    .text.ADCGLOB001_EnableSleepModeControl:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\cctkRw8F.s:536    .text.ADCGLOB001_EnableSleepModeControl:00000000 ADCGLOB001_EnableSleepModeControl
C:\Users\Mihai\AppData\Local\Temp\cctkRw8F.s:587    .text.ADCGLOB001_DisregardSleepModeControl:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\cctkRw8F.s:592    .text.ADCGLOB001_DisregardSleepModeControl:00000000 ADCGLOB001_DisregardSleepModeControl
C:\Users\Mihai\AppData\Local\Temp\cctkRw8F.s:643    .text.ADCGLOB001_SetGlobClass0ConvMode:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\cctkRw8F.s:648    .text.ADCGLOB001_SetGlobClass0ConvMode:00000000 ADCGLOB001_SetGlobClass0ConvMode
C:\Users\Mihai\AppData\Local\Temp\cctkRw8F.s:719    .text.ADCGLOB001_SetGlobClass0SampleTime:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\cctkRw8F.s:724    .text.ADCGLOB001_SetGlobClass0SampleTime:00000000 ADCGLOB001_SetGlobClass0SampleTime
C:\Users\Mihai\AppData\Local\Temp\cctkRw8F.s:789    .text.ADCGLOB001_SetGlobClass0EmuxConvMode:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\cctkRw8F.s:794    .text.ADCGLOB001_SetGlobClass0EmuxConvMode:00000000 ADCGLOB001_SetGlobClass0EmuxConvMode
C:\Users\Mihai\AppData\Local\Temp\cctkRw8F.s:865    .text.ADCGLOB001_SetGlobClass0EmuxSampleTime:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\cctkRw8F.s:870    .text.ADCGLOB001_SetGlobClass0EmuxSampleTime:00000000 ADCGLOB001_SetGlobClass0EmuxSampleTime
C:\Users\Mihai\AppData\Local\Temp\cctkRw8F.s:936    .text.ADCGLOB001_SetGlobClass1ConvMode:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\cctkRw8F.s:941    .text.ADCGLOB001_SetGlobClass1ConvMode:00000000 ADCGLOB001_SetGlobClass1ConvMode
C:\Users\Mihai\AppData\Local\Temp\cctkRw8F.s:1012   .text.ADCGLOB001_SetGlobClass1SampleTime:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\cctkRw8F.s:1017   .text.ADCGLOB001_SetGlobClass1SampleTime:00000000 ADCGLOB001_SetGlobClass1SampleTime
C:\Users\Mihai\AppData\Local\Temp\cctkRw8F.s:1082   .text.ADCGLOB001_SetGlobClass1EmuxConvMode:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\cctkRw8F.s:1087   .text.ADCGLOB001_SetGlobClass1EmuxConvMode:00000000 ADCGLOB001_SetGlobClass1EmuxConvMode
C:\Users\Mihai\AppData\Local\Temp\cctkRw8F.s:1158   .text.ADCGLOB001_SetGlobClass1EmuxSampleTime:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\cctkRw8F.s:1163   .text.ADCGLOB001_SetGlobClass1EmuxSampleTime:00000000 ADCGLOB001_SetGlobClass1EmuxSampleTime
C:\Users\Mihai\AppData\Local\Temp\cctkRw8F.s:1229   .text.ADCGLOB001_GetDisableBitStatus:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\cctkRw8F.s:1234   .text.ADCGLOB001_GetDisableBitStatus:00000000 ADCGLOB001_GetDisableBitStatus
C:\Users\Mihai\AppData\Local\Temp\cctkRw8F.s:1287   .text.ADCGLOB001_GetIdValue:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\cctkRw8F.s:1292   .text.ADCGLOB001_GetIdValue:00000000 ADCGLOB001_GetIdValue
C:\Users\Mihai\AppData\Local\Temp\cctkRw8F.s:1342   .text.ADCGLOB001_GTFRConvtrDiagnoGrp:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\cctkRw8F.s:1347   .text.ADCGLOB001_GTFRConvtrDiagnoGrp:00000000 ADCGLOB001_GTFRConvtrDiagnoGrp
C:\Users\Mihai\AppData\Local\Temp\cctkRw8F.s:1435   .text.ADCGLOB001_GTFRConvtrDiagnoEnable:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\cctkRw8F.s:1440   .text.ADCGLOB001_GTFRConvtrDiagnoEnable:00000000 ADCGLOB001_GTFRConvtrDiagnoEnable
C:\Users\Mihai\AppData\Local\Temp\cctkRw8F.s:1499   .text.ADCGLOB001_GTFRConvtrDiagnoPullDevicesSelect:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\cctkRw8F.s:1504   .text.ADCGLOB001_GTFRConvtrDiagnoPullDevicesSelect:00000000 ADCGLOB001_GTFRConvtrDiagnoPullDevicesSelect
C:\Users\Mihai\AppData\Local\Temp\cctkRw8F.s:1591   .text.ADCGLOB001_GTFRPullDwnDiagnoEnable:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\cctkRw8F.s:1596   .text.ADCGLOB001_GTFRPullDwnDiagnoEnable:00000000 ADCGLOB001_GTFRPullDwnDiagnoEnable
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.1791a5ae2e936ca1033c1c44be394cc7
                           .group:00000000 wm4.XMC4500.h.45.215f4b8c79f46c7645c15373868d08c0
                           .group:00000000 wm4.core_cm4.h.47.41af406cb4cda82c972f112a9cd0a024
                           .group:00000000 wm4.newlib.h.8.a9901dc52d1357e3e94003403d43f8b5
                           .group:00000000 wm4.features.h.22.b72b3baab2bb2eab3661375590100b6b
                           .group:00000000 wm4.config.h.193.5fb8ef056cdff92dec3dee9552839d8c
                           .group:00000000 wm4._ansi.h.23.7aefdac4826acebbfc9f3822a0aeb14c
                           .group:00000000 wm4.stdint.h.20.54ad762faa59e3c05491630641c8d8bf
                           .group:00000000 wm4.core_cmInstr.h.39.3d3d1b4a79aef37532666dc6ee87c6ac
                           .group:00000000 wm4.core_cm4_simd.h.43.b5d1d38735af6366227b4256d330cf13
                           .group:00000000 wm4.core_cm4.h.178.e5ef5ce66d198d7f00f9d0076e267c41
                           .group:00000000 wm4.system_XMC4500.h.29.827f68baa362c84f2abae4ab67dde7c9
                           .group:00000000 wm4.XMC4500.h.198.8e022f279ff353ed081df898dc7b9cf3
                           .group:00000000 wm4.stddef.h.40.50cf36416e06376af8a9dca28536f2e4
                           .group:00000000 wm4.types.h.55.0006b5fda1d606516f2dcaf4aca92b11
                           .group:00000000 wm4.MULTIPLEXER.h.43.4aa654be3ec80895f631b5281bbb9105
                           .group:00000000 wm4.CCU8PWMLIB.h.70.a5d6a5267902b8b4aea2a0224518259a
                           .group:00000000 wm4.DBG001.h.116.d6d9e7459a0faa3905c97c1d2edb339d
                           .group:00000000 wm4.SYSTM001.h.63.668098b2213d40a5bd0db5fbe813cf05
                           .group:00000000 wm4.ETH002_Conf.h.56.5bd2b085b66f43d51abd69396be7f35f
                           .group:00000000 wm4.EthernetPHY.h.54.7af1709186b21e62a5f1d4049da3988b
                           .group:00000000 wm4.ETH001_Conf.h.71.1e151af1ba54dd023e1f942bdf922819
                           .group:00000000 wm4.synopGMAC_plat.h.78.7a90e072b497857344aea4ba1e994097
                           .group:00000000 wm4.synopGMAC_stack_interface.h.73.6be6aaee0ac6637432f4d0589044479b
                           .group:00000000 wm4.SynopGMAC_Dev.h.72.7c89c07cf666d37f5c9b615720d5e111
                           .group:00000000 wm4.synopGMAC_network_interface.h.73.4dd08316a11bc43c8c4a9da15277fb0f
                           .group:00000000 wm4.stdlib.h.13.603ed7eb09a1561ab06840b7c0fcff58
                           .group:00000000 wm4.stddef.h.161.e50ff8a9d5d1abbc15641da28ac571bf
                           .group:00000000 wm4._default_types.h.6.5e12cd604db8ce00b62bb2f02708eaf3
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4.stddef.h.161.c6104a0666cf681b6269ddc9b4f516d4
                           .group:00000000 wm4.reent.h.16.9e42f0e588b85e70b2bf6572af57ce64
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.53.c69c7609933ff56d59c757cec2d13230
                           .group:00000000 wm4.string.h.8.ef946ad0bc9ad5c970c365dcd1fc4b0a
                           .group:00000000 wm4.string.h.86.d5c872ff52e2712c985b588a0ef39f3c
                           .group:00000000 wm4.ETH004_Conf.h.56.59591edbd6ce1f089c3d2789404b9485
                           .group:00000000 wm4.lwipopts.h.73.a7a63bda1e8216abd1d90275eaaa0027
                           .group:00000000 wm4.arch.h.33.6fa4aa86d33d1490ae882caef7316405
                           .group:00000000 wm4.cpu.h.33.b213c7fd77614ebc3691cef18ad2ff22
                           .group:00000000 wm4.cc.h.66.ec134211c658dcc89de4610e4e7bab46
                           .group:00000000 wm4.arch.h.47.5153c52bfb94ee3b37299920afab6afd
                           .group:00000000 wm4.debug.h.43.557ecd6c90cc70b375bb8a29118be47b
                           .group:00000000 wm4.opt.h.94.d36882acafebb8726bce646fc8b2397b
                           .group:00000000 wm4.err.h.52.37c5d17538f8e8347a9c84196701e92d
                           .group:00000000 wm4.pbuf.h.43.e9a1ad12b97478787a109e22d5306820
                           .group:00000000 wm4.inet.h.46.b516065779826845d16d49f513869a2b
                           .group:00000000 wm4.ip_addr.h.79.9a0ce887ca8c88c22ad7686bcb5105df
                           .group:00000000 wm4.sys.h.65.4a0cd87b9e0d8bb4cd6b30e939b2ca7e
                           .group:00000000 wm4.mem.h.96.20770766e6c9e6c42af6bfa95ef5c63f
                           .group:00000000 wm4.def.h.33.049f911dab26023a266ed46ced0ce4bc
                           .group:00000000 wm4.netif.h.53.c13431a64f0e73a26710e71455725e84
                           .group:00000000 wm4.ip.h.48.ad46847692d4d729760949b27e48a442
                           .group:00000000 wm4.icmp.h.44.450dbf91f594cc26ad19d086cdc83713
                           .group:00000000 wm4.tcp.h.55.5c30b9432fa60afaa85cbdd225b0c683
                           .group:00000000 wm4.udp.h.48.1a8dde095cd0a13580afaba1443e5a3f
                           .group:00000000 wm4.SDMMC003_Conf.h.50.e707c07613fb4e6f2eaec982a892429d
                           .group:00000000 wm4.SDMMC003.h.85.b66055f6032a052f5173e3d123f9c61e
                           .group:00000000 wm4.SDMMC001.h.50.3e2fedc7e5ace33db4121d5cc027e8a4
                           .group:00000000 wm4.types.h.23.0d949686bbcadd1621462d4fa1f884f9
                           .group:00000000 wm4.types.h.2.e9cec8c90ab35f77d9f499e06ae02400
                           .group:00000000 wm4.types.h.80.1f2c84c0d57dd52dd9936095d9ac218e
                           .group:00000000 wm4.time.h.16.a4579e68956d2601c6113814b546764b
                           .group:00000000 wm4.diskio.h.7.93a3c8131d08770c060b04d2180fd09a
                           .group:00000000 wm4.diskio.h.42.a863614abe78d56d18ed7cb292d0028d
                           .group:00000000 wm4.ffconf.h.57.4ab321a2116d35ff7f28236ac31fad7c
                           .group:00000000 wm4.ff.h.82.8f05a37d35a49dba2681a7f047fee4ee
                           .group:00000000 wm4.lmm001_debuglog.h.40.8031299705ecf04ad726bd19baff976d
                           .group:00000000 wm4.LMM001.h.42.c21fe9cbedc336738c3dc89405cad216
                           .group:00000000 wm4.stdio.h.27.f2ac352bab34f31f9f478442827b2ba6
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.63.dfdea6580b080784d08faace69b6ed76
                           .group:00000000 wm4.time.h.2.9857e62ad6ac99431e29d58067232314
                           .group:00000000 wm4.time.h.24.c499d4c1915694df17abb795fd34b719
                           .group:00000000 wm4.time.h.124.10ced469f846269cafc58b59c853e1bb
                           .group:00000000 wm4.errno.h.2.ba016d646105af6cad23be83630b6a3f
                           .group:00000000 wm4.errno.h.9.65044c2b5d8494e43f5986ab0a1d770f
                           .group:00000000 wm4.unistd.h.2.6ce1b91c4223f6078c1b210c7538c1d2
                           .group:00000000 wm4.unistd.h.251.605bc560cdc6c3b07b599bb71ac4e425
                           .group:00000000 wm4.malloc.h.4.62bd13b8107d5245f60bd92bb5994838
                           .group:00000000 wm4.malloc.h.148.73b7de3bd065dafbd594b04197a9466e
                           .group:00000000 wm4.reent.h.91.faac4d0ac97c0fcf23d10d0786197642
                           .group:00000000 wm4.SLTHA003.h.100.69cb08672bc6ab3f052aa9d5bd6dc5ca
                           .group:00000000 wm4._default_fcntl.h.6.d036cf640d0f9a06bcff1be55acd66be
                           .group:00000000 wm4.stat.h.2.a761b02482a54847ff0d09dfcff24a5c
                           .group:00000000 wm4.fcntl.h.9.9336f33d7f5028f694c75e6e224e0cf7
                           .group:00000000 wm4.SLTHA001.h.97.d7e87c19a31e3244bdd5839e7cc42a61
                           .group:00000000 wm4.WEBSERVER001_Conf.h.54.cd6d29aaa96a848cbc5321bab5d6cd90
                           .group:00000000 wm4.IO004.h.51.dbf9dd216c57d6a7f14a22b2cb7e5626
                           .group:00000000 wm4.MOTORLIBS.h.59.b2e97de0df555dedfa51e24447b57ab8
                           .group:00000000 wm4.uc_id.h.35.a6c4837fad81477ba31967683332b8cc
                           .group:00000000 wm4.Usic.h.90.22743468abc46f16747d12430b219aaf
                           .group:00000000 wm4.UART001_Conf.h.53.c5c972f6f634bc5116c171852aaab668
                           .group:00000000 wm4.UART001.h.109.3e835815a7a59791d8bd39655f4d4cc9
                           .group:00000000 wm4.NVIC002_Conf.h.63.4809ded45954a78aa476d1e9f44d110e
                           .group:00000000 wm4.ADCGROUP001.h.66.3ee81aba16709c201614af7d67499bdb
                           .group:00000000 wm4.IO001.h.49.4efcabb368feaef60c65bd7504b48505
                           .group:00000000 wm4.ADC001.h.72.a0f6b9479a18584b91fa95e6f862978d

UNDEFINED SYMBOLS
ADCGLOB001_Handle0
RESET001_DeassertReset
