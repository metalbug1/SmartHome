   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"ADCGlob001.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.ADCGLOB001_Init,"ax",%progbits
  20              		.align	2
  21              		.global	ADCGLOB001_Init
  22              		.thumb
  23              		.thumb_func
  25              	ADCGLOB001_Init:
  26              	.LFB112:
  27              		.file 1 "../Dave/Generated/src/ADCGLOB001/ADCGlob001.c"
   1:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /*******************************************************************************
   2:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** **  DAVE App Name : ADCGLOB001       App Version: 1.0.2               
   3:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** **  This file is generated by DAVE, User modification to this file will be    **
   4:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** **  overwritten at the next code generation.                                  **
   5:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** *******************************************************************************/
   6:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
   7:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
   8:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /*******************************************************************************
   9:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  Copyright (c) 2011, Infineon Technologies AG                                 **
  10:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  All rights reserved.                                                         **
  11:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                                                                               **
  12:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  Redistribution and use in source and binary forms, with or without           **
  13:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  modification,are permitted provided that the following conditions are met:   **
  14:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                                                                               **
  15:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  *Redistributions of source code must retain the above copyright notice,      **
  16:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  this list of conditions and the following disclaimer.                        **
  17:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  *Redistributions in binary form must reproduce the above copyright notice,   **
  18:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  this list of conditions and the following disclaimer in the documentation    **
  19:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  and/or other materials provided with the distribution.                       **
  20:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  *Neither the name of the copyright holders nor the names of its contributors **
  21:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  may be used to endorse or promote products derived from this software without**
  22:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  specific prior written permission.                                           **
  23:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                                                                               **
  24:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"  **
  25:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE    **
  26:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE   **
  27:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  ARE  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE   **
  28:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  LIABLE  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR         **
  29:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF         **
  30:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  SUBSTITUTE GOODS OR  SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS    **
  31:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN      **
  32:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)       **
  33:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE   **
  34:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  POSSIBILITY OF SUCH DAMAGE.                                                  **
  35:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                                                                               **
  36:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  To improve the quality of the software, users are encouraged to share        **
  37:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  modifications, enhancements or bug fixes with Infineon Technologies AG       **
  38:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  dave@infineon.com).                                                          **
  39:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                                                                               **
  40:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** ********************************************************************************
  41:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** **                                                                            **
  42:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** **                                                                            **
  43:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** ** PLATFORM : Infineon XMC4500 Series                                         **
  44:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** **                                                                            **
  45:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** ** COMPILER : Compiler Independent                                            **
  46:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** **                                                                            **
  47:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** ** AUTHOR : App Developer                                                     **
  48:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** **                                                                            **
  49:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** ** MAY BE CHANGED BY USER [yes/no]: Yes                                      **
  50:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** **                                                                            **
  51:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** ** MODIFICATION DATE : July 31, 2012                                         **
  52:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** **                                                                            **
  53:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** *******************************************************************************/
  54:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
  55:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /*******************************************************************************
  56:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** **                       Author(s) Identity                                   **
  57:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** ********************************************************************************
  58:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** **                                                                            **
  59:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** ** Initials           Name                                                    **
  60:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** ** ---------------------------------------------------------------------------**
  61:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** ** PrashanA           App Developer                                           **
  62:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** *******************************************************************************/
  63:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
  64:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /**
  65:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * @file ADCGLOB001.c
  66:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  *
  67:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * @brief
  68:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * This is global ADC App which allows the sharing of global ADC resources.
  69:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  */
  70:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
  71:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /*******************************************************************************
  72:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  ** INCLUDE FILES                                                             **
  73:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  ******************************************************************************/
  74:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
  75:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** #include <DAVE3.h>
  76:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
  77:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
  78:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /**
  79:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * @cond INTERNAL_DOCS
  80:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  */
  81:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /*******************************************************************************
  82:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** **                              API DEFINITION
  83:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** *******************************************************************************/
  84:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
  85:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /**
  86:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  *This function initialize all VADC Global registers based on GUI configuration.
  87:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  */
  88:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** void ADCGLOB001_Init(void)
  89:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** {
  28              		.loc 1 89 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 00AF     		add	r7, sp, #0
  38              	.LCFI1:
  39              		.cfi_def_cfa_register 7
  90:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   FUNCTION_ENTRY(GID_ADCGLOB001,(uint32_t)ADCGLOB001_FUNCTION_ENTRY);
  91:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   
  92:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   if(ADCGLOB001_Handle0.kDynamicDataPtr->StateType == ADCGLOB001_UNINITIALIZED )
  40              		.loc 1 92 0
  41 0004 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
  42 0008 C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
  43 000c 5B68     		ldr	r3, [r3, #4]
  44 000e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
  45 0010 002B     		cmp	r3, #0
  46 0012 40F0C480 		bne	.L1
  93:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   {
  94:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****       
  95:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     /* Initialise clock init.*/
  96:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     CLK001_Init();  
  47              		.loc 1 96 0
  48 0016 FFF7FEFF 		bl	CLK001_Init
  97:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         
  98:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     /* Bring ADC Module Out of Reset */
  99:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     RESET001_DeassertReset(PER0_VADC);
  49              		.loc 1 99 0
  50 001a 4FF00100 		mov	r0, #1
  51 001e FFF7FEFF 		bl	RESET001_DeassertReset
 100:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****       
 101:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     /* Bring the module out of disabled state.*/
 102:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     CLR_BIT( ADCGLOB001_Handle0.kGlobalPtr->CLC, VADC_CLC_DISR_Pos);
  52              		.loc 1 102 0
  53 0022 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
  54 0026 C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
  55 002a 1A68     		ldr	r2, [r3, #0]
  56 002c 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
  57 0030 C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
  58 0034 1B68     		ldr	r3, [r3, #0]
  59 0036 1B68     		ldr	r3, [r3, #0]
  60 0038 23F00103 		bic	r3, r3, #1
  61 003c 1360     		str	r3, [r2, #0]
 103:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     /** 
 104:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****      * Make divider bit fields writable.
 105:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****      * Configure Divider Factor for the Analog Internal Clock.
 106:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****      * Configure Divider Factor for the Arbiter Clock.
 107:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****      * Configure Double Clock for the MSB Conversion.
 108:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****      */
 109:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     ADCGLOB001_Handle0.kGlobalPtr->GLOBCFG = \
  62              		.loc 1 109 0
  63 003e 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
  64 0042 C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
  65 0046 1A68     		ldr	r2, [r3, #0]
 110:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 (uint32_t)(((uint32_t)1<<VADC_GLOBCFG_DIVWC_Pos)| \
 111:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 (((uint32_t)ADCGLOB001_Handle0.kArbiterClkDivider <<VADC_GLOBCFG_DIVD_Pos) & VADC_G
  66              		.loc 1 111 0
  67 0048 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
  68 004c C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
  69 0050 5B7B     		ldrb	r3, [r3, #13]	@ zero_extendqisi2
  70 0052 4FEA0323 		lsl	r3, r3, #8
  71 0056 03F44071 		and	r1, r3, #768
 112:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 (((uint32_t)ADCGLOB001_Handle0.keDoubleClkMSBConver <<VADC_GLOBCFG_DCMSB_Pos)&VADC_
  72              		.loc 1 112 0
  73 005a 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
  74 005e C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
  75 0062 DB7D     		ldrb	r3, [r3, #23]	@ zero_extendqisi2
  76 0064 4FEAC313 		lsl	r3, r3, #7
  77 0068 DBB2     		uxtb	r3, r3
 111:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 (((uint32_t)ADCGLOB001_Handle0.kArbiterClkDivider <<VADC_GLOBCFG_DIVD_Pos) & VADC_G
  78              		.loc 1 111 0
  79 006a 1943     		orrs	r1, r1, r3
 113:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 (((uint32_t)ADCGLOB001_Handle0.kAnalogClkDivider <<VADC_GLOBCFG_DIVA_Pos)&VADC_GLOB
  80              		.loc 1 113 0
  81 006c 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
  82 0070 C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
  83 0074 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
  84 0076 03F01F03 		and	r3, r3, #31
 110:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 (uint32_t)(((uint32_t)1<<VADC_GLOBCFG_DIVWC_Pos)| \
  85              		.loc 1 110 0
  86 007a 0B43     		orrs	r3, r3, r1
  87 007c 43F40043 		orr	r3, r3, #32768
 109:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     ADCGLOB001_Handle0.kGlobalPtr->GLOBCFG = \
  88              		.loc 1 109 0
  89 0080 C2F88030 		str	r3, [r2, #128]
 114:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     /* Make the divider bit fields write protected */
 115:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     CLR_BIT( ADCGLOB001_Handle0.kGlobalPtr->GLOBCFG, VADC_GLOBCFG_DIVWC_Pos);
  90              		.loc 1 115 0
  91 0084 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
  92 0088 C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
  93 008c 1A68     		ldr	r2, [r3, #0]
  94 008e 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
  95 0092 C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
  96 0096 1B68     		ldr	r3, [r3, #0]
  97 0098 D3F88030 		ldr	r3, [r3, #128]
  98 009c 23F40043 		bic	r3, r3, #32768
  99 00a0 C2F88030 		str	r3, [r2, #128]
 116:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                     
 117:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     /** 
 118:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****      * Configure Class0 Sample Time Control for Standard Conversion.
 119:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****      * Configure Class0 Sample Time Control for EMUX Conversion.
 120:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****      * Configure Class0 Conversion Mode for Standard Conversion.
 121:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****      * Configure Class0 Conversion Mode for EMUX Conversion.
 122:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****      */
 123:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     ADCGLOB001_Handle0.kGlobalPtr->GLOBICLASS[0] = \
 100              		.loc 1 123 0
 101 00a4 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
 102 00a8 C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
 103 00ac 1A68     		ldr	r2, [r3, #0]
 124:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 (uint32_t)((((uint32_t)ADCGLOB001_Handle0.kEMUXConversionModeClass0 << VADC_GLOBICL
 104              		.loc 1 124 0
 105 00ae 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
 106 00b2 C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
 107 00b6 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 108 00b8 4FEA0363 		lsl	r3, r3, #24
 109 00bc 03F0E061 		and	r1, r3, #117440512
 125:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 (((uint32_t)ADCGLOB001_Handle0.kEMUXSampleTimeControlClass0 <<VADC_GLOBICLASS_STCE_
 110              		.loc 1 125 0
 111 00c0 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
 112 00c4 C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
 113 00c8 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 114 00ca 4FEA0343 		lsl	r3, r3, #16
 115 00ce 03F4F813 		and	r3, r3, #2031616
 124:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 (uint32_t)((((uint32_t)ADCGLOB001_Handle0.kEMUXConversionModeClass0 << VADC_GLOBICL
 116              		.loc 1 124 0
 117 00d2 1943     		orrs	r1, r1, r3
 126:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 (((uint32_t)ADCGLOB001_Handle0.kConversionModeClass0 <<VADC_GLOBICLASS_CMS_Pos)&VAD
 118              		.loc 1 126 0
 119 00d4 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
 120 00d8 C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
 121 00dc 9B7C     		ldrb	r3, [r3, #18]	@ zero_extendqisi2
 122 00de 4FEA0323 		lsl	r3, r3, #8
 123 00e2 03F4E063 		and	r3, r3, #1792
 125:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 (((uint32_t)ADCGLOB001_Handle0.kEMUXSampleTimeControlClass0 <<VADC_GLOBICLASS_STCE_
 124              		.loc 1 125 0
 125 00e6 1943     		orrs	r1, r1, r3
 127:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 (((uint32_t)ADCGLOB001_Handle0.kSampleTimeControlClass0 <<VADC_GLOBICLASS_STCS_Pos)
 126              		.loc 1 127 0
 127 00e8 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
 128 00ec C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
 129 00f0 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
 130 00f2 03F01F03 		and	r3, r3, #31
 124:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 (uint32_t)((((uint32_t)ADCGLOB001_Handle0.kEMUXConversionModeClass0 << VADC_GLOBICL
 131              		.loc 1 124 0
 132 00f6 0B43     		orrs	r3, r3, r1
 123:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     ADCGLOB001_Handle0.kGlobalPtr->GLOBICLASS[0] = \
 133              		.loc 1 123 0
 134 00f8 C2F8A030 		str	r3, [r2, #160]
 128:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     /** 
 129:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****      * Configure Class1 Sample Time Control for Standard Conversion.
 130:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****      * Configure Class1 Sample Time Control for EMUX Conversion.
 131:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****      * Configure Class1 Conversion Mode for Standard Conversion.
 132:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****      * Configure Class1 Conversion Mode for EMUX Conversion.
 133:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****      */    
 134:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     ADCGLOB001_Handle0.kGlobalPtr->GLOBICLASS[1] = \
 135              		.loc 1 134 0
 136 00fc 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
 137 0100 C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
 138 0104 1A68     		ldr	r2, [r3, #0]
 135:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 (uint32_t)((((uint32_t)ADCGLOB001_Handle0.kEMUXConversionModeClass1 << VADC_GLOBICL
 139              		.loc 1 135 0
 140 0106 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
 141 010a C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
 142 010e 5B7D     		ldrb	r3, [r3, #21]	@ zero_extendqisi2
 143 0110 4FEA0363 		lsl	r3, r3, #24
 144 0114 03F0E061 		and	r1, r3, #117440512
 136:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 (((uint32_t)ADCGLOB001_Handle0.kEMUXSampleTimeControlClass1 <<VADC_GLOBICLASS_STCE_
 145              		.loc 1 136 0
 146 0118 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
 147 011c C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
 148 0120 5B7C     		ldrb	r3, [r3, #17]	@ zero_extendqisi2
 149 0122 4FEA0343 		lsl	r3, r3, #16
 150 0126 03F4F813 		and	r3, r3, #2031616
 135:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 (uint32_t)((((uint32_t)ADCGLOB001_Handle0.kEMUXConversionModeClass1 << VADC_GLOBICL
 151              		.loc 1 135 0
 152 012a 1943     		orrs	r1, r1, r3
 137:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 (((uint32_t)ADCGLOB001_Handle0.kConversionModeClass1 <<VADC_GLOBICLASS_CMS_Pos)&VAD
 153              		.loc 1 137 0
 154 012c 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
 155 0130 C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
 156 0134 DB7C     		ldrb	r3, [r3, #19]	@ zero_extendqisi2
 157 0136 4FEA0323 		lsl	r3, r3, #8
 158 013a 03F4E063 		and	r3, r3, #1792
 136:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 (((uint32_t)ADCGLOB001_Handle0.kEMUXSampleTimeControlClass1 <<VADC_GLOBICLASS_STCE_
 159              		.loc 1 136 0
 160 013e 1943     		orrs	r1, r1, r3
 138:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 (((uint32_t)ADCGLOB001_Handle0.kSampleTimeControlClass1<<VADC_GLOBICLASS_STCS_Pos)&
 161              		.loc 1 138 0
 162 0140 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
 163 0144 C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
 164 0148 DB7B     		ldrb	r3, [r3, #15]	@ zero_extendqisi2
 165 014a 03F01F03 		and	r3, r3, #31
 135:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 (uint32_t)((((uint32_t)ADCGLOB001_Handle0.kEMUXConversionModeClass1 << VADC_GLOBICL
 166              		.loc 1 135 0
 167 014e 0B43     		orrs	r3, r3, r1
 134:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     ADCGLOB001_Handle0.kGlobalPtr->GLOBICLASS[1] = \
 168              		.loc 1 134 0
 169 0150 C2F8A430 		str	r3, [r2, #164]
 139:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****           
 140:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     /* Configure the lower and upper boundary based on the GUI configuration.*/
 141:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     ADCGLOB001_Handle0.kGlobalPtr->GLOBBOUND = \
 170              		.loc 1 141 0
 171 0154 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
 172 0158 C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
 173 015c 1968     		ldr	r1, [r3, #0]
 142:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 (uint32_t)((((uint32_t)ADCGLOB001_Handle0.KGlobBoundary1 <<VADC_GLOBBOUND_BOUNDARY1
 174              		.loc 1 142 0
 175 015e 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
 176 0162 C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
 177 0166 5B89     		ldrh	r3, [r3, #10]
 178 0168 4FEA0342 		lsl	r2, r3, #16
 179 016c 4FF00003 		mov	r3, #0
 180 0170 C0F6FF73 		movt	r3, 4095
 181 0174 1340     		ands	r3, r3, r2
 143:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 (((uint32_t)ADCGLOB001_Handle0.KGlobBoundary0 <<VADC_GLOBBOUND_BOUNDARY0_Pos)&VADC_
 182              		.loc 1 143 0
 183 0176 40F20002 		movw	r2, #:lower16:ADCGLOB001_Handle0
 184 017a C0F20002 		movt	r2, #:upper16:ADCGLOB001_Handle0
 185 017e 1289     		ldrh	r2, [r2, #8]
 186 0180 4FEA0252 		lsl	r2, r2, #20
 187 0184 4FEA1252 		lsr	r2, r2, #20
 142:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 (uint32_t)((((uint32_t)ADCGLOB001_Handle0.KGlobBoundary1 <<VADC_GLOBBOUND_BOUNDARY1
 188              		.loc 1 142 0
 189 0188 1343     		orrs	r3, r3, r2
 141:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     ADCGLOB001_Handle0.kGlobalPtr->GLOBBOUND = \
 190              		.loc 1 141 0
 191 018a C1F8B830 		str	r3, [r1, #184]
 144:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****              
 145:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     ADCGLOB001_Handle0.kDynamicDataPtr->StateType = ADCGLOB001_INITIALIZED;
 192              		.loc 1 145 0
 193 018e 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
 194 0192 C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
 195 0196 5B68     		ldr	r3, [r3, #4]
 196 0198 4FF00102 		mov	r2, #1
 197 019c 1A70     		strb	r2, [r3, #0]
 198              	.L1:
 146:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   } else {
 147:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     ERROR(GID_ADCGLOB001, (uint8_t)Status, 0, (uint8_t*)NULL);
 148:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   }
 149:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 150:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   FUNCTION_EXIT(GID_ADCGLOB001, (uint32_t)ADCGLOB001_FUNCTION_EXIT);
 151:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** }
 199              		.loc 1 151 0
 200 019e 80BD     		pop	{r7, pc}
 201              		.cfi_endproc
 202              	.LFE112:
 204              		.section	.text.ADCGLOB001_DeInit,"ax",%progbits
 205              		.align	2
 206              		.global	ADCGLOB001_DeInit
 207              		.thumb
 208              		.thumb_func
 210              	ADCGLOB001_DeInit:
 211              	.LFB113:
 152:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 153:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /**
 154:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * This function will de-initialize VADC Global registers.
 155:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  */
 156:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** status_t ADCGLOB001_DeInit(const ADCGLOB001_HandleType * HandlePtr)
 157:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** {
 212              		.loc 1 157 0
 213              		.cfi_startproc
 214              		@ args = 0, pretend = 0, frame = 16
 215              		@ frame_needed = 1, uses_anonymous_args = 0
 216              		@ link register save eliminated.
 217 0000 80B4     		push	{r7}
 218              	.LCFI2:
 219              		.cfi_def_cfa_offset 4
 220              		.cfi_offset 7, -4
 221 0002 85B0     		sub	sp, sp, #20
 222              	.LCFI3:
 223              		.cfi_def_cfa_offset 24
 224 0004 00AF     		add	r7, sp, #0
 225              	.LCFI4:
 226              		.cfi_def_cfa_register 7
 227 0006 7860     		str	r0, [r7, #4]
 158:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   status_t Status = (uint32_t)ADCGLOB001_OPER_NOT_ALLOWED;
 228              		.loc 1 158 0
 229 0008 4FF00103 		mov	r3, #1
 230 000c FB60     		str	r3, [r7, #12]
 159:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   
 160:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   FUNCTION_ENTRY(GID_ADCGLOB001,(uint32_t)ADCGLOB001_FUNCTION_ENTRY);
 161:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 162:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   if(HandlePtr->kDynamicDataPtr->StateType == ADCGLOB001_INITIALIZED )
 231              		.loc 1 162 0
 232 000e 7B68     		ldr	r3, [r7, #4]
 233 0010 5B68     		ldr	r3, [r3, #4]
 234 0012 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 235 0014 012B     		cmp	r3, #1
 236 0016 37D1     		bne	.L4
 163:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   {
 164:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     /* Bring the module out of disabled state */
 165:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     CLR_BIT( HandlePtr->kGlobalPtr->CLC, VADC_CLC_DISR_Pos);
 237              		.loc 1 165 0
 238 0018 7B68     		ldr	r3, [r7, #4]
 239 001a 1B68     		ldr	r3, [r3, #0]
 240 001c 7A68     		ldr	r2, [r7, #4]
 241 001e 1268     		ldr	r2, [r2, #0]
 242 0020 1268     		ldr	r2, [r2, #0]
 243 0022 22F00102 		bic	r2, r2, #1
 244 0026 1A60     		str	r2, [r3, #0]
 166:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         
 167:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     /* Make divider bit fields writable and deconfigure Analog Internal Clock, 
 168:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****      Arbiter Clock & MSB Conversion bits.*/
 169:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     HandlePtr->kGlobalPtr->GLOBCFG = \
 245              		.loc 1 169 0
 246 0028 7B68     		ldr	r3, [r7, #4]
 247 002a 1A68     		ldr	r2, [r3, #0]
 248 002c 4FF66043 		movw	r3, #64608
 249 0030 CFF6FF73 		movt	r3, 65535
 250 0034 C2F88030 		str	r3, [r2, #128]
 170:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                     (((uint32_t)1<<VADC_GLOBCFG_DIVWC_Pos)|((~(VADC_GLOBCFG_DIVD_Msk))& \
 171:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                     (~(VADC_GLOBCFG_DCMSB_Msk)) & (~(VADC_GLOBCFG_DIVA_Msk))));
 172:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         
 173:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     /* Again make the divider bit fields write protected */
 174:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     CLR_BIT( HandlePtr->kGlobalPtr->GLOBCFG, VADC_GLOBCFG_DIVWC_Pos);  
 251              		.loc 1 174 0
 252 0038 7B68     		ldr	r3, [r7, #4]
 253 003a 1B68     		ldr	r3, [r3, #0]
 254 003c 7A68     		ldr	r2, [r7, #4]
 255 003e 1268     		ldr	r2, [r2, #0]
 256 0040 D2F88020 		ldr	r2, [r2, #128]
 257 0044 22F40042 		bic	r2, r2, #32768
 258 0048 C3F88020 		str	r2, [r3, #128]
 175:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         
 176:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     /* 
 177:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****      * Configure Class0 Sample Time Control for Standard Conversion into default
 178:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****      *  mode.
 179:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****      * Configure Class0 Conversion Mode for Standard Conversion into default mode.
 180:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****      * Configure Class0 Sample Time Control for EMUX Conversion into default mode.
 181:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****      * Configure Class0  Conversion Mode for EMUX Conversion into default mode.
 182:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****      */
 183:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     HandlePtr->kGlobalPtr->GLOBICLASS[0] = \
 259              		.loc 1 183 0
 260 004c 7B68     		ldr	r3, [r7, #4]
 261 004e 1A68     		ldr	r2, [r3, #0]
 262 0050 4FF6E003 		movw	r3, #63712
 263 0054 CFF6E003 		movt	r3, 63712
 264 0058 C2F8A030 		str	r3, [r2, #160]
 184:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 ((~(VADC_GLOBICLASS_CME_Msk))&(~(VADC_GLOBICLASS_STCE_Msk))& \
 185:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 (~(VADC_GLOBICLASS_CMS_Msk))&(~(VADC_GLOBICLASS_STCS_Msk)));  
 186:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     /* 
 187:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****      * Configure Class1 Sample Time Control for Standard Conversion into default
 188:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****      *  mode.
 189:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****      * Configure Class1 Conversion Mode for Standard Conversion into default mode.
 190:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****      * Configure Class1 Sample Time Control for EMUX Conversion into default mode.
 191:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****      * Configure Class1  Conversion Mode for EMUX Conversion into default mode.
 192:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****      */
 193:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     HandlePtr->kGlobalPtr->GLOBICLASS[1] = \
 265              		.loc 1 193 0
 266 005c 7B68     		ldr	r3, [r7, #4]
 267 005e 1A68     		ldr	r2, [r3, #0]
 268 0060 4FF6E003 		movw	r3, #63712
 269 0064 CFF6E003 		movt	r3, 63712
 270 0068 C2F8A430 		str	r3, [r2, #164]
 194:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                     ((~(VADC_GLOBICLASS_CME_Msk))&(~(VADC_GLOBICLASS_STCE_Msk))& \
 195:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                     (~(VADC_GLOBICLASS_CMS_Msk))&(~(VADC_GLOBICLASS_STCS_Msk)));
 196:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         
 197:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     /* Configure global lower and upper boundary value into default value.*/
 198:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     HandlePtr->kGlobalPtr->GLOBBOUND = \
 271              		.loc 1 198 0
 272 006c 7B68     		ldr	r3, [r7, #4]
 273 006e 1B68     		ldr	r3, [r3, #0]
 274 0070 4FF0F022 		mov	r2, #-268374016
 275 0074 C3F8B820 		str	r2, [r3, #184]
 199:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                     ((~(VADC_GLOBBOUND_BOUNDARY1_Msk))&(~(VADC_GLOBBOUND_BOUNDARY0_Msk)));
 200:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****          
 201:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     HandlePtr->kDynamicDataPtr->StateType = ADCGLOB001_UNINITIALIZED;
 276              		.loc 1 201 0
 277 0078 7B68     		ldr	r3, [r7, #4]
 278 007a 5B68     		ldr	r3, [r3, #4]
 279 007c 4FF00002 		mov	r2, #0
 280 0080 1A70     		strb	r2, [r3, #0]
 202:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     Status = (uint32_t)DAVEApp_SUCCESS;
 281              		.loc 1 202 0
 282 0082 4FF00003 		mov	r3, #0
 283 0086 FB60     		str	r3, [r7, #12]
 284              	.L4:
 203:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   } else {
 204:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****       ERROR(GID_ADCGLOB001, (uint8_t)Status, 0, (uint8_t*)NULL);
 205:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   }
 206:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 207:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   FUNCTION_EXIT(GID_ADCGLOB001, (uint32_t)ADCGLOB001_FUNCTION_EXIT);
 208:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   
 209:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   return Status;
 285              		.loc 1 209 0
 286 0088 FB68     		ldr	r3, [r7, #12]
 210:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** }
 287              		.loc 1 210 0
 288 008a 1846     		mov	r0, r3
 289 008c 07F11407 		add	r7, r7, #20
 290 0090 BD46     		mov	sp, r7
 291 0092 80BC     		pop	{r7}
 292 0094 7047     		bx	lr
 293              		.cfi_endproc
 294              	.LFE113:
 296 0096 00BF     		.section	.text.ADCGLOB001_CLKRequestDisable,"ax",%progbits
 297              		.align	2
 298              		.global	ADCGLOB001_CLKRequestDisable
 299              		.thumb
 300              		.thumb_func
 302              	ADCGLOB001_CLKRequestDisable:
 303              	.LFB114:
 211:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 212:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /**
 213:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * This function disable the control of the module.
 214:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  */
 215:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** status_t ADCGLOB001_CLKRequestDisable(const ADCGLOB001_HandleType * HandlePtr)
 216:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** {
 304              		.loc 1 216 0
 305              		.cfi_startproc
 306              		@ args = 0, pretend = 0, frame = 16
 307              		@ frame_needed = 1, uses_anonymous_args = 0
 308              		@ link register save eliminated.
 309 0000 80B4     		push	{r7}
 310              	.LCFI5:
 311              		.cfi_def_cfa_offset 4
 312              		.cfi_offset 7, -4
 313 0002 85B0     		sub	sp, sp, #20
 314              	.LCFI6:
 315              		.cfi_def_cfa_offset 24
 316 0004 00AF     		add	r7, sp, #0
 317              	.LCFI7:
 318              		.cfi_def_cfa_register 7
 319 0006 7860     		str	r0, [r7, #4]
 217:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   status_t Status = (uint32_t)ADCGLOB001_OPER_NOT_ALLOWED;
 320              		.loc 1 217 0
 321 0008 4FF00103 		mov	r3, #1
 322 000c FB60     		str	r3, [r7, #12]
 218:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 219:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   FUNCTION_ENTRY(GID_ADCGLOB001, (uint32_t)ADCGLOB001_FUNCTION_ENTRY);
 220:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 221:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   if (HandlePtr->kDynamicDataPtr->StateType == ADCGLOB001_INITIALIZED)
 323              		.loc 1 221 0
 324 000e 7B68     		ldr	r3, [r7, #4]
 325 0010 5B68     		ldr	r3, [r3, #4]
 326 0012 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 327 0014 012B     		cmp	r3, #1
 328 0016 0AD1     		bne	.L7
 222:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   {
 223:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     
 224:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     /* Bring the module in disabled state
 225:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     * Module Disable Request Bit
 226:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     * 0 : enable the module clock  
 227:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     * 1 : stop the module clock */
 228:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****       
 229:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     SET_BIT( HandlePtr->kGlobalPtr->CLC, VADC_CLC_DISR_Pos);
 329              		.loc 1 229 0
 330 0018 7B68     		ldr	r3, [r7, #4]
 331 001a 1B68     		ldr	r3, [r3, #0]
 332 001c 7A68     		ldr	r2, [r7, #4]
 333 001e 1268     		ldr	r2, [r2, #0]
 334 0020 1268     		ldr	r2, [r2, #0]
 335 0022 42F00102 		orr	r2, r2, #1
 336 0026 1A60     		str	r2, [r3, #0]
 230:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 231:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     Status = (uint32_t)DAVEApp_SUCCESS;
 337              		.loc 1 231 0
 338 0028 4FF00003 		mov	r3, #0
 339 002c FB60     		str	r3, [r7, #12]
 340              	.L7:
 232:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 233:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   }
 234:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 235:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   if (Status != (uint32_t)DAVEApp_SUCCESS)
 236:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   {
 237:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     ERROR(GID_ADCGLOB001, (uint8_t)Status, 0, NULL);
 238:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   }
 239:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   FUNCTION_EXIT(GID_ADCGLOB001, (uint32_t)ADCGLOB001_FUNCTION_EXIT);
 240:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   return Status;
 341              		.loc 1 240 0
 342 002e FB68     		ldr	r3, [r7, #12]
 241:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** }
 343              		.loc 1 241 0
 344 0030 1846     		mov	r0, r3
 345 0032 07F11407 		add	r7, r7, #20
 346 0036 BD46     		mov	sp, r7
 347 0038 80BC     		pop	{r7}
 348 003a 7047     		bx	lr
 349              		.cfi_endproc
 350              	.LFE114:
 352              		.section	.text.ADCGLOB001_CLKRequestEnable,"ax",%progbits
 353              		.align	2
 354              		.global	ADCGLOB001_CLKRequestEnable
 355              		.thumb
 356              		.thumb_func
 358              	ADCGLOB001_CLKRequestEnable:
 359              	.LFB115:
 242:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /**
 243:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * This function enable the control of the module.
 244:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  */
 245:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** status_t ADCGLOB001_CLKRequestEnable(const ADCGLOB001_HandleType * HandlePtr)
 246:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** {
 360              		.loc 1 246 0
 361              		.cfi_startproc
 362              		@ args = 0, pretend = 0, frame = 16
 363              		@ frame_needed = 1, uses_anonymous_args = 0
 364              		@ link register save eliminated.
 365 0000 80B4     		push	{r7}
 366              	.LCFI8:
 367              		.cfi_def_cfa_offset 4
 368              		.cfi_offset 7, -4
 369 0002 85B0     		sub	sp, sp, #20
 370              	.LCFI9:
 371              		.cfi_def_cfa_offset 24
 372 0004 00AF     		add	r7, sp, #0
 373              	.LCFI10:
 374              		.cfi_def_cfa_register 7
 375 0006 7860     		str	r0, [r7, #4]
 247:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   status_t Status = (uint32_t)ADCGLOB001_OPER_NOT_ALLOWED;
 376              		.loc 1 247 0
 377 0008 4FF00103 		mov	r3, #1
 378 000c FB60     		str	r3, [r7, #12]
 248:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 249:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   FUNCTION_ENTRY(GID_ADCGLOB001, (uint32_t)ADCGLOB001_FUNCTION_ENTRY);
 250:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 251:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   if (HandlePtr->kDynamicDataPtr->StateType == ADCGLOB001_INITIALIZED)
 379              		.loc 1 251 0
 380 000e 7B68     		ldr	r3, [r7, #4]
 381 0010 5B68     		ldr	r3, [r3, #4]
 382 0012 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 383 0014 012B     		cmp	r3, #1
 384 0016 0AD1     		bne	.L10
 252:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   {
 253:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     /* Bring the module out of disabled state */
 254:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****       
 255:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     CLR_BIT( HandlePtr->kGlobalPtr->CLC, VADC_CLC_DISR_Pos);
 385              		.loc 1 255 0
 386 0018 7B68     		ldr	r3, [r7, #4]
 387 001a 1B68     		ldr	r3, [r3, #0]
 388 001c 7A68     		ldr	r2, [r7, #4]
 389 001e 1268     		ldr	r2, [r2, #0]
 390 0020 1268     		ldr	r2, [r2, #0]
 391 0022 22F00102 		bic	r2, r2, #1
 392 0026 1A60     		str	r2, [r3, #0]
 256:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 257:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     Status = (uint32_t)DAVEApp_SUCCESS;
 393              		.loc 1 257 0
 394 0028 4FF00003 		mov	r3, #0
 395 002c FB60     		str	r3, [r7, #12]
 396              	.L10:
 258:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   }
 259:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 260:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   if (Status != (uint32_t)DAVEApp_SUCCESS)
 261:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   {
 262:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     ERROR(GID_ADCGLOB001, (uint8_t)Status, 0, NULL);
 263:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   }
 264:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   FUNCTION_EXIT(GID_ADCGLOB001, (uint32_t)ADCGLOB001_FUNCTION_EXIT);
 265:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   return Status;
 397              		.loc 1 265 0
 398 002e FB68     		ldr	r3, [r7, #12]
 266:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** }
 399              		.loc 1 266 0
 400 0030 1846     		mov	r0, r3
 401 0032 07F11407 		add	r7, r7, #20
 402 0036 BD46     		mov	sp, r7
 403 0038 80BC     		pop	{r7}
 404 003a 7047     		bx	lr
 405              		.cfi_endproc
 406              	.LFE115:
 408              		.section	.text.ADCGLOB001_SetStartUpCalibration,"ax",%progbits
 409              		.align	2
 410              		.global	ADCGLOB001_SetStartUpCalibration
 411              		.thumb
 412              		.thumb_func
 414              	ADCGLOB001_SetStartUpCalibration:
 415              	.LFB116:
 267:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /**
 268:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * This function Initiate the start-up calibration phase.
 269:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  */
 270:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 271:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** status_t ADCGLOB001_SetStartUpCalibration(
 272:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     const ADCGLOB001_HandleType *HandlePtr
 273:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     )
 274:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** {
 416              		.loc 1 274 0
 417              		.cfi_startproc
 418              		@ args = 0, pretend = 0, frame = 16
 419              		@ frame_needed = 1, uses_anonymous_args = 0
 420              		@ link register save eliminated.
 421 0000 80B4     		push	{r7}
 422              	.LCFI11:
 423              		.cfi_def_cfa_offset 4
 424              		.cfi_offset 7, -4
 425 0002 85B0     		sub	sp, sp, #20
 426              	.LCFI12:
 427              		.cfi_def_cfa_offset 24
 428 0004 00AF     		add	r7, sp, #0
 429              	.LCFI13:
 430              		.cfi_def_cfa_register 7
 431 0006 7860     		str	r0, [r7, #4]
 275:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   status_t Status = (uint32_t)ADCGLOB001_OPER_NOT_ALLOWED;
 432              		.loc 1 275 0
 433 0008 4FF00103 		mov	r3, #1
 434 000c FB60     		str	r3, [r7, #12]
 276:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   uint32_t  CalibrationStatus;
 277:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 278:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   FUNCTION_ENTRY(GID_ADCGLOB001, (uint32_t)ADCGLOB001_FUNCTION_ENTRY);
 279:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 280:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   if (HandlePtr->kDynamicDataPtr->StateType == ADCGLOB001_INITIALIZED)
 435              		.loc 1 280 0
 436 000e 7B68     		ldr	r3, [r7, #4]
 437 0010 5B68     		ldr	r3, [r3, #4]
 438 0012 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 439 0014 012B     		cmp	r3, #1
 440 0016 16D1     		bne	.L13
 281:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   {
 282:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     /* Initiate Start-Up Calibration */
 283:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****       
 284:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     SET_BIT( HandlePtr->kGlobalPtr->GLOBCFG, VADC_GLOBCFG_SUCAL_Pos);
 441              		.loc 1 284 0
 442 0018 7B68     		ldr	r3, [r7, #4]
 443 001a 1B68     		ldr	r3, [r3, #0]
 444 001c 7A68     		ldr	r2, [r7, #4]
 445 001e 1268     		ldr	r2, [r2, #0]
 446 0020 D2F88020 		ldr	r2, [r2, #128]
 447 0024 42F00042 		orr	r2, r2, #-2147483648
 448 0028 C3F88020 		str	r2, [r3, #128]
 449              	.L14:
 285:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     
 286:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     /*Wait for calibration to be finished*/
 287:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     
 288:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     do{
 289:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         CalibrationStatus= (HandlePtr->kGlobalPtr->GLOBCFG & 0x80000000);
 450              		.loc 1 289 0 discriminator 1
 451 002c 7B68     		ldr	r3, [r7, #4]
 452 002e 1B68     		ldr	r3, [r3, #0]
 453 0030 D3F88030 		ldr	r3, [r3, #128]
 454 0034 03F00043 		and	r3, r3, #-2147483648
 455 0038 BB60     		str	r3, [r7, #8]
 290:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }while (CalibrationStatus!=(uint32_t)0);
 456              		.loc 1 290 0 discriminator 1
 457 003a BB68     		ldr	r3, [r7, #8]
 458 003c 002B     		cmp	r3, #0
 459 003e F5D1     		bne	.L14
 291:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     Status = (uint32_t)DAVEApp_SUCCESS;
 460              		.loc 1 291 0
 461 0040 4FF00003 		mov	r3, #0
 462 0044 FB60     		str	r3, [r7, #12]
 463              	.L13:
 292:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   }
 293:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 294:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   if (Status != (uint32_t)DAVEApp_SUCCESS)
 295:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   {
 296:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     ERROR(GID_ADCGLOB001, (uint8_t)Status, 0, NULL);
 297:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   }
 298:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   FUNCTION_EXIT(GID_ADCGLOB001, (uint32_t)ADCGLOB001_FUNCTION_EXIT);
 299:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   return Status;
 464              		.loc 1 299 0
 465 0046 FB68     		ldr	r3, [r7, #12]
 300:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** }
 466              		.loc 1 300 0
 467 0048 1846     		mov	r0, r3
 468 004a 07F11407 		add	r7, r7, #20
 469 004e BD46     		mov	sp, r7
 470 0050 80BC     		pop	{r7}
 471 0052 7047     		bx	lr
 472              		.cfi_endproc
 473              	.LFE116:
 475              		.section	.text.ADCGLOB001_StartUpCalibrationInit,"ax",%progbits
 476              		.align	2
 477              		.global	ADCGLOB001_StartUpCalibrationInit
 478              		.thumb
 479              		.thumb_func
 481              	ADCGLOB001_StartUpCalibrationInit:
 482              	.LFB117:
 301:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /**
 302:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * This function Initialise the calibration based based on GUI configuration.
 303:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  */
 304:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** status_t ADCGLOB001_StartUpCalibrationInit(void)
 305:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** {
 483              		.loc 1 305 0
 484              		.cfi_startproc
 485              		@ args = 0, pretend = 0, frame = 8
 486              		@ frame_needed = 1, uses_anonymous_args = 0
 487              		@ link register save eliminated.
 488 0000 80B4     		push	{r7}
 489              	.LCFI14:
 490              		.cfi_def_cfa_offset 4
 491              		.cfi_offset 7, -4
 492 0002 83B0     		sub	sp, sp, #12
 493              	.LCFI15:
 494              		.cfi_def_cfa_offset 16
 495 0004 00AF     		add	r7, sp, #0
 496              	.LCFI16:
 497              		.cfi_def_cfa_register 7
 306:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   status_t Status = (uint32_t)ADCGLOB001_OPER_NOT_ALLOWED;
 498              		.loc 1 306 0
 499 0006 4FF00103 		mov	r3, #1
 500 000a 7B60     		str	r3, [r7, #4]
 307:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   uint32_t  CalibrationStatus;
 308:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     
 309:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   FUNCTION_ENTRY(GID_ADCGLOB001,(uint32_t)ADCGLOB001_FUNCTION_ENTRY);
 310:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 311:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   if(ADCGLOB001_Handle0.kDynamicDataPtr->StateType == ADCGLOB001_INITIALIZED )
 501              		.loc 1 311 0
 502 000c 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
 503 0010 C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
 504 0014 5B68     		ldr	r3, [r3, #4]
 505 0016 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 506 0018 012B     		cmp	r3, #1
 507 001a 26D1     		bne	.L17
 312:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   {
 313:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     /* Initialise Calibration */
 314:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         
 315:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****       if(ADCGLOB001_Handle0.keStartCalib == (uint8_t)1)
 508              		.loc 1 315 0
 509 001c 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
 510 0020 C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
 511 0024 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 512 0026 012B     		cmp	r3, #1
 513 0028 1CD1     		bne	.L18
 316:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****       {
 317:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****           /* Initiate Start-Up Calibration */
 318:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****           SET_BIT( 
 514              		.loc 1 318 0
 515 002a 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
 516 002e C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
 517 0032 1A68     		ldr	r2, [r3, #0]
 518 0034 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
 519 0038 C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
 520 003c 1B68     		ldr	r3, [r3, #0]
 521 003e D3F88030 		ldr	r3, [r3, #128]
 522 0042 43F00043 		orr	r3, r3, #-2147483648
 523 0046 C2F88030 		str	r3, [r2, #128]
 524              	.L19:
 319:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****               ADCGLOB001_Handle0.kGlobalPtr->GLOBCFG,
 320:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****               VADC_GLOBCFG_SUCAL_Pos
 321:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****               ); 
 322:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****           /*Wait for calibration to be finished*/ 
 323:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****           do{
 324:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****               CalibrationStatus= \
 325:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                   (ADCGLOB001_Handle0.kGlobalPtr->GLOBCFG & 0x80000000);
 525              		.loc 1 325 0 discriminator 1
 526 004a 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
 527 004e C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
 528 0052 1B68     		ldr	r3, [r3, #0]
 529 0054 D3F88030 		ldr	r3, [r3, #128]
 324:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****               CalibrationStatus= \
 530              		.loc 1 324 0 discriminator 1
 531 0058 03F00043 		and	r3, r3, #-2147483648
 532 005c 3B60     		str	r3, [r7, #0]
 326:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****           }while (CalibrationStatus!=(uint32_t)0);
 533              		.loc 1 326 0 discriminator 1
 534 005e 3B68     		ldr	r3, [r7, #0]
 535 0060 002B     		cmp	r3, #0
 536 0062 F2D1     		bne	.L19
 537              	.L18:
 327:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****       } 
 328:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****       
 329:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     Status = (uint32_t)DAVEApp_SUCCESS; 
 538              		.loc 1 329 0
 539 0064 4FF00003 		mov	r3, #0
 540 0068 7B60     		str	r3, [r7, #4]
 541              	.L17:
 330:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   }
 331:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     
 332:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   if (Status != (uint32_t)DAVEApp_SUCCESS)
 333:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   {
 334:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     ERROR(GID_ADCGLOB001, (uint8_t)Status, 0, NULL);
 335:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   }
 336:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   FUNCTION_EXIT(GID_ADCGLOB001, (uint32_t)ADCGLOB001_FUNCTION_EXIT);
 337:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   
 338:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   return Status;
 542              		.loc 1 338 0
 543 006a 7B68     		ldr	r3, [r7, #4]
 339:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** }
 544              		.loc 1 339 0
 545 006c 1846     		mov	r0, r3
 546 006e 07F10C07 		add	r7, r7, #12
 547 0072 BD46     		mov	sp, r7
 548 0074 80BC     		pop	{r7}
 549 0076 7047     		bx	lr
 550              		.cfi_endproc
 551              	.LFE117:
 553              		.section	.text.ADCGLOB001_EnableSleepModeControl,"ax",%progbits
 554              		.align	2
 555              		.global	ADCGLOB001_EnableSleepModeControl
 556              		.thumb
 557              		.thumb_func
 559              	ADCGLOB001_EnableSleepModeControl:
 560              	.LFB118:
 340:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 341:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /**
 342:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * This function Enables Sleep Mode Control.Which is used to control module?s 
 343:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * reaction to sleep mode.
 344:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  */
 345:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** status_t ADCGLOB001_EnableSleepModeControl(
 346:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     const ADCGLOB001_HandleType * HandlePtr
 347:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     )
 348:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** {
 561              		.loc 1 348 0
 562              		.cfi_startproc
 563              		@ args = 0, pretend = 0, frame = 16
 564              		@ frame_needed = 1, uses_anonymous_args = 0
 565              		@ link register save eliminated.
 566 0000 80B4     		push	{r7}
 567              	.LCFI17:
 568              		.cfi_def_cfa_offset 4
 569              		.cfi_offset 7, -4
 570 0002 85B0     		sub	sp, sp, #20
 571              	.LCFI18:
 572              		.cfi_def_cfa_offset 24
 573 0004 00AF     		add	r7, sp, #0
 574              	.LCFI19:
 575              		.cfi_def_cfa_register 7
 576 0006 7860     		str	r0, [r7, #4]
 349:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   status_t Status = (uint32_t)ADCGLOB001_OPER_NOT_ALLOWED;
 577              		.loc 1 349 0
 578 0008 4FF00103 		mov	r3, #1
 579 000c FB60     		str	r3, [r7, #12]
 350:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 351:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   FUNCTION_ENTRY(GID_ADCGLOB001, (uint32_t)ADCGLOB001_FUNCTION_ENTRY);
 352:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 353:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   if (HandlePtr->kDynamicDataPtr->StateType == ADCGLOB001_INITIALIZED)
 580              		.loc 1 353 0
 581 000e 7B68     		ldr	r3, [r7, #4]
 582 0010 5B68     		ldr	r3, [r3, #4]
 583 0012 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 584 0014 012B     		cmp	r3, #1
 585 0016 0AD1     		bne	.L22
 354:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   {
 355:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****       /* Reset  Sleep Mode Enable Control bit*/
 356:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****       CLR_BIT( HandlePtr->kGlobalPtr->CLC, VADC_CLC_EDIS_Pos);
 586              		.loc 1 356 0
 587 0018 7B68     		ldr	r3, [r7, #4]
 588 001a 1B68     		ldr	r3, [r3, #0]
 589 001c 7A68     		ldr	r2, [r7, #4]
 590 001e 1268     		ldr	r2, [r2, #0]
 591 0020 1268     		ldr	r2, [r2, #0]
 592 0022 22F00802 		bic	r2, r2, #8
 593 0026 1A60     		str	r2, [r3, #0]
 357:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 358:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     Status = (uint32_t)DAVEApp_SUCCESS;
 594              		.loc 1 358 0
 595 0028 4FF00003 		mov	r3, #0
 596 002c FB60     		str	r3, [r7, #12]
 597              	.L22:
 359:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   }
 360:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 361:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   if (Status != (uint32_t)DAVEApp_SUCCESS)
 362:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   {
 363:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     ERROR(GID_ADCGLOB001, (uint8_t)Status, 0, NULL);
 364:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   }
 365:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   FUNCTION_EXIT(GID_ADCGLOB001, (uint32_t)ADCGLOB001_FUNCTION_EXIT);
 366:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   return Status;
 598              		.loc 1 366 0
 599 002e FB68     		ldr	r3, [r7, #12]
 367:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** }
 600              		.loc 1 367 0
 601 0030 1846     		mov	r0, r3
 602 0032 07F11407 		add	r7, r7, #20
 603 0036 BD46     		mov	sp, r7
 604 0038 80BC     		pop	{r7}
 605 003a 7047     		bx	lr
 606              		.cfi_endproc
 607              	.LFE118:
 609              		.section	.text.ADCGLOB001_DisregardSleepModeControl,"ax",%progbits
 610              		.align	2
 611              		.global	ADCGLOB001_DisregardSleepModeControl
 612              		.thumb
 613              		.thumb_func
 615              	ADCGLOB001_DisregardSleepModeControl:
 616              	.LFB119:
 368:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /**
 369:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * This function disregards Sleep Mode Control.
 370:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  */
 371:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** status_t ADCGLOB001_DisregardSleepModeControl(
 372:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     const ADCGLOB001_HandleType * HandlePtr
 373:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     )
 374:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** {
 617              		.loc 1 374 0
 618              		.cfi_startproc
 619              		@ args = 0, pretend = 0, frame = 16
 620              		@ frame_needed = 1, uses_anonymous_args = 0
 621              		@ link register save eliminated.
 622 0000 80B4     		push	{r7}
 623              	.LCFI20:
 624              		.cfi_def_cfa_offset 4
 625              		.cfi_offset 7, -4
 626 0002 85B0     		sub	sp, sp, #20
 627              	.LCFI21:
 628              		.cfi_def_cfa_offset 24
 629 0004 00AF     		add	r7, sp, #0
 630              	.LCFI22:
 631              		.cfi_def_cfa_register 7
 632 0006 7860     		str	r0, [r7, #4]
 375:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   status_t Status = (uint32_t)ADCGLOB001_OPER_NOT_ALLOWED;
 633              		.loc 1 375 0
 634 0008 4FF00103 		mov	r3, #1
 635 000c FB60     		str	r3, [r7, #12]
 376:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 377:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   FUNCTION_ENTRY(GID_ADCGLOB001, (uint32_t)ADCGLOB001_FUNCTION_ENTRY);
 378:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 379:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   if (HandlePtr->kDynamicDataPtr->StateType == ADCGLOB001_INITIALIZED)
 636              		.loc 1 379 0
 637 000e 7B68     		ldr	r3, [r7, #4]
 638 0010 5B68     		ldr	r3, [r3, #4]
 639 0012 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 640 0014 012B     		cmp	r3, #1
 641 0016 0AD1     		bne	.L25
 380:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   {
 381:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     /* set  Sleep Mode Enable Control bit*/
 382:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     SET_BIT( HandlePtr->kGlobalPtr->CLC, VADC_CLC_EDIS_Pos);
 642              		.loc 1 382 0
 643 0018 7B68     		ldr	r3, [r7, #4]
 644 001a 1B68     		ldr	r3, [r3, #0]
 645 001c 7A68     		ldr	r2, [r7, #4]
 646 001e 1268     		ldr	r2, [r2, #0]
 647 0020 1268     		ldr	r2, [r2, #0]
 648 0022 42F00802 		orr	r2, r2, #8
 649 0026 1A60     		str	r2, [r3, #0]
 383:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 384:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     Status = (uint32_t)DAVEApp_SUCCESS;
 650              		.loc 1 384 0
 651 0028 4FF00003 		mov	r3, #0
 652 002c FB60     		str	r3, [r7, #12]
 653              	.L25:
 385:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   }
 386:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 387:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   if (Status != (uint32_t)DAVEApp_SUCCESS)
 388:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   {
 389:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     ERROR(GID_ADCGLOB001, (uint8_t)Status, 0, NULL);
 390:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   }
 391:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   FUNCTION_EXIT(GID_ADCGLOB001, (uint32_t)ADCGLOB001_FUNCTION_EXIT);
 392:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   return Status;
 654              		.loc 1 392 0
 655 002e FB68     		ldr	r3, [r7, #12]
 393:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** }
 656              		.loc 1 393 0
 657 0030 1846     		mov	r0, r3
 658 0032 07F11407 		add	r7, r7, #20
 659 0036 BD46     		mov	sp, r7
 660 0038 80BC     		pop	{r7}
 661 003a 7047     		bx	lr
 662              		.cfi_endproc
 663              	.LFE119:
 665              		.section	.text.ADCGLOB001_SetGlobClass0ConvMode,"ax",%progbits
 666              		.align	2
 667              		.global	ADCGLOB001_SetGlobClass0ConvMode
 668              		.thumb
 669              		.thumb_func
 671              	ADCGLOB001_SetGlobClass0ConvMode:
 672              	.LFB120:
 394:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 395:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /**
 396:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * This function configure the class 0 conversion mode for standard conversions.
 397:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  */
 398:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** status_t ADCGLOB001_SetGlobClass0ConvMode(
 399:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     const ADCGLOB001_HandleType * HandlePtr,
 400:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     ADCGLOB001_ConversionMode ConversionModeVal
 401:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     )
 402:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** {
 673              		.loc 1 402 0
 674              		.cfi_startproc
 675              		@ args = 0, pretend = 0, frame = 16
 676              		@ frame_needed = 1, uses_anonymous_args = 0
 677              		@ link register save eliminated.
 678 0000 80B4     		push	{r7}
 679              	.LCFI23:
 680              		.cfi_def_cfa_offset 4
 681              		.cfi_offset 7, -4
 682 0002 85B0     		sub	sp, sp, #20
 683              	.LCFI24:
 684              		.cfi_def_cfa_offset 24
 685 0004 00AF     		add	r7, sp, #0
 686              	.LCFI25:
 687              		.cfi_def_cfa_register 7
 688 0006 7860     		str	r0, [r7, #4]
 689 0008 0B46     		mov	r3, r1
 690 000a FB70     		strb	r3, [r7, #3]
 403:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   status_t Status = (uint32_t)ADCGLOB001_OPER_NOT_ALLOWED;
 691              		.loc 1 403 0
 692 000c 4FF00103 		mov	r3, #1
 693 0010 FB60     		str	r3, [r7, #12]
 404:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 405:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   FUNCTION_ENTRY(GID_ADCGLOB001, (uint32_t)ADCGLOB001_FUNCTION_ENTRY);
 406:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 407:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   if (HandlePtr->kDynamicDataPtr->StateType == ADCGLOB001_INITIALIZED)
 694              		.loc 1 407 0
 695 0012 7B68     		ldr	r3, [r7, #4]
 696 0014 5B68     		ldr	r3, [r3, #4]
 697 0016 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 698 0018 012B     		cmp	r3, #1
 699 001a 1CD1     		bne	.L28
 408:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   {
 409:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****       if((ConversionModeVal < (ADCGLOB001_ConversionMode)3) || 
 700              		.loc 1 409 0
 701 001c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 702 001e 022B     		cmp	r3, #2
 703 0020 02D9     		bls	.L29
 704              		.loc 1 409 0 is_stmt 0 discriminator 1
 705 0022 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 706 0024 052B     		cmp	r3, #5
 707 0026 13D1     		bne	.L30
 708              	.L29:
 410:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****           (ConversionModeVal ==(ADCGLOB001_ConversionMode)5)) { 
 411:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         /* Set the global class0 conversion mode */
 412:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         WR_REG( HandlePtr->kGlobalPtr->GLOBICLASS[0],
 709              		.loc 1 412 0 is_stmt 1
 710 0028 7B68     		ldr	r3, [r7, #4]
 711 002a 1B68     		ldr	r3, [r3, #0]
 712 002c FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 713 002e 4FEA0222 		lsl	r2, r2, #8
 714 0032 02F4E061 		and	r1, r2, #1792
 715 0036 7A68     		ldr	r2, [r7, #4]
 716 0038 1268     		ldr	r2, [r2, #0]
 717 003a D2F8A020 		ldr	r2, [r2, #160]
 718 003e 22F4E062 		bic	r2, r2, #1792
 719 0042 0A43     		orrs	r2, r2, r1
 720 0044 C3F8A020 		str	r2, [r3, #160]
 413:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 VADC_GLOBICLASS_CMS_Msk,
 414:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 VADC_GLOBICLASS_CMS_Pos,
 415:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 (uint32_t)ConversionModeVal
 416:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****               );
 417:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 418:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         Status = (uint32_t)DAVEApp_SUCCESS;
 721              		.loc 1 418 0
 722 0048 4FF00003 		mov	r3, #0
 723 004c FB60     		str	r3, [r7, #12]
 724 004e 02E0     		b	.L28
 725              	.L30:
 419:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****       } else {
 420:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         Status = (uint32_t)ADCGLOB001_INVALID_PARAM_ERROR;
 726              		.loc 1 420 0
 727 0050 4FF00203 		mov	r3, #2
 728 0054 FB60     		str	r3, [r7, #12]
 729              	.L28:
 421:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****       }       
 422:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   }
 423:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 424:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   if (Status != (uint32_t)DAVEApp_SUCCESS)
 425:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   {
 426:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     ERROR(GID_ADCGLOB001, (uint8_t)Status, 0, NULL);
 427:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   }
 428:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   
 429:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   FUNCTION_EXIT(GID_ADCGLOB001, (uint32_t)ADCGLOB001_FUNCTION_EXIT);
 430:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   return Status;
 730              		.loc 1 430 0
 731 0056 FB68     		ldr	r3, [r7, #12]
 431:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** }
 732              		.loc 1 431 0
 733 0058 1846     		mov	r0, r3
 734 005a 07F11407 		add	r7, r7, #20
 735 005e BD46     		mov	sp, r7
 736 0060 80BC     		pop	{r7}
 737 0062 7047     		bx	lr
 738              		.cfi_endproc
 739              	.LFE120:
 741              		.section	.text.ADCGLOB001_SetGlobClass0SampleTime,"ax",%progbits
 742              		.align	2
 743              		.global	ADCGLOB001_SetGlobClass0SampleTime
 744              		.thumb
 745              		.thumb_func
 747              	ADCGLOB001_SetGlobClass0SampleTime:
 748              	.LFB121:
 432:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /**
 433:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * This function configure the class 0 Sample Time Control for Standard 
 434:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * Conversions.
 435:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  */
 436:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 437:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** status_t ADCGLOB001_SetGlobClass0SampleTime(
 438:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     const ADCGLOB001_HandleType * HandlePtr,
 439:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     uint8_t SampleTime
 440:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     )
 441:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** {
 749              		.loc 1 441 0
 750              		.cfi_startproc
 751              		@ args = 0, pretend = 0, frame = 16
 752              		@ frame_needed = 1, uses_anonymous_args = 0
 753              		@ link register save eliminated.
 754 0000 80B4     		push	{r7}
 755              	.LCFI26:
 756              		.cfi_def_cfa_offset 4
 757              		.cfi_offset 7, -4
 758 0002 85B0     		sub	sp, sp, #20
 759              	.LCFI27:
 760              		.cfi_def_cfa_offset 24
 761 0004 00AF     		add	r7, sp, #0
 762              	.LCFI28:
 763              		.cfi_def_cfa_register 7
 764 0006 7860     		str	r0, [r7, #4]
 765 0008 0B46     		mov	r3, r1
 766 000a FB70     		strb	r3, [r7, #3]
 442:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   status_t Status = (uint32_t)ADCGLOB001_OPER_NOT_ALLOWED;
 767              		.loc 1 442 0
 768 000c 4FF00103 		mov	r3, #1
 769 0010 FB60     		str	r3, [r7, #12]
 443:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 444:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   FUNCTION_ENTRY(GID_ADCGLOB001, (uint32_t)ADCGLOB001_FUNCTION_ENTRY);
 445:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 446:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   if (HandlePtr->kDynamicDataPtr->StateType == ADCGLOB001_INITIALIZED)
 770              		.loc 1 446 0
 771 0012 7B68     		ldr	r3, [r7, #4]
 772 0014 5B68     		ldr	r3, [r3, #4]
 773 0016 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 774 0018 012B     		cmp	r3, #1
 775 001a 17D1     		bne	.L33
 447:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   {
 448:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if(SampleTime < (uint8_t)32){ 
 776              		.loc 1 448 0
 777 001c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 778 001e 1F2B     		cmp	r3, #31
 779 0020 11D8     		bhi	.L34
 449:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****       /* Set the global class0 Sample Time */
 450:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****       WR_REG( HandlePtr->kGlobalPtr->GLOBICLASS[0],
 780              		.loc 1 450 0
 781 0022 7B68     		ldr	r3, [r7, #4]
 782 0024 1B68     		ldr	r3, [r3, #0]
 783 0026 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 784 0028 02F01F01 		and	r1, r2, #31
 785 002c 7A68     		ldr	r2, [r7, #4]
 786 002e 1268     		ldr	r2, [r2, #0]
 787 0030 D2F8A020 		ldr	r2, [r2, #160]
 788 0034 22F01F02 		bic	r2, r2, #31
 789 0038 0A43     		orrs	r2, r2, r1
 790 003a C3F8A020 		str	r2, [r3, #160]
 451:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****               VADC_GLOBICLASS_STCS_Msk,
 452:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****               VADC_GLOBICLASS_STCS_Pos,
 453:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****               (uint32_t)SampleTime
 454:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             );
 455:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 456:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****       Status = (uint32_t)DAVEApp_SUCCESS;
 791              		.loc 1 456 0
 792 003e 4FF00003 		mov	r3, #0
 793 0042 FB60     		str	r3, [r7, #12]
 794 0044 02E0     		b	.L33
 795              	.L34:
 457:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     } else {
 458:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****       Status = (uint32_t)ADCGLOB001_INVALID_PARAM_ERROR;
 796              		.loc 1 458 0
 797 0046 4FF00203 		mov	r3, #2
 798 004a FB60     		str	r3, [r7, #12]
 799              	.L33:
 459:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     } 
 460:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   }
 461:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 462:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   if (Status != (uint32_t)DAVEApp_SUCCESS)
 463:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   {
 464:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     ERROR(GID_ADCGLOB001, (uint8_t)Status, 0, NULL);
 465:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   }
 466:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   FUNCTION_EXIT(GID_ADCGLOB001, (uint32_t)ADCGLOB001_FUNCTION_EXIT);
 467:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   return Status;
 800              		.loc 1 467 0
 801 004c FB68     		ldr	r3, [r7, #12]
 468:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 469:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** }
 802              		.loc 1 469 0
 803 004e 1846     		mov	r0, r3
 804 0050 07F11407 		add	r7, r7, #20
 805 0054 BD46     		mov	sp, r7
 806 0056 80BC     		pop	{r7}
 807 0058 7047     		bx	lr
 808              		.cfi_endproc
 809              	.LFE121:
 811 005a 00BF     		.section	.text.ADCGLOB001_SetGlobClass0EmuxConvMode,"ax",%progbits
 812              		.align	2
 813              		.global	ADCGLOB001_SetGlobClass0EmuxConvMode
 814              		.thumb
 815              		.thumb_func
 817              	ADCGLOB001_SetGlobClass0EmuxConvMode:
 818              	.LFB122:
 470:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /**
 471:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * This function configure the class 0 Conversion Mode for EMUX Conversions.
 472:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  */
 473:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** status_t ADCGLOB001_SetGlobClass0EmuxConvMode(
 474:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     const ADCGLOB001_HandleType * HandlePtr,
 475:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     ADCGLOB001_ConversionMode ConversionModeVal
 476:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     )
 477:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** {
 819              		.loc 1 477 0
 820              		.cfi_startproc
 821              		@ args = 0, pretend = 0, frame = 16
 822              		@ frame_needed = 1, uses_anonymous_args = 0
 823              		@ link register save eliminated.
 824 0000 80B4     		push	{r7}
 825              	.LCFI29:
 826              		.cfi_def_cfa_offset 4
 827              		.cfi_offset 7, -4
 828 0002 85B0     		sub	sp, sp, #20
 829              	.LCFI30:
 830              		.cfi_def_cfa_offset 24
 831 0004 00AF     		add	r7, sp, #0
 832              	.LCFI31:
 833              		.cfi_def_cfa_register 7
 834 0006 7860     		str	r0, [r7, #4]
 835 0008 0B46     		mov	r3, r1
 836 000a FB70     		strb	r3, [r7, #3]
 478:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   status_t Status = (uint32_t)ADCGLOB001_OPER_NOT_ALLOWED;
 837              		.loc 1 478 0
 838 000c 4FF00103 		mov	r3, #1
 839 0010 FB60     		str	r3, [r7, #12]
 479:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 480:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   FUNCTION_ENTRY(GID_ADCGLOB001, (uint32_t)ADCGLOB001_FUNCTION_ENTRY);
 481:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 482:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   if (HandlePtr->kDynamicDataPtr->StateType == ADCGLOB001_INITIALIZED)
 840              		.loc 1 482 0
 841 0012 7B68     		ldr	r3, [r7, #4]
 842 0014 5B68     		ldr	r3, [r3, #4]
 843 0016 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 844 0018 012B     		cmp	r3, #1
 845 001a 1CD1     		bne	.L37
 483:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   {  
 484:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if((ConversionModeVal < (ADCGLOB001_ConversionMode)3) || 
 846              		.loc 1 484 0
 847 001c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 848 001e 022B     		cmp	r3, #2
 849 0020 02D9     		bls	.L38
 850              		.loc 1 484 0 is_stmt 0 discriminator 1
 851 0022 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 852 0024 052B     		cmp	r3, #5
 853 0026 13D1     		bne	.L39
 854              	.L38:
 485:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         (ConversionModeVal ==(ADCGLOB001_ConversionMode)5)) { 
 486:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****       /* Set the global class0 External Multiplexer conversion mode*/
 487:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****       WR_REG( HandlePtr->kGlobalPtr->GLOBICLASS[0],
 855              		.loc 1 487 0 is_stmt 1
 856 0028 7B68     		ldr	r3, [r7, #4]
 857 002a 1B68     		ldr	r3, [r3, #0]
 858 002c FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 859 002e 4FEA0262 		lsl	r2, r2, #24
 860 0032 02F0E061 		and	r1, r2, #117440512
 861 0036 7A68     		ldr	r2, [r7, #4]
 862 0038 1268     		ldr	r2, [r2, #0]
 863 003a D2F8A020 		ldr	r2, [r2, #160]
 864 003e 22F0E062 		bic	r2, r2, #117440512
 865 0042 0A43     		orrs	r2, r2, r1
 866 0044 C3F8A020 		str	r2, [r3, #160]
 488:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****               VADC_GLOBICLASS_CME_Msk,
 489:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****               VADC_GLOBICLASS_CME_Pos,
 490:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****               (uint32_t)ConversionModeVal
 491:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             );
 492:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****       Status = (uint32_t)DAVEApp_SUCCESS;
 867              		.loc 1 492 0
 868 0048 4FF00003 		mov	r3, #0
 869 004c FB60     		str	r3, [r7, #12]
 870 004e 02E0     		b	.L37
 871              	.L39:
 493:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****               
 494:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     } else {
 495:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****       Status = (uint32_t)ADCGLOB001_INVALID_PARAM_ERROR;
 872              		.loc 1 495 0
 873 0050 4FF00203 		mov	r3, #2
 874 0054 FB60     		str	r3, [r7, #12]
 875              	.L37:
 496:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }           
 497:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   }
 498:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 499:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   if (Status != (uint32_t)DAVEApp_SUCCESS)
 500:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   {
 501:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     ERROR(GID_ADCGLOB001, (uint8_t)Status, 0, NULL);
 502:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   }
 503:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   FUNCTION_EXIT(GID_ADCGLOB001, (uint32_t)ADCGLOB001_FUNCTION_EXIT);
 504:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   return Status;
 876              		.loc 1 504 0
 877 0056 FB68     		ldr	r3, [r7, #12]
 505:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 506:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** }
 878              		.loc 1 506 0
 879 0058 1846     		mov	r0, r3
 880 005a 07F11407 		add	r7, r7, #20
 881 005e BD46     		mov	sp, r7
 882 0060 80BC     		pop	{r7}
 883 0062 7047     		bx	lr
 884              		.cfi_endproc
 885              	.LFE122:
 887              		.section	.text.ADCGLOB001_SetGlobClass0EmuxSampleTime,"ax",%progbits
 888              		.align	2
 889              		.global	ADCGLOB001_SetGlobClass0EmuxSampleTime
 890              		.thumb
 891              		.thumb_func
 893              	ADCGLOB001_SetGlobClass0EmuxSampleTime:
 894              	.LFB123:
 507:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 508:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /**
 509:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * This function configure the class 0 Sample Time Control for EMUX Conversions.
 510:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  */
 511:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** status_t ADCGLOB001_SetGlobClass0EmuxSampleTime(
 512:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     const ADCGLOB001_HandleType * HandlePtr,
 513:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     uint8_t SampleTime
 514:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     )
 515:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** {
 895              		.loc 1 515 0
 896              		.cfi_startproc
 897              		@ args = 0, pretend = 0, frame = 16
 898              		@ frame_needed = 1, uses_anonymous_args = 0
 899              		@ link register save eliminated.
 900 0000 80B4     		push	{r7}
 901              	.LCFI32:
 902              		.cfi_def_cfa_offset 4
 903              		.cfi_offset 7, -4
 904 0002 85B0     		sub	sp, sp, #20
 905              	.LCFI33:
 906              		.cfi_def_cfa_offset 24
 907 0004 00AF     		add	r7, sp, #0
 908              	.LCFI34:
 909              		.cfi_def_cfa_register 7
 910 0006 7860     		str	r0, [r7, #4]
 911 0008 0B46     		mov	r3, r1
 912 000a FB70     		strb	r3, [r7, #3]
 516:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   status_t Status = (uint32_t)ADCGLOB001_OPER_NOT_ALLOWED;
 913              		.loc 1 516 0
 914 000c 4FF00103 		mov	r3, #1
 915 0010 FB60     		str	r3, [r7, #12]
 517:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 518:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   FUNCTION_ENTRY(GID_ADCGLOB001, (uint32_t)ADCGLOB001_FUNCTION_ENTRY);
 519:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 520:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   if (HandlePtr->kDynamicDataPtr->StateType == ADCGLOB001_INITIALIZED)
 916              		.loc 1 520 0
 917 0012 7B68     		ldr	r3, [r7, #4]
 918 0014 5B68     		ldr	r3, [r3, #4]
 919 0016 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 920 0018 012B     		cmp	r3, #1
 921 001a 19D1     		bne	.L42
 521:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   {
 522:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if(SampleTime < (uint8_t)32){
 922              		.loc 1 522 0
 923 001c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 924 001e 1F2B     		cmp	r3, #31
 925 0020 13D8     		bhi	.L43
 523:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****          
 524:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****       /* Set the global class0 External Multiplexer Sample Time */
 525:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****       WR_REG( HandlePtr->kGlobalPtr->GLOBICLASS[0],
 926              		.loc 1 525 0
 927 0022 7B68     		ldr	r3, [r7, #4]
 928 0024 1B68     		ldr	r3, [r3, #0]
 929 0026 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 930 0028 4FEA0242 		lsl	r2, r2, #16
 931 002c 02F4F811 		and	r1, r2, #2031616
 932 0030 7A68     		ldr	r2, [r7, #4]
 933 0032 1268     		ldr	r2, [r2, #0]
 934 0034 D2F8A020 		ldr	r2, [r2, #160]
 935 0038 22F4F812 		bic	r2, r2, #2031616
 936 003c 0A43     		orrs	r2, r2, r1
 937 003e C3F8A020 		str	r2, [r3, #160]
 526:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****               VADC_GLOBICLASS_STCE_Msk,
 527:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****               VADC_GLOBICLASS_STCE_Pos,
 528:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****               (uint32_t)SampleTime
 529:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****              );
 530:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 531:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****       Status = (uint32_t)DAVEApp_SUCCESS;
 938              		.loc 1 531 0
 939 0042 4FF00003 		mov	r3, #0
 940 0046 FB60     		str	r3, [r7, #12]
 941 0048 02E0     		b	.L42
 942              	.L43:
 532:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****          
 533:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****      } else {
 534:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****          
 535:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****        Status = (uint32_t)ADCGLOB001_INVALID_PARAM_ERROR;
 943              		.loc 1 535 0
 944 004a 4FF00203 		mov	r3, #2
 945 004e FB60     		str	r3, [r7, #12]
 946              	.L42:
 536:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****      }    
 537:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   }
 538:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 539:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   if (Status != (uint32_t)DAVEApp_SUCCESS)
 540:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   {
 541:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     ERROR(GID_ADCGLOB001, (uint8_t)Status, 0, NULL);
 542:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   }
 543:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   FUNCTION_EXIT(GID_ADCGLOB001, (uint32_t)ADCGLOB001_FUNCTION_EXIT);
 544:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   return Status;
 947              		.loc 1 544 0
 948 0050 FB68     		ldr	r3, [r7, #12]
 545:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** }
 949              		.loc 1 545 0
 950 0052 1846     		mov	r0, r3
 951 0054 07F11407 		add	r7, r7, #20
 952 0058 BD46     		mov	sp, r7
 953 005a 80BC     		pop	{r7}
 954 005c 7047     		bx	lr
 955              		.cfi_endproc
 956              	.LFE123:
 958 005e 00BF     		.section	.text.ADCGLOB001_SetGlobClass1ConvMode,"ax",%progbits
 959              		.align	2
 960              		.global	ADCGLOB001_SetGlobClass1ConvMode
 961              		.thumb
 962              		.thumb_func
 964              	ADCGLOB001_SetGlobClass1ConvMode:
 965              	.LFB124:
 546:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 547:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /**
 548:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * This function configure the class 1 conversion mode for standard conversions.
 549:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  */
 550:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** status_t ADCGLOB001_SetGlobClass1ConvMode(
 551:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     const ADCGLOB001_HandleType * HandlePtr,
 552:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     ADCGLOB001_ConversionMode ConversionModeVal
 553:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     )
 554:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** {
 966              		.loc 1 554 0
 967              		.cfi_startproc
 968              		@ args = 0, pretend = 0, frame = 16
 969              		@ frame_needed = 1, uses_anonymous_args = 0
 970              		@ link register save eliminated.
 971 0000 80B4     		push	{r7}
 972              	.LCFI35:
 973              		.cfi_def_cfa_offset 4
 974              		.cfi_offset 7, -4
 975 0002 85B0     		sub	sp, sp, #20
 976              	.LCFI36:
 977              		.cfi_def_cfa_offset 24
 978 0004 00AF     		add	r7, sp, #0
 979              	.LCFI37:
 980              		.cfi_def_cfa_register 7
 981 0006 7860     		str	r0, [r7, #4]
 982 0008 0B46     		mov	r3, r1
 983 000a FB70     		strb	r3, [r7, #3]
 555:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   status_t Status = (uint32_t)ADCGLOB001_OPER_NOT_ALLOWED;
 984              		.loc 1 555 0
 985 000c 4FF00103 		mov	r3, #1
 986 0010 FB60     		str	r3, [r7, #12]
 556:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 557:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   FUNCTION_ENTRY(GID_ADCGLOB001, (uint32_t)ADCGLOB001_FUNCTION_ENTRY);
 558:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 559:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   if (HandlePtr->kDynamicDataPtr->StateType == ADCGLOB001_INITIALIZED)
 987              		.loc 1 559 0
 988 0012 7B68     		ldr	r3, [r7, #4]
 989 0014 5B68     		ldr	r3, [r3, #4]
 990 0016 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 991 0018 012B     		cmp	r3, #1
 992 001a 1CD1     		bne	.L46
 560:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   {
 561:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****       if((ConversionModeVal < (ADCGLOB001_ConversionMode)3) ||
 993              		.loc 1 561 0
 994 001c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 995 001e 022B     		cmp	r3, #2
 996 0020 02D9     		bls	.L47
 997              		.loc 1 561 0 is_stmt 0 discriminator 1
 998 0022 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 999 0024 052B     		cmp	r3, #5
 1000 0026 13D1     		bne	.L48
 1001              	.L47:
 562:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****           (ConversionModeVal ==(ADCGLOB001_ConversionMode)5)) { 
 563:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****       /* Set the global class 1 conversion mode */
 564:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****        WR_REG( HandlePtr->kGlobalPtr->GLOBICLASS[1],
 1002              		.loc 1 564 0 is_stmt 1
 1003 0028 7B68     		ldr	r3, [r7, #4]
 1004 002a 1B68     		ldr	r3, [r3, #0]
 1005 002c FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1006 002e 4FEA0222 		lsl	r2, r2, #8
 1007 0032 02F4E061 		and	r1, r2, #1792
 1008 0036 7A68     		ldr	r2, [r7, #4]
 1009 0038 1268     		ldr	r2, [r2, #0]
 1010 003a D2F8A420 		ldr	r2, [r2, #164]
 1011 003e 22F4E062 		bic	r2, r2, #1792
 1012 0042 0A43     		orrs	r2, r2, r1
 1013 0044 C3F8A420 		str	r2, [r3, #164]
 565:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                VADC_GLOBICLASS_CMS_Msk,
 566:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                VADC_GLOBICLASS_CMS_Pos,
 567:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                (uint32_t)ConversionModeVal
 568:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****              );
 569:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 570:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****        Status = (uint32_t)DAVEApp_SUCCESS;
 1014              		.loc 1 570 0
 1015 0048 4FF00003 		mov	r3, #0
 1016 004c FB60     		str	r3, [r7, #12]
 1017 004e 02E0     		b	.L46
 1018              	.L48:
 571:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****               
 572:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****           } else {
 573:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                    Status = (uint32_t)ADCGLOB001_INVALID_PARAM_ERROR;
 1019              		.loc 1 573 0
 1020 0050 4FF00203 		mov	r3, #2
 1021 0054 FB60     		str	r3, [r7, #12]
 1022              	.L46:
 574:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****           }      
 575:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   }
 576:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 577:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   if (Status != (uint32_t)DAVEApp_SUCCESS)
 578:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   {
 579:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     ERROR(GID_ADCGLOB001, (uint8_t)Status, 0, NULL);
 580:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   }
 581:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   FUNCTION_EXIT(GID_ADCGLOB001, (uint32_t)ADCGLOB001_FUNCTION_EXIT);
 582:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   return Status;
 1023              		.loc 1 582 0
 1024 0056 FB68     		ldr	r3, [r7, #12]
 583:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** }
 1025              		.loc 1 583 0
 1026 0058 1846     		mov	r0, r3
 1027 005a 07F11407 		add	r7, r7, #20
 1028 005e BD46     		mov	sp, r7
 1029 0060 80BC     		pop	{r7}
 1030 0062 7047     		bx	lr
 1031              		.cfi_endproc
 1032              	.LFE124:
 1034              		.section	.text.ADCGLOB001_SetGlobClass1SampleTime,"ax",%progbits
 1035              		.align	2
 1036              		.global	ADCGLOB001_SetGlobClass1SampleTime
 1037              		.thumb
 1038              		.thumb_func
 1040              	ADCGLOB001_SetGlobClass1SampleTime:
 1041              	.LFB125:
 584:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /**
 585:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * This function configure the class 1 Sample Time Control for Standard
 586:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * Conversions.
 587:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  */
 588:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** status_t ADCGLOB001_SetGlobClass1SampleTime(
 589:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     const ADCGLOB001_HandleType * HandlePtr,
 590:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     uint8_t SampleTime
 591:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     )
 592:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** {
 1042              		.loc 1 592 0
 1043              		.cfi_startproc
 1044              		@ args = 0, pretend = 0, frame = 16
 1045              		@ frame_needed = 1, uses_anonymous_args = 0
 1046              		@ link register save eliminated.
 1047 0000 80B4     		push	{r7}
 1048              	.LCFI38:
 1049              		.cfi_def_cfa_offset 4
 1050              		.cfi_offset 7, -4
 1051 0002 85B0     		sub	sp, sp, #20
 1052              	.LCFI39:
 1053              		.cfi_def_cfa_offset 24
 1054 0004 00AF     		add	r7, sp, #0
 1055              	.LCFI40:
 1056              		.cfi_def_cfa_register 7
 1057 0006 7860     		str	r0, [r7, #4]
 1058 0008 0B46     		mov	r3, r1
 1059 000a FB70     		strb	r3, [r7, #3]
 593:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   status_t Status = (uint32_t)ADCGLOB001_OPER_NOT_ALLOWED;
 1060              		.loc 1 593 0
 1061 000c 4FF00103 		mov	r3, #1
 1062 0010 FB60     		str	r3, [r7, #12]
 594:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 595:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   FUNCTION_ENTRY(GID_ADCGLOB001, (uint32_t)ADCGLOB001_FUNCTION_ENTRY);
 596:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 597:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   if (HandlePtr->kDynamicDataPtr->StateType == ADCGLOB001_INITIALIZED)
 1063              		.loc 1 597 0
 1064 0012 7B68     		ldr	r3, [r7, #4]
 1065 0014 5B68     		ldr	r3, [r3, #4]
 1066 0016 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1067 0018 012B     		cmp	r3, #1
 1068 001a 17D1     		bne	.L51
 598:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   {
 599:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****       
 600:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****       if(SampleTime < (uint8_t)32){
 1069              		.loc 1 600 0
 1070 001c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1071 001e 1F2B     		cmp	r3, #31
 1072 0020 11D8     		bhi	.L52
 601:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         /* Write the global class 1 Sample Time */        
 602:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         WR_REG( HandlePtr->kGlobalPtr->GLOBICLASS[1],
 1073              		.loc 1 602 0
 1074 0022 7B68     		ldr	r3, [r7, #4]
 1075 0024 1B68     		ldr	r3, [r3, #0]
 1076 0026 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1077 0028 02F01F01 		and	r1, r2, #31
 1078 002c 7A68     		ldr	r2, [r7, #4]
 1079 002e 1268     		ldr	r2, [r2, #0]
 1080 0030 D2F8A420 		ldr	r2, [r2, #164]
 1081 0034 22F01F02 		bic	r2, r2, #31
 1082 0038 0A43     		orrs	r2, r2, r1
 1083 003a C3F8A420 		str	r2, [r3, #164]
 603:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 VADC_GLOBICLASS_STCS_Msk,
 604:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 VADC_GLOBICLASS_STCS_Pos,
 605:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 (uint32_t)SampleTime
 606:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****               );
 607:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         
 608:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         Status = (uint32_t)DAVEApp_SUCCESS;      
 1084              		.loc 1 608 0
 1085 003e 4FF00003 		mov	r3, #0
 1086 0042 FB60     		str	r3, [r7, #12]
 1087 0044 02E0     		b	.L51
 1088              	.L52:
 609:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         
 610:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****       } else {
 611:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****           
 612:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         Status = (uint32_t)ADCGLOB001_INVALID_PARAM_ERROR;
 1089              		.loc 1 612 0
 1090 0046 4FF00203 		mov	r3, #2
 1091 004a FB60     		str	r3, [r7, #12]
 1092              	.L51:
 613:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****       }      
 614:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   }
 615:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 616:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   if (Status != (uint32_t)DAVEApp_SUCCESS)
 617:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   {
 618:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     ERROR(GID_ADCGLOB001, (uint8_t)Status, 0, NULL);
 619:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   }
 620:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   FUNCTION_EXIT(GID_ADCGLOB001, (uint32_t)ADCGLOB001_FUNCTION_EXIT);
 621:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   return Status;
 1093              		.loc 1 621 0
 1094 004c FB68     		ldr	r3, [r7, #12]
 622:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** }
 1095              		.loc 1 622 0
 1096 004e 1846     		mov	r0, r3
 1097 0050 07F11407 		add	r7, r7, #20
 1098 0054 BD46     		mov	sp, r7
 1099 0056 80BC     		pop	{r7}
 1100 0058 7047     		bx	lr
 1101              		.cfi_endproc
 1102              	.LFE125:
 1104 005a 00BF     		.section	.text.ADCGLOB001_SetGlobClass1EmuxConvMode,"ax",%progbits
 1105              		.align	2
 1106              		.global	ADCGLOB001_SetGlobClass1EmuxConvMode
 1107              		.thumb
 1108              		.thumb_func
 1110              	ADCGLOB001_SetGlobClass1EmuxConvMode:
 1111              	.LFB126:
 623:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 624:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /**
 625:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * This function configure the class 1 Conversion Mode for EMUX Conversions.
 626:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  */
 627:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** status_t ADCGLOB001_SetGlobClass1EmuxConvMode(
 628:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     const ADCGLOB001_HandleType * HandlePtr,
 629:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     ADCGLOB001_ConversionMode ConversionModeVal
 630:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     )
 631:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** {
 1112              		.loc 1 631 0
 1113              		.cfi_startproc
 1114              		@ args = 0, pretend = 0, frame = 16
 1115              		@ frame_needed = 1, uses_anonymous_args = 0
 1116              		@ link register save eliminated.
 1117 0000 80B4     		push	{r7}
 1118              	.LCFI41:
 1119              		.cfi_def_cfa_offset 4
 1120              		.cfi_offset 7, -4
 1121 0002 85B0     		sub	sp, sp, #20
 1122              	.LCFI42:
 1123              		.cfi_def_cfa_offset 24
 1124 0004 00AF     		add	r7, sp, #0
 1125              	.LCFI43:
 1126              		.cfi_def_cfa_register 7
 1127 0006 7860     		str	r0, [r7, #4]
 1128 0008 0B46     		mov	r3, r1
 1129 000a FB70     		strb	r3, [r7, #3]
 632:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   status_t Status = (uint32_t)ADCGLOB001_OPER_NOT_ALLOWED;
 1130              		.loc 1 632 0
 1131 000c 4FF00103 		mov	r3, #1
 1132 0010 FB60     		str	r3, [r7, #12]
 633:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 634:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   FUNCTION_ENTRY(GID_ADCGLOB001, (uint32_t)ADCGLOB001_FUNCTION_ENTRY);
 635:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 636:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   if (HandlePtr->kDynamicDataPtr->StateType == ADCGLOB001_INITIALIZED)
 1133              		.loc 1 636 0
 1134 0012 7B68     		ldr	r3, [r7, #4]
 1135 0014 5B68     		ldr	r3, [r3, #4]
 1136 0016 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1137 0018 012B     		cmp	r3, #1
 1138 001a 1CD1     		bne	.L55
 637:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   {
 638:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if((ConversionModeVal < (ADCGLOB001_ConversionMode)3) ||
 1139              		.loc 1 638 0
 1140 001c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1141 001e 022B     		cmp	r3, #2
 1142 0020 02D9     		bls	.L56
 1143              		.loc 1 638 0 is_stmt 0 discriminator 1
 1144 0022 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1145 0024 052B     		cmp	r3, #5
 1146 0026 13D1     		bne	.L57
 1147              	.L56:
 639:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         (ConversionModeVal ==(ADCGLOB001_ConversionMode)5)) { 
 640:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         /* Write the global class1 External Multiplexer conversion mode */
 641:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****               
 642:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             WR_REG( HandlePtr->kGlobalPtr->GLOBICLASS[1],
 1148              		.loc 1 642 0 is_stmt 1
 1149 0028 7B68     		ldr	r3, [r7, #4]
 1150 002a 1B68     		ldr	r3, [r3, #0]
 1151 002c FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1152 002e 4FEA0262 		lsl	r2, r2, #24
 1153 0032 02F0E061 		and	r1, r2, #117440512
 1154 0036 7A68     		ldr	r2, [r7, #4]
 1155 0038 1268     		ldr	r2, [r2, #0]
 1156 003a D2F8A420 		ldr	r2, [r2, #164]
 1157 003e 22F0E062 		bic	r2, r2, #117440512
 1158 0042 0A43     		orrs	r2, r2, r1
 1159 0044 C3F8A420 		str	r2, [r3, #164]
 643:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                     VADC_GLOBICLASS_CME_Msk,
 644:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                     VADC_GLOBICLASS_CME_Pos,
 645:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                     (uint32_t)ConversionModeVal
 646:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                   );
 647:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             Status = (uint32_t)DAVEApp_SUCCESS;
 1160              		.loc 1 647 0
 1161 0048 4FF00003 		mov	r3, #0
 1162 004c FB60     		str	r3, [r7, #12]
 1163 004e 02E0     		b	.L55
 1164              	.L57:
 648:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****      } else {
 649:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 Status = (uint32_t)ADCGLOB001_INVALID_PARAM_ERROR;
 1165              		.loc 1 649 0
 1166 0050 4FF00203 		mov	r3, #2
 1167 0054 FB60     		str	r3, [r7, #12]
 1168              	.L55:
 650:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****      }     
 651:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   }
 652:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 653:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   if (Status != (uint32_t)DAVEApp_SUCCESS)
 654:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   {
 655:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     ERROR(GID_ADCGLOB001, (uint8_t)Status, 0, NULL);
 656:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   }
 657:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   FUNCTION_EXIT(GID_ADCGLOB001, (uint32_t)ADCGLOB001_FUNCTION_EXIT);
 658:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   return Status;
 1169              		.loc 1 658 0
 1170 0056 FB68     		ldr	r3, [r7, #12]
 659:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** }
 1171              		.loc 1 659 0
 1172 0058 1846     		mov	r0, r3
 1173 005a 07F11407 		add	r7, r7, #20
 1174 005e BD46     		mov	sp, r7
 1175 0060 80BC     		pop	{r7}
 1176 0062 7047     		bx	lr
 1177              		.cfi_endproc
 1178              	.LFE126:
 1180              		.section	.text.ADCGLOB001_SetGlobClass1EmuxSampleTime,"ax",%progbits
 1181              		.align	2
 1182              		.global	ADCGLOB001_SetGlobClass1EmuxSampleTime
 1183              		.thumb
 1184              		.thumb_func
 1186              	ADCGLOB001_SetGlobClass1EmuxSampleTime:
 1187              	.LFB127:
 660:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 661:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /**
 662:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * This function configure the class 1 Sample Time Control for EMUX Conversions.
 663:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  */
 664:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** status_t ADCGLOB001_SetGlobClass1EmuxSampleTime(
 665:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     const ADCGLOB001_HandleType * HandlePtr,
 666:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     uint8_t SampleTime
 667:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     )
 668:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** {
 1188              		.loc 1 668 0
 1189              		.cfi_startproc
 1190              		@ args = 0, pretend = 0, frame = 16
 1191              		@ frame_needed = 1, uses_anonymous_args = 0
 1192              		@ link register save eliminated.
 1193 0000 80B4     		push	{r7}
 1194              	.LCFI44:
 1195              		.cfi_def_cfa_offset 4
 1196              		.cfi_offset 7, -4
 1197 0002 85B0     		sub	sp, sp, #20
 1198              	.LCFI45:
 1199              		.cfi_def_cfa_offset 24
 1200 0004 00AF     		add	r7, sp, #0
 1201              	.LCFI46:
 1202              		.cfi_def_cfa_register 7
 1203 0006 7860     		str	r0, [r7, #4]
 1204 0008 0B46     		mov	r3, r1
 1205 000a FB70     		strb	r3, [r7, #3]
 669:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   status_t Status = (uint32_t)ADCGLOB001_OPER_NOT_ALLOWED;
 1206              		.loc 1 669 0
 1207 000c 4FF00103 		mov	r3, #1
 1208 0010 FB60     		str	r3, [r7, #12]
 670:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 671:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   FUNCTION_ENTRY(GID_ADCGLOB001, (uint32_t)ADCGLOB001_FUNCTION_ENTRY);
 672:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 673:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   if (HandlePtr->kDynamicDataPtr->StateType == ADCGLOB001_INITIALIZED)
 1209              		.loc 1 673 0
 1210 0012 7B68     		ldr	r3, [r7, #4]
 1211 0014 5B68     		ldr	r3, [r3, #4]
 1212 0016 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1213 0018 012B     		cmp	r3, #1
 1214 001a 19D1     		bne	.L60
 674:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   {      
 675:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****       if(SampleTime < (uint8_t)32){
 1215              		.loc 1 675 0
 1216 001c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1217 001e 1F2B     		cmp	r3, #31
 1218 0020 13D8     		bhi	.L61
 676:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         /* Write the global class1 External Multiplexer Sample Time */
 677:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         WR_REG( HandlePtr->kGlobalPtr->GLOBICLASS[1],
 1219              		.loc 1 677 0
 1220 0022 7B68     		ldr	r3, [r7, #4]
 1221 0024 1B68     		ldr	r3, [r3, #0]
 1222 0026 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1223 0028 4FEA0242 		lsl	r2, r2, #16
 1224 002c 02F4F811 		and	r1, r2, #2031616
 1225 0030 7A68     		ldr	r2, [r7, #4]
 1226 0032 1268     		ldr	r2, [r2, #0]
 1227 0034 D2F8A420 		ldr	r2, [r2, #164]
 1228 0038 22F4F812 		bic	r2, r2, #2031616
 1229 003c 0A43     		orrs	r2, r2, r1
 1230 003e C3F8A420 		str	r2, [r3, #164]
 678:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 VADC_GLOBICLASS_STCE_Msk,
 679:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 VADC_GLOBICLASS_STCE_Pos,
 680:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 (uint32_t)SampleTime
 681:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****               );
 682:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         Status = (uint32_t)DAVEApp_SUCCESS;
 1231              		.loc 1 682 0
 1232 0042 4FF00003 		mov	r3, #0
 1233 0046 FB60     		str	r3, [r7, #12]
 1234 0048 02E0     		b	.L60
 1235              	.L61:
 683:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****          
 684:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****       } else {
 685:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         
 686:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         Status = (uint32_t)ADCGLOB001_INVALID_PARAM_ERROR;
 1236              		.loc 1 686 0
 1237 004a 4FF00203 		mov	r3, #2
 1238 004e FB60     		str	r3, [r7, #12]
 1239              	.L60:
 687:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****       }  
 688:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   }
 689:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 690:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   if (Status != (uint32_t)DAVEApp_SUCCESS)
 691:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   {
 692:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     ERROR(GID_ADCGLOB001, (uint8_t)Status, 0, NULL);
 693:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   }
 694:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   FUNCTION_EXIT(GID_ADCGLOB001, (uint32_t)ADCGLOB001_FUNCTION_EXIT);
 695:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   return Status;
 1240              		.loc 1 695 0
 1241 0050 FB68     		ldr	r3, [r7, #12]
 696:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** }
 1242              		.loc 1 696 0
 1243 0052 1846     		mov	r0, r3
 1244 0054 07F11407 		add	r7, r7, #20
 1245 0058 BD46     		mov	sp, r7
 1246 005a 80BC     		pop	{r7}
 1247 005c 7047     		bx	lr
 1248              		.cfi_endproc
 1249              	.LFE127:
 1251 005e 00BF     		.section	.text.ADCGLOB001_GetDisableBitStatus,"ax",%progbits
 1252              		.align	2
 1253              		.global	ADCGLOB001_GetDisableBitStatus
 1254              		.thumb
 1255              		.thumb_func
 1257              	ADCGLOB001_GetDisableBitStatus:
 1258              	.LFB128:
 697:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /**
 698:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * This function gives the status of Module Disable bit.
 699:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  */
 700:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** status_t ADCGLOB001_GetDisableBitStatus(
 701:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     const ADCGLOB001_HandleType * HandlePtr,
 702:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     uint8_t *StatusValue
 703:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     )
 704:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** {
 1259              		.loc 1 704 0
 1260              		.cfi_startproc
 1261              		@ args = 0, pretend = 0, frame = 16
 1262              		@ frame_needed = 1, uses_anonymous_args = 0
 1263              		@ link register save eliminated.
 1264 0000 80B4     		push	{r7}
 1265              	.LCFI47:
 1266              		.cfi_def_cfa_offset 4
 1267              		.cfi_offset 7, -4
 1268 0002 85B0     		sub	sp, sp, #20
 1269              	.LCFI48:
 1270              		.cfi_def_cfa_offset 24
 1271 0004 00AF     		add	r7, sp, #0
 1272              	.LCFI49:
 1273              		.cfi_def_cfa_register 7
 1274 0006 7860     		str	r0, [r7, #4]
 1275 0008 3960     		str	r1, [r7, #0]
 705:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   status_t Status = (uint32_t)ADCGLOB001_OPER_NOT_ALLOWED;
 1276              		.loc 1 705 0
 1277 000a 4FF00103 		mov	r3, #1
 1278 000e FB60     		str	r3, [r7, #12]
 706:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 707:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   FUNCTION_ENTRY(GID_ADCGLOB001, (uint32_t)ADCGLOB001_FUNCTION_ENTRY);
 708:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 709:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   if (HandlePtr->kDynamicDataPtr->StateType == ADCGLOB001_INITIALIZED)
 1279              		.loc 1 709 0
 1280 0010 7B68     		ldr	r3, [r7, #4]
 1281 0012 5B68     		ldr	r3, [r3, #4]
 1282 0014 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1283 0016 012B     		cmp	r3, #1
 1284 0018 0CD1     		bne	.L64
 710:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   {
 711:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****       /*Read the status value */
 712:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****       
 713:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****       *StatusValue = (uint8_t) RD_REG( HandlePtr->kGlobalPtr->CLC,
 1285              		.loc 1 713 0
 1286 001a 7B68     		ldr	r3, [r7, #4]
 1287 001c 1B68     		ldr	r3, [r3, #0]
 1288 001e 1B68     		ldr	r3, [r3, #0]
 1289 0020 03F00203 		and	r3, r3, #2
 1290 0024 4FEA5303 		lsr	r3, r3, #1
 1291 0028 DAB2     		uxtb	r2, r3
 1292 002a 3B68     		ldr	r3, [r7, #0]
 1293 002c 1A70     		strb	r2, [r3, #0]
 714:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                                        VADC_CLC_DISS_Msk,
 715:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                                        VADC_CLC_DISS_Pos
 716:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                                      );
 717:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     Status = (uint32_t)DAVEApp_SUCCESS;
 1294              		.loc 1 717 0
 1295 002e 4FF00003 		mov	r3, #0
 1296 0032 FB60     		str	r3, [r7, #12]
 1297              	.L64:
 718:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   }
 719:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 720:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   if (Status != (uint32_t)DAVEApp_SUCCESS)
 721:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   {
 722:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     ERROR(GID_ADCGLOB001, (uint8_t)Status, 0, NULL);
 723:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   }
 724:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   FUNCTION_EXIT(GID_ADCGLOB001, (uint32_t)ADCGLOB001_FUNCTION_EXIT);
 725:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   return Status;
 1298              		.loc 1 725 0
 1299 0034 FB68     		ldr	r3, [r7, #12]
 726:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** }
 1300              		.loc 1 726 0
 1301 0036 1846     		mov	r0, r3
 1302 0038 07F11407 		add	r7, r7, #20
 1303 003c BD46     		mov	sp, r7
 1304 003e 80BC     		pop	{r7}
 1305 0040 7047     		bx	lr
 1306              		.cfi_endproc
 1307              	.LFE128:
 1309 0042 00BF     		.section	.text.ADCGLOB001_GetIdValue,"ax",%progbits
 1310              		.align	2
 1311              		.global	ADCGLOB001_GetIdValue
 1312              		.thumb
 1313              		.thumb_func
 1315              	ADCGLOB001_GetIdValue:
 1316              	.LFB129:
 727:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /**
 728:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * This function gives the Id Value.
 729:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  */
 730:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 731:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** status_t ADCGLOB001_GetIdValue(
 732:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     const ADCGLOB001_HandleType * HandlePtr,
 733:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     uint32_t *IDValue
 734:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     )
 735:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** {
 1317              		.loc 1 735 0
 1318              		.cfi_startproc
 1319              		@ args = 0, pretend = 0, frame = 16
 1320              		@ frame_needed = 1, uses_anonymous_args = 0
 1321              		@ link register save eliminated.
 1322 0000 80B4     		push	{r7}
 1323              	.LCFI50:
 1324              		.cfi_def_cfa_offset 4
 1325              		.cfi_offset 7, -4
 1326 0002 85B0     		sub	sp, sp, #20
 1327              	.LCFI51:
 1328              		.cfi_def_cfa_offset 24
 1329 0004 00AF     		add	r7, sp, #0
 1330              	.LCFI52:
 1331              		.cfi_def_cfa_register 7
 1332 0006 7860     		str	r0, [r7, #4]
 1333 0008 3960     		str	r1, [r7, #0]
 736:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   status_t Status = (uint32_t)ADCGLOB001_OPER_NOT_ALLOWED;
 1334              		.loc 1 736 0
 1335 000a 4FF00103 		mov	r3, #1
 1336 000e FB60     		str	r3, [r7, #12]
 737:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 738:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   FUNCTION_ENTRY(GID_ADCGLOB001, (uint32_t)ADCGLOB001_FUNCTION_ENTRY);
 739:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 740:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   if (HandlePtr->kDynamicDataPtr->StateType == ADCGLOB001_INITIALIZED)
 1337              		.loc 1 740 0
 1338 0010 7B68     		ldr	r3, [r7, #4]
 1339 0012 5B68     		ldr	r3, [r3, #4]
 1340 0014 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1341 0016 012B     		cmp	r3, #1
 1342 0018 07D1     		bne	.L67
 741:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   {
 742:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     /*Read the ID value */
 743:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     *IDValue =(uint32_t)HandlePtr->kGlobalPtr->ID;     
 1343              		.loc 1 743 0
 1344 001a 7B68     		ldr	r3, [r7, #4]
 1345 001c 1B68     		ldr	r3, [r3, #0]
 1346 001e 9A68     		ldr	r2, [r3, #8]
 1347 0020 3B68     		ldr	r3, [r7, #0]
 1348 0022 1A60     		str	r2, [r3, #0]
 744:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     
 745:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     Status = (uint32_t)DAVEApp_SUCCESS;
 1349              		.loc 1 745 0
 1350 0024 4FF00003 		mov	r3, #0
 1351 0028 FB60     		str	r3, [r7, #12]
 1352              	.L67:
 746:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   }
 747:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 748:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   if (Status != (uint32_t)DAVEApp_SUCCESS)
 749:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   {
 750:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     ERROR(GID_ADCGLOB001, (uint8_t)Status, 0, NULL);
 751:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   }
 752:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   FUNCTION_EXIT(GID_ADCGLOB001, (uint32_t)ADCGLOB001_FUNCTION_EXIT);
 753:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   return Status;
 1353              		.loc 1 753 0
 1354 002a FB68     		ldr	r3, [r7, #12]
 754:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** }
 1355              		.loc 1 754 0
 1356 002c 1846     		mov	r0, r3
 1357 002e 07F11407 		add	r7, r7, #20
 1358 0032 BD46     		mov	sp, r7
 1359 0034 80BC     		pop	{r7}
 1360 0036 7047     		bx	lr
 1361              		.cfi_endproc
 1362              	.LFE129:
 1364              		.section	.text.ADCGLOB001_GTFRConvtrDiagnoGrp,"ax",%progbits
 1365              		.align	2
 1366              		.global	ADCGLOB001_GTFRConvtrDiagnoGrp
 1367              		.thumb
 1368              		.thumb_func
 1370              	ADCGLOB001_GTFRConvtrDiagnoGrp:
 1371              	.LFB130:
 755:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 756:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /**
 757:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * This function configure the group number to be used for converter diagnostics
 758:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * conversions.
 759:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  */
 760:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 761:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** status_t ADCGLOB001_GTFRConvtrDiagnoGrp(const ADCGLOB001_HandleType * HandlePtr,
 762:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     uint8_t GroupValue
 763:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     )
 764:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** {
 1372              		.loc 1 764 0
 1373              		.cfi_startproc
 1374              		@ args = 0, pretend = 0, frame = 16
 1375              		@ frame_needed = 1, uses_anonymous_args = 0
 1376              		@ link register save eliminated.
 1377 0000 80B4     		push	{r7}
 1378              	.LCFI53:
 1379              		.cfi_def_cfa_offset 4
 1380              		.cfi_offset 7, -4
 1381 0002 85B0     		sub	sp, sp, #20
 1382              	.LCFI54:
 1383              		.cfi_def_cfa_offset 24
 1384 0004 00AF     		add	r7, sp, #0
 1385              	.LCFI55:
 1386              		.cfi_def_cfa_register 7
 1387 0006 7860     		str	r0, [r7, #4]
 1388 0008 0B46     		mov	r3, r1
 1389 000a FB70     		strb	r3, [r7, #3]
 765:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   status_t Status = (uint32_t)ADCGLOB001_OPER_NOT_ALLOWED;
 1390              		.loc 1 765 0
 1391 000c 4FF00103 		mov	r3, #1
 1392 0010 FB60     		str	r3, [r7, #12]
 766:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 767:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   FUNCTION_ENTRY(GID_ADCGLOB001, (uint32_t)ADCGLOB001_FUNCTION_ENTRY);
 768:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 769:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   if (HandlePtr->kDynamicDataPtr->StateType == ADCGLOB001_INITIALIZED)
 1393              		.loc 1 769 0
 1394 0012 7B68     		ldr	r3, [r7, #4]
 1395 0014 5B68     		ldr	r3, [r3, #4]
 1396 0016 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1397 0018 012B     		cmp	r3, #1
 1398 001a 30D1     		bne	.L70
 770:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   {      
 771:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if(GroupValue < (uint8_t)16){
 1399              		.loc 1 771 0
 1400 001c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1401 001e 0F2B     		cmp	r3, #15
 1402 0020 2AD8     		bhi	.L71
 772:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****       /*clear the group number.*/  
 773:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****       HandlePtr->kGlobalPtr->GLOBTF = (VADC_GLOBTF_CDWC_Msk|
 1403              		.loc 1 773 0
 1404 0022 7B68     		ldr	r3, [r7, #4]
 1405 0024 1A68     		ldr	r2, [r3, #0]
 774:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****               ((HandlePtr->kGlobalPtr->GLOBTF)& (~(VADC_GLOBTF_CDGR_Msk))));
 1406              		.loc 1 774 0
 1407 0026 7B68     		ldr	r3, [r7, #4]
 1408 0028 1B68     		ldr	r3, [r3, #0]
 1409 002a D3F86031 		ldr	r3, [r3, #352]
 773:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****       HandlePtr->kGlobalPtr->GLOBTF = (VADC_GLOBTF_CDWC_Msk|
 1410              		.loc 1 773 0
 1411 002e 23F40043 		bic	r3, r3, #32768
 1412 0032 23F0F003 		bic	r3, r3, #240
 1413 0036 43F40043 		orr	r3, r3, #32768
 1414 003a C2F86031 		str	r3, [r2, #352]
 775:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****       /*Write the group number to be used for converter diagnostics conversions.*/ 
 776:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****       HandlePtr->kGlobalPtr->GLOBTF |= (VADC_GLOBTF_CDWC_Msk |
 1415              		.loc 1 776 0
 1416 003e 7B68     		ldr	r3, [r7, #4]
 1417 0040 1B68     		ldr	r3, [r3, #0]
 1418 0042 7A68     		ldr	r2, [r7, #4]
 1419 0044 1268     		ldr	r2, [r2, #0]
 1420 0046 D2F86011 		ldr	r1, [r2, #352]
 777:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****               (((uint32_t)GroupValue << VADC_GLOBTF_CDGR_Pos) & VADC_GLOBTF_CDGR_Msk));
 1421              		.loc 1 777 0
 1422 004a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1423 004c 4FEA0212 		lsl	r2, r2, #4
 1424 0050 D2B2     		uxtb	r2, r2
 776:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****       HandlePtr->kGlobalPtr->GLOBTF |= (VADC_GLOBTF_CDWC_Msk |
 1425              		.loc 1 776 0
 1426 0052 0A43     		orrs	r2, r2, r1
 1427 0054 42F40042 		orr	r2, r2, #32768
 1428 0058 C3F86021 		str	r2, [r3, #352]
 778:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             
 779:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****       /*Clear the Write Control for Conversion Diagnostics*/   
 780:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****       CLR_BIT(HandlePtr->kGlobalPtr->GLOBTF, VADC_GLOBTF_CDWC_Pos);        
 1429              		.loc 1 780 0
 1430 005c 7B68     		ldr	r3, [r7, #4]
 1431 005e 1B68     		ldr	r3, [r3, #0]
 1432 0060 7A68     		ldr	r2, [r7, #4]
 1433 0062 1268     		ldr	r2, [r2, #0]
 1434 0064 D2F86021 		ldr	r2, [r2, #352]
 1435 0068 22F40042 		bic	r2, r2, #32768
 1436 006c C3F86021 		str	r2, [r3, #352]
 781:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****       Status = (uint32_t)DAVEApp_SUCCESS;             
 1437              		.loc 1 781 0
 1438 0070 4FF00003 		mov	r3, #0
 1439 0074 FB60     		str	r3, [r7, #12]
 1440 0076 02E0     		b	.L70
 1441              	.L71:
 782:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     } else {      
 783:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****       Status = (uint32_t)ADCGLOB001_INVALID_PARAM_ERROR;
 1442              		.loc 1 783 0
 1443 0078 4FF00203 		mov	r3, #2
 1444 007c FB60     		str	r3, [r7, #12]
 1445              	.L70:
 784:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }             
 785:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   }
 786:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 787:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   if (Status != (uint32_t)DAVEApp_SUCCESS)
 788:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   {
 789:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     ERROR(GID_ADCGLOB001, (uint8_t)Status, 0, NULL);
 790:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   }
 791:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   FUNCTION_EXIT(GID_ADCGLOB001, (uint32_t)ADCGLOB001_FUNCTION_EXIT);
 792:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   return Status;
 1446              		.loc 1 792 0
 1447 007e FB68     		ldr	r3, [r7, #12]
 793:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** }
 1448              		.loc 1 793 0
 1449 0080 1846     		mov	r0, r3
 1450 0082 07F11407 		add	r7, r7, #20
 1451 0086 BD46     		mov	sp, r7
 1452 0088 80BC     		pop	{r7}
 1453 008a 7047     		bx	lr
 1454              		.cfi_endproc
 1455              	.LFE130:
 1457              		.section	.text.ADCGLOB001_GTFRConvtrDiagnoEnable,"ax",%progbits
 1458              		.align	2
 1459              		.global	ADCGLOB001_GTFRConvtrDiagnoEnable
 1460              		.thumb
 1461              		.thumb_func
 1463              	ADCGLOB001_GTFRConvtrDiagnoEnable:
 1464              	.LFB131:
 794:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /**
 795:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * This function configure the Converter Diagnostics pull devices connected as 
 796:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * selected by bitfield CDSEL.
 797:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  */
 798:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** status_t ADCGLOB001_GTFRConvtrDiagnoEnable(
 799:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     const ADCGLOB001_HandleType * HandlePtr
 800:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     )
 801:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** {
 1465              		.loc 1 801 0
 1466              		.cfi_startproc
 1467              		@ args = 0, pretend = 0, frame = 16
 1468              		@ frame_needed = 1, uses_anonymous_args = 0
 1469              		@ link register save eliminated.
 1470 0000 80B4     		push	{r7}
 1471              	.LCFI56:
 1472              		.cfi_def_cfa_offset 4
 1473              		.cfi_offset 7, -4
 1474 0002 85B0     		sub	sp, sp, #20
 1475              	.LCFI57:
 1476              		.cfi_def_cfa_offset 24
 1477 0004 00AF     		add	r7, sp, #0
 1478              	.LCFI58:
 1479              		.cfi_def_cfa_register 7
 1480 0006 7860     		str	r0, [r7, #4]
 802:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   status_t Status = (uint32_t)ADCGLOB001_OPER_NOT_ALLOWED;
 1481              		.loc 1 802 0
 1482 0008 4FF00103 		mov	r3, #1
 1483 000c FB60     		str	r3, [r7, #12]
 803:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 804:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   FUNCTION_ENTRY(GID_ADCGLOB001, (uint32_t)ADCGLOB001_FUNCTION_ENTRY);
 805:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 806:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   if (HandlePtr->kDynamicDataPtr->StateType == ADCGLOB001_INITIALIZED)
 1484              		.loc 1 806 0
 1485 000e 7B68     		ldr	r3, [r7, #4]
 1486 0010 5B68     		ldr	r3, [r3, #4]
 1487 0012 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1488 0014 012B     		cmp	r3, #1
 1489 0016 16D1     		bne	.L74
 807:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   {
 808:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     /*Enable the Converter Diagnostics*/
 809:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     HandlePtr->kGlobalPtr->GLOBTF |= 
 1490              		.loc 1 809 0
 1491 0018 7B68     		ldr	r3, [r7, #4]
 1492 001a 1B68     		ldr	r3, [r3, #0]
 1493 001c 7A68     		ldr	r2, [r7, #4]
 1494 001e 1268     		ldr	r2, [r2, #0]
 1495 0020 D2F86021 		ldr	r2, [r2, #352]
 1496 0024 42F40142 		orr	r2, r2, #33024
 1497 0028 C3F86021 		str	r2, [r3, #352]
 810:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         (VADC_GLOBTF_CDWC_Msk | VADC_GLOBTF_CDEN_Msk);
 811:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     /*Clear the Write Control for Conversion Diagnostics*/   
 812:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     CLR_BIT(HandlePtr->kGlobalPtr->GLOBTF, VADC_GLOBTF_CDWC_Pos);      
 1498              		.loc 1 812 0
 1499 002c 7B68     		ldr	r3, [r7, #4]
 1500 002e 1B68     		ldr	r3, [r3, #0]
 1501 0030 7A68     		ldr	r2, [r7, #4]
 1502 0032 1268     		ldr	r2, [r2, #0]
 1503 0034 D2F86021 		ldr	r2, [r2, #352]
 1504 0038 22F40042 		bic	r2, r2, #32768
 1505 003c C3F86021 		str	r2, [r3, #352]
 813:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     Status = (uint32_t)DAVEApp_SUCCESS;
 1506              		.loc 1 813 0
 1507 0040 4FF00003 		mov	r3, #0
 1508 0044 FB60     		str	r3, [r7, #12]
 1509              	.L74:
 814:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   }
 815:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 816:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   if (Status != (uint32_t)DAVEApp_SUCCESS)
 817:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   {
 818:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     ERROR(GID_ADCGLOB001, (uint8_t)Status, 0, NULL);
 819:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   }
 820:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   FUNCTION_EXIT(GID_ADCGLOB001, (uint32_t)ADCGLOB001_FUNCTION_EXIT);
 821:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   return Status;
 1510              		.loc 1 821 0
 1511 0046 FB68     		ldr	r3, [r7, #12]
 822:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** }
 1512              		.loc 1 822 0
 1513 0048 1846     		mov	r0, r3
 1514 004a 07F11407 		add	r7, r7, #20
 1515 004e BD46     		mov	sp, r7
 1516 0050 80BC     		pop	{r7}
 1517 0052 7047     		bx	lr
 1518              		.cfi_endproc
 1519              	.LFE131:
 1521              		.section	.text.ADCGLOB001_GTFRConvtrDiagnoPullDevicesSelect,"ax",%progbits
 1522              		.align	2
 1523              		.global	ADCGLOB001_GTFRConvtrDiagnoPullDevicesSelect
 1524              		.thumb
 1525              		.thumb_func
 1527              	ADCGLOB001_GTFRConvtrDiagnoPullDevicesSelect:
 1528              	.LFB132:
 823:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /**
 824:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * This function configure the Converter Diagnostics Pull-Devices Select value.
 825:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  */
 826:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** status_t ADCGLOB001_GTFRConvtrDiagnoPullDevicesSelect(
 827:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     const ADCGLOB001_HandleType * HandlePtr,
 828:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     uint8_t SelectValue
 829:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     )
 830:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** {
 1529              		.loc 1 830 0
 1530              		.cfi_startproc
 1531              		@ args = 0, pretend = 0, frame = 16
 1532              		@ frame_needed = 1, uses_anonymous_args = 0
 1533              		@ link register save eliminated.
 1534 0000 80B4     		push	{r7}
 1535              	.LCFI59:
 1536              		.cfi_def_cfa_offset 4
 1537              		.cfi_offset 7, -4
 1538 0002 85B0     		sub	sp, sp, #20
 1539              	.LCFI60:
 1540              		.cfi_def_cfa_offset 24
 1541 0004 00AF     		add	r7, sp, #0
 1542              	.LCFI61:
 1543              		.cfi_def_cfa_register 7
 1544 0006 7860     		str	r0, [r7, #4]
 1545 0008 0B46     		mov	r3, r1
 1546 000a FB70     		strb	r3, [r7, #3]
 831:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   status_t Status = (uint32_t)ADCGLOB001_OPER_NOT_ALLOWED;
 1547              		.loc 1 831 0
 1548 000c 4FF00103 		mov	r3, #1
 1549 0010 FB60     		str	r3, [r7, #12]
 832:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 833:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   FUNCTION_ENTRY(GID_ADCGLOB001, (uint32_t)ADCGLOB001_FUNCTION_ENTRY);
 834:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 835:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   if (HandlePtr->kDynamicDataPtr->StateType == ADCGLOB001_INITIALIZED)
 1550              		.loc 1 835 0
 1551 0012 7B68     		ldr	r3, [r7, #4]
 1552 0014 5B68     		ldr	r3, [r3, #4]
 1553 0016 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1554 0018 012B     		cmp	r3, #1
 1555 001a 2FD1     		bne	.L77
 836:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   {
 837:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if(SelectValue < (uint8_t)4){
 1556              		.loc 1 837 0
 1557 001c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1558 001e 032B     		cmp	r3, #3
 1559 0020 29D8     		bhi	.L78
 838:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****       /*Clear Converter Diagnostics Pull-Devices Select value  */  
 839:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****        HandlePtr->kGlobalPtr->GLOBTF = (VADC_GLOBTF_CDWC_Msk|
 1560              		.loc 1 839 0
 1561 0022 7B68     		ldr	r3, [r7, #4]
 1562 0024 1B68     		ldr	r3, [r3, #0]
 840:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                ((HandlePtr->kGlobalPtr->GLOBTF)& (~(VADC_GLOBTF_CDSEL_Msk))));
 1563              		.loc 1 840 0
 1564 0026 7A68     		ldr	r2, [r7, #4]
 1565 0028 1268     		ldr	r2, [r2, #0]
 1566 002a D2F86021 		ldr	r2, [r2, #352]
 839:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****        HandlePtr->kGlobalPtr->GLOBTF = (VADC_GLOBTF_CDWC_Msk|
 1567              		.loc 1 839 0
 1568 002e 22F40642 		bic	r2, r2, #34304
 1569 0032 42F40042 		orr	r2, r2, #32768
 1570 0036 C3F86021 		str	r2, [r3, #352]
 841:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****               
 842:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****       /* Write the Converter Diagnostics Pull-Devices Select value */
 843:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****        HandlePtr->kGlobalPtr->GLOBTF |= (VADC_GLOBTF_CDWC_Msk |
 1571              		.loc 1 843 0
 1572 003a 7B68     		ldr	r3, [r7, #4]
 1573 003c 1B68     		ldr	r3, [r3, #0]
 1574 003e 7A68     		ldr	r2, [r7, #4]
 1575 0040 1268     		ldr	r2, [r2, #0]
 1576 0042 D2F86011 		ldr	r1, [r2, #352]
 844:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                (((uint32_t)SelectValue << VADC_GLOBTF_CDSEL_Pos) & VADC_GLOBTF_CDSEL_Msk));
 1577              		.loc 1 844 0
 1578 0046 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1579 0048 4FEA4222 		lsl	r2, r2, #9
 1580 004c 02F4C062 		and	r2, r2, #1536
 843:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****        HandlePtr->kGlobalPtr->GLOBTF |= (VADC_GLOBTF_CDWC_Msk |
 1581              		.loc 1 843 0
 1582 0050 0A43     		orrs	r2, r2, r1
 1583 0052 42F40042 		orr	r2, r2, #32768
 1584 0056 C3F86021 		str	r2, [r3, #352]
 845:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****       /*Clear the Write Control for Conversion Diagnostics*/    
 846:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****        
 847:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****        CLR_BIT(HandlePtr->kGlobalPtr->GLOBTF, VADC_GLOBTF_CDWC_Pos);    
 1585              		.loc 1 847 0
 1586 005a 7B68     		ldr	r3, [r7, #4]
 1587 005c 1B68     		ldr	r3, [r3, #0]
 1588 005e 7A68     		ldr	r2, [r7, #4]
 1589 0060 1268     		ldr	r2, [r2, #0]
 1590 0062 D2F86021 		ldr	r2, [r2, #352]
 1591 0066 22F40042 		bic	r2, r2, #32768
 1592 006a C3F86021 		str	r2, [r3, #352]
 848:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****        Status = (uint32_t)DAVEApp_SUCCESS;    
 1593              		.loc 1 848 0
 1594 006e 4FF00003 		mov	r3, #0
 1595 0072 FB60     		str	r3, [r7, #12]
 1596 0074 02E0     		b	.L77
 1597              	.L78:
 849:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****      } else {          
 850:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         Status = (uint32_t)ADCGLOB001_INVALID_PARAM_ERROR;
 1598              		.loc 1 850 0
 1599 0076 4FF00203 		mov	r3, #2
 1600 007a FB60     		str	r3, [r7, #12]
 1601              	.L77:
 851:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****      }     
 852:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   }
 853:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   if (Status != (uint32_t)DAVEApp_SUCCESS)
 854:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   {
 855:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     ERROR(GID_ADCGLOB001, (uint8_t)Status, 0, NULL);
 856:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   }
 857:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   FUNCTION_EXIT(GID_ADCGLOB001, (uint32_t)ADCGLOB001_FUNCTION_EXIT);
 858:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   return Status;
 1602              		.loc 1 858 0
 1603 007c FB68     		ldr	r3, [r7, #12]
 859:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** }
 1604              		.loc 1 859 0
 1605 007e 1846     		mov	r0, r3
 1606 0080 07F11407 		add	r7, r7, #20
 1607 0084 BD46     		mov	sp, r7
 1608 0086 80BC     		pop	{r7}
 1609 0088 7047     		bx	lr
 1610              		.cfi_endproc
 1611              	.LFE132:
 1613 008a 00BF     		.section	.text.ADCGLOB001_GTFRPullDwnDiagnoEnable,"ax",%progbits
 1614              		.align	2
 1615              		.global	ADCGLOB001_GTFRPullDwnDiagnoEnable
 1616              		.thumb
 1617              		.thumb_func
 1619              	ADCGLOB001_GTFRPullDwnDiagnoEnable:
 1620              	.LFB133:
 860:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 861:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /**
 862:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * This function configure the Pull-Down Diagnostics Enable register.
 863:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  */
 864:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** status_t ADCGLOB001_GTFRPullDwnDiagnoEnable(
 865:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     const ADCGLOB001_HandleType * HandlePtr
 866:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     )
 867:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** {
 1621              		.loc 1 867 0
 1622              		.cfi_startproc
 1623              		@ args = 0, pretend = 0, frame = 16
 1624              		@ frame_needed = 1, uses_anonymous_args = 0
 1625              		@ link register save eliminated.
 1626 0000 80B4     		push	{r7}
 1627              	.LCFI62:
 1628              		.cfi_def_cfa_offset 4
 1629              		.cfi_offset 7, -4
 1630 0002 85B0     		sub	sp, sp, #20
 1631              	.LCFI63:
 1632              		.cfi_def_cfa_offset 24
 1633 0004 00AF     		add	r7, sp, #0
 1634              	.LCFI64:
 1635              		.cfi_def_cfa_register 7
 1636 0006 7860     		str	r0, [r7, #4]
 868:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   status_t Status = (uint32_t)ADCGLOB001_OPER_NOT_ALLOWED;
 1637              		.loc 1 868 0
 1638 0008 4FF00103 		mov	r3, #1
 1639 000c FB60     		str	r3, [r7, #12]
 869:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 870:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   FUNCTION_ENTRY(GID_ADCGLOB001, (uint32_t)ADCGLOB001_FUNCTION_ENTRY);
 871:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 872:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   if (HandlePtr->kDynamicDataPtr->StateType == ADCGLOB001_INITIALIZED)
 1640              		.loc 1 872 0
 1641 000e 7B68     		ldr	r3, [r7, #4]
 1642 0010 5B68     		ldr	r3, [r3, #4]
 1643 0012 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1644 0014 012B     		cmp	r3, #1
 1645 0016 16D1     		bne	.L81
 873:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   { 
 874:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****    /*Enable the Pull-Down Diagnostics */  
 875:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     HandlePtr->kGlobalPtr->GLOBTF |=
 1646              		.loc 1 875 0
 1647 0018 7B68     		ldr	r3, [r7, #4]
 1648 001a 1B68     		ldr	r3, [r3, #0]
 1649 001c 7A68     		ldr	r2, [r7, #4]
 1650 001e 1268     		ldr	r2, [r2, #0]
 1651 0020 D2F86021 		ldr	r2, [r2, #352]
 1652 0024 42F40102 		orr	r2, r2, #8454144
 1653 0028 C3F86021 		str	r2, [r3, #352]
 876:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         (VADC_GLOBTF_MDWC_Msk | VADC_GLOBTF_PDD_Msk);
 877:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     /*Clear the Write Control for Multiplexer Diagnostics*/  
 878:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     CLR_BIT(HandlePtr->kGlobalPtr->GLOBTF, VADC_GLOBTF_MDWC_Pos);    
 1654              		.loc 1 878 0
 1655 002c 7B68     		ldr	r3, [r7, #4]
 1656 002e 1B68     		ldr	r3, [r3, #0]
 1657 0030 7A68     		ldr	r2, [r7, #4]
 1658 0032 1268     		ldr	r2, [r2, #0]
 1659 0034 D2F86021 		ldr	r2, [r2, #352]
 1660 0038 22F40002 		bic	r2, r2, #8388608
 1661 003c C3F86021 		str	r2, [r3, #352]
 879:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     
 880:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     Status = (uint32_t)DAVEApp_SUCCESS;
 1662              		.loc 1 880 0
 1663 0040 4FF00003 		mov	r3, #0
 1664 0044 FB60     		str	r3, [r7, #12]
 1665              	.L81:
 881:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   }
 882:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 883:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   if (Status != (uint32_t)DAVEApp_SUCCESS)
 884:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   {
 885:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     ERROR(GID_ADCGLOB001, (uint8_t)Status, 0, NULL);
 886:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   }
 887:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   FUNCTION_EXIT(GID_ADCGLOB001, (uint32_t)ADCGLOB001_FUNCTION_EXIT);
 888:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****   return Status;
 1666              		.loc 1 888 0
 1667 0046 FB68     		ldr	r3, [r7, #12]
 889:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** }
 1668              		.loc 1 889 0
 1669 0048 1846     		mov	r0, r3
 1670 004a 07F11407 		add	r7, r7, #20
 1671 004e BD46     		mov	sp, r7
 1672 0050 80BC     		pop	{r7}
 1673 0052 7047     		bx	lr
 1674              		.cfi_endproc
 1675              	.LFE133:
 1677              		.text
 1678              	.Letext0:
 1679              		.file 2 "c:\\dave-3.1.10\\arm-gcc\\bin\\../lib/gcc/arm-none-eabi/4.7.4/../../../../arm-none-eabi/i
 1680              		.file 3 "C:\\DAVE-3.1.10\\eclipse\\/../CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 1681              		.file 4 "F:\\WORK\\SmartHome_checkout1\\XMC4500_RK_HTTPserver\\Dave\\Generated\\inc\\DAVESupport/.
 1682              		.file 5 "F:\\WORK\\SmartHome_checkout1\\XMC4500_RK_HTTPserver\\Dave\\Generated\\inc\\DAVESupport/.
 1683              		.file 6 "F:\\WORK\\SmartHome_checkout1\\XMC4500_RK_HTTPserver\\Dave\\Generated\\inc\\DAVESupport/.
 1684              		.file 7 "C:\\DAVE-3.1.10\\eclipse\\/../CMSIS/Include/core_cm4.h"
 1685              		.file 8 "F:\\WORK\\SmartHome_checkout1\\XMC4500_RK_HTTPserver\\Dave\\Generated\\inc\\DAVESupport/.
DEFINED SYMBOLS
                            *ABS*:00000000 ADCGlob001.c
C:\Users\Mihai\AppData\Local\Temp\cc92EGgZ.s:20     .text.ADCGLOB001_Init:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\cc92EGgZ.s:25     .text.ADCGLOB001_Init:00000000 ADCGLOB001_Init
C:\Users\Mihai\AppData\Local\Temp\cc92EGgZ.s:205    .text.ADCGLOB001_DeInit:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\cc92EGgZ.s:210    .text.ADCGLOB001_DeInit:00000000 ADCGLOB001_DeInit
C:\Users\Mihai\AppData\Local\Temp\cc92EGgZ.s:297    .text.ADCGLOB001_CLKRequestDisable:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\cc92EGgZ.s:302    .text.ADCGLOB001_CLKRequestDisable:00000000 ADCGLOB001_CLKRequestDisable
C:\Users\Mihai\AppData\Local\Temp\cc92EGgZ.s:353    .text.ADCGLOB001_CLKRequestEnable:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\cc92EGgZ.s:358    .text.ADCGLOB001_CLKRequestEnable:00000000 ADCGLOB001_CLKRequestEnable
C:\Users\Mihai\AppData\Local\Temp\cc92EGgZ.s:409    .text.ADCGLOB001_SetStartUpCalibration:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\cc92EGgZ.s:414    .text.ADCGLOB001_SetStartUpCalibration:00000000 ADCGLOB001_SetStartUpCalibration
C:\Users\Mihai\AppData\Local\Temp\cc92EGgZ.s:476    .text.ADCGLOB001_StartUpCalibrationInit:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\cc92EGgZ.s:481    .text.ADCGLOB001_StartUpCalibrationInit:00000000 ADCGLOB001_StartUpCalibrationInit
C:\Users\Mihai\AppData\Local\Temp\cc92EGgZ.s:554    .text.ADCGLOB001_EnableSleepModeControl:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\cc92EGgZ.s:559    .text.ADCGLOB001_EnableSleepModeControl:00000000 ADCGLOB001_EnableSleepModeControl
C:\Users\Mihai\AppData\Local\Temp\cc92EGgZ.s:610    .text.ADCGLOB001_DisregardSleepModeControl:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\cc92EGgZ.s:615    .text.ADCGLOB001_DisregardSleepModeControl:00000000 ADCGLOB001_DisregardSleepModeControl
C:\Users\Mihai\AppData\Local\Temp\cc92EGgZ.s:666    .text.ADCGLOB001_SetGlobClass0ConvMode:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\cc92EGgZ.s:671    .text.ADCGLOB001_SetGlobClass0ConvMode:00000000 ADCGLOB001_SetGlobClass0ConvMode
C:\Users\Mihai\AppData\Local\Temp\cc92EGgZ.s:742    .text.ADCGLOB001_SetGlobClass0SampleTime:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\cc92EGgZ.s:747    .text.ADCGLOB001_SetGlobClass0SampleTime:00000000 ADCGLOB001_SetGlobClass0SampleTime
C:\Users\Mihai\AppData\Local\Temp\cc92EGgZ.s:812    .text.ADCGLOB001_SetGlobClass0EmuxConvMode:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\cc92EGgZ.s:817    .text.ADCGLOB001_SetGlobClass0EmuxConvMode:00000000 ADCGLOB001_SetGlobClass0EmuxConvMode
C:\Users\Mihai\AppData\Local\Temp\cc92EGgZ.s:888    .text.ADCGLOB001_SetGlobClass0EmuxSampleTime:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\cc92EGgZ.s:893    .text.ADCGLOB001_SetGlobClass0EmuxSampleTime:00000000 ADCGLOB001_SetGlobClass0EmuxSampleTime
C:\Users\Mihai\AppData\Local\Temp\cc92EGgZ.s:959    .text.ADCGLOB001_SetGlobClass1ConvMode:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\cc92EGgZ.s:964    .text.ADCGLOB001_SetGlobClass1ConvMode:00000000 ADCGLOB001_SetGlobClass1ConvMode
C:\Users\Mihai\AppData\Local\Temp\cc92EGgZ.s:1035   .text.ADCGLOB001_SetGlobClass1SampleTime:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\cc92EGgZ.s:1040   .text.ADCGLOB001_SetGlobClass1SampleTime:00000000 ADCGLOB001_SetGlobClass1SampleTime
C:\Users\Mihai\AppData\Local\Temp\cc92EGgZ.s:1105   .text.ADCGLOB001_SetGlobClass1EmuxConvMode:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\cc92EGgZ.s:1110   .text.ADCGLOB001_SetGlobClass1EmuxConvMode:00000000 ADCGLOB001_SetGlobClass1EmuxConvMode
C:\Users\Mihai\AppData\Local\Temp\cc92EGgZ.s:1181   .text.ADCGLOB001_SetGlobClass1EmuxSampleTime:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\cc92EGgZ.s:1186   .text.ADCGLOB001_SetGlobClass1EmuxSampleTime:00000000 ADCGLOB001_SetGlobClass1EmuxSampleTime
C:\Users\Mihai\AppData\Local\Temp\cc92EGgZ.s:1252   .text.ADCGLOB001_GetDisableBitStatus:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\cc92EGgZ.s:1257   .text.ADCGLOB001_GetDisableBitStatus:00000000 ADCGLOB001_GetDisableBitStatus
C:\Users\Mihai\AppData\Local\Temp\cc92EGgZ.s:1310   .text.ADCGLOB001_GetIdValue:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\cc92EGgZ.s:1315   .text.ADCGLOB001_GetIdValue:00000000 ADCGLOB001_GetIdValue
C:\Users\Mihai\AppData\Local\Temp\cc92EGgZ.s:1365   .text.ADCGLOB001_GTFRConvtrDiagnoGrp:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\cc92EGgZ.s:1370   .text.ADCGLOB001_GTFRConvtrDiagnoGrp:00000000 ADCGLOB001_GTFRConvtrDiagnoGrp
C:\Users\Mihai\AppData\Local\Temp\cc92EGgZ.s:1458   .text.ADCGLOB001_GTFRConvtrDiagnoEnable:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\cc92EGgZ.s:1463   .text.ADCGLOB001_GTFRConvtrDiagnoEnable:00000000 ADCGLOB001_GTFRConvtrDiagnoEnable
C:\Users\Mihai\AppData\Local\Temp\cc92EGgZ.s:1522   .text.ADCGLOB001_GTFRConvtrDiagnoPullDevicesSelect:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\cc92EGgZ.s:1527   .text.ADCGLOB001_GTFRConvtrDiagnoPullDevicesSelect:00000000 ADCGLOB001_GTFRConvtrDiagnoPullDevicesSelect
C:\Users\Mihai\AppData\Local\Temp\cc92EGgZ.s:1614   .text.ADCGLOB001_GTFRPullDwnDiagnoEnable:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\cc92EGgZ.s:1619   .text.ADCGLOB001_GTFRPullDwnDiagnoEnable:00000000 ADCGLOB001_GTFRPullDwnDiagnoEnable
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.1791a5ae2e936ca1033c1c44be394cc7
                           .group:00000000 wm4.XMC4500.h.45.215f4b8c79f46c7645c15373868d08c0
                           .group:00000000 wm4.core_cm4.h.47.41af406cb4cda82c972f112a9cd0a024
                           .group:00000000 wm4.newlib.h.8.a9901dc52d1357e3e94003403d43f8b5
                           .group:00000000 wm4.features.h.22.b72b3baab2bb2eab3661375590100b6b
                           .group:00000000 wm4.config.h.193.5fb8ef056cdff92dec3dee9552839d8c
                           .group:00000000 wm4._ansi.h.23.7aefdac4826acebbfc9f3822a0aeb14c
                           .group:00000000 wm4.stdint.h.20.54ad762faa59e3c05491630641c8d8bf
                           .group:00000000 wm4.core_cmInstr.h.39.3d3d1b4a79aef37532666dc6ee87c6ac
                           .group:00000000 wm4.core_cm4_simd.h.43.b5d1d38735af6366227b4256d330cf13
                           .group:00000000 wm4.core_cm4.h.178.e5ef5ce66d198d7f00f9d0076e267c41
                           .group:00000000 wm4.system_XMC4500.h.29.827f68baa362c84f2abae4ab67dde7c9
                           .group:00000000 wm4.XMC4500.h.198.8e022f279ff353ed081df898dc7b9cf3
                           .group:00000000 wm4.stddef.h.40.50cf36416e06376af8a9dca28536f2e4
                           .group:00000000 wm4.types.h.55.0006b5fda1d606516f2dcaf4aca92b11
                           .group:00000000 wm4.MULTIPLEXER.h.43.4aa654be3ec80895f631b5281bbb9105
                           .group:00000000 wm4.CCU8PWMLIB.h.70.a5d6a5267902b8b4aea2a0224518259a
                           .group:00000000 wm4.DBG001.h.116.d6d9e7459a0faa3905c97c1d2edb339d
                           .group:00000000 wm4.SYSTM001.h.63.668098b2213d40a5bd0db5fbe813cf05
                           .group:00000000 wm4.ETH002_Conf.h.56.5bd2b085b66f43d51abd69396be7f35f
                           .group:00000000 wm4.EthernetPHY.h.54.7af1709186b21e62a5f1d4049da3988b
                           .group:00000000 wm4.ETH001_Conf.h.71.1e151af1ba54dd023e1f942bdf922819
                           .group:00000000 wm4.synopGMAC_plat.h.78.7a90e072b497857344aea4ba1e994097
                           .group:00000000 wm4.synopGMAC_stack_interface.h.73.6be6aaee0ac6637432f4d0589044479b
                           .group:00000000 wm4.SynopGMAC_Dev.h.72.7c89c07cf666d37f5c9b615720d5e111
                           .group:00000000 wm4.synopGMAC_network_interface.h.73.4dd08316a11bc43c8c4a9da15277fb0f
                           .group:00000000 wm4.stdlib.h.13.603ed7eb09a1561ab06840b7c0fcff58
                           .group:00000000 wm4.stddef.h.161.e50ff8a9d5d1abbc15641da28ac571bf
                           .group:00000000 wm4._default_types.h.6.5e12cd604db8ce00b62bb2f02708eaf3
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4.stddef.h.161.c6104a0666cf681b6269ddc9b4f516d4
                           .group:00000000 wm4.reent.h.16.9e42f0e588b85e70b2bf6572af57ce64
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.53.c69c7609933ff56d59c757cec2d13230
                           .group:00000000 wm4.string.h.8.ef946ad0bc9ad5c970c365dcd1fc4b0a
                           .group:00000000 wm4.string.h.86.d5c872ff52e2712c985b588a0ef39f3c
                           .group:00000000 wm4.ETH004_Conf.h.56.564c3f309c32b3c742fc91049cf66940
                           .group:00000000 wm4.lwipopts.h.73.a7a63bda1e8216abd1d90275eaaa0027
                           .group:00000000 wm4.arch.h.33.6fa4aa86d33d1490ae882caef7316405
                           .group:00000000 wm4.cpu.h.33.b213c7fd77614ebc3691cef18ad2ff22
                           .group:00000000 wm4.cc.h.66.ec134211c658dcc89de4610e4e7bab46
                           .group:00000000 wm4.arch.h.47.5153c52bfb94ee3b37299920afab6afd
                           .group:00000000 wm4.debug.h.43.557ecd6c90cc70b375bb8a29118be47b
                           .group:00000000 wm4.opt.h.94.d36882acafebb8726bce646fc8b2397b
                           .group:00000000 wm4.err.h.52.37c5d17538f8e8347a9c84196701e92d
                           .group:00000000 wm4.pbuf.h.43.e9a1ad12b97478787a109e22d5306820
                           .group:00000000 wm4.inet.h.46.b516065779826845d16d49f513869a2b
                           .group:00000000 wm4.ip_addr.h.79.9a0ce887ca8c88c22ad7686bcb5105df
                           .group:00000000 wm4.sys.h.65.4a0cd87b9e0d8bb4cd6b30e939b2ca7e
                           .group:00000000 wm4.mem.h.96.20770766e6c9e6c42af6bfa95ef5c63f
                           .group:00000000 wm4.def.h.33.049f911dab26023a266ed46ced0ce4bc
                           .group:00000000 wm4.netif.h.53.c13431a64f0e73a26710e71455725e84
                           .group:00000000 wm4.ip.h.48.ad46847692d4d729760949b27e48a442
                           .group:00000000 wm4.icmp.h.44.450dbf91f594cc26ad19d086cdc83713
                           .group:00000000 wm4.tcp.h.55.5c30b9432fa60afaa85cbdd225b0c683
                           .group:00000000 wm4.udp.h.48.1a8dde095cd0a13580afaba1443e5a3f
                           .group:00000000 wm4.SDMMC003_Conf.h.50.e707c07613fb4e6f2eaec982a892429d
                           .group:00000000 wm4.SDMMC003.h.85.b66055f6032a052f5173e3d123f9c61e
                           .group:00000000 wm4.SDMMC001.h.50.3e2fedc7e5ace33db4121d5cc027e8a4
                           .group:00000000 wm4.types.h.23.0d949686bbcadd1621462d4fa1f884f9
                           .group:00000000 wm4.types.h.2.e9cec8c90ab35f77d9f499e06ae02400
                           .group:00000000 wm4.types.h.80.1f2c84c0d57dd52dd9936095d9ac218e
                           .group:00000000 wm4.time.h.16.a4579e68956d2601c6113814b546764b
                           .group:00000000 wm4.diskio.h.7.93a3c8131d08770c060b04d2180fd09a
                           .group:00000000 wm4.diskio.h.42.a863614abe78d56d18ed7cb292d0028d
                           .group:00000000 wm4.ffconf.h.57.4ab321a2116d35ff7f28236ac31fad7c
                           .group:00000000 wm4.ff.h.82.8f05a37d35a49dba2681a7f047fee4ee
                           .group:00000000 wm4.lmm001_debuglog.h.40.8031299705ecf04ad726bd19baff976d
                           .group:00000000 wm4.LMM001.h.42.c21fe9cbedc336738c3dc89405cad216
                           .group:00000000 wm4.stdio.h.27.f2ac352bab34f31f9f478442827b2ba6
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.63.dfdea6580b080784d08faace69b6ed76
                           .group:00000000 wm4.time.h.2.9857e62ad6ac99431e29d58067232314
                           .group:00000000 wm4.time.h.24.c499d4c1915694df17abb795fd34b719
                           .group:00000000 wm4.time.h.124.10ced469f846269cafc58b59c853e1bb
                           .group:00000000 wm4.errno.h.2.ba016d646105af6cad23be83630b6a3f
                           .group:00000000 wm4.errno.h.9.65044c2b5d8494e43f5986ab0a1d770f
                           .group:00000000 wm4.unistd.h.2.6ce1b91c4223f6078c1b210c7538c1d2
                           .group:00000000 wm4.unistd.h.251.605bc560cdc6c3b07b599bb71ac4e425
                           .group:00000000 wm4.malloc.h.4.62bd13b8107d5245f60bd92bb5994838
                           .group:00000000 wm4.malloc.h.148.73b7de3bd065dafbd594b04197a9466e
                           .group:00000000 wm4.reent.h.91.faac4d0ac97c0fcf23d10d0786197642
                           .group:00000000 wm4.SLTHA003.h.100.69cb08672bc6ab3f052aa9d5bd6dc5ca
                           .group:00000000 wm4._default_fcntl.h.6.d036cf640d0f9a06bcff1be55acd66be
                           .group:00000000 wm4.stat.h.2.a761b02482a54847ff0d09dfcff24a5c
                           .group:00000000 wm4.fcntl.h.9.9336f33d7f5028f694c75e6e224e0cf7
                           .group:00000000 wm4.SLTHA001.h.97.d7e87c19a31e3244bdd5839e7cc42a61
                           .group:00000000 wm4.WEBSERVER001_Conf.h.54.cd6d29aaa96a848cbc5321bab5d6cd90
                           .group:00000000 wm4.ADCGROUP001.h.48.081c7f952eb4b6ea2df7d05180ee1663
                           .group:00000000 wm4.IO001.h.49.1da965fb490206cf7cde64a90f6912e1
                           .group:00000000 wm4.MOTORLIBS.h.59.b2e97de0df555dedfa51e24447b57ab8
                           .group:00000000 wm4.uc_id.h.35.a6c4837fad81477ba31967683332b8cc
                           .group:00000000 wm4.Usic.h.90.22743468abc46f16747d12430b219aaf
                           .group:00000000 wm4.UART001_Conf.h.53.c5c972f6f634bc5116c171852aaab668
                           .group:00000000 wm4.UART001.h.109.3e835815a7a59791d8bd39655f4d4cc9

UNDEFINED SYMBOLS
ADCGLOB001_Handle0
CLK001_Init
RESET001_DeassertReset
