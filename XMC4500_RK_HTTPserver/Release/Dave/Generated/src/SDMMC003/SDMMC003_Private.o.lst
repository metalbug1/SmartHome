   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 4
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"SDMMC003_Private.c"
  16              		.section	.text.Timer_CallBack,"ax",%progbits
  17              		.align	1
  18              		.global	Timer_CallBack
  19              		.thumb
  20              		.thumb_func
  22              	Timer_CallBack:
  23              		@ args = 0, pretend = 0, frame = 0
  24              		@ frame_needed = 0, uses_anonymous_args = 0
  25              		@ link register save eliminated.
  26 0000 08B1     		cbz	r0, .L2
  27 0002 034B     		ldr	r3, .L7
  28 0004 1860     		str	r0, [r3, #0]
  29              	.L2:
  30 0006 0348     		ldr	r0, .L7+4
  31 0008 0022     		movs	r2, #0
  32 000a 8272     		strb	r2, [r0, #10]
  33 000c 7047     		bx	lr
  34              	.L8:
  35 000e 00BF     		.align	2
  36              	.L7:
  37 0010 00000000 		.word	SDMMC003_ReturnStatus
  38 0014 00000000 		.word	SDMMC003_Handle
  40              		.section	.text.SDMMC003_lCardCleanUp,"ax",%progbits
  41              		.align	1
  42              		.global	SDMMC003_lCardCleanUp
  43              		.thumb
  44              		.thumb_func
  46              	SDMMC003_lCardCleanUp:
  47              		@ args = 0, pretend = 0, frame = 0
  48              		@ frame_needed = 0, uses_anonymous_args = 0
  49 0000 08B5     		push	{r3, lr}
  50 0002 0021     		movs	r1, #0
  51 0004 3022     		movs	r2, #48
  52 0006 0A48     		ldr	r0, .L10
  53 0008 FFF7FEFF 		bl	memset
  54 000c 094B     		ldr	r3, .L10+4
  55 000e 0A48     		ldr	r0, .L10+8
  56 0010 0122     		movs	r2, #1
  57 0012 0021     		movs	r1, #0
  58 0014 9970     		strb	r1, [r3, #2]
  59 0016 5972     		strb	r1, [r3, #9]
  60 0018 1A71     		strb	r2, [r3, #4]
  61 001a DA70     		strb	r2, [r3, #3]
  62 001c DA71     		strb	r2, [r3, #7]
  63 001e 5A71     		strb	r2, [r3, #5]
  64 0020 1980     		strh	r1, [r3, #0]	@ movhi
  65 0022 838D     		ldrh	r3, [r0, #44]
  66 0024 23F00401 		bic	r1, r3, #4
  67 0028 0A04     		lsls	r2, r1, #16
  68 002a 130C     		lsrs	r3, r2, #16
  69 002c 8385     		strh	r3, [r0, #44]	@ movhi
  70 002e 08BD     		pop	{r3, pc}
  71              	.L11:
  72              		.align	2
  73              	.L10:
  74 0030 00000000 		.word	SDMMC003_CardInfo
  75 0034 00000000 		.word	SDMMC003_Handle
  76 0038 00C00148 		.word	1208074240
  78              		.section	.text.SDMMC003_lCheckDatCmdline,"ax",%progbits
  79              		.align	1
  80              		.global	SDMMC003_lCheckDatCmdline
  81              		.thumb
  82              		.thumb_func
  84              	SDMMC003_lCheckDatCmdline:
  85              		@ args = 0, pretend = 0, frame = 0
  86              		@ frame_needed = 0, uses_anonymous_args = 0
  87              		@ link register save eliminated.
  88 0000 164B     		ldr	r3, .L22
  89 0002 596A     		ldr	r1, [r3, #36]
  90 0004 C907     		lsls	r1, r1, #31
  91 0006 25D4     		bmi	.L17
  92 0008 0378     		ldrb	r3, [r0, #0]	@ zero_extendqisi2
  93 000a 03F02002 		and	r2, r3, #32
  94 000e 02F0FF01 		and	r1, r2, #255
  95 0012 42B9     		cbnz	r2, .L14
  96 0014 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
  97 0016 00F03F02 		and	r2, r0, #63
  98 001a 0D2A     		cmp	r2, #13
  99 001c 03D0     		beq	.L14
 100 001e 03F00300 		and	r0, r3, #3
 101 0022 0328     		cmp	r0, #3
 102 0024 0ED1     		bne	.L15
 103              	.L14:
 104 0026 0D4A     		ldr	r2, .L22
 105 0028 506A     		ldr	r0, [r2, #36]
 106 002a 8207     		lsls	r2, r0, #30
 107 002c 14D4     		bmi	.L18
 108 002e 19B9     		cbnz	r1, .L16
 109 0030 03F00303 		and	r3, r3, #3
 110 0034 032B     		cmp	r3, #3
 111 0036 05D1     		bne	.L15
 112              	.L16:
 113 0038 0949     		ldr	r1, .L22+4
 114 003a 0A88     		ldrh	r2, [r1, #0]
 115 003c 90B2     		uxth	r0, r2
 116 003e 40F00803 		orr	r3, r0, #8
 117 0042 0B80     		strh	r3, [r1, #0]	@ movhi
 118              	.L15:
 119 0044 0649     		ldr	r1, .L22+4
 120 0046 0A88     		ldrh	r2, [r1, #0]
 121 0048 90B2     		uxth	r0, r2
 122 004a 40F00403 		orr	r3, r0, #4
 123 004e 0B80     		strh	r3, [r1, #0]	@ movhi
 124 0050 0020     		movs	r0, #0
 125 0052 7047     		bx	lr
 126              	.L17:
 127 0054 1A20     		movs	r0, #26
 128 0056 7047     		bx	lr
 129              	.L18:
 130 0058 1B20     		movs	r0, #27
 131 005a 7047     		bx	lr
 132              	.L23:
 133              		.align	2
 134              	.L22:
 135 005c 00C00148 		.word	1208074240
 136 0060 00000000 		.word	SDMMC003_Handle
 138              		.section	.text.SDMMC003_lCheckArgumentError,"ax",%progbits
 139              		.align	1
 140              		.global	SDMMC003_lCheckArgumentError
 141              		.thumb
 142              		.thumb_func
 144              	SDMMC003_lCheckArgumentError:
 145              		@ args = 0, pretend = 0, frame = 0
 146              		@ frame_needed = 0, uses_anonymous_args = 0
 147              		@ link register save eliminated.
 148 0000 0368     		ldr	r3, [r0, #0]
 149 0002 002B     		cmp	r3, #0
 150 0004 01DA     		bge	.L25
 151 0006 0122     		movs	r2, #1
 152 0008 0A70     		strb	r2, [r1, #0]
 153              	.L25:
 154 000a 0368     		ldr	r3, [r0, #0]
 155 000c 5A00     		lsls	r2, r3, #1
 156 000e 01D5     		bpl	.L26
 157 0010 0122     		movs	r2, #1
 158 0012 0A70     		strb	r2, [r1, #0]
 159              	.L26:
 160 0014 0368     		ldr	r3, [r0, #0]
 161 0016 9B00     		lsls	r3, r3, #2
 162 0018 01D5     		bpl	.L27
 163 001a 0122     		movs	r2, #1
 164 001c 0A70     		strb	r2, [r1, #0]
 165              	.L27:
 166 001e 0068     		ldr	r0, [r0, #0]
 167 0020 4001     		lsls	r0, r0, #5
 168 0022 01D5     		bpl	.L24
 169 0024 0123     		movs	r3, #1
 170 0026 0B70     		strb	r3, [r1, #0]
 171              	.L24:
 172 0028 7047     		bx	lr
 174              		.section	.text.SDMMC003_lCheckEraseError,"ax",%progbits
 175              		.align	1
 176              		.global	SDMMC003_lCheckEraseError
 177              		.thumb
 178              		.thumb_func
 180              	SDMMC003_lCheckEraseError:
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183              		@ link register save eliminated.
 184 0000 0368     		ldr	r3, [r0, #0]
 185 0002 DA00     		lsls	r2, r3, #3
 186 0004 01D5     		bpl	.L39
 187 0006 0122     		movs	r2, #1
 188 0008 0A70     		strb	r2, [r1, #0]
 189              	.L39:
 190 000a 0368     		ldr	r3, [r0, #0]
 191 000c 1B01     		lsls	r3, r3, #4
 192 000e 01D5     		bpl	.L40
 193 0010 0122     		movs	r2, #1
 194 0012 0A70     		strb	r2, [r1, #0]
 195              	.L40:
 196 0014 0068     		ldr	r0, [r0, #0]
 197 0016 0004     		lsls	r0, r0, #16
 198 0018 01D5     		bpl	.L38
 199 001a 0123     		movs	r3, #1
 200 001c 0B70     		strb	r3, [r1, #0]
 201              	.L38:
 202 001e 7047     		bx	lr
 204              		.section	.text.SDMMC003_lCheckCardError,"ax",%progbits
 205              		.align	1
 206              		.global	SDMMC003_lCheckCardError
 207              		.thumb
 208              		.thumb_func
 210              	SDMMC003_lCheckCardError:
 211              		@ args = 0, pretend = 0, frame = 0
 212              		@ frame_needed = 0, uses_anonymous_args = 0
 213              		@ link register save eliminated.
 214 0000 0368     		ldr	r3, [r0, #0]
 215 0002 9A02     		lsls	r2, r3, #10
 216 0004 01D5     		bpl	.L52
 217 0006 0122     		movs	r2, #1
 218 0008 0A70     		strb	r2, [r1, #0]
 219              	.L52:
 220 000a 0368     		ldr	r3, [r0, #0]
 221 000c DB02     		lsls	r3, r3, #11
 222 000e 01D5     		bpl	.L53
 223 0010 0122     		movs	r2, #1
 224 0012 0A70     		strb	r2, [r1, #0]
 225              	.L53:
 226 0014 0068     		ldr	r0, [r0, #0]
 227 0016 0003     		lsls	r0, r0, #12
 228 0018 01D5     		bpl	.L51
 229 001a 0123     		movs	r3, #1
 230 001c 0B70     		strb	r3, [r1, #0]
 231              	.L51:
 232 001e 7047     		bx	lr
 234              		.section	.text.SDMMC003_lCheckErrorInResponse,"ax",%progbits
 235              		.align	1
 236              		.global	SDMMC003_lCheckErrorInResponse
 237              		.thumb
 238              		.thumb_func
 240              	SDMMC003_lCheckErrorInResponse:
 241              		@ args = 0, pretend = 0, frame = 8
 242              		@ frame_needed = 0, uses_anonymous_args = 0
 243 0000 37B5     		push	{r0, r1, r2, r4, r5, lr}
 244 0002 02AC     		add	r4, sp, #8
 245 0004 0023     		movs	r3, #0
 246 0006 04F8013D 		strb	r3, [r4, #-1]!
 247 000a 0546     		mov	r5, r0
 248 000c 2146     		mov	r1, r4
 249 000e FFF7FEFF 		bl	SDMMC003_lCheckArgumentError
 250 0012 2846     		mov	r0, r5
 251 0014 2146     		mov	r1, r4
 252 0016 FFF7FEFF 		bl	SDMMC003_lCheckEraseError
 253 001a 2846     		mov	r0, r5
 254 001c 2146     		mov	r1, r4
 255 001e FFF7FEFF 		bl	SDMMC003_lCheckCardError
 256 0022 2868     		ldr	r0, [r5, #0]
 257 0024 C101     		lsls	r1, r0, #7
 258 0026 02D5     		bpl	.L65
 259 0028 0122     		movs	r2, #1
 260 002a 8DF80720 		strb	r2, [sp, #7]
 261              	.L65:
 262 002e C203     		lsls	r2, r0, #15
 263 0030 02D5     		bpl	.L66
 264 0032 0121     		movs	r1, #1
 265 0034 8DF80710 		strb	r1, [sp, #7]
 266              	.L66:
 267 0038 0007     		lsls	r0, r0, #28
 268 003a 02D5     		bpl	.L67
 269 003c 0123     		movs	r3, #1
 270 003e 8DF80730 		strb	r3, [sp, #7]
 271              	.L67:
 272 0042 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 273 0046 421E     		subs	r2, r0, #1
 274 0048 5142     		rsbs	r1, r2, #0
 275 004a 51EB0200 		adcs	r0, r1, r2
 276 004e 3EBD     		pop	{r1, r2, r3, r4, r5, pc}
 278              		.section	.text.SDMMC003_lGetCardLockState,"ax",%progbits
 279              		.align	1
 280              		.global	SDMMC003_lGetCardLockState
 281              		.thumb
 282              		.thumb_func
 284              	SDMMC003_lGetCardLockState:
 285              		@ args = 0, pretend = 0, frame = 0
 286              		@ frame_needed = 0, uses_anonymous_args = 0
 287              		@ link register save eliminated.
 288 0000 084A     		ldr	r2, .L87
 289 0002 10F0007F 		tst	r0, #33554432
 290 0006 1388     		ldrh	r3, [r2, #0]
 291 0008 05D0     		beq	.L78
 292 000a 0329     		cmp	r1, #3
 293 000c 03D0     		beq	.L78
 294 000e 98B2     		uxth	r0, r3
 295 0010 40F04003 		orr	r3, r0, #64
 296 0014 03E0     		b	.L86
 297              	.L78:
 298 0016 23F04000 		bic	r0, r3, #64
 299 001a 0104     		lsls	r1, r0, #16
 300 001c 0B0C     		lsrs	r3, r1, #16
 301              	.L86:
 302 001e 1380     		strh	r3, [r2, #0]	@ movhi
 303 0020 7047     		bx	lr
 304              	.L88:
 305 0022 00BF     		.align	2
 306              	.L87:
 307 0024 00000000 		.word	SDMMC003_Handle
 309              		.section	.text.SDMMC003_lWriteCardType,"ax",%progbits
 310              		.align	1
 311              		.global	SDMMC003_lWriteCardType
 312              		.thumb
 313              		.thumb_func
 315              	SDMMC003_lWriteCardType:
 316              		@ args = 0, pretend = 0, frame = 0
 317              		@ frame_needed = 0, uses_anonymous_args = 0
 318              		@ link register save eliminated.
 319 0000 094B     		ldr	r3, .L94
 320 0002 5A7A     		ldrb	r2, [r3, #9]	@ zero_extendqisi2
 321 0004 1AB9     		cbnz	r2, .L90
 322 0006 9878     		ldrb	r0, [r3, #2]	@ zero_extendqisi2
 323 0008 40F00202 		orr	r2, r0, #2
 324 000c 09E0     		b	.L93
 325              	.L90:
 326 000e 0748     		ldr	r0, .L94+4
 327 0010 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 328 0012 0168     		ldr	r1, [r0, #0]
 329 0014 11F0804F 		tst	r1, #1073741824
 330 0018 14BF     		ite	ne
 331 001a 42F00C02 		orrne	r2, r2, #12
 332 001e 42F00102 		orreq	r2, r2, #1
 333              	.L93:
 334 0022 9A70     		strb	r2, [r3, #2]
 335 0024 7047     		bx	lr
 336              	.L95:
 337 0026 00BF     		.align	2
 338              	.L94:
 339 0028 00000000 		.word	SDMMC003_Handle
 340 002c 00000000 		.word	SDMMC003_CardInfo
 342              		.section	.text.SDMMC003_lSetWriteProtect,"ax",%progbits
 343              		.align	1
 344              		.global	SDMMC003_lSetWriteProtect
 345              		.thumb
 346              		.thumb_func
 348              	SDMMC003_lSetWriteProtect:
 349              		@ args = 0, pretend = 0, frame = 64
 350              		@ frame_needed = 0, uses_anonymous_args = 0
 351 0000 00B5     		push	{lr}
 352 0002 91B0     		sub	sp, sp, #68
 353 0004 6846     		mov	r0, sp
 354 0006 0021     		movs	r1, #0
 355 0008 4022     		movs	r2, #64
 356 000a FFF7FEFF 		bl	memset
 357 000e 6846     		mov	r0, sp
 358 0010 FFF7FEFF 		bl	SDMMC003_GetSdStatus
 359 0014 60B9     		cbnz	r0, .L97
 360 0016 009B     		ldr	r3, [sp, #0]
 361 0018 C3F30742 		ubfx	r2, r3, #16, #8
 362 001c 190E     		lsrs	r1, r3, #24
 363 001e 51EA0223 		orrs	r3, r1, r2, lsl #8
 364 0022 05D0     		beq	.L97
 365 0024 034B     		ldr	r3, .L101
 366 0026 1A88     		ldrh	r2, [r3, #0]
 367 0028 91B2     		uxth	r1, r2
 368 002a 41F01002 		orr	r2, r1, #16
 369 002e 1A80     		strh	r2, [r3, #0]	@ movhi
 370              	.L97:
 371 0030 11B0     		add	sp, sp, #68
 372 0032 00BD     		pop	{pc}
 373              	.L102:
 374              		.align	2
 375              	.L101:
 376 0034 00000000 		.word	SDMMC003_Handle
 378              		.section	.text.SDMMC003_lCheckLockStatus,"ax",%progbits
 379              		.align	1
 380              		.global	SDMMC003_lCheckLockStatus
 381              		.thumb
 382              		.thumb_func
 384              	SDMMC003_lCheckLockStatus:
 385              		@ args = 0, pretend = 0, frame = 8
 386              		@ frame_needed = 0, uses_anonymous_args = 0
 387 0000 13B5     		push	{r0, r1, r4, lr}
 388 0002 0446     		mov	r4, r0
 389 0004 02A8     		add	r0, sp, #8
 390 0006 0022     		movs	r2, #0
 391 0008 40F8042D 		str	r2, [r0, #-4]!
 392 000c FFF7FEFF 		bl	SDMMC003_GetLockStatus
 393 0010 48B9     		cbnz	r0, .L104
 394 0012 019B     		ldr	r3, [sp, #4]
 395 0014 202B     		cmp	r3, #32
 396 0016 02D1     		bne	.L105
 397 0018 2CB1     		cbz	r4, .L104
 398              	.L106:
 399 001a 1020     		movs	r0, #16
 400 001c 03E0     		b	.L104
 401              	.L105:
 402 001e 212B     		cmp	r3, #33
 403 0020 FBD1     		bne	.L106
 404 0022 012C     		cmp	r4, #1
 405 0024 F9D1     		bne	.L106
 406              	.L104:
 407 0026 1CBD     		pop	{r2, r3, r4, pc}
 409              		.section	.text.SDMMC003_lNormalInterruptHandler,"ax",%progbits
 410              		.align	1
 411              		.global	SDMMC003_lNormalInterruptHandler
 412              		.thumb
 413              		.thumb_func
 415              	SDMMC003_lNormalInterruptHandler:
 416              		@ args = 0, pretend = 0, frame = 0
 417              		@ frame_needed = 0, uses_anonymous_args = 0
 418              		@ link register save eliminated.
 419 0000 00F02003 		and	r3, r0, #32
 420 0004 99B2     		uxth	r1, r3
 421 0006 41B1     		cbz	r1, .L111
 422 0008 1D4B     		ldr	r3, .L127
 423 000a 1E22     		movs	r2, #30
 424 000c DA70     		strb	r2, [r3, #3]
 425 000e 1D4A     		ldr	r2, .L127+4
 426 0010 1D4B     		ldr	r3, .L127+8
 427 0012 2021     		movs	r1, #32
 428 0014 1186     		strh	r1, [r2, #48]	@ movhi
 429 0016 0121     		movs	r1, #1
 430 0018 D970     		strb	r1, [r3, #3]
 431              	.L111:
 432 001a 00F01002 		and	r2, r0, #16
 433 001e 91B2     		uxth	r1, r2
 434 0020 41B1     		cbz	r1, .L112
 435 0022 174B     		ldr	r3, .L127
 436 0024 1E22     		movs	r2, #30
 437 0026 DA70     		strb	r2, [r3, #3]
 438 0028 164A     		ldr	r2, .L127+4
 439 002a 174B     		ldr	r3, .L127+8
 440 002c 1021     		movs	r1, #16
 441 002e 1186     		strh	r1, [r2, #48]	@ movhi
 442 0030 0121     		movs	r1, #1
 443 0032 D970     		strb	r1, [r3, #3]
 444              	.L112:
 445 0034 00F00202 		and	r2, r0, #2
 446 0038 91B2     		uxth	r1, r2
 447 003a 71B1     		cbz	r1, .L113
 448 003c 104A     		ldr	r2, .L127
 449 003e 1F23     		movs	r3, #31
 450 0040 5371     		strb	r3, [r2, #5]
 451 0042 104B     		ldr	r3, .L127+4
 452 0044 0221     		movs	r1, #2
 453 0046 1986     		strh	r1, [r3, #48]	@ movhi
 454 0048 1188     		ldrh	r1, [r2, #0]
 455 004a 21F00803 		bic	r3, r1, #8
 456 004e 1904     		lsls	r1, r3, #16
 457 0050 0B0C     		lsrs	r3, r1, #16
 458 0052 0D49     		ldr	r1, .L127+8
 459 0054 1380     		strh	r3, [r2, #0]	@ movhi
 460 0056 0122     		movs	r2, #1
 461 0058 0A71     		strb	r2, [r1, #4]
 462              	.L113:
 463 005a C007     		lsls	r0, r0, #31
 464 005c 0ED5     		bpl	.L114
 465 005e 084A     		ldr	r2, .L127
 466 0060 1C20     		movs	r0, #28
 467 0062 1071     		strb	r0, [r2, #4]
 468 0064 0748     		ldr	r0, .L127+4
 469 0066 0123     		movs	r3, #1
 470 0068 0386     		strh	r3, [r0, #48]	@ movhi
 471 006a 1946     		mov	r1, r3	@ movhi
 472 006c 1388     		ldrh	r3, [r2, #0]
 473 006e 23F00400 		bic	r0, r3, #4
 474 0072 0304     		lsls	r3, r0, #16
 475 0074 180C     		lsrs	r0, r3, #16
 476 0076 1080     		strh	r0, [r2, #0]	@ movhi
 477 0078 034A     		ldr	r2, .L127+8
 478 007a 9170     		strb	r1, [r2, #2]
 479              	.L114:
 480 007c 0020     		movs	r0, #0
 481 007e 7047     		bx	lr
 482              	.L128:
 483              		.align	2
 484              	.L127:
 485 0080 00000000 		.word	SDMMC003_Handle
 486 0084 00C00148 		.word	1208074240
 487 0088 00000000 		.word	SDMMC003_ISRContext
 489              		.section	.text.SDMMC003_lErrorInterruptHandler,"ax",%progbits
 490              		.align	1
 491              		.global	SDMMC003_lErrorInterruptHandler
 492              		.thumb
 493              		.thumb_func
 495              	SDMMC003_lErrorInterruptHandler:
 496              		@ args = 0, pretend = 0, frame = 0
 497              		@ frame_needed = 0, uses_anonymous_args = 0
 498 0000 4F49     		ldr	r1, .L162
 499 0002 C307     		lsls	r3, r0, #31
 500 0004 10B5     		push	{r4, lr}
 501 0006 0880     		strh	r0, [r1, #0]	@ movhi
 502 0008 0CD5     		bpl	.L130
 503 000a 4E4A     		ldr	r2, .L162+4
 504 000c 0223     		movs	r3, #2
 505 000e 1371     		strb	r3, [r2, #4]
 506 0010 1488     		ldrh	r4, [r2, #0]
 507 0012 24F00403 		bic	r3, r4, #4
 508 0016 1C04     		lsls	r4, r3, #16
 509 0018 230C     		lsrs	r3, r4, #16
 510 001a 4B4C     		ldr	r4, .L162+8
 511 001c 1380     		strh	r3, [r2, #0]	@ movhi
 512 001e 0123     		movs	r3, #1
 513 0020 6386     		strh	r3, [r4, #50]	@ movhi
 514 0022 8B70     		strb	r3, [r1, #2]
 515              	.L130:
 516 0024 00F00201 		and	r1, r0, #2
 517 0028 8BB2     		uxth	r3, r1
 518 002a 73B1     		cbz	r3, .L131
 519 002c 454A     		ldr	r2, .L162+4
 520 002e 0321     		movs	r1, #3
 521 0030 1171     		strb	r1, [r2, #4]
 522 0032 1388     		ldrh	r3, [r2, #0]
 523 0034 23F00401 		bic	r1, r3, #4
 524 0038 0B04     		lsls	r3, r1, #16
 525 003a 190C     		lsrs	r1, r3, #16
 526 003c 424B     		ldr	r3, .L162+8
 527 003e 1180     		strh	r1, [r2, #0]	@ movhi
 528 0040 0222     		movs	r2, #2
 529 0042 5A86     		strh	r2, [r3, #50]	@ movhi
 530 0044 3E4A     		ldr	r2, .L162
 531 0046 0121     		movs	r1, #1
 532 0048 9170     		strb	r1, [r2, #2]
 533              	.L131:
 534 004a 00F00403 		and	r3, r0, #4
 535 004e 99B2     		uxth	r1, r3
 536 0050 69B1     		cbz	r1, .L132
 537 0052 3C4A     		ldr	r2, .L162+4
 538 0054 0421     		movs	r1, #4
 539 0056 1171     		strb	r1, [r2, #4]
 540 0058 1388     		ldrh	r3, [r2, #0]
 541 005a 23F00403 		bic	r3, r3, #4
 542 005e 1B04     		lsls	r3, r3, #16
 543 0060 1B0C     		lsrs	r3, r3, #16
 544 0062 1380     		strh	r3, [r2, #0]	@ movhi
 545 0064 384A     		ldr	r2, .L162+8
 546 0066 364B     		ldr	r3, .L162
 547 0068 5186     		strh	r1, [r2, #50]	@ movhi
 548 006a 0121     		movs	r1, #1
 549 006c 9970     		strb	r1, [r3, #2]
 550              	.L132:
 551 006e 00F00802 		and	r2, r0, #8
 552 0072 91B2     		uxth	r1, r2
 553 0074 71B1     		cbz	r1, .L133
 554 0076 334A     		ldr	r2, .L162+4
 555 0078 0523     		movs	r3, #5
 556 007a 1371     		strb	r3, [r2, #4]
 557 007c 1188     		ldrh	r1, [r2, #0]
 558 007e 21F00403 		bic	r3, r1, #4
 559 0082 1904     		lsls	r1, r3, #16
 560 0084 0B0C     		lsrs	r3, r1, #16
 561 0086 3049     		ldr	r1, .L162+8
 562 0088 1380     		strh	r3, [r2, #0]	@ movhi
 563 008a 0822     		movs	r2, #8
 564 008c 2C4B     		ldr	r3, .L162
 565 008e 4A86     		strh	r2, [r1, #50]	@ movhi
 566 0090 0122     		movs	r2, #1
 567 0092 9A70     		strb	r2, [r3, #2]
 568              	.L133:
 569 0094 00F01001 		and	r1, r0, #16
 570 0098 8AB2     		uxth	r2, r1
 571 009a 72B1     		cbz	r2, .L134
 572 009c 2949     		ldr	r1, .L162+4
 573 009e 0623     		movs	r3, #6
 574 00a0 CB70     		strb	r3, [r1, #3]
 575 00a2 0A88     		ldrh	r2, [r1, #0]
 576 00a4 22F00803 		bic	r3, r2, #8
 577 00a8 1A04     		lsls	r2, r3, #16
 578 00aa 130C     		lsrs	r3, r2, #16
 579 00ac 264A     		ldr	r2, .L162+8
 580 00ae 0B80     		strh	r3, [r1, #0]	@ movhi
 581 00b0 1021     		movs	r1, #16
 582 00b2 234B     		ldr	r3, .L162
 583 00b4 5186     		strh	r1, [r2, #50]	@ movhi
 584 00b6 0121     		movs	r1, #1
 585 00b8 D970     		strb	r1, [r3, #3]
 586              	.L134:
 587 00ba 00F02002 		and	r2, r0, #32
 588 00be 91B2     		uxth	r1, r2
 589 00c0 71B1     		cbz	r1, .L135
 590 00c2 204A     		ldr	r2, .L162+4
 591 00c4 0723     		movs	r3, #7
 592 00c6 D370     		strb	r3, [r2, #3]
 593 00c8 1188     		ldrh	r1, [r2, #0]
 594 00ca 21F00803 		bic	r3, r1, #8
 595 00ce 1904     		lsls	r1, r3, #16
 596 00d0 0B0C     		lsrs	r3, r1, #16
 597 00d2 1D49     		ldr	r1, .L162+8
 598 00d4 1380     		strh	r3, [r2, #0]	@ movhi
 599 00d6 2022     		movs	r2, #32
 600 00d8 194B     		ldr	r3, .L162
 601 00da 4A86     		strh	r2, [r1, #50]	@ movhi
 602 00dc 0122     		movs	r2, #1
 603 00de DA70     		strb	r2, [r3, #3]
 604              	.L135:
 605 00e0 00F04001 		and	r1, r0, #64
 606 00e4 8AB2     		uxth	r2, r1
 607 00e6 72B1     		cbz	r2, .L136
 608 00e8 1649     		ldr	r1, .L162+4
 609 00ea 0823     		movs	r3, #8
 610 00ec CB70     		strb	r3, [r1, #3]
 611 00ee 0A88     		ldrh	r2, [r1, #0]
 612 00f0 22F00803 		bic	r3, r2, #8
 613 00f4 1A04     		lsls	r2, r3, #16
 614 00f6 130C     		lsrs	r3, r2, #16
 615 00f8 134A     		ldr	r2, .L162+8
 616 00fa 0B80     		strh	r3, [r1, #0]	@ movhi
 617 00fc 4021     		movs	r1, #64
 618 00fe 104B     		ldr	r3, .L162
 619 0100 5186     		strh	r1, [r2, #50]	@ movhi
 620 0102 0121     		movs	r1, #1
 621 0104 D970     		strb	r1, [r3, #3]
 622              	.L136:
 623 0106 00F48070 		and	r0, r0, #256
 624 010a 82B2     		uxth	r2, r0
 625 010c AAB1     		cbz	r2, .L137
 626 010e 0D49     		ldr	r1, .L162+4
 627 0110 0923     		movs	r3, #9
 628 0112 8B71     		strb	r3, [r1, #6]
 629 0114 0888     		ldrh	r0, [r1, #0]
 630 0116 20F00402 		bic	r2, r0, #4
 631 011a 1304     		lsls	r3, r2, #16
 632 011c 180C     		lsrs	r0, r3, #16
 633 011e 0880     		strh	r0, [r1, #0]	@ movhi
 634 0120 0A88     		ldrh	r2, [r1, #0]
 635 0122 22F00803 		bic	r3, r2, #8
 636 0126 1804     		lsls	r0, r3, #16
 637 0128 020C     		lsrs	r2, r0, #16
 638 012a 0A80     		strh	r2, [r1, #0]	@ movhi
 639 012c 064B     		ldr	r3, .L162+8
 640 012e 044A     		ldr	r2, .L162
 641 0130 4FF48071 		mov	r1, #256
 642 0134 0120     		movs	r0, #1
 643 0136 5986     		strh	r1, [r3, #50]	@ movhi
 644 0138 9070     		strb	r0, [r2, #2]
 645              	.L137:
 646 013a 0120     		movs	r0, #1
 647 013c 10BD     		pop	{r4, pc}
 648              	.L163:
 649 013e 00BF     		.align	2
 650              	.L162:
 651 0140 00000000 		.word	SDMMC003_ISRContext
 652 0144 00000000 		.word	SDMMC003_Handle
 653 0148 00C00148 		.word	1208074240
 655              		.section	.text.SDMMC003_CheckPCMDFlag,"ax",%progbits
 656              		.align	1
 657              		.global	SDMMC003_CheckPCMDFlag
 658              		.thumb
 659              		.thumb_func
 661              	SDMMC003_CheckPCMDFlag:
 662              		@ args = 0, pretend = 0, frame = 0
 663              		@ frame_needed = 0, uses_anonymous_args = 0
 664              		@ link register save eliminated.
 665 0000 014B     		ldr	r3, .L165
 666 0002 0122     		movs	r2, #1
 667 0004 1A60     		str	r2, [r3, #0]
 668 0006 7047     		bx	lr
 669              	.L166:
 670              		.align	2
 671              	.L165:
 672 0008 00000000 		.word	SDMMC003_ReturnStatus
 674              		.section	.text.SDMMC003_lDelay,"ax",%progbits
 675              		.align	1
 676              		.global	SDMMC003_lDelay
 677              		.thumb
 678              		.thumb_func
 680              	SDMMC003_lDelay:
 681              		@ args = 0, pretend = 0, frame = 0
 682              		@ frame_needed = 0, uses_anonymous_args = 0
 683 0000 38B5     		push	{r3, r4, r5, lr}
 684 0002 0D4D     		ldr	r5, .L174
 685 0004 0D4A     		ldr	r2, .L174+4
 686 0006 0123     		movs	r3, #1
 687 0008 0021     		movs	r1, #0
 688 000a AB72     		strb	r3, [r5, #10]
 689 000c 0B46     		mov	r3, r1
 690 000e FFF7FEFF 		bl	SYSTM001_CreateTimer
 691 0012 0446     		mov	r4, r0
 692 0014 70B1     		cbz	r0, .L167
 693 0016 FFF7FEFF 		bl	SYSTM001_StartTimer
 694 001a 58B9     		cbnz	r0, .L167
 695              	.L172:
 696 001c A87A     		ldrb	r0, [r5, #10]	@ zero_extendqisi2
 697 001e 0028     		cmp	r0, #0
 698 0020 FCD1     		bne	.L172
 699 0022 2046     		mov	r0, r4
 700 0024 FFF7FEFF 		bl	SYSTM001_StopTimer
 701 0028 20B9     		cbnz	r0, .L167
 702 002a 2046     		mov	r0, r4
 703 002c FFF7FEFF 		bl	SYSTM001_DeleteTimer
 704 0030 0349     		ldr	r1, .L174+8
 705 0032 0860     		str	r0, [r1, #0]
 706              	.L167:
 707 0034 38BD     		pop	{r3, r4, r5, pc}
 708              	.L175:
 709 0036 00BF     		.align	2
 710              	.L174:
 711 0038 00000000 		.word	SDMMC003_Handle
 712 003c 00000000 		.word	Timer_CallBack
 713 0040 00000000 		.word	SDMMC003_ReturnStatus
 715              		.section	.text.SDMMC0_0_IRQHandler,"ax",%progbits
 716              		.align	1
 717              		.global	SDMMC0_0_IRQHandler
 718              		.thumb
 719              		.thumb_func
 721              	SDMMC0_0_IRQHandler:
 722              		@ args = 0, pretend = 0, frame = 0
 723              		@ frame_needed = 0, uses_anonymous_args = 0
 724 0000 0E4A     		ldr	r2, .L179
 725 0002 0F4B     		ldr	r3, .L179+4
 726 0004 118E     		ldrh	r1, [r2, #48]
 727 0006 88B2     		uxth	r0, r1
 728 0008 10B5     		push	{r4, lr}
 729 000a 1880     		strh	r0, [r3, #0]	@ movhi
 730 000c 548E     		ldrh	r4, [r2, #50]
 731 000e 0D4A     		ldr	r2, .L179+8
 732 0010 A1B2     		uxth	r1, r4
 733 0012 1180     		strh	r1, [r2, #0]	@ movhi
 734 0014 1888     		ldrh	r0, [r3, #0]
 735 0016 04B2     		sxth	r4, r0
 736 0018 002C     		cmp	r4, #0
 737 001a 1C46     		mov	r4, r3
 738 001c 03DA     		bge	.L177
 739 001e 1388     		ldrh	r3, [r2, #0]
 740 0020 98B2     		uxth	r0, r3
 741 0022 FFF7FEFF 		bl	SDMMC003_lErrorInterruptHandler
 742              	.L177:
 743 0026 2188     		ldrh	r1, [r4, #0]
 744 0028 4B04     		lsls	r3, r1, #17
 745 002a 06D0     		beq	.L176
 746 002c 044A     		ldr	r2, .L179+4
 747 002e 1088     		ldrh	r0, [r2, #0]
 748 0030 80B2     		uxth	r0, r0
 749 0032 BDE81040 		pop	{r4, lr}
 750 0036 FFF7FEBF 		b	SDMMC003_lNormalInterruptHandler
 751              	.L176:
 752 003a 10BD     		pop	{r4, pc}
 753              	.L180:
 754              		.align	2
 755              	.L179:
 756 003c 00C00148 		.word	1208074240
 757 0040 00000000 		.word	NormalIntStatus
 758 0044 00000000 		.word	ErrorIntStatus
 760              		.section	.text.SDMMC003_lStartTimer,"ax",%progbits
 761              		.align	1
 762              		.global	SDMMC003_lStartTimer
 763              		.thumb
 764              		.thumb_func
 766              	SDMMC003_lStartTimer:
 767              		@ args = 0, pretend = 0, frame = 0
 768              		@ frame_needed = 0, uses_anonymous_args = 0
 769 0000 0A4B     		ldr	r3, .L189
 770 0002 0122     		movs	r2, #1
 771 0004 0021     		movs	r1, #0
 772 0006 10B5     		push	{r4, lr}
 773 0008 9A72     		strb	r2, [r3, #10]
 774 000a 094A     		ldr	r2, .L189+4
 775 000c 0B46     		mov	r3, r1
 776 000e FFF7FEFF 		bl	SYSTM001_CreateTimer
 777 0012 0446     		mov	r4, r0
 778 0014 40B1     		cbz	r0, .L182
 779 0016 FFF7FEFF 		bl	SYSTM001_StartTimer
 780 001a 28B1     		cbz	r0, .L182
 781 001c 2046     		mov	r0, r4
 782 001e FFF7FEFF 		bl	SYSTM001_DeleteTimer
 783 0022 0449     		ldr	r1, .L189+8
 784 0024 0024     		movs	r4, #0
 785 0026 0860     		str	r0, [r1, #0]
 786              	.L182:
 787 0028 2046     		mov	r0, r4
 788 002a 10BD     		pop	{r4, pc}
 789              	.L190:
 790              		.align	2
 791              	.L189:
 792 002c 00000000 		.word	SDMMC003_Handle
 793 0030 00000000 		.word	Timer_CallBack
 794 0034 00000000 		.word	SDMMC003_ReturnStatus
 796              		.section	.text.SDMMC003_lStopTimer,"ax",%progbits
 797              		.align	1
 798              		.global	SDMMC003_lStopTimer
 799              		.thumb
 800              		.thumb_func
 802              	SDMMC003_lStopTimer:
 803              		@ args = 0, pretend = 0, frame = 0
 804              		@ frame_needed = 0, uses_anonymous_args = 0
 805 0000 10B5     		push	{r4, lr}
 806 0002 0446     		mov	r4, r0
 807 0004 FFF7FEFF 		bl	SYSTM001_StopTimer
 808 0008 20B9     		cbnz	r0, .L191
 809 000a 2046     		mov	r0, r4
 810 000c FFF7FEFF 		bl	SYSTM001_DeleteTimer
 811 0010 014B     		ldr	r3, .L193
 812 0012 1860     		str	r0, [r3, #0]
 813              	.L191:
 814 0014 10BD     		pop	{r4, pc}
 815              	.L194:
 816 0016 00BF     		.align	2
 817              	.L193:
 818 0018 00000000 		.word	SDMMC003_ReturnStatus
 820              		.section	.text.SDMMC003_lCommandDelay,"ax",%progbits
 821              		.align	1
 822              		.global	SDMMC003_lCommandDelay
 823              		.thumb
 824              		.thumb_func
 826              	SDMMC003_lCommandDelay:
 827              		@ args = 0, pretend = 0, frame = 0
 828              		@ frame_needed = 0, uses_anonymous_args = 0
 829 0000 114B     		ldr	r3, .L207
 830 0002 10B5     		push	{r4, lr}
 831 0004 0122     		movs	r2, #1
 832 0006 9A72     		strb	r2, [r3, #10]
 833 0008 FFF7FEFF 		bl	SDMMC003_lStartTimer
 834 000c 70B1     		cbz	r0, .L198
 835              	.L204:
 836 000e 0F49     		ldr	r1, .L207+4
 837 0010 0C8E     		ldrh	r4, [r1, #48]
 838 0012 22B2     		sxth	r2, r4
 839 0014 002A     		cmp	r2, #0
 840 0016 0DDB     		blt	.L201
 841 0018 0B4B     		ldr	r3, .L207
 842 001a 997A     		ldrb	r1, [r3, #10]	@ zero_extendqisi2
 843 001c 41B1     		cbz	r1, .L200
 844 001e 0C4A     		ldr	r2, .L207+8
 845 0020 9478     		ldrb	r4, [r2, #2]	@ zero_extendqisi2
 846 0022 3CB9     		cbnz	r4, .L201
 847 0024 D378     		ldrb	r3, [r2, #3]	@ zero_extendqisi2
 848 0026 002B     		cmp	r3, #0
 849 0028 F1D0     		beq	.L204
 850 002a 04E0     		b	.L196
 851              	.L198:
 852 002c 2F24     		movs	r4, #47
 853 002e 02E0     		b	.L196
 854              	.L200:
 855 0030 2E24     		movs	r4, #46
 856 0032 00E0     		b	.L196
 857              	.L201:
 858 0034 0024     		movs	r4, #0
 859              	.L196:
 860 0036 FFF7FEFF 		bl	SDMMC003_lStopTimer
 861 003a 0548     		ldr	r0, .L207+8
 862 003c 0021     		movs	r1, #0
 863 003e 8170     		strb	r1, [r0, #2]
 864 0040 C170     		strb	r1, [r0, #3]
 865 0042 2046     		mov	r0, r4
 866 0044 10BD     		pop	{r4, pc}
 867              	.L208:
 868 0046 00BF     		.align	2
 869              	.L207:
 870 0048 00000000 		.word	SDMMC003_Handle
 871 004c 00C00148 		.word	1208074240
 872 0050 00000000 		.word	SDMMC003_ISRContext
 874              		.section	.text.SDMMC003_lTransferDelay,"ax",%progbits
 875              		.align	1
 876              		.global	SDMMC003_lTransferDelay
 877              		.thumb
 878              		.thumb_func
 880              	SDMMC003_lTransferDelay:
 881              		@ args = 0, pretend = 0, frame = 0
 882              		@ frame_needed = 0, uses_anonymous_args = 0
 883 0000 0E4B     		ldr	r3, .L224
 884 0002 10B5     		push	{r4, lr}
 885 0004 0122     		movs	r2, #1
 886 0006 9A72     		strb	r2, [r3, #10]
 887 0008 FFF7FEFF 		bl	SDMMC003_lStartTimer
 888 000c 70B1     		cbz	r0, .L214
 889              	.L220:
 890 000e 0B49     		ldr	r1, .L224
 891 0010 0B4B     		ldr	r3, .L224+4
 892 0012 8C7A     		ldrb	r4, [r1, #10]	@ zero_extendqisi2
 893 0014 24B1     		cbz	r4, .L215
 894 0016 1A79     		ldrb	r2, [r3, #4]	@ zero_extendqisi2
 895 0018 002A     		cmp	r2, #0
 896 001a F8D0     		beq	.L220
 897 001c 0024     		movs	r4, #0
 898 001e 00E0     		b	.L211
 899              	.L215:
 900 0020 2E24     		movs	r4, #46
 901              	.L211:
 902 0022 0021     		movs	r1, #0
 903 0024 1971     		strb	r1, [r3, #4]
 904 0026 FFF7FEFF 		bl	SDMMC003_lStopTimer
 905 002a 00E0     		b	.L210
 906              	.L214:
 907 002c 2F24     		movs	r4, #47
 908              	.L210:
 909 002e 0348     		ldr	r0, .L224
 910 0030 4379     		ldrb	r3, [r0, #5]	@ zero_extendqisi2
 911 0032 1F2B     		cmp	r3, #31
 912 0034 18BF     		it	ne
 913 0036 C478     		ldrbne	r4, [r0, #3]	@ zero_extendqisi2
 914 0038 2046     		mov	r0, r4
 915 003a 10BD     		pop	{r4, pc}
 916              	.L225:
 917              		.align	2
 918              	.L224:
 919 003c 00000000 		.word	SDMMC003_Handle
 920 0040 00000000 		.word	SDMMC003_ISRContext
 922              		.section	.text.SDMMC003_lReadResponse,"ax",%progbits
 923              		.align	1
 924              		.global	SDMMC003_lReadResponse
 925              		.thumb
 926              		.thumb_func
 928              	SDMMC003_lReadResponse:
 929              		@ args = 0, pretend = 0, frame = 8
 930              		@ frame_needed = 0, uses_anonymous_args = 0
 931 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 932 0002 0023     		movs	r3, #0
 933 0004 0093     		str	r3, [sp, #0]
 934 0006 0193     		str	r3, [sp, #4]
 935 0008 0746     		mov	r7, r0
 936 000a 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 937 000c 10F03F00 		ands	r0, r0, #63
 938 0010 0D46     		mov	r5, r1
 939 0012 1446     		mov	r4, r2
 940 0014 41D0     		beq	.L227
 941 0016 0F28     		cmp	r0, #15
 942 0018 3CD0     		beq	.L236
 943 001a 204E     		ldr	r6, .L239
 944 001c 3069     		ldr	r0, [r6, #16]
 945 001e 0090     		str	r0, [sp, #0]
 946 0020 3988     		ldrh	r1, [r7, #0]
 947 0022 C1F30521 		ubfx	r1, r1, #8, #6
 948 0026 FFF7FEFF 		bl	SDMMC003_lGetCardLockState
 949 002a 062D     		cmp	r5, #6
 950 002c 34D8     		bhi	.L237
 951 002e DFE805F0 		tbb	[pc, r5]
 952              	.L234:
 953 0032 21       		.byte	(.L238-.L234)/2
 954 0033 04       		.byte	(.L229-.L234)/2
 955 0034 0C       		.byte	(.L230-.L234)/2
 956 0035 19       		.byte	(.L231-.L234)/2
 957 0036 23       		.byte	(.L232-.L234)/2
 958 0037 26       		.byte	(.L233-.L234)/2
 959 0038 23       		.byte	(.L232-.L234)/2
 960 0039 00       		.align	1
 961              	.L229:
 962 003a 02A8     		add	r0, sp, #8
 963 003c 50F8083D 		ldr	r3, [r0, #-8]!
 964 0040 6846     		mov	r0, sp
 965 0042 2360     		str	r3, [r4, #0]
 966 0044 FFF7FEFF 		bl	SDMMC003_lCheckErrorInResponse
 967 0048 27E0     		b	.L227
 968              	.L230:
 969 004a 02AA     		add	r2, sp, #8
 970 004c 6846     		mov	r0, sp
 971 004e 52F8081D 		ldr	r1, [r2, #-8]!
 972 0052 2160     		str	r1, [r4, #0]
 973 0054 FFF7FEFF 		bl	SDMMC003_lCheckErrorInResponse
 974 0058 F8B9     		cbnz	r0, .L227
 975 005a 4FF47A70 		mov	r0, #1000
 976 005e FFF7FEFF 		bl	SDMMC003_lTransferDelay
 977 0062 1AE0     		b	.L227
 978              	.L231:
 979 0064 009A     		ldr	r2, [sp, #0]
 980 0066 2260     		str	r2, [r4, #0]
 981 0068 7169     		ldr	r1, [r6, #20]
 982 006a 6160     		str	r1, [r4, #4]
 983 006c B069     		ldr	r0, [r6, #24]
 984 006e A060     		str	r0, [r4, #8]
 985 0070 F369     		ldr	r3, [r6, #28]
 986 0072 E360     		str	r3, [r4, #12]
 987              	.L238:
 988 0074 0020     		movs	r0, #0
 989 0076 10E0     		b	.L227
 990              	.L232:
 991 0078 0098     		ldr	r0, [sp, #0]
 992 007a 2060     		str	r0, [r4, #0]
 993 007c FAE7     		b	.L238
 994              	.L233:
 995 007e BDF80020 		ldrh	r2, [sp, #0]
 996 0082 02A8     		add	r0, sp, #8
 997 0084 40F8042D 		str	r2, [r0, #-4]!
 998 0088 FFF7FEFF 		bl	SDMMC003_lCheckErrorInResponse
 999 008c BDF80210 		ldrh	r1, [sp, #2]
 1000 0090 2160     		str	r1, [r4, #0]
 1001 0092 02E0     		b	.L227
 1002              	.L236:
 1003 0094 1846     		mov	r0, r3
 1004 0096 00E0     		b	.L227
 1005              	.L237:
 1006 0098 0120     		movs	r0, #1
 1007              	.L227:
 1008 009a FEBD     		pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 1009              	.L240:
 1010              		.align	2
 1011              	.L239:
 1012 009c 00C00148 		.word	1208074240
 1014              		.section	.text.SDMMC003_lReset,"ax",%progbits
 1015              		.align	1
 1016              		.global	SDMMC003_lReset
 1017              		.thumb
 1018              		.thumb_func
 1020              	SDMMC003_lReset:
 1021              		@ args = 0, pretend = 0, frame = 0
 1022              		@ frame_needed = 0, uses_anonymous_args = 0
 1023 0000 38B5     		push	{r3, r4, r5, lr}
 1024 0002 0E4B     		ldr	r3, .L249
 1025 0004 93F82F20 		ldrb	r2, [r3, #47]	@ zero_extendqisi2
 1026 0008 0546     		mov	r5, r0
 1027 000a 1043     		orrs	r0, r0, r2
 1028 000c 83F82F00 		strb	r0, [r3, #47]
 1029 0010 4FF4FA70 		mov	r0, #500
 1030 0014 FFF7FEFF 		bl	SDMMC003_lStartTimer
 1031 0018 68B1     		cbz	r0, .L245
 1032              	.L247:
 1033 001a 0949     		ldr	r1, .L249+4
 1034 001c 8C7A     		ldrb	r4, [r1, #10]	@ zero_extendqisi2
 1035 001e 34B1     		cbz	r4, .L246
 1036 0020 064B     		ldr	r3, .L249
 1037 0022 93F82F20 		ldrb	r2, [r3, #47]	@ zero_extendqisi2
 1038 0026 15EA0204 		ands	r4, r5, r2
 1039 002a F6D1     		bne	.L247
 1040 002c 00E0     		b	.L243
 1041              	.L246:
 1042 002e 2E24     		movs	r4, #46
 1043              	.L243:
 1044 0030 FFF7FEFF 		bl	SDMMC003_lStopTimer
 1045 0034 00E0     		b	.L242
 1046              	.L245:
 1047 0036 2F24     		movs	r4, #47
 1048              	.L242:
 1049 0038 2046     		mov	r0, r4
 1050 003a 38BD     		pop	{r3, r4, r5, pc}
 1051              	.L250:
 1052              		.align	2
 1053              	.L249:
 1054 003c 00C00148 		.word	1208074240
 1055 0040 00000000 		.word	SDMMC003_Handle
 1057              		.section	.text.SDMMC003_lErrorInterruptRecovery,"ax",%progbits
 1058              		.align	1
 1059              		.global	SDMMC003_lErrorInterruptRecovery
 1060              		.thumb
 1061              		.thumb_func
 1063              	SDMMC003_lErrorInterruptRecovery:
 1064              		@ args = 0, pretend = 0, frame = 0
 1065              		@ frame_needed = 0, uses_anonymous_args = 0
 1066 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1067 0002 0446     		mov	r4, r0
 1068 0004 214B     		ldr	r3, .L268
 1069 0006 0022     		movs	r2, #0
 1070 0008 2007     		lsls	r0, r4, #28
 1071 000a 0F46     		mov	r7, r1
 1072 000c 5A87     		strh	r2, [r3, #58]	@ movhi
 1073 000e 02D1     		bne	.L252
 1074 0010 586A     		ldr	r0, [r3, #36]
 1075 0012 C107     		lsls	r1, r0, #31
 1076 0014 02D5     		bpl	.L253
 1077              	.L252:
 1078 0016 0220     		movs	r0, #2
 1079 0018 FFF7FEFF 		bl	SDMMC003_lReset
 1080              	.L253:
 1081 001c 14F0700F 		tst	r4, #112
 1082 0020 1A4E     		ldr	r6, .L268
 1083 0022 02D1     		bne	.L254
 1084 0024 716A     		ldr	r1, [r6, #36]
 1085 0026 8A07     		lsls	r2, r1, #30
 1086 0028 02D5     		bpl	.L255
 1087              	.L254:
 1088 002a 0420     		movs	r0, #4
 1089 002c FFF7FEFF 		bl	SDMMC003_lReset
 1090              	.L255:
 1091 0030 4FF6FF75 		movw	r5, #65535
 1092 0034 012F     		cmp	r7, #1
 1093 0036 154C     		ldr	r4, .L268
 1094 0038 7586     		strh	r5, [r6, #50]	@ movhi
 1095 003a 15D1     		bne	.L256
 1096 003c 144A     		ldr	r2, .L268+4
 1097 003e 508A     		ldrh	r0, [r2, #18]
 1098 0040 0023     		movs	r3, #0
 1099 0042 A360     		str	r3, [r4, #8]
 1100 0044 E081     		strh	r0, [r4, #14]	@ movhi
 1101 0046 4FF47A70 		mov	r0, #1000
 1102 004a FFF7FEFF 		bl	SDMMC003_lCommandDelay
 1103 004e 98B9     		cbnz	r0, .L257
 1104 0050 618E     		ldrh	r1, [r4, #50]
 1105 0052 8BB2     		uxth	r3, r1
 1106 0054 43B1     		cbz	r3, .L256
 1107 0056 6586     		strh	r5, [r4, #50]	@ movhi
 1108 0058 0620     		movs	r0, #6
 1109 005a 2586     		strh	r5, [r4, #48]	@ movhi
 1110 005c FFF7FEFF 		bl	SDMMC003_lReset
 1111 0060 0C4B     		ldr	r3, .L268+8
 1112 0062 1860     		str	r0, [r3, #0]
 1113 0064 2520     		movs	r0, #37
 1114 0066 07E0     		b	.L257
 1115              	.L256:
 1116 0068 084A     		ldr	r2, .L268
 1117 006a 506A     		ldr	r0, [r2, #36]
 1118 006c C0F30351 		ubfx	r1, r0, #20, #4
 1119 0070 0F29     		cmp	r1, #15
 1120 0072 14BF     		ite	ne
 1121 0074 2520     		movne	r0, #37
 1122 0076 2420     		moveq	r0, #36
 1123              	.L257:
 1124 0078 0449     		ldr	r1, .L268
 1125 007a 4A8F     		ldrh	r2, [r1, #58]
 1126 007c 62F4F853 		orn	r3, r2, #7936
 1127 0080 9AB2     		uxth	r2, r3
 1128 0082 054B     		ldr	r3, .L268+12
 1129 0084 4A87     		strh	r2, [r1, #58]	@ movhi
 1130 0086 C1B2     		uxtb	r1, r0
 1131 0088 D971     		strb	r1, [r3, #7]
 1132 008a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1133              	.L269:
 1134              		.align	2
 1135              	.L268:
 1136 008c 00C00148 		.word	1208074240
 1137 0090 00000000 		.word	.LANCHOR0
 1138 0094 00000000 		.word	SDMMC003_ReturnStatus
 1139 0098 00000000 		.word	SDMMC003_Handle
 1141              		.section	.text.SDMMC003_lDataTransfer,"ax",%progbits
 1142              		.align	1
 1143              		.global	SDMMC003_lDataTransfer
 1144              		.thumb
 1145              		.thumb_func
 1147              	SDMMC003_lDataTransfer:
 1148              		@ args = 0, pretend = 0, frame = 0
 1149              		@ frame_needed = 0, uses_anonymous_args = 0
 1150 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1151 0002 0746     		mov	r7, r0
 1152 0004 4FF47A70 		mov	r0, #1000
 1153 0008 0C46     		mov	r4, r1
 1154 000a 1646     		mov	r6, r2
 1155 000c FFF7FEFF 		bl	SDMMC003_lStartTimer
 1156 0010 0028     		cmp	r0, #0
 1157 0012 2ED0     		beq	.L279
 1158              	.L284:
 1159 0014 184B     		ldr	r3, .L289
 1160 0016 997A     		ldrb	r1, [r3, #10]	@ zero_extendqisi2
 1161 0018 19B1     		cbz	r1, .L272
 1162 001a 184A     		ldr	r2, .L289+4
 1163 001c D578     		ldrb	r5, [r2, #3]	@ zero_extendqisi2
 1164 001e 002D     		cmp	r5, #0
 1165 0020 F8D0     		beq	.L284
 1166              	.L272:
 1167 0022 FFF7FEFF 		bl	SDMMC003_lStopTimer
 1168 0026 1548     		ldr	r0, .L289+4
 1169 0028 134B     		ldr	r3, .L289
 1170 002a 0025     		movs	r5, #0
 1171 002c C570     		strb	r5, [r0, #3]
 1172 002e D978     		ldrb	r1, [r3, #3]	@ zero_extendqisi2
 1173 0030 1E29     		cmp	r1, #30
 1174 0032 15D1     		bne	.L274
 1175 0034 381D     		adds	r0, r7, #4
 1176 0036 2B46     		mov	r3, r5
 1177              	.L275:
 1178 0038 B342     		cmp	r3, r6
 1179 003a 0FD0     		beq	.L288
 1180              	.L278:
 1181 003c 012C     		cmp	r4, #1
 1182 003e 04D1     		bne	.L276
 1183 0040 0F4A     		ldr	r2, .L289+8
 1184 0042 116A     		ldr	r1, [r2, #32]
 1185 0044 40F8041C 		str	r1, [r0, #-4]
 1186 0048 05E0     		b	.L277
 1187              	.L276:
 1188 004a 022C     		cmp	r4, #2
 1189 004c 03D1     		bne	.L277
 1190 004e 50F8042C 		ldr	r2, [r0, #-4]
 1191 0052 0B49     		ldr	r1, .L289+8
 1192 0054 0A62     		str	r2, [r1, #32]
 1193              	.L277:
 1194 0056 0133     		adds	r3, r3, #1
 1195 0058 0430     		adds	r0, r0, #4
 1196 005a EDE7     		b	.L275
 1197              	.L288:
 1198 005c 0020     		movs	r0, #0
 1199 005e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1200              	.L274:
 1201 0060 0122     		movs	r2, #1
 1202 0062 DA72     		strb	r2, [r3, #11]
 1203 0064 0088     		ldrh	r0, [r0, #0]
 1204 0066 D97A     		ldrb	r1, [r3, #11]	@ zero_extendqisi2
 1205 0068 80B2     		uxth	r0, r0
 1206 006a BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 1207 006e FFF7FEBF 		b	SDMMC003_lErrorInterruptRecovery
 1208              	.L279:
 1209 0072 2F20     		movs	r0, #47
 1210 0074 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1211              	.L290:
 1212 0076 00BF     		.align	2
 1213              	.L289:
 1214 0078 00000000 		.word	SDMMC003_Handle
 1215 007c 00000000 		.word	SDMMC003_ISRContext
 1216 0080 00C00148 		.word	1208074240
 1218              		.section	.text.SDMMC003_lSendCommand,"ax",%progbits
 1219              		.align	1
 1220              		.global	SDMMC003_lSendCommand
 1221              		.thumb
 1222              		.thumb_func
 1224              	SDMMC003_lSendCommand:
 1225              		@ args = 0, pretend = 0, frame = 0
 1226              		@ frame_needed = 0, uses_anonymous_args = 0
 1227 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 1228 0004 254D     		ldr	r5, .L311
 1229 0006 0126     		movs	r6, #1
 1230 0008 1F46     		mov	r7, r3
 1231 000a 0023     		movs	r3, #0
 1232 000c EB72     		strb	r3, [r5, #11]
 1233 000e 8946     		mov	r9, r1
 1234 0010 2E71     		strb	r6, [r5, #4]
 1235 0012 0446     		mov	r4, r0
 1236 0014 9046     		mov	r8, r2
 1237 0016 EE70     		strb	r6, [r5, #3]
 1238 0018 FFF7FEFF 		bl	SDMMC003_lCheckDatCmdline
 1239 001c A0F11A01 		sub	r1, r0, #26
 1240 0020 B142     		cmp	r1, r6
 1241 0022 39D9     		bls	.L292
 1242 0024 1E48     		ldr	r0, .L311+4
 1243 0026 2288     		ldrh	r2, [r4, #0]
 1244 0028 C0F80890 		str	r9, [r0, #8]
 1245 002c C281     		strh	r2, [r0, #14]	@ movhi
 1246 002e 4FF47A70 		mov	r0, #1000
 1247 0032 FFF7FEFF 		bl	SDMMC003_lStartTimer
 1248 0036 0028     		cmp	r0, #0
 1249 0038 2DD0     		beq	.L299
 1250              	.L306:
 1251 003a 184B     		ldr	r3, .L311
 1252 003c 997A     		ldrb	r1, [r3, #10]	@ zero_extendqisi2
 1253 003e 194B     		ldr	r3, .L311+8
 1254 0040 11B1     		cbz	r1, .L293
 1255 0042 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 1256 0044 002A     		cmp	r2, #0
 1257 0046 F8D0     		beq	.L306
 1258              	.L293:
 1259 0048 0021     		movs	r1, #0
 1260 004a 9970     		strb	r1, [r3, #2]
 1261 004c FFF7FEFF 		bl	SDMMC003_lStopTimer
 1262 0050 1248     		ldr	r0, .L311
 1263 0052 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 1264 0054 1C2B     		cmp	r3, #28
 1265 0056 06D1     		bne	.L295
 1266 0058 2046     		mov	r0, r4
 1267 005a 4146     		mov	r1, r8
 1268 005c 3A46     		mov	r2, r7
 1269 005e BDE8F843 		pop	{r3, r4, r5, r6, r7, r8, r9, lr}
 1270 0062 FFF7FEBF 		b	SDMMC003_lReadResponse
 1271              	.L295:
 1272 0066 6278     		ldrb	r2, [r4, #1]	@ zero_extendqisi2
 1273 0068 02F03F01 		and	r1, r2, #63
 1274 006c 0829     		cmp	r1, #8
 1275 006e 02D1     		bne	.L296
 1276 0070 0079     		ldrb	r0, [r0, #4]	@ zero_extendqisi2
 1277 0072 0228     		cmp	r0, #2
 1278 0074 10D0     		beq	.L292
 1279              	.L296:
 1280 0076 2078     		ldrb	r0, [r4, #0]	@ zero_extendqisi2
 1281 0078 0849     		ldr	r1, .L311
 1282 007a 00F02003 		and	r3, r0, #32
 1283 007e DAB2     		uxtb	r2, r3
 1284 0080 0AB1     		cbz	r2, .L298
 1285 0082 0120     		movs	r0, #1
 1286 0084 C872     		strb	r0, [r1, #11]
 1287              	.L298:
 1288 0086 074B     		ldr	r3, .L311+8
 1289 0088 1A88     		ldrh	r2, [r3, #0]
 1290 008a C97A     		ldrb	r1, [r1, #11]	@ zero_extendqisi2
 1291 008c 90B2     		uxth	r0, r2
 1292 008e BDE8F843 		pop	{r3, r4, r5, r6, r7, r8, r9, lr}
 1293 0092 FFF7FEBF 		b	SDMMC003_lErrorInterruptRecovery
 1294              	.L299:
 1295 0096 2F20     		movs	r0, #47
 1296              	.L292:
 1297 0098 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1298              	.L312:
 1299              		.align	2
 1300              	.L311:
 1301 009c 00000000 		.word	SDMMC003_Handle
 1302 00a0 00C00148 		.word	1208074240
 1303 00a4 00000000 		.word	SDMMC003_ISRContext
 1305              		.section	.text.SDMMC003_lAcmdErrorRecovery,"ax",%progbits
 1306              		.align	1
 1307              		.global	SDMMC003_lAcmdErrorRecovery
 1308              		.thumb
 1309              		.thumb_func
 1311              	SDMMC003_lAcmdErrorRecovery:
 1312              		@ args = 0, pretend = 0, frame = 8
 1313              		@ frame_needed = 0, uses_anonymous_args = 0
 1314 0000 07B5     		push	{r0, r1, r2, lr}
 1315 0002 154B     		ldr	r3, .L334
 1316 0004 988F     		ldrh	r0, [r3, #60]
 1317 0006 0021     		movs	r1, #0
 1318 0008 C207     		lsls	r2, r0, #31
 1319 000a 0191     		str	r1, [sp, #4]
 1320 000c 10D5     		bpl	.L314
 1321 000e 134A     		ldr	r2, .L334+4
 1322 0010 D379     		ldrb	r3, [r2, #7]	@ zero_extendqisi2
 1323 0012 242B     		cmp	r3, #36
 1324 0014 1ED1     		bne	.L313
 1325 0016 1248     		ldr	r0, .L334+8
 1326 0018 0122     		movs	r2, #1
 1327 001a 01AB     		add	r3, sp, #4
 1328 001c FFF7FEFF 		bl	SDMMC003_lSendCommand
 1329 0020 C0B1     		cbz	r0, .L313
 1330              	.L333:
 1331 0022 2528     		cmp	r0, #37
 1332 0024 16D0     		beq	.L313
 1333 0026 0420     		movs	r0, #4
 1334 0028 FFF7FEFF 		bl	SDMMC003_lReset
 1335 002c 58B1     		cbz	r0, .L332
 1336 002e 11E0     		b	.L313
 1337              	.L314:
 1338 0030 0220     		movs	r0, #2
 1339 0032 FFF7FEFF 		bl	SDMMC003_lReset
 1340 0036 0146     		mov	r1, r0
 1341 0038 60B9     		cbnz	r0, .L313
 1342 003a 0122     		movs	r2, #1
 1343 003c 01AB     		add	r3, sp, #4
 1344 003e 0848     		ldr	r0, .L334+8
 1345 0040 FFF7FEFF 		bl	SDMMC003_lSendCommand
 1346 0044 EDE7     		b	.L333
 1347              	.L332:
 1348 0046 0449     		ldr	r1, .L334
 1349 0048 888F     		ldrh	r0, [r1, #60]
 1350 004a 0306     		lsls	r3, r0, #24
 1351 004c 02D4     		bmi	.L313
 1352 004e 054B     		ldr	r3, .L334+12
 1353 0050 0122     		movs	r2, #1
 1354 0052 1A60     		str	r2, [r3, #0]
 1355              	.L313:
 1356 0054 0EBD     		pop	{r1, r2, r3, pc}
 1357              	.L335:
 1358 0056 00BF     		.align	2
 1359              	.L334:
 1360 0058 00C00148 		.word	1208074240
 1361 005c 00000000 		.word	SDMMC003_Handle
 1362 0060 12000000 		.word	.LANCHOR0+18
 1363 0064 00000000 		.word	SDMMC003_ReturnStatus
 1365              		.section	.text.SDMMC003_lSwitchToTransferState,"ax",%progbits
 1366              		.align	1
 1367              		.global	SDMMC003_lSwitchToTransferState
 1368              		.thumb
 1369              		.thumb_func
 1371              	SDMMC003_lSwitchToTransferState:
 1372              		@ args = 0, pretend = 0, frame = 8
 1373              		@ frame_needed = 0, uses_anonymous_args = 0
 1374 0000 37B5     		push	{r0, r1, r2, r4, r5, lr}
 1375 0002 0D48     		ldr	r0, .L341
 1376 0004 02AC     		add	r4, sp, #8
 1377 0006 0023     		movs	r3, #0
 1378 0008 858D     		ldrh	r5, [r0, #44]
 1379 000a 44F8043D 		str	r3, [r4, #-4]!
 1380 000e 2D04     		lsls	r5, r5, #16
 1381 0010 0A48     		ldr	r0, .L341+4
 1382 0012 2946     		mov	r1, r5
 1383 0014 0122     		movs	r2, #1
 1384 0016 2346     		mov	r3, r4
 1385 0018 FFF7FEFF 		bl	SDMMC003_lSendCommand
 1386 001c 58B9     		cbnz	r0, .L337
 1387 001e 0199     		ldr	r1, [sp, #4]
 1388 0020 01F4E852 		and	r2, r1, #7424
 1389 0024 530A     		lsrs	r3, r2, #9
 1390 0026 042B     		cmp	r3, #4
 1391 0028 05D0     		beq	.L337
 1392 002a 0548     		ldr	r0, .L341+8
 1393 002c 2946     		mov	r1, r5
 1394 002e 0222     		movs	r2, #2
 1395 0030 2346     		mov	r3, r4
 1396 0032 FFF7FEFF 		bl	SDMMC003_lSendCommand
 1397              	.L337:
 1398 0036 3EBD     		pop	{r1, r2, r3, r4, r5, pc}
 1399              	.L342:
 1400              		.align	2
 1401              	.L341:
 1402 0038 00000000 		.word	SDMMC003_CardInfo
 1403 003c 14000000 		.word	.LANCHOR0+20
 1404 0040 0A000000 		.word	.LANCHOR0+10
 1406              		.section	.text.SDMMC003_lSwitchBusWidth,"ax",%progbits
 1407              		.align	1
 1408              		.global	SDMMC003_lSwitchBusWidth
 1409              		.thumb
 1410              		.thumb_func
 1412              	SDMMC003_lSwitchBusWidth:
 1413              		@ args = 0, pretend = 0, frame = 8
 1414              		@ frame_needed = 0, uses_anonymous_args = 0
 1415 0000 13B5     		push	{r0, r1, r4, lr}
 1416 0002 0023     		movs	r3, #0
 1417 0004 0193     		str	r3, [sp, #4]
 1418 0006 FFF7FEFF 		bl	SDMMC003_lSwitchToTransferState
 1419 000a 10BB     		cbnz	r0, .L344
 1420 000c 114C     		ldr	r4, .L348
 1421 000e 218F     		ldrh	r1, [r4, #56]
 1422 0010 21F04002 		bic	r2, r1, #64
 1423 0014 1304     		lsls	r3, r2, #16
 1424 0016 190C     		lsrs	r1, r3, #16
 1425 0018 0F4B     		ldr	r3, .L348+4
 1426 001a 2187     		strh	r1, [r4, #56]	@ movhi
 1427 001c 93F82520 		ldrb	r2, [r3, #37]	@ zero_extendqisi2
 1428 0020 02F00401 		and	r1, r2, #4
 1429 0024 CAB2     		uxtb	r2, r1
 1430 0026 A2B1     		cbz	r2, .L344
 1431 0028 9B8D     		ldrh	r3, [r3, #44]
 1432 002a 0C48     		ldr	r0, .L348+8
 1433 002c 1904     		lsls	r1, r3, #16
 1434 002e 0122     		movs	r2, #1
 1435 0030 01AB     		add	r3, sp, #4
 1436 0032 FFF7FEFF 		bl	SDMMC003_lSendCommand
 1437 0036 60B9     		cbnz	r0, .L344
 1438 0038 0948     		ldr	r0, .L348+12
 1439 003a 0221     		movs	r1, #2
 1440 003c 0122     		movs	r2, #1
 1441 003e 01AB     		add	r3, sp, #4
 1442 0040 FFF7FEFF 		bl	SDMMC003_lSendCommand
 1443 0044 28B9     		cbnz	r0, .L344
 1444 0046 94F82810 		ldrb	r1, [r4, #40]	@ zero_extendqisi2
 1445 004a 41F00202 		orr	r2, r1, #2
 1446 004e 84F82820 		strb	r2, [r4, #40]
 1447              	.L344:
 1448 0052 1CBD     		pop	{r2, r3, r4, pc}
 1449              	.L349:
 1450              		.align	2
 1451              	.L348:
 1452 0054 00C00148 		.word	1208074240
 1453 0058 00000000 		.word	SDMMC003_CardInfo
 1454 005c 32000000 		.word	.LANCHOR0+50
 1455 0060 36000000 		.word	.LANCHOR0+54
 1457              		.section	.text.SDMMC003_lConfigureRegForMultiTransfer,"ax",%progbits
 1458              		.align	1
 1459              		.global	SDMMC003_lConfigureRegForMultiTransfer
 1460              		.thumb
 1461              		.thumb_func
 1463              	SDMMC003_lConfigureRegForMultiTransfer:
 1464              		@ args = 0, pretend = 0, frame = 8
 1465              		@ frame_needed = 0, uses_anonymous_args = 0
 1466 0000 13B5     		push	{r0, r1, r4, lr}
 1467 0002 0446     		mov	r4, r0
 1468 0004 1A48     		ldr	r0, .L352
 1469 0006 0023     		movs	r3, #0
 1470 0008 0193     		str	r3, [sp, #4]
 1471 000a 8378     		ldrb	r3, [r0, #2]	@ zero_extendqisi2
 1472 000c 03F00800 		and	r0, r3, #8
 1473 0010 C3B2     		uxtb	r3, r0
 1474 0012 13B9     		cbnz	r3, .L351
 1475 0014 2068     		ldr	r0, [r4, #0]
 1476 0016 4302     		lsls	r3, r0, #9
 1477 0018 2360     		str	r3, [r4, #0]
 1478              	.L351:
 1479 001a 164B     		ldr	r3, .L352+4
 1480 001c 9888     		ldrh	r0, [r3, #4]
 1481 001e 00F47040 		and	r0, r0, #61440
 1482 0022 40F40070 		orr	r0, r0, #512
 1483 0026 9880     		strh	r0, [r3, #4]	@ movhi
 1484 0028 9889     		ldrh	r0, [r3, #12]
 1485 002a 80B2     		uxth	r0, r0
 1486 002c 40F02000 		orr	r0, r0, #32
 1487 0030 9881     		strh	r0, [r3, #12]	@ movhi
 1488 0032 9889     		ldrh	r0, [r3, #12]
 1489 0034 80B2     		uxth	r0, r0
 1490 0036 40F00400 		orr	r0, r0, #4
 1491 003a 9881     		strh	r0, [r3, #12]	@ movhi
 1492 003c 9889     		ldrh	r0, [r3, #12]
 1493 003e 80B2     		uxth	r0, r0
 1494 0040 40F00200 		orr	r0, r0, #2
 1495 0044 9881     		strh	r0, [r3, #12]	@ movhi
 1496 0046 89B2     		uxth	r1, r1
 1497 0048 D888     		ldrh	r0, [r3, #6]
 1498 004a D980     		strh	r1, [r3, #6]	@ movhi
 1499 004c 588F     		ldrh	r0, [r3, #58]
 1500 004e 20F48071 		bic	r1, r0, #256
 1501 0052 0804     		lsls	r0, r1, #16
 1502 0054 010C     		lsrs	r1, r0, #16
 1503 0056 5987     		strh	r1, [r3, #58]	@ movhi
 1504 0058 588F     		ldrh	r0, [r3, #58]
 1505 005a 81B2     		uxth	r1, r0
 1506 005c 41F48070 		orr	r0, r1, #256
 1507 0060 5887     		strh	r0, [r3, #58]	@ movhi
 1508 0062 2168     		ldr	r1, [r4, #0]
 1509 0064 1046     		mov	r0, r2
 1510 0066 01AB     		add	r3, sp, #4
 1511 0068 0122     		movs	r2, #1
 1512 006a FFF7FEFF 		bl	SDMMC003_lSendCommand
 1513 006e 1CBD     		pop	{r2, r3, r4, pc}
 1514              	.L353:
 1515              		.align	2
 1516              	.L352:
 1517 0070 00000000 		.word	SDMMC003_Handle
 1518 0074 00C00148 		.word	1208074240
 1520              		.section	.text.SDMMC003_lMultiBlockTransfer,"ax",%progbits
 1521              		.align	1
 1522              		.global	SDMMC003_lMultiBlockTransfer
 1523              		.thumb
 1524              		.thumb_func
 1526              	SDMMC003_lMultiBlockTransfer:
 1527              		@ args = 4, pretend = 0, frame = 0
 1528              		@ frame_needed = 0, uses_anonymous_args = 0
 1529 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1530 0002 1E46     		mov	r6, r3
 1531 0004 114B     		ldr	r3, .L361
 1532 0006 9DF81870 		ldrb	r7, [sp, #24]	@ zero_extendqisi2
 1533 000a 0124     		movs	r4, #1
 1534 000c 5C71     		strb	r4, [r3, #5]
 1535 000e 0D46     		mov	r5, r1
 1536 0010 FFF7FEFF 		bl	SDMMC003_lConfigureRegForMultiTransfer
 1537 0014 0446     		mov	r4, r0
 1538 0016 B8B9     		cbnz	r0, .L355
 1539              	.L359:
 1540 0018 55B1     		cbz	r5, .L360
 1541              	.L358:
 1542 001a 3046     		mov	r0, r6
 1543 001c 3946     		mov	r1, r7
 1544 001e 8022     		movs	r2, #128
 1545 0020 FFF7FEFF 		bl	SDMMC003_lDataTransfer
 1546 0024 0446     		mov	r4, r0
 1547 0026 48B9     		cbnz	r0, .L357
 1548 0028 013D     		subs	r5, r5, #1
 1549 002a 06F50076 		add	r6, r6, #512
 1550 002e F3E7     		b	.L359
 1551              	.L360:
 1552 0030 4FF47A70 		mov	r0, #1000
 1553 0034 FFF7FEFF 		bl	SDMMC003_lTransferDelay
 1554 0038 0446     		mov	r4, r0
 1555 003a 28B9     		cbnz	r0, .L355
 1556              	.L357:
 1557 003c 0348     		ldr	r0, .L361
 1558 003e 8179     		ldrb	r1, [r0, #6]	@ zero_extendqisi2
 1559 0040 0929     		cmp	r1, #9
 1560 0042 01D1     		bne	.L355
 1561 0044 FFF7FEFF 		bl	SDMMC003_lAcmdErrorRecovery
 1562              	.L355:
 1563 0048 2046     		mov	r0, r4
 1564 004a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1565              	.L362:
 1566              		.align	2
 1567              	.L361:
 1568 004c 00000000 		.word	SDMMC003_Handle
 1570              		.section	.text.SDMMC003_lConfigureForSingleTransfer,"ax",%progbits
 1571              		.align	1
 1572              		.global	SDMMC003_lConfigureForSingleTransfer
 1573              		.thumb
 1574              		.thumb_func
 1576              	SDMMC003_lConfigureForSingleTransfer:
 1577              		@ args = 0, pretend = 0, frame = 8
 1578              		@ frame_needed = 0, uses_anonymous_args = 0
 1579 0000 37B5     		push	{r0, r1, r2, r4, r5, lr}
 1580 0002 02AB     		add	r3, sp, #8
 1581 0004 0024     		movs	r4, #0
 1582 0006 43F8044D 		str	r4, [r3, #-4]!
 1583 000a 0F4C     		ldr	r4, .L364
 1584 000c A588     		ldrh	r5, [r4, #4]
 1585 000e 1205     		lsls	r2, r2, #20
 1586 0010 05F47045 		and	r5, r5, #61440
 1587 0014 45EA1255 		orr	r5, r5, r2, lsr #20
 1588 0018 A580     		strh	r5, [r4, #4]	@ movhi
 1589 001a A289     		ldrh	r2, [r4, #12]
 1590 001c 22F02002 		bic	r2, r2, #32
 1591 0020 1204     		lsls	r2, r2, #16
 1592 0022 120C     		lsrs	r2, r2, #16
 1593 0024 A281     		strh	r2, [r4, #12]	@ movhi
 1594 0026 A289     		ldrh	r2, [r4, #12]
 1595 0028 22F00402 		bic	r2, r2, #4
 1596 002c 1204     		lsls	r2, r2, #16
 1597 002e 120C     		lsrs	r2, r2, #16
 1598 0030 A281     		strh	r2, [r4, #12]	@ movhi
 1599 0032 A289     		ldrh	r2, [r4, #12]
 1600 0034 22F00202 		bic	r2, r2, #2
 1601 0038 1204     		lsls	r2, r2, #16
 1602 003a 120C     		lsrs	r2, r2, #16
 1603 003c A281     		strh	r2, [r4, #12]	@ movhi
 1604 003e 0122     		movs	r2, #1
 1605 0040 FFF7FEFF 		bl	SDMMC003_lSendCommand
 1606 0044 3EBD     		pop	{r1, r2, r3, r4, r5, pc}
 1607              	.L365:
 1608 0046 00BF     		.align	2
 1609              	.L364:
 1610 0048 00C00148 		.word	1208074240
 1612              		.section	.text.SDMMC003_lReadRca,"ax",%progbits
 1613              		.align	1
 1614              		.global	SDMMC003_lReadRca
 1615              		.thumb
 1616              		.thumb_func
 1618              	SDMMC003_lReadRca:
 1619              		@ args = 0, pretend = 0, frame = 0
 1620              		@ frame_needed = 0, uses_anonymous_args = 0
 1621              		@ link register save eliminated.
 1622 0000 0248     		ldr	r0, .L367
 1623 0002 034B     		ldr	r3, .L367+4
 1624 0004 0021     		movs	r1, #0
 1625 0006 0522     		movs	r2, #5
 1626 0008 FFF7FEBF 		b	SDMMC003_lSendCommand
 1627              	.L368:
 1628              		.align	2
 1629              	.L367:
 1630 000c 04000000 		.word	.LANCHOR0+4
 1631 0010 2C000000 		.word	SDMMC003_CardInfo+44
 1633              		.section	.text.SDMMC003_lQueryOperatingCond,"ax",%progbits
 1634              		.align	1
 1635              		.global	SDMMC003_lQueryOperatingCond
 1636              		.thumb
 1637              		.thumb_func
 1639              	SDMMC003_lQueryOperatingCond:
 1640              		@ args = 0, pretend = 0, frame = 8
 1641              		@ frame_needed = 0, uses_anonymous_args = 0
 1642 0000 13B5     		push	{r0, r1, r4, lr}
 1643 0002 02AB     		add	r3, sp, #8
 1644 0004 0024     		movs	r4, #0
 1645 0006 43F8044D 		str	r4, [r3, #-4]!
 1646 000a 0D48     		ldr	r0, .L374
 1647 000c 4FF4D571 		mov	r1, #426
 1648 0010 0622     		movs	r2, #6
 1649 0012 FFF7FEFF 		bl	SDMMC003_lSendCommand
 1650 0016 30B1     		cbz	r0, .L370
 1651 0018 0A49     		ldr	r1, .L374+4
 1652 001a 0A79     		ldrb	r2, [r1, #4]	@ zero_extendqisi2
 1653 001c 022A     		cmp	r2, #2
 1654 001e 0ED1     		bne	.L371
 1655 0020 4C72     		strb	r4, [r1, #9]
 1656 0022 2046     		mov	r0, r4
 1657 0024 0BE0     		b	.L371
 1658              	.L370:
 1659 0026 019B     		ldr	r3, [sp, #4]
 1660 0028 DAB2     		uxtb	r2, r3
 1661 002a AA2A     		cmp	r2, #170
 1662 002c 06D1     		bne	.L373
 1663 002e C3F30321 		ubfx	r1, r3, #8, #4
 1664 0032 0129     		cmp	r1, #1
 1665 0034 02D1     		bne	.L373
 1666 0036 034B     		ldr	r3, .L374+4
 1667 0038 5972     		strb	r1, [r3, #9]
 1668 003a 00E0     		b	.L371
 1669              	.L373:
 1670 003c 1920     		movs	r0, #25
 1671              	.L371:
 1672 003e 1CBD     		pop	{r2, r3, r4, pc}
 1673              	.L375:
 1674              		.align	2
 1675              	.L374:
 1676 0040 0C000000 		.word	.LANCHOR0+12
 1677 0044 00000000 		.word	SDMMC003_Handle
 1679              		.section	.text.SDMMC003_lSetVoltageWindow,"ax",%progbits
 1680              		.align	1
 1681              		.global	SDMMC003_lSetVoltageWindow
 1682              		.thumb
 1683              		.thumb_func
 1685              	SDMMC003_lSetVoltageWindow:
 1686              		@ args = 0, pretend = 0, frame = 8
 1687              		@ frame_needed = 0, uses_anonymous_args = 0
 1688 0000 73B5     		push	{r0, r1, r4, r5, r6, lr}
 1689 0002 1448     		ldr	r0, .L387
 1690 0004 1449     		ldr	r1, .L387+4
 1691 0006 467A     		ldrb	r6, [r0, #9]	@ zero_extendqisi2
 1692 0008 0023     		movs	r3, #0
 1693 000a 0193     		str	r3, [sp, #4]
 1694 000c 002E     		cmp	r6, #0
 1695 000e 14BF     		ite	ne
 1696 0010 0E46     		movne	r6, r1
 1697 0012 4FF48016 		moveq	r6, #1048576
 1698 0016 3325     		movs	r5, #51
 1699              	.L380:
 1700 0018 1048     		ldr	r0, .L387+8
 1701 001a 0021     		movs	r1, #0
 1702 001c 0122     		movs	r2, #1
 1703 001e 01AB     		add	r3, sp, #4
 1704 0020 FFF7FEFF 		bl	SDMMC003_lSendCommand
 1705 0024 0446     		mov	r4, r0
 1706 0026 98B9     		cbnz	r0, .L378
 1707 0028 0D48     		ldr	r0, .L387+12
 1708 002a 0E4B     		ldr	r3, .L387+16
 1709 002c 3146     		mov	r1, r6
 1710 002e 0422     		movs	r2, #4
 1711 0030 FFF7FEFF 		bl	SDMMC003_lSendCommand
 1712 0034 08B1     		cbz	r0, .L379
 1713 0036 1228     		cmp	r0, #18
 1714 0038 09D1     		bne	.L382
 1715              	.L379:
 1716 003a 1420     		movs	r0, #20
 1717 003c FFF7FEFF 		bl	SDMMC003_lDelay
 1718 0040 084A     		ldr	r2, .L387+16
 1719 0042 1368     		ldr	r3, [r2, #0]
 1720 0044 002B     		cmp	r3, #0
 1721 0046 03DB     		blt	.L378
 1722 0048 013D     		subs	r5, r5, #1
 1723 004a E5D1     		bne	.L380
 1724 004c 00E0     		b	.L378
 1725              	.L382:
 1726 004e 0446     		mov	r4, r0
 1727              	.L378:
 1728 0050 2046     		mov	r0, r4
 1729 0052 7CBD     		pop	{r2, r3, r4, r5, r6, pc}
 1730              	.L388:
 1731              		.align	2
 1732              	.L387:
 1733 0054 00000000 		.word	SDMMC003_Handle
 1734 0058 00001040 		.word	1074790400
 1735 005c 32000000 		.word	.LANCHOR0+50
 1736 0060 3E000000 		.word	.LANCHOR0+62
 1737 0064 00000000 		.word	SDMMC003_CardInfo
 1739              		.section	.text.SDMMC003_lQueryVoltage,"ax",%progbits
 1740              		.align	1
 1741              		.global	SDMMC003_lQueryVoltage
 1742              		.thumb
 1743              		.thumb_func
 1745              	SDMMC003_lQueryVoltage:
 1746              		@ args = 0, pretend = 0, frame = 8
 1747              		@ frame_needed = 0, uses_anonymous_args = 0
 1748 0000 37B5     		push	{r0, r1, r2, r4, r5, lr}
 1749 0002 02AB     		add	r3, sp, #8
 1750 0004 0546     		mov	r5, r0
 1751 0006 0022     		movs	r2, #0
 1752 0008 43F8042D 		str	r2, [r3, #-4]!
 1753 000c 0E48     		ldr	r0, .L399
 1754 000e 2946     		mov	r1, r5
 1755 0010 0122     		movs	r2, #1
 1756 0012 FFF7FEFF 		bl	SDMMC003_lSendCommand
 1757 0016 0446     		mov	r4, r0
 1758 0018 20B1     		cbz	r0, .L390
 1759 001a 1228     		cmp	r0, #18
 1760 001c 12D1     		bne	.L391
 1761 001e 0B4B     		ldr	r3, .L399+4
 1762 0020 587A     		ldrb	r0, [r3, #9]	@ zero_extendqisi2
 1763 0022 78B9     		cbnz	r0, .L391
 1764              	.L390:
 1765 0024 0A48     		ldr	r0, .L399+8
 1766 0026 0B4B     		ldr	r3, .L399+12
 1767 0028 2946     		mov	r1, r5
 1768 002a 0422     		movs	r2, #4
 1769 002c FFF7FEFF 		bl	SDMMC003_lSendCommand
 1770 0030 0446     		mov	r4, r0
 1771 0032 08B1     		cbz	r0, .L392
 1772 0034 1228     		cmp	r0, #18
 1773 0036 05D1     		bne	.L391
 1774              	.L392:
 1775 0038 FFF7FEFF 		bl	SDMMC003_lSetVoltageWindow
 1776 003c 0446     		mov	r4, r0
 1777 003e 08B9     		cbnz	r0, .L391
 1778 0040 FFF7FEFF 		bl	SDMMC003_lWriteCardType
 1779              	.L391:
 1780 0044 2046     		mov	r0, r4
 1781 0046 3EBD     		pop	{r1, r2, r3, r4, r5, pc}
 1782              	.L400:
 1783              		.align	2
 1784              	.L399:
 1785 0048 32000000 		.word	.LANCHOR0+50
 1786 004c 00000000 		.word	SDMMC003_Handle
 1787 0050 3E000000 		.word	.LANCHOR0+62
 1788 0054 00000000 		.word	SDMMC003_CardInfo
 1790              		.section	.text.SDMMC003_lInitializeCard,"ax",%progbits
 1791              		.align	1
 1792              		.global	SDMMC003_lInitializeCard
 1793              		.thumb
 1794              		.thumb_func
 1796              	SDMMC003_lInitializeCard:
 1797              		@ args = 0, pretend = 0, frame = 8
 1798              		@ frame_needed = 0, uses_anonymous_args = 0
 1799 0000 13B5     		push	{r0, r1, r4, lr}
 1800 0002 0021     		movs	r1, #0
 1801 0004 0A46     		mov	r2, r1
 1802 0006 0B46     		mov	r3, r1
 1803 0008 2248     		ldr	r0, .L406
 1804 000a FFF7FEFF 		bl	SDMMC003_lSendCommand
 1805 000e 0146     		mov	r1, r0
 1806 0010 0028     		cmp	r0, #0
 1807 0012 3CD1     		bne	.L404
 1808 0014 FFF7FEFF 		bl	SDMMC003_lQueryOperatingCond
 1809 0018 1928     		cmp	r0, #25
 1810 001a 0146     		mov	r1, r0
 1811 001c 0BD1     		bne	.L403
 1812 001e 0021     		movs	r1, #0
 1813 0020 0A46     		mov	r2, r1
 1814 0022 0B46     		mov	r3, r1
 1815 0024 1B48     		ldr	r0, .L406
 1816 0026 FFF7FEFF 		bl	SDMMC003_lSendCommand
 1817 002a 0146     		mov	r1, r0
 1818 002c 0028     		cmp	r0, #0
 1819 002e 2ED1     		bne	.L404
 1820 0030 FFF7FEFF 		bl	SDMMC003_lQueryOperatingCond
 1821 0034 0146     		mov	r1, r0
 1822              	.L403:
 1823 0036 51BB     		cbnz	r1, .L404
 1824 0038 174C     		ldr	r4, .L406+4
 1825 003a A08D     		ldrh	r0, [r4, #44]
 1826 003c FFF7FEFF 		bl	SDMMC003_lQueryVoltage
 1827 0040 0146     		mov	r1, r0
 1828 0042 20BB     		cbnz	r0, .L404
 1829 0044 1548     		ldr	r0, .L406+8
 1830 0046 0322     		movs	r2, #3
 1831 0048 231D     		adds	r3, r4, #4
 1832 004a FFF7FEFF 		bl	SDMMC003_lSendCommand
 1833 004e 0146     		mov	r1, r0
 1834 0050 E8B9     		cbnz	r0, .L404
 1835 0052 FFF7FEFF 		bl	SDMMC003_lReadRca
 1836 0056 0146     		mov	r1, r0
 1837 0058 C8B9     		cbnz	r0, .L404
 1838 005a 01A8     		add	r0, sp, #4
 1839 005c FFF7FEFF 		bl	SDMMC003_GetLockStatus
 1840 0060 0146     		mov	r1, r0
 1841 0062 A0B9     		cbnz	r0, .L404
 1842 0064 019B     		ldr	r3, [sp, #4]
 1843 0066 0E48     		ldr	r0, .L406+12
 1844 0068 202B     		cmp	r3, #32
 1845 006a 05D1     		bne	.L405
 1846 006c 0288     		ldrh	r2, [r0, #0]
 1847 006e 91B2     		uxth	r1, r2
 1848 0070 41F04003 		orr	r3, r1, #64
 1849 0074 0380     		strh	r3, [r0, #0]	@ movhi
 1850 0076 2B21     		movs	r1, #43
 1851              	.L405:
 1852 0078 0288     		ldrh	r2, [r0, #0]
 1853 007a 93B2     		uxth	r3, r2
 1854 007c 43F00102 		orr	r2, r3, #1
 1855 0080 0280     		strh	r2, [r0, #0]	@ movhi
 1856 0082 0388     		ldrh	r3, [r0, #0]
 1857 0084 23F00202 		bic	r2, r3, #2
 1858 0088 1304     		lsls	r3, r2, #16
 1859 008a 1A0C     		lsrs	r2, r3, #16
 1860 008c 0280     		strh	r2, [r0, #0]	@ movhi
 1861              	.L404:
 1862 008e 0846     		mov	r0, r1
 1863 0090 1CBD     		pop	{r2, r3, r4, pc}
 1864              	.L407:
 1865 0092 00BF     		.align	2
 1866              	.L406:
 1867 0094 00000000 		.word	.LANCHOR0
 1868 0098 00000000 		.word	SDMMC003_CardInfo
 1869 009c 02000000 		.word	.LANCHOR0+2
 1870 00a0 00000000 		.word	SDMMC003_Handle
 1872              		.section	.text.SDMMC003_lSingleBlockTransfer,"ax",%progbits
 1873              		.align	1
 1874              		.global	SDMMC003_lSingleBlockTransfer
 1875              		.thumb
 1876              		.thumb_func
 1878              	SDMMC003_lSingleBlockTransfer:
 1879              		@ args = 4, pretend = 0, frame = 0
 1880              		@ frame_needed = 0, uses_anonymous_args = 0
 1881 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1882 0002 1546     		mov	r5, r2
 1883 0004 1F46     		mov	r7, r3
 1884 0006 9DF81860 		ldrb	r6, [sp, #24]	@ zero_extendqisi2
 1885 000a FFF7FEFF 		bl	SDMMC003_lConfigureForSingleTransfer
 1886 000e 0446     		mov	r4, r0
 1887 0010 0028     		cmp	r0, #0
 1888 0012 25D1     		bne	.L409
 1889 0014 3846     		mov	r0, r7
 1890 0016 3146     		mov	r1, r6
 1891 0018 AA08     		lsrs	r2, r5, #2
 1892 001a FFF7FEFF 		bl	SDMMC003_lDataTransfer
 1893 001e 0446     		mov	r4, r0
 1894 0020 F0B9     		cbnz	r0, .L409
 1895 0022 4FF47A70 		mov	r0, #1000
 1896 0026 FFF7FEFF 		bl	SDMMC003_lStartTimer
 1897 002a C0B1     		cbz	r0, .L412
 1898              	.L419:
 1899 002c 0D4B     		ldr	r3, .L424
 1900 002e 997A     		ldrb	r1, [r3, #10]	@ zero_extendqisi2
 1901 0030 19B1     		cbz	r1, .L410
 1902 0032 0D4A     		ldr	r2, .L424+4
 1903 0034 1379     		ldrb	r3, [r2, #4]	@ zero_extendqisi2
 1904 0036 002B     		cmp	r3, #0
 1905 0038 F8D0     		beq	.L419
 1906              	.L410:
 1907 003a FFF7FEFF 		bl	SDMMC003_lStopTimer
 1908 003e 0A48     		ldr	r0, .L424+4
 1909 0040 084A     		ldr	r2, .L424
 1910 0042 0021     		movs	r1, #0
 1911 0044 0171     		strb	r1, [r0, #4]
 1912 0046 5379     		ldrb	r3, [r2, #5]	@ zero_extendqisi2
 1913 0048 1F2B     		cmp	r3, #31
 1914 004a 09D0     		beq	.L409
 1915 004c 0121     		movs	r1, #1
 1916 004e D172     		strb	r1, [r2, #11]
 1917 0050 0088     		ldrh	r0, [r0, #0]
 1918 0052 D17A     		ldrb	r1, [r2, #11]	@ zero_extendqisi2
 1919 0054 80B2     		uxth	r0, r0
 1920 0056 BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 1921 005a FFF7FEBF 		b	SDMMC003_lErrorInterruptRecovery
 1922              	.L412:
 1923 005e 2F24     		movs	r4, #47
 1924              	.L409:
 1925 0060 2046     		mov	r0, r4
 1926 0062 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1927              	.L425:
 1928              		.align	2
 1929              	.L424:
 1930 0064 00000000 		.word	SDMMC003_Handle
 1931 0068 00000000 		.word	SDMMC003_ISRContext
 1933              		.section	.text.SDMMC003_lSwitchSpeed,"ax",%progbits
 1934              		.align	1
 1935              		.global	SDMMC003_lSwitchSpeed
 1936              		.thumb
 1937              		.thumb_func
 1939              	SDMMC003_lSwitchSpeed:
 1940              		@ args = 0, pretend = 0, frame = 64
 1941              		@ frame_needed = 0, uses_anonymous_args = 0
 1942 0000 00B5     		push	{lr}
 1943 0002 93B0     		sub	sp, sp, #76
 1944 0004 0021     		movs	r1, #0
 1945 0006 4022     		movs	r2, #64
 1946 0008 02A8     		add	r0, sp, #8
 1947 000a FFF7FEFF 		bl	memset
 1948 000e 104B     		ldr	r3, .L430
 1949 0010 93F82400 		ldrb	r0, [r3, #36]	@ zero_extendqisi2
 1950 0014 0107     		lsls	r1, r0, #28
 1951 0016 01D1     		bne	.L427
 1952              	.L429:
 1953 0018 0120     		movs	r0, #1
 1954 001a 17E0     		b	.L428
 1955              	.L427:
 1956 001c FFF7FEFF 		bl	SDMMC003_lSwitchToTransferState
 1957 0020 A0B9     		cbnz	r0, .L428
 1958 0022 0121     		movs	r1, #1
 1959 0024 0091     		str	r1, [sp, #0]
 1960 0026 0B48     		ldr	r0, .L430+4
 1961 0028 0B49     		ldr	r1, .L430+8
 1962 002a 4022     		movs	r2, #64
 1963 002c 02AB     		add	r3, sp, #8
 1964 002e FFF7FEFF 		bl	SDMMC003_lSingleBlockTransfer
 1965 0032 58B9     		cbnz	r0, .L428
 1966 0034 069A     		ldr	r2, [sp, #24]
 1967 0036 02F00F03 		and	r3, r2, #15
 1968 003a 012B     		cmp	r3, #1
 1969 003c ECD1     		bne	.L429
 1970 003e 0749     		ldr	r1, .L430+12
 1971 0040 91F82820 		ldrb	r2, [r1, #40]	@ zero_extendqisi2
 1972 0044 42F00403 		orr	r3, r2, #4
 1973 0048 81F82830 		strb	r3, [r1, #40]
 1974              	.L428:
 1975 004c 13B0     		add	sp, sp, #76
 1976 004e 00BD     		pop	{pc}
 1977              	.L431:
 1978              		.align	2
 1979              	.L430:
 1980 0050 00000000 		.word	SDMMC003_CardInfo
 1981 0054 08000000 		.word	.LANCHOR0+8
 1982 0058 01000080 		.word	-2147483647
 1983 005c 00C00148 		.word	1208074240
 1985              		.section	.text.SDMMC003_lReadCardRegisters,"ax",%progbits
 1986              		.align	1
 1987              		.global	SDMMC003_lReadCardRegisters
 1988              		.thumb
 1989              		.thumb_func
 1991              	SDMMC003_lReadCardRegisters:
 1992              		@ args = 0, pretend = 0, frame = 16
 1993              		@ frame_needed = 0, uses_anonymous_args = 0
 1994 0000 30B5     		push	{r4, r5, lr}
 1995 0002 204C     		ldr	r4, .L434
 1996 0004 2048     		ldr	r0, .L434+4
 1997 0006 A58D     		ldrh	r5, [r4, #44]
 1998 0008 87B0     		sub	sp, sp, #28
 1999 000a 0023     		movs	r3, #0
 2000 000c 2D04     		lsls	r5, r5, #16
 2001 000e 0393     		str	r3, [sp, #12]
 2002 0010 0493     		str	r3, [sp, #16]
 2003 0012 0593     		str	r3, [sp, #20]
 2004 0014 0322     		movs	r2, #3
 2005 0016 2946     		mov	r1, r5
 2006 0018 04F11403 		add	r3, r4, #20
 2007 001c FFF7FEFF 		bl	SDMMC003_lSendCommand
 2008 0020 0246     		mov	r2, r0
 2009 0022 60BB     		cbnz	r0, .L433
 2010 0024 FFF7FEFF 		bl	SDMMC003_lSetWriteProtect
 2011 0028 0246     		mov	r2, r0
 2012 002a 40BB     		cbnz	r0, .L433
 2013 002c 1748     		ldr	r0, .L434+8
 2014 002e 8178     		ldrb	r1, [r0, #2]	@ zero_extendqisi2
 2015 0030 01F01003 		and	r3, r1, #16
 2016 0034 D8B2     		uxtb	r0, r3
 2017 0036 10BB     		cbnz	r0, .L433
 2018 0038 FFF7FEFF 		bl	SDMMC003_lSwitchToTransferState
 2019 003c 0246     		mov	r2, r0
 2020 003e F0B9     		cbnz	r0, .L433
 2021 0040 A28D     		ldrh	r2, [r4, #44]
 2022 0042 1348     		ldr	r0, .L434+12
 2023 0044 45EA0241 		orr	r1, r5, r2, lsl #16
 2024 0048 03AB     		add	r3, sp, #12
 2025 004a 0122     		movs	r2, #1
 2026 004c FFF7FEFF 		bl	SDMMC003_lSendCommand
 2027 0050 0246     		mov	r2, r0
 2028 0052 A0B9     		cbnz	r0, .L433
 2029 0054 0F4D     		ldr	r5, .L434+16
 2030 0056 A989     		ldrh	r1, [r5, #12]
 2031 0058 8BB2     		uxth	r3, r1
 2032 005a 43F01000 		orr	r0, r3, #16
 2033 005e A881     		strh	r0, [r5, #12]	@ movhi
 2034 0060 0121     		movs	r1, #1
 2035 0062 04AD     		add	r5, sp, #16
 2036 0064 0091     		str	r1, [sp, #0]
 2037 0066 0C48     		ldr	r0, .L434+20
 2038 0068 1146     		mov	r1, r2
 2039 006a 2B46     		mov	r3, r5
 2040 006c 0822     		movs	r2, #8
 2041 006e FFF7FEFF 		bl	SDMMC003_lSingleBlockTransfer
 2042 0072 0246     		mov	r2, r0
 2043 0074 95E80300 		ldmia	r5, {r0, r1}
 2044 0078 2434     		adds	r4, r4, #36
 2045 007a 84E80300 		stmia	r4, {r0, r1}
 2046              	.L433:
 2047 007e 1046     		mov	r0, r2
 2048 0080 07B0     		add	sp, sp, #28
 2049 0082 30BD     		pop	{r4, r5, pc}
 2050              	.L435:
 2051              		.align	2
 2052              	.L434:
 2053 0084 00000000 		.word	SDMMC003_CardInfo
 2054 0088 0E000000 		.word	.LANCHOR0+14
 2055 008c 00000000 		.word	SDMMC003_Handle
 2056 0090 32000000 		.word	.LANCHOR0+50
 2057 0094 00C00148 		.word	1208074240
 2058 0098 42000000 		.word	.LANCHOR0+66
 2060              		.section	.text.SDMMC003_lAfterCardInitialize,"ax",%progbits
 2061              		.align	1
 2062              		.global	SDMMC003_lAfterCardInitialize
 2063              		.thumb
 2064              		.thumb_func
 2066              	SDMMC003_lAfterCardInitialize:
 2067              		@ args = 0, pretend = 0, frame = 0
 2068              		@ frame_needed = 0, uses_anonymous_args = 0
 2069 0000 10B5     		push	{r4, lr}
 2070 0002 FFF7FEFF 		bl	SDMMC003_lReadCardRegisters
 2071 0006 0446     		mov	r4, r0
 2072 0008 A8B9     		cbnz	r0, .L437
 2073 000a FFF7FEFF 		bl	SDMMC003_lSwitchBusWidth
 2074 000e 30B1     		cbz	r0, .L438
 2075 0010 0A4B     		ldr	r3, .L443
 2076 0012 93F82820 		ldrb	r2, [r3, #40]	@ zero_extendqisi2
 2077 0016 02F0FD00 		and	r0, r2, #253
 2078 001a 83F82800 		strb	r0, [r3, #40]
 2079              	.L438:
 2080 001e FFF7FEFF 		bl	SDMMC003_lSwitchSpeed
 2081 0022 38B1     		cbz	r0, .L439
 2082 0024 0549     		ldr	r1, .L443
 2083 0026 91F82830 		ldrb	r3, [r1, #40]	@ zero_extendqisi2
 2084 002a 03F0FB02 		and	r2, r3, #251
 2085 002e 81F82820 		strb	r2, [r1, #40]
 2086 0032 00E0     		b	.L437
 2087              	.L439:
 2088 0034 0446     		mov	r4, r0
 2089              	.L437:
 2090 0036 2046     		mov	r0, r4
 2091 0038 10BD     		pop	{r4, pc}
 2092              	.L444:
 2093 003a 00BF     		.align	2
 2094              	.L443:
 2095 003c 00C00148 		.word	1208074240
 2097              		.section	.text.SDMMC003_lCardIdentificationProcess,"ax",%progbits
 2098              		.align	1
 2099              		.global	SDMMC003_lCardIdentificationProcess
 2100              		.thumb
 2101              		.thumb_func
 2103              	SDMMC003_lCardIdentificationProcess:
 2104              		@ args = 0, pretend = 0, frame = 0
 2105              		@ frame_needed = 0, uses_anonymous_args = 0
 2106 0000 10B5     		push	{r4, lr}
 2107 0002 4FF47A70 		mov	r0, #1000
 2108 0006 FFF7FEFF 		bl	SDMMC003_lStartTimer
 2109 000a 0028     		cmp	r0, #0
 2110 000c 27D0     		beq	.L449
 2111              	.L455:
 2112 000e 154B     		ldr	r3, .L459
 2113 0010 997A     		ldrb	r1, [r3, #10]	@ zero_extendqisi2
 2114 0012 41B1     		cbz	r1, .L450
 2115 0014 144A     		ldr	r2, .L459+4
 2116 0016 948D     		ldrh	r4, [r2, #44]
 2117 0018 04F00203 		and	r3, r4, #2
 2118 001c 99B2     		uxth	r1, r3
 2119 001e 0029     		cmp	r1, #0
 2120 0020 F5D0     		beq	.L455
 2121 0022 0124     		movs	r4, #1
 2122 0024 00E0     		b	.L447
 2123              	.L450:
 2124 0026 2E24     		movs	r4, #46
 2125              	.L447:
 2126 0028 FFF7FEFF 		bl	SDMMC003_lStopTimer
 2127 002c 2E2C     		cmp	r4, #46
 2128 002e 17D0     		beq	.L446
 2129 0030 0D48     		ldr	r0, .L459+4
 2130 0032 828D     		ldrh	r2, [r0, #44]
 2131 0034 93B2     		uxth	r3, r2
 2132 0036 43F00401 		orr	r1, r3, #4
 2133 003a 8185     		strh	r1, [r0, #44]	@ movhi
 2134 003c 90F82920 		ldrb	r2, [r0, #41]	@ zero_extendqisi2
 2135 0040 42F00103 		orr	r3, r2, #1
 2136 0044 80F82930 		strb	r3, [r0, #41]
 2137 0048 0648     		ldr	r0, .L459
 2138 004a 017A     		ldrb	r1, [r0, #8]	@ zero_extendqisi2
 2139 004c 41B9     		cbnz	r1, .L446
 2140 004e FFF7FEFF 		bl	SDMMC003_lInitializeCard
 2141 0052 0446     		mov	r4, r0
 2142 0054 20B9     		cbnz	r0, .L446
 2143 0056 BDE81040 		pop	{r4, lr}
 2144 005a FFF7FEBF 		b	SDMMC003_lAfterCardInitialize
 2145              	.L449:
 2146 005e 2F24     		movs	r4, #47
 2147              	.L446:
 2148 0060 2046     		mov	r0, r4
 2149 0062 10BD     		pop	{r4, pc}
 2150              	.L460:
 2151              		.align	2
 2152              	.L459:
 2153 0064 00000000 		.word	SDMMC003_Handle
 2154 0068 00C00148 		.word	1208074240
 2156              		.section	.text.SDMMC003_lCheckSectorBound,"ax",%progbits
 2157              		.align	1
 2158              		.global	SDMMC003_lCheckSectorBound
 2159              		.thumb
 2160              		.thumb_func
 2162              	SDMMC003_lCheckSectorBound:
 2163              		@ args = 0, pretend = 0, frame = 8
 2164              		@ frame_needed = 0, uses_anonymous_args = 0
 2165 0000 37B5     		push	{r0, r1, r2, r4, r5, lr}
 2166 0002 0446     		mov	r4, r0
 2167 0004 02A8     		add	r0, sp, #8
 2168 0006 0022     		movs	r2, #0
 2169 0008 40F8042D 		str	r2, [r0, #-4]!
 2170 000c 0D46     		mov	r5, r1
 2171 000e FFF7FEFF 		bl	SDMMC003_GetSectorCount
 2172 0012 28B9     		cbnz	r0, .L462
 2173 0014 019B     		ldr	r3, [sp, #4]
 2174 0016 2819     		adds	r0, r5, r4
 2175 0018 9842     		cmp	r0, r3
 2176 001a 2CBF     		ite	cs
 2177 001c 3020     		movcs	r0, #48
 2178 001e 0020     		movcc	r0, #0
 2179              	.L462:
 2180 0020 3EBD     		pop	{r1, r2, r3, r4, r5, pc}
 2182              		.section	.text.SDMMC003_lLocalErase,"ax",%progbits
 2183              		.align	1
 2184              		.global	SDMMC003_lLocalErase
 2185              		.thumb
 2186              		.thumb_func
 2188              	SDMMC003_lLocalErase:
 2189              		@ args = 0, pretend = 0, frame = 8
 2190              		@ frame_needed = 0, uses_anonymous_args = 0
 2191 0000 73B5     		push	{r0, r1, r4, r5, r6, lr}
 2192 0002 0346     		mov	r3, r0
 2193 0004 1548     		ldr	r0, .L467
 2194 0006 0D46     		mov	r5, r1
 2195 0008 8178     		ldrb	r1, [r0, #2]	@ zero_extendqisi2
 2196 000a 1646     		mov	r6, r2
 2197 000c 01F00804 		and	r4, r1, #8
 2198 0010 0022     		movs	r2, #0
 2199 0012 0192     		str	r2, [sp, #4]
 2200 0014 E2B2     		uxtb	r2, r4
 2201 0016 0AB9     		cbnz	r2, .L465
 2202 0018 5B02     		lsls	r3, r3, #9
 2203 001a 6D02     		lsls	r5, r5, #9
 2204              	.L465:
 2205 001c 1946     		mov	r1, r3
 2206 001e 1048     		ldr	r0, .L467+4
 2207 0020 0122     		movs	r2, #1
 2208 0022 01AB     		add	r3, sp, #4
 2209 0024 FFF7FEFF 		bl	SDMMC003_lSendCommand
 2210 0028 0446     		mov	r4, r0
 2211 002a A0B9     		cbnz	r0, .L466
 2212 002c 0D48     		ldr	r0, .L467+8
 2213 002e 2946     		mov	r1, r5
 2214 0030 0122     		movs	r2, #1
 2215 0032 01AB     		add	r3, sp, #4
 2216 0034 FFF7FEFF 		bl	SDMMC003_lSendCommand
 2217 0038 0446     		mov	r4, r0
 2218 003a 60B9     		cbnz	r0, .L466
 2219 003c 2146     		mov	r1, r4
 2220 003e 0A48     		ldr	r0, .L467+12
 2221 0040 0222     		movs	r2, #2
 2222 0042 01AB     		add	r3, sp, #4
 2223 0044 FFF7FEFF 		bl	SDMMC003_lSendCommand
 2224 0048 0446     		mov	r4, r0
 2225 004a 20B9     		cbnz	r0, .L466
 2226 004c 4FF47A70 		mov	r0, #1000
 2227 0050 7043     		muls	r0, r6, r0
 2228 0052 FFF7FEFF 		bl	SDMMC003_lDelay
 2229              	.L466:
 2230 0056 2046     		mov	r0, r4
 2231 0058 7CBD     		pop	{r2, r3, r4, r5, r6, pc}
 2232              	.L468:
 2233 005a 00BF     		.align	2
 2234              	.L467:
 2235 005c 00000000 		.word	SDMMC003_Handle
 2236 0060 2A000000 		.word	.LANCHOR0+42
 2237 0064 2C000000 		.word	.LANCHOR0+44
 2238 0068 2E000000 		.word	.LANCHOR0+46
 2240              		.global	SDMMC003_SDHashTable
 2241              		.global	SDMMC003_Command
 2242              		.comm	ErrorIntStatus,2,2
 2243              		.comm	NormalIntStatus,2,2
 2244              		.comm	SDMMC003_ReturnStatus,4,4
 2245              		.comm	SDMMC003_ISRContext,6,2
 2246              		.comm	SDMMC003_CardInfo,48,4
 2247              		.section	.rodata
 2248              		.align	1
 2249              		.set	.LANCHOR0,. + 0
 2252              	SDMMC003_Command:
 2253 0000 00       		.byte	0
 2254 0001 00       		.byte	0
 2255 0002 09       		.byte	9
 2256 0003 02       		.byte	2
 2257 0004 1A       		.byte	26
 2258 0005 03       		.byte	3
 2259 0006 00       		.byte	0
 2260 0007 04       		.byte	4
 2261 0008 3A       		.byte	58
 2262 0009 06       		.byte	6
 2263 000a 1B       		.byte	27
 2264 000b 07       		.byte	7
 2265 000c 1A       		.byte	26
 2266 000d 08       		.byte	8
 2267 000e 09       		.byte	9
 2268 000f 09       		.byte	9
 2269 0010 09       		.byte	9
 2270 0011 0A       		.byte	10
 2271 0012 1B       		.byte	27
 2272 0013 0C       		.byte	12
 2273 0014 1A       		.byte	26
 2274 0015 0D       		.byte	13
 2275 0016 00       		.byte	0
 2276 0017 0F       		.byte	15
 2277 0018 1A       		.byte	26
 2278 0019 10       		.byte	16
 2279 001a 3A       		.byte	58
 2280 001b 11       		.byte	17
 2281 001c 3A       		.byte	58
 2282 001d 12       		.byte	18
 2283 001e 3A       		.byte	58
 2284 001f 18       		.byte	24
 2285 0020 3A       		.byte	58
 2286 0021 19       		.byte	25
 2287 0022 3A       		.byte	58
 2288 0023 1B       		.byte	27
 2289 0024 1A       		.byte	26
 2290 0025 1C       		.byte	28
 2291 0026 1A       		.byte	26
 2292 0027 1D       		.byte	29
 2293 0028 3A       		.byte	58
 2294 0029 1E       		.byte	30
 2295 002a 1A       		.byte	26
 2296 002b 20       		.byte	32
 2297 002c 1A       		.byte	26
 2298 002d 21       		.byte	33
 2299 002e 1B       		.byte	27
 2300 002f 26       		.byte	38
 2301 0030 3A       		.byte	58
 2302 0031 2A       		.byte	42
 2303 0032 1A       		.byte	26
 2304 0033 37       		.byte	55
 2305 0034 3A       		.byte	58
 2306 0035 38       		.byte	56
 2307 0036 1A       		.byte	26
 2308 0037 06       		.byte	6
 2309 0038 3A       		.byte	58
 2310 0039 0D       		.byte	13
 2311 003a 3A       		.byte	58
 2312 003b 16       		.byte	22
 2313 003c 1A       		.byte	26
 2314 003d 17       		.byte	23
 2315 003e 02       		.byte	2
 2316 003f 29       		.byte	41
 2317 0040 1A       		.byte	26
 2318 0041 2A       		.byte	42
 2319 0042 3A       		.byte	58
 2320 0043 33       		.byte	51
 2321 0044 12       		.byte	18
 2322 0045 01       		.byte	1
 2323 0046 1B       		.byte	27
 2324 0047 05       		.byte	5
 2325 0048 1B       		.byte	27
 2326 0049 06       		.byte	6
 2327 004a 3A       		.byte	58
 2328 004b 08       		.byte	8
 2329 004c 1A       		.byte	26
 2330 004d 23       		.byte	35
 2331 004e 1A       		.byte	26
 2332 004f 24       		.byte	36
 2335              	SDMMC003_SDHashTable:
 2336 0050 00       		.byte	0
 2337 0051 FF       		.byte	-1
 2338 0052 01       		.byte	1
 2339 0053 02       		.byte	2
 2340 0054 03       		.byte	3
 2341 0055 FF       		.byte	-1
 2342 0056 04       		.byte	4
 2343 0057 05       		.byte	5
 2344 0058 06       		.byte	6
 2345 0059 07       		.byte	7
 2346 005a 08       		.byte	8
 2347 005b FF       		.byte	-1
 2348 005c 09       		.byte	9
 2349 005d 0A       		.byte	10
 2350 005e FF       		.byte	-1
 2351 005f 0B       		.byte	11
 2352 0060 0C       		.byte	12
 2353 0061 0D       		.byte	13
 2354 0062 0E       		.byte	14
 2355 0063 FF       		.byte	-1
 2356 0064 FF       		.byte	-1
 2357 0065 FF       		.byte	-1
 2358 0066 FF       		.byte	-1
 2359 0067 FF       		.byte	-1
 2360 0068 0F       		.byte	15
 2361 0069 10       		.byte	16
 2362 006a FF       		.byte	-1
 2363 006b 11       		.byte	17
 2364 006c 12       		.byte	18
 2365 006d 13       		.byte	19
 2366 006e 14       		.byte	20
 2367 006f FF       		.byte	-1
 2368 0070 15       		.byte	21
 2369 0071 16       		.byte	22
 2370 0072 FF       		.byte	-1
 2371 0073 FF       		.byte	-1
 2372 0074 FF       		.byte	-1
 2373 0075 FF       		.byte	-1
 2374 0076 17       		.byte	23
 2375 0077 FF       		.byte	-1
 2376 0078 FF       		.byte	-1
 2377 0079 FF       		.byte	-1
 2378 007a 18       		.byte	24
 2379 007b FF       		.byte	-1
 2380 007c FF       		.byte	-1
 2381 007d FF       		.byte	-1
 2382 007e FF       		.byte	-1
 2383 007f FF       		.byte	-1
 2384 0080 FF       		.byte	-1
 2385 0081 FF       		.byte	-1
 2386 0082 FF       		.byte	-1
 2387 0083 FF       		.byte	-1
 2388 0084 FF       		.byte	-1
 2389 0085 FF       		.byte	-1
 2390 0086 FF       		.byte	-1
 2391 0087 19       		.byte	25
 2392 0088 1A       		.byte	26
 2393 0089 FF       		.byte	-1
 2394 008a 1B       		.byte	27
 2395 008b 1C       		.byte	28
 2396 008c 1D       		.byte	29
 2397 008d 1E       		.byte	30
 2398 008e 1F       		.byte	31
 2399 008f 20       		.byte	32
 2400 0090 21       		.byte	33
 2401 0091 00       		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.7.4 20130913 (release) [ARM/embedded-4_7-br
DEFINED SYMBOLS
                            *ABS*:00000000 SDMMC003_Private.c
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:17     .text.Timer_CallBack:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:22     .text.Timer_CallBack:00000000 Timer_CallBack
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:37     .text.Timer_CallBack:00000010 $d
                            *COM*:00000004 SDMMC003_ReturnStatus
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:41     .text.SDMMC003_lCardCleanUp:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:46     .text.SDMMC003_lCardCleanUp:00000000 SDMMC003_lCardCleanUp
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:74     .text.SDMMC003_lCardCleanUp:00000030 $d
                            *COM*:00000030 SDMMC003_CardInfo
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:79     .text.SDMMC003_lCheckDatCmdline:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:84     .text.SDMMC003_lCheckDatCmdline:00000000 SDMMC003_lCheckDatCmdline
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:135    .text.SDMMC003_lCheckDatCmdline:0000005c $d
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:139    .text.SDMMC003_lCheckArgumentError:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:144    .text.SDMMC003_lCheckArgumentError:00000000 SDMMC003_lCheckArgumentError
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:175    .text.SDMMC003_lCheckEraseError:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:180    .text.SDMMC003_lCheckEraseError:00000000 SDMMC003_lCheckEraseError
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:205    .text.SDMMC003_lCheckCardError:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:210    .text.SDMMC003_lCheckCardError:00000000 SDMMC003_lCheckCardError
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:235    .text.SDMMC003_lCheckErrorInResponse:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:240    .text.SDMMC003_lCheckErrorInResponse:00000000 SDMMC003_lCheckErrorInResponse
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:279    .text.SDMMC003_lGetCardLockState:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:284    .text.SDMMC003_lGetCardLockState:00000000 SDMMC003_lGetCardLockState
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:307    .text.SDMMC003_lGetCardLockState:00000024 $d
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:310    .text.SDMMC003_lWriteCardType:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:315    .text.SDMMC003_lWriteCardType:00000000 SDMMC003_lWriteCardType
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:339    .text.SDMMC003_lWriteCardType:00000028 $d
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:343    .text.SDMMC003_lSetWriteProtect:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:348    .text.SDMMC003_lSetWriteProtect:00000000 SDMMC003_lSetWriteProtect
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:376    .text.SDMMC003_lSetWriteProtect:00000034 $d
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:379    .text.SDMMC003_lCheckLockStatus:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:384    .text.SDMMC003_lCheckLockStatus:00000000 SDMMC003_lCheckLockStatus
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:410    .text.SDMMC003_lNormalInterruptHandler:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:415    .text.SDMMC003_lNormalInterruptHandler:00000000 SDMMC003_lNormalInterruptHandler
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:485    .text.SDMMC003_lNormalInterruptHandler:00000080 $d
                            *COM*:00000006 SDMMC003_ISRContext
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:490    .text.SDMMC003_lErrorInterruptHandler:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:495    .text.SDMMC003_lErrorInterruptHandler:00000000 SDMMC003_lErrorInterruptHandler
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:651    .text.SDMMC003_lErrorInterruptHandler:00000140 $d
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:656    .text.SDMMC003_CheckPCMDFlag:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:661    .text.SDMMC003_CheckPCMDFlag:00000000 SDMMC003_CheckPCMDFlag
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:672    .text.SDMMC003_CheckPCMDFlag:00000008 $d
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:675    .text.SDMMC003_lDelay:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:680    .text.SDMMC003_lDelay:00000000 SDMMC003_lDelay
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:711    .text.SDMMC003_lDelay:00000038 $d
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:716    .text.SDMMC0_0_IRQHandler:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:721    .text.SDMMC0_0_IRQHandler:00000000 SDMMC0_0_IRQHandler
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:756    .text.SDMMC0_0_IRQHandler:0000003c $d
                            *COM*:00000002 NormalIntStatus
                            *COM*:00000002 ErrorIntStatus
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:761    .text.SDMMC003_lStartTimer:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:766    .text.SDMMC003_lStartTimer:00000000 SDMMC003_lStartTimer
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:792    .text.SDMMC003_lStartTimer:0000002c $d
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:797    .text.SDMMC003_lStopTimer:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:802    .text.SDMMC003_lStopTimer:00000000 SDMMC003_lStopTimer
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:818    .text.SDMMC003_lStopTimer:00000018 $d
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:821    .text.SDMMC003_lCommandDelay:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:826    .text.SDMMC003_lCommandDelay:00000000 SDMMC003_lCommandDelay
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:870    .text.SDMMC003_lCommandDelay:00000048 $d
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:875    .text.SDMMC003_lTransferDelay:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:880    .text.SDMMC003_lTransferDelay:00000000 SDMMC003_lTransferDelay
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:919    .text.SDMMC003_lTransferDelay:0000003c $d
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:923    .text.SDMMC003_lReadResponse:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:928    .text.SDMMC003_lReadResponse:00000000 SDMMC003_lReadResponse
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:953    .text.SDMMC003_lReadResponse:00000032 $d
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:1012   .text.SDMMC003_lReadResponse:0000009c $d
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:1015   .text.SDMMC003_lReset:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:1020   .text.SDMMC003_lReset:00000000 SDMMC003_lReset
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:1054   .text.SDMMC003_lReset:0000003c $d
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:1058   .text.SDMMC003_lErrorInterruptRecovery:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:1063   .text.SDMMC003_lErrorInterruptRecovery:00000000 SDMMC003_lErrorInterruptRecovery
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:1136   .text.SDMMC003_lErrorInterruptRecovery:0000008c $d
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:1142   .text.SDMMC003_lDataTransfer:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:1147   .text.SDMMC003_lDataTransfer:00000000 SDMMC003_lDataTransfer
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:1214   .text.SDMMC003_lDataTransfer:00000078 $d
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:1219   .text.SDMMC003_lSendCommand:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:1224   .text.SDMMC003_lSendCommand:00000000 SDMMC003_lSendCommand
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:1301   .text.SDMMC003_lSendCommand:0000009c $d
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:1306   .text.SDMMC003_lAcmdErrorRecovery:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:1311   .text.SDMMC003_lAcmdErrorRecovery:00000000 SDMMC003_lAcmdErrorRecovery
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:1360   .text.SDMMC003_lAcmdErrorRecovery:00000058 $d
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:1366   .text.SDMMC003_lSwitchToTransferState:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:1371   .text.SDMMC003_lSwitchToTransferState:00000000 SDMMC003_lSwitchToTransferState
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:1402   .text.SDMMC003_lSwitchToTransferState:00000038 $d
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:1407   .text.SDMMC003_lSwitchBusWidth:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:1412   .text.SDMMC003_lSwitchBusWidth:00000000 SDMMC003_lSwitchBusWidth
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:1452   .text.SDMMC003_lSwitchBusWidth:00000054 $d
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:1458   .text.SDMMC003_lConfigureRegForMultiTransfer:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:1463   .text.SDMMC003_lConfigureRegForMultiTransfer:00000000 SDMMC003_lConfigureRegForMultiTransfer
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:1517   .text.SDMMC003_lConfigureRegForMultiTransfer:00000070 $d
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:1521   .text.SDMMC003_lMultiBlockTransfer:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:1526   .text.SDMMC003_lMultiBlockTransfer:00000000 SDMMC003_lMultiBlockTransfer
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:1568   .text.SDMMC003_lMultiBlockTransfer:0000004c $d
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:1571   .text.SDMMC003_lConfigureForSingleTransfer:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:1576   .text.SDMMC003_lConfigureForSingleTransfer:00000000 SDMMC003_lConfigureForSingleTransfer
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:1610   .text.SDMMC003_lConfigureForSingleTransfer:00000048 $d
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:1613   .text.SDMMC003_lReadRca:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:1618   .text.SDMMC003_lReadRca:00000000 SDMMC003_lReadRca
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:1630   .text.SDMMC003_lReadRca:0000000c $d
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:1634   .text.SDMMC003_lQueryOperatingCond:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:1639   .text.SDMMC003_lQueryOperatingCond:00000000 SDMMC003_lQueryOperatingCond
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:1676   .text.SDMMC003_lQueryOperatingCond:00000040 $d
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:1680   .text.SDMMC003_lSetVoltageWindow:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:1685   .text.SDMMC003_lSetVoltageWindow:00000000 SDMMC003_lSetVoltageWindow
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:1733   .text.SDMMC003_lSetVoltageWindow:00000054 $d
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:1740   .text.SDMMC003_lQueryVoltage:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:1745   .text.SDMMC003_lQueryVoltage:00000000 SDMMC003_lQueryVoltage
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:1785   .text.SDMMC003_lQueryVoltage:00000048 $d
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:1791   .text.SDMMC003_lInitializeCard:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:1796   .text.SDMMC003_lInitializeCard:00000000 SDMMC003_lInitializeCard
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:1867   .text.SDMMC003_lInitializeCard:00000094 $d
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:1873   .text.SDMMC003_lSingleBlockTransfer:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:1878   .text.SDMMC003_lSingleBlockTransfer:00000000 SDMMC003_lSingleBlockTransfer
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:1930   .text.SDMMC003_lSingleBlockTransfer:00000064 $d
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:1934   .text.SDMMC003_lSwitchSpeed:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:1939   .text.SDMMC003_lSwitchSpeed:00000000 SDMMC003_lSwitchSpeed
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:1980   .text.SDMMC003_lSwitchSpeed:00000050 $d
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:1986   .text.SDMMC003_lReadCardRegisters:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:1991   .text.SDMMC003_lReadCardRegisters:00000000 SDMMC003_lReadCardRegisters
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:2053   .text.SDMMC003_lReadCardRegisters:00000084 $d
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:2061   .text.SDMMC003_lAfterCardInitialize:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:2066   .text.SDMMC003_lAfterCardInitialize:00000000 SDMMC003_lAfterCardInitialize
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:2095   .text.SDMMC003_lAfterCardInitialize:0000003c $d
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:2098   .text.SDMMC003_lCardIdentificationProcess:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:2103   .text.SDMMC003_lCardIdentificationProcess:00000000 SDMMC003_lCardIdentificationProcess
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:2153   .text.SDMMC003_lCardIdentificationProcess:00000064 $d
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:2157   .text.SDMMC003_lCheckSectorBound:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:2162   .text.SDMMC003_lCheckSectorBound:00000000 SDMMC003_lCheckSectorBound
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:2183   .text.SDMMC003_lLocalErase:00000000 $t
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:2188   .text.SDMMC003_lLocalErase:00000000 SDMMC003_lLocalErase
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:2235   .text.SDMMC003_lLocalErase:0000005c $d
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:2335   .rodata:00000050 SDMMC003_SDHashTable
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:2252   .rodata:00000000 SDMMC003_Command
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:2248   .rodata:00000000 $d
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:960    .text.SDMMC003_lReadResponse:00000039 $d
C:\Users\Mihai\AppData\Local\Temp\ccnFLXPu.s:960    .text.SDMMC003_lReadResponse:0000003a $t

UNDEFINED SYMBOLS
SDMMC003_Handle
memset
SDMMC003_GetSdStatus
SDMMC003_GetLockStatus
SYSTM001_CreateTimer
SYSTM001_StartTimer
SYSTM001_StopTimer
SYSTM001_DeleteTimer
SDMMC003_GetSectorCount
